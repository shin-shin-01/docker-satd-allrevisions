,project,gitPath,CommitID,Dockerfiles,LatestDockerfile,Comments,CommitDate,DeleteComment,(File) FirstCommit,(File) Deleted,isSATD,firstCommitからコメント追加までの日数,コメント追加からコメント削除までの日数
2,"docker-library
rabbitmq",https://github.com/docker-library/rabbitmq,f22c0b266cfeb8cb6d776f9e6a961908c2557ad3,3.7-rc/ubuntu/Dockerfile,3.7-rc/ubuntu/Dockerfile,"# TODO add PGP checking when the feature will be added to Erlang/OTP's build system
# http://erlang.org/pipermail/erlang-questions/2019-January/097067.html
",2019/01/25 08:19,2020/08/15 06:21,2019/01/25 08:19,2020/08/15 06:21,1,0 days 00:00:00.000000000,ファイル削除
3,"docker-library
rabbitmq",https://github.com/docker-library/rabbitmq,f22c0b266cfeb8cb6d776f9e6a961908c2557ad3,3.7-rc/alpine/Dockerfile,3.7-rc/alpine/Dockerfile,"# TODO add PGP checking when the feature will be added to Erlang/OTP's build system
# http://erlang.org/pipermail/erlang-questions/2019-January/097067.html
",2019/01/25 08:19,2020/08/15 06:21,2018/02/21 13:23,2020/08/15 06:21,1,337 days 18:56:00.000000000,ファイル削除
6,"docker-library
rabbitmq",https://github.com/docker-library/rabbitmq,5bfde9806e24cfd84437197d5d171caef2adcae3,3.7/alpine/Dockerfile,3.7/alpine/Dockerfile,"# TODO add PGP checking when the feature will be added to Erlang/OTP's build system
# http://erlang.org/pipermail/erlang-questions/2019-January/097067.html
",2019/01/25 07:35,2020/08/15 06:21,2017/09/26 04:33,2020/08/15 06:21,1,486 days 03:02:00.000000000,ファイル削除
10,"docker-library
rabbitmq",https://github.com/docker-library/rabbitmq,f1e3be6aecba6db3cea294215d838c79b937943f,3.7/ubuntu/Dockerfile,3.7/ubuntu/Dockerfile,"# TODO add PGP checking when the feature will be added to Erlang/OTP's build system
# http://erlang.org/pipermail/erlang-questions/2019-January/097067.html
",2019/01/14 20:48,2020/08/15 06:21,2019/01/09 22:14,2020/08/15 06:21,1,4 days 22:34:00.000000000,ファイル削除
16,"docker-library
rabbitmq",https://github.com/docker-library/rabbitmq,77659a7555874cbbb2a1f7c32ce2f32bd81a7a41,Dockerfile,3.6/debian/Dockerfile,"# get logs to stdout (thanks to http://www.superpumpup.com/docker-rabbitmq-stdout for inspiration)
# TODO figure out what we'd need to do to add ""(sasl_)?"" to this sed and have it work (""{""init terminating in do_boot"",{rabbit,failure_during_boot,{error,{cannot_log_to_tty,sasl_report_tty_h,not_installed}}}}"")
",2015/02/03 09:03,2019/01/14 23:44,2014/12/30 09:16,2019/01/14 23:44,1,34 days 23:47:00.000000000,ファイル削除
17,"docker-library
rabbitmq",https://github.com/docker-library/rabbitmq,820e85707b885356d3697fa89cfb2538b2e6c53d,3.7.9/ubuntu/Dockerfile,3.7.9/ubuntu/Dockerfile,"# TODO add PGP checking when the feature will be added to Erlang/OTP's build system
# http://erlang.org/pipermail/erlang-questions/2019-January/097067.html
",2019/02/13 11:01,2019/02/15 09:17,2019/02/13 11:01,2019/02/15 09:17,1,0 days 00:00:00.000000000,ファイル削除
18,"docker-library
rabbitmq",https://github.com/docker-library/rabbitmq,820e85707b885356d3697fa89cfb2538b2e6c53d,3.7.9/alpine/Dockerfile,3.7.9/alpine/Dockerfile,"# TODO add PGP checking when the feature will be added to Erlang/OTP's build system
# http://erlang.org/pipermail/erlang-questions/2019-January/097067.html
",2019/02/13 11:01,2019/02/15 09:17,2019/02/13 11:01,2019/02/15 09:17,1,0 days 00:00:00.000000000,ファイル削除
19,"docker-library
rabbitmq",https://github.com/docker-library/rabbitmq,820e85707b885356d3697fa89cfb2538b2e6c53d,3.7.9/windows/Dockerfile,3.7.9/windows/Dockerfile,"# TODO verification
",2019/02/13 11:01,2019/02/15 09:17,2019/02/13 11:01,2019/02/15 09:17,1,0 days 00:00:00.000000000,ファイル削除
20,"docker-library
rabbitmq",https://github.com/docker-library/rabbitmq,820e85707b885356d3697fa89cfb2538b2e6c53d,3.7.9/windows/Dockerfile,3.7.9/windows/Dockerfile,"# TODO RABBITMQ_DATA_DIR

# TODO CMD [""rabbitmq-server""]
",2019/02/13 11:01,2019/02/15 09:17,2019/02/13 11:01,2019/02/15 09:17,1,0 days 00:00:00.000000000,ファイル削除
21,"docker-library
ruby",https://github.com/docker-library/ruby,281978ef87397763e377774740d82c8d87674ae9,2.3/Dockerfile,2.3/jessie/Dockerfile,"# hack in ""ENABLE_PATH_CHECK"" disabling to suppress:
#   warning: Insecure world writable dir
",2016/09/21 02:20,2019/04/05 02:16,2015/12/25 23:46,2019/04/05 02:16,1,270 days 02:34:00.000000000,ファイル削除
22,"docker-library
ruby",https://github.com/docker-library/ruby,281978ef87397763e377774740d82c8d87674ae9,2.3/alpine/Dockerfile,2.3/alpine3.7/Dockerfile,"# hack in ""ENABLE_PATH_CHECK"" disabling to suppress:
#   warning: Insecure world writable dir
",2016/09/21 02:20,2019/04/05 02:16,2016/01/05 04:55,2019/04/05 02:16,1,259 days 21:25:00.000000000,ファイル削除
23,"docker-library
ruby",https://github.com/docker-library/ruby,281978ef87397763e377774740d82c8d87674ae9,2.3/slim/Dockerfile,2.3/jessie/slim/Dockerfile,"# hack in ""ENABLE_PATH_CHECK"" disabling to suppress:
#   warning: Insecure world writable dir
",2016/09/21 02:20,2019/04/05 02:16,2015/12/25 23:46,2019/04/05 02:16,1,270 days 02:34:00.000000000,ファイル削除
24,"docker-library
ruby",https://github.com/docker-library/ruby,c9208def0c430de0144408e16140bd49254c4ca9,2.4-rc/slim/Dockerfile,2.4/buster/slim/Dockerfile,"# hack in ""ENABLE_PATH_CHECK"" disabling to suppress:
#   warning: Insecure world writable dir
",2016/12/06 03:31,2020/04/14 05:24,2016/12/06 03:31,2020/04/14 05:24,1,0 days 00:00:00.000000000,ファイル削除
25,"docker-library
ruby",https://github.com/docker-library/ruby,98d971fb71e696bf6783388d0e2c4171c97f0459,2.4/stretch/slim/Dockerfile,2.4/stretch/slim/Dockerfile,"# hack in ""ENABLE_PATH_CHECK"" disabling to suppress:
#   warning: Insecure world writable dir
",2017/08/05 04:41,2020/04/14 05:24,2017/08/05 04:41,2020/04/14 05:24,1,0 days 00:00:00.000000000,ファイル削除
26,"docker-library
ruby",https://github.com/docker-library/ruby,c9208def0c430de0144408e16140bd49254c4ca9,2.4-rc/Dockerfile,2.4/buster/Dockerfile,"# hack in ""ENABLE_PATH_CHECK"" disabling to suppress:
#   warning: Insecure world writable dir
",2016/12/06 03:31,2020/04/14 05:24,2016/12/06 03:31,2020/04/14 05:24,1,0 days 00:00:00.000000000,ファイル削除
27,"docker-library
ruby",https://github.com/docker-library/ruby,ee2df55c3abd3d0eccea5733f7041b733f8a5a62,2.4/alpine3.7/Dockerfile,2.4/alpine3.11/Dockerfile,"# hack in ""ENABLE_PATH_CHECK"" disabling to suppress:
#   warning: Insecure world writable dir
",2017/12/07 20:22,2020/04/14 05:24,2017/12/07 20:22,2020/04/14 05:24,1,0 days 00:00:00.000000000,ファイル削除
28,"docker-library
ruby",https://github.com/docker-library/ruby,a7a74d43ec21a6e589113be56024df083ff320ab,2.4/alpine3.6/Dockerfile,2.4/alpine3.6/Dockerfile,"# hack in ""ENABLE_PATH_CHECK"" disabling to suppress:
#   warning: Insecure world writable dir
",2017/08/05 04:42,2018/10/20 06:01,2017/08/05 04:42,2018/10/20 06:01,1,0 days 00:00:00.000000000,ファイル削除
29,"docker-library
ruby",https://github.com/docker-library/ruby,98d971fb71e696bf6783388d0e2c4171c97f0459,2.4/stretch/Dockerfile,2.4/stretch/Dockerfile,"# hack in ""ENABLE_PATH_CHECK"" disabling to suppress:
#   warning: Insecure world writable dir
",2017/08/05 04:41,2020/04/14 05:24,2017/08/05 04:41,2020/04/14 05:24,1,0 days 00:00:00.000000000,ファイル削除
44,"docker-library
ruby",https://github.com/docker-library/ruby,06192e37c6daec1d2f2a516c04c7bcc97174b1e2,2.4/alpine3.8/Dockerfile,2.4/alpine3.10/Dockerfile,"# hack in ""ENABLE_PATH_CHECK"" disabling to suppress:
#   warning: Insecure world writable dir
",2018/10/19 04:00,2020/04/14 05:24,2018/10/19 04:00,2020/04/14 05:24,1,0 days 00:00:00.000000000,ファイル削除
50,"docker-library
ruby",https://github.com/docker-library/ruby,bb5c7101e13cfa3632dfc21245b172c205d90353,2.3/alpine3.8/Dockerfile,2.3/alpine3.8/Dockerfile,"# hack in ""ENABLE_PATH_CHECK"" disabling to suppress:
#   warning: Insecure world writable dir
",2018/09/14 02:30,2019/04/05 02:16,2018/09/14 02:30,2019/04/05 02:16,1,0 days 00:00:00.000000000,ファイル削除
51,"docker-library
ruby",https://github.com/docker-library/ruby,1f9102c4e5c9fb9842e09c3c50f6402ed583456a,2.3/stretch/Dockerfile,2.3/stretch/Dockerfile,"# hack in ""ENABLE_PATH_CHECK"" disabling to suppress:
#   warning: Insecure world writable dir
",2017/10/26 03:12,2019/04/05 02:16,2017/10/26 03:12,2019/04/05 02:16,1,0 days 00:00:00.000000000,ファイル削除
52,"docker-library
ruby",https://github.com/docker-library/ruby,1f9102c4e5c9fb9842e09c3c50f6402ed583456a,2.3/stretch/slim/Dockerfile,2.3/stretch/slim/Dockerfile,"# hack in ""ENABLE_PATH_CHECK"" disabling to suppress:
#   warning: Insecure world writable dir
",2017/10/26 03:12,2019/04/05 02:16,2017/10/26 03:12,2019/04/05 02:16,1,0 days 00:00:00.000000000,ファイル削除
53,"docker-library
ruby",https://github.com/docker-library/ruby,c9208def0c430de0144408e16140bd49254c4ca9,2.4-rc/alpine/Dockerfile,2.4/alpine3.4/Dockerfile,"# hack in ""ENABLE_PATH_CHECK"" disabling to suppress:
#   warning: Insecure world writable dir
",2016/12/06 03:31,2018/05/23 06:13,2016/12/06 03:31,2018/05/23 06:13,1,0 days 00:00:00.000000000,ファイル削除
54,"docker-library
ruby",https://github.com/docker-library/ruby,281978ef87397763e377774740d82c8d87674ae9,2.1/Dockerfile,2.1/Dockerfile,"# hack in ""ENABLE_PATH_CHECK"" disabling to suppress:
#   warning: Insecure world writable dir
",2016/09/21 02:20,2017/07/06 03:06,2014/08/13 05:16,2017/07/06 03:06,1,769 days 21:04:00.000000000,ファイル削除
55,"docker-library
ruby",https://github.com/docker-library/ruby,281978ef87397763e377774740d82c8d87674ae9,2.2/Dockerfile,2.2/jessie/Dockerfile,"# hack in ""ENABLE_PATH_CHECK"" disabling to suppress:
#   warning: Insecure world writable dir
",2016/09/21 02:20,2018/05/23 06:05,2014/12/18 06:50,2018/05/23 06:05,1,642 days 19:30:00.000000000,ファイル削除
56,"docker-library
ruby",https://github.com/docker-library/ruby,281978ef87397763e377774740d82c8d87674ae9,2.2/alpine/Dockerfile,2.2/alpine3.4/Dockerfile,"# hack in ""ENABLE_PATH_CHECK"" disabling to suppress:
#   warning: Insecure world writable dir
",2016/09/21 02:20,2018/05/23 06:05,2016/01/30 03:39,2018/05/23 06:05,1,234 days 22:41:00.000000000,ファイル削除
57,"docker-library
ruby",https://github.com/docker-library/ruby,281978ef87397763e377774740d82c8d87674ae9,2.2/slim/Dockerfile,2.2/jessie/slim/Dockerfile,"# hack in ""ENABLE_PATH_CHECK"" disabling to suppress:
#   warning: Insecure world writable dir
",2016/09/21 02:20,2018/05/23 06:05,2015/01/24 08:59,2018/05/23 06:05,1,605 days 17:21:00.000000000,ファイル削除
58,"docker-library
ruby",https://github.com/docker-library/ruby,281978ef87397763e377774740d82c8d87674ae9,2.1/alpine/Dockerfile,2.1/alpine/Dockerfile,"# hack in ""ENABLE_PATH_CHECK"" disabling to suppress:
#   warning: Insecure world writable dir
",2016/09/21 02:20,2017/07/06 03:06,2016/01/30 03:39,2017/07/06 03:06,1,234 days 22:41:00.000000000,ファイル削除
59,"docker-library
ruby",https://github.com/docker-library/ruby,281978ef87397763e377774740d82c8d87674ae9,2.1/slim/Dockerfile,2.1/slim/Dockerfile,"# hack in ""ENABLE_PATH_CHECK"" disabling to suppress:
#   warning: Insecure world writable dir
",2016/09/21 02:20,2017/07/06 03:06,2015/01/17 10:29,2017/07/06 03:06,1,612 days 15:51:00.000000000,ファイル削除
60,"docker-library
ruby",https://github.com/docker-library/ruby,6959194971f4f84e9bef2976ae6b8a469fa58dae,2.5-rc/alpine3.6/Dockerfile,2.5-rc/alpine3.6/Dockerfile,"# hack in ""ENABLE_PATH_CHECK"" disabling to suppress:
#   warning: Insecure world writable dir
",2017/10/22 08:56,2017/12/09 08:30,2017/10/22 08:56,2017/12/09 08:30,1,0 days 00:00:00.000000000,ファイル削除
61,"docker-library
ruby",https://github.com/docker-library/ruby,b0c1b3c89142267912d8d0b532e206463c7d8ee0,2.7-rc/alpine3.9/Dockerfile,2.7-rc/alpine3.9/Dockerfile,"# hack in ""ENABLE_PATH_CHECK"" disabling to suppress:
#   warning: Insecure world writable dir
",2019/05/31 05:23,2019/06/25 07:09,2019/05/31 05:23,2019/06/25 07:09,1,0 days 00:00:00.000000000,ファイル削除
81,"moby
moby",https://github.com/moby/moby,bc82b139955c4a0edb20b070926469cceea0fbbb,Dockerfile.armhf,Dockerfile.armhf,"# This file describes the standard way to build Docker on ARMv7, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker -f Dockerfile.armhf .
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/docker/docker --privileged -i -t docker bash
#
# # Run the test suite:
# docker run --privileged docker hack/make.sh test-unit test-integration test-docker-py
#
# Note: AppArmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#

",2017/06/17 09:18,2018/03/09 15:17,2015/11/05 23:38,2018/03/09 15:17,1,589 days 09:40:00.000000000,ファイル削除
82,"moby
moby",https://github.com/moby/moby,d6e1cc32d309ee237342975388e729570343a974,Dockerfile.armhf,Dockerfile.armhf,"# Options for hack/validate/gometalinter
",2017/06/30 17:29,2018/03/09 15:17,2015/11/05 23:38,2018/03/09 15:17,1,602 days 17:51:00.000000000,ファイル削除
83,"moby
moby",https://github.com/moby/moby,b529d1b0936b90ae14d584c73f7332919f8d76b7,Dockerfile.armhf,Dockerfile.armhf,"# See also ensureFrozenImagesLinux() in ""integration-cli/fixtures_linux_daemon_test.go"" (which needs to be updated when adding images to this list)

# Install tomlv, vndr, runc, containerd, tini, proxy dockercli
# Please edit hack/dockerfile/install/<name>.installer to update them.
",2018/02/17 03:51,2018/03/09 15:17,2015/11/05 23:38,2018/03/09 15:17,1,834 days 04:13:00.000000000,ファイル削除
136,"moby
moby",https://github.com/moby/moby,bc82b139955c4a0edb20b070926469cceea0fbbb,Dockerfile.aarch64,Dockerfile.aarch64,"# This file describes the standard way to build Docker on aarch64, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker -f Dockerfile.aarch64 .
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/docker/docker --privileged -i -t docker bash
#
# # Run the test suite:
# docker run --privileged docker hack/make.sh test-unit test-integration test-docker-py
#
# Note: AppArmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#

",2017/06/17 09:18,2018/03/09 15:17,2016/01/15 23:25,2018/03/09 15:17,1,518 days 09:53:00.000000000,ファイル削除
137,"moby
moby",https://github.com/moby/moby,d6e1cc32d309ee237342975388e729570343a974,Dockerfile.aarch64,Dockerfile.aarch64,"# Options for hack/validate/gometalinter
",2017/06/30 17:29,2018/03/09 15:17,2016/01/15 23:25,2018/03/09 15:17,1,531 days 18:04:00.000000000,ファイル削除
138,"moby
moby",https://github.com/moby/moby,b529d1b0936b90ae14d584c73f7332919f8d76b7,Dockerfile.aarch64,Dockerfile.aarch64,"# See also ensureFrozenImagesLinux() in ""integration-cli/fixtures_linux_daemon_test.go"" (which needs to be updated when adding images to this list)
#

# Install tomlv, vndr, runc, containerd, tini, proxy dockercli
# Please edit hack/dockerfile/install/<name>.installer to update them.
",2018/02/17 03:51,2018/03/09 15:17,2016/01/15 23:25,2018/03/09 15:17,1,763 days 04:26:00.000000000,ファイル削除
160,"moby
moby",https://github.com/moby/moby,bc82b139955c4a0edb20b070926469cceea0fbbb,Dockerfile.ppc64le,Dockerfile.ppc64le,"# This file describes the standard way to build Docker on ppc64le, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker -f Dockerfile.ppc64le .
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/docker/docker --privileged -i -t docker bash
#
# # Run the test suite:
# docker run --privileged docker hack/make.sh test-unit test-integration test-docker-py
#
# Note: AppArmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#

",2017/06/17 09:18,2018/03/09 15:17,2015/02/25 03:33,2018/03/09 15:17,1,843 days 05:45:00.000000000,ファイル削除
161,"moby
moby",https://github.com/moby/moby,b529d1b0936b90ae14d584c73f7332919f8d76b7,Dockerfile.ppc64le,Dockerfile.ppc64le,"# See also ensureFrozenImagesLinux() in ""integration-cli/fixtures_linux_daemon_test.go"" (which needs to be updated when adding images to this list)

# Install tomlv, vndr, runc, containerd, tini, proxy dockercli
# Please edit hack/dockerfile/install/<name>.installer to update them.
",2018/02/17 03:51,2018/03/09 15:17,2015/02/25 03:33,2018/03/09 15:17,1,1088 days 00:18:00.000000000,ファイル削除
175,"moby
moby",https://github.com/moby/moby,bc82b139955c4a0edb20b070926469cceea0fbbb,Dockerfile.s390x,Dockerfile.s390x,"# This file describes the standard way to build Docker on s390x, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker -f Dockerfile.s390x .
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/docker/docker --privileged -i -t docker bash
#
# # Run the test suite:
# docker run --privileged docker hack/make.sh test-unit test-integration test-docker-py
#
# Note: AppArmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#

",2017/06/17 09:18,2018/03/09 15:17,2015/02/25 03:33,2018/03/09 15:17,1,843 days 05:45:00.000000000,ファイル削除
176,"moby
moby",https://github.com/moby/moby,b529d1b0936b90ae14d584c73f7332919f8d76b7,Dockerfile.s390x,Dockerfile.s390x,"# See also ensureFrozenImagesLinux() in ""integration-cli/fixtures_linux_daemon_test.go"" (which needs to be updated when adding images to this list)

# Install tomlv, vndr, runc, containerd, tini, proxy dockercli
# Please edit hack/dockerfile/install/<name>.installer to update them.
",2018/02/17 03:51,2018/03/09 15:17,2015/02/25 03:33,2018/03/09 15:17,1,1088 days 00:18:00.000000000,ファイル削除
203,"moby
moby",https://github.com/moby/moby,3e84b9e56abdff7230e84a1830085c79c73aa3b7,docs/Dockerfile,docs/Dockerfile,"# TODO: need the full repo source to get the git version info
",2015/02/18 13:20,2016/10/12 04:14,2013/08/30 08:49,2016/10/12 04:14,1,537 days 04:31:00.000000000,ファイル削除
204,"moby
moby",https://github.com/moby/moby,8d4459fffb5c1885b65506093538e059f0b51d90,docs/Dockerfile,docs/Dockerfile,"# adding the image spec will require Docker 1.5 and `docker build -f docs/Dockerfile .`
#COPY ./image/spec/v1.md /docs/sources/reference/image-spec-v1.md

# TODO: don't do this - look at merging the yml file in build.sh
",2015/02/25 09:37,2016/10/12 04:14,2013/08/30 08:49,2016/10/12 04:14,1,544 days 00:48:00.000000000,ファイル削除
205,"moby
moby",https://github.com/moby/moby,22c46af4b358cf3ec4f7af47c701064c00cf7de4,builder/parser/testfiles/docker/Dockerfile,builder/dockerfile/parser/testfiles/docker/Dockerfile,"# TODO replace FPM with some very minimal debhelper stuff
",2014/08/06 05:17,2018/06/03 01:46,2014/08/06 05:17,2018/06/03 01:46,1,0 days 00:00:00.000000000,ファイル削除
210,"moby
moby",https://github.com/moby/moby,80bc8b4766cc808186af91930152d78afb22aef8,builder/dockerfile/parser/testfiles/docker/Dockerfile,builder/dockerfile/parser/testfiles/docker/Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/docker/docker --privileged -i -t docker bash
#
# # Run the test suite:
# docker run --privileged docker hack/make.sh test-unit test-integration test-docker-py
#
# Note: AppArmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#

",2018/05/19 03:28,2018/06/03 01:46,2014/08/06 05:17,2018/06/03 01:46,1,1381 days 22:11:00.000000000,ファイル削除
211,"moby
moby",https://github.com/moby/moby,934328d8ea650bf8a9c3c719999ce2a1f5dd5df6,Dockerfile.solaris,Dockerfile.solaris,"# Defines an image that hosts a native Docker build environment for Solaris
# TODO: Improve stub

",2016/06/07 16:45,2017/10/25 03:32,2016/06/07 16:45,2017/10/25 03:32,1,0 days 00:00:00.000000000,ファイル削除
212,"moby
moby",https://github.com/moby/moby,82c56755ea9e6c0ce197fbdfd41d0c5d1724b50c,Dockerfile.buildkit,Dockerfile.buildkit,"# TODO: Some of this is only really needed for testing, it would be nice to split this up
",2019/05/23 08:49,2019/06/08 02:10,2019/05/23 08:49,2019/06/08 02:10,1,0 days 00:00:00.000000000,ファイル削除
213,"moby
moby",https://github.com/moby/moby,82c56755ea9e6c0ce197fbdfd41d0c5d1724b50c,Dockerfile.buildkit,Dockerfile.buildkit,"# Options for hack/validate/gometalinter
",2019/05/23 08:49,2019/06/08 02:10,2019/05/23 08:49,2019/06/08 02:10,1,0 days 00:00:00.000000000,ファイル削除
214,"moby
moby",https://github.com/moby/moby,4357ed4a7363a1032edf93cf03232953c805184f,Dockerfile.gccgo,Dockerfile.gccgo,"# see https://git.fedorahosted.org/cgit/lvm2.git/tree/INSTALL

# install seccomp
# TODO: switch to libseccomp-dev since dockerinit is gone
",2016/01/20 20:53,2016/08/24 19:09,2015/08/17 18:20,2016/08/24 19:09,1,156 days 02:33:00.000000000,ファイル削除
218,"moby
moby",https://github.com/moby/moby,249f76bebdb3c24ae0a59e3be7ae73fd1d88c065,hack/infrastructure/docker-ci/nightlyrelease/Dockerfile,hack/infrastructure/docker-ci/nightlyrelease/Dockerfile,"# VERSION:        1.6
# DOCKER-VERSION  0.6.6
# AUTHOR:         Daniel Mizyrycki <daniel@docker.com>
# DESCRIPTION:    Build docker nightly release using Docker in Docker.
# REFERENCES:     This code reuses the excellent implementation of docker in docker
#                 made by Jerome Petazzoni.  https://github.com/jpetazzo/dind
# COMMENTS:
#   release_credentials.json is a base64 json encoded file containing:
#       { ""AWS_ACCESS_KEY"": ""Test_docker_AWS_S3_bucket_id"",
#         ""AWS_SECRET_KEY"": ""Test_docker_AWS_S3_bucket_key"",
#         ""GPG_PASSPHRASE"": ""Test_docker_GPG_passphrase_signature"" }
# TO_BUILD:       docker build -t dockerbuilder .
# TO_RELEASE:     docker run -i -t -privileged -e AWS_S3_BUCKET=""test.docker.io"" dockerbuilder hack/dind dockerbuild.sh

",2013/11/07 13:05,2014/02/15 13:50,2013/09/08 02:30,2014/02/15 13:50,1,60 days 10:35:00.000000000,ファイル削除
221,"moby
moby",https://github.com/moby/moby,249f76bebdb3c24ae0a59e3be7ae73fd1d88c065,hack/infrastructure/docker-ci/docker-test/Dockerfile,hack/infrastructure/docker-ci/docker-test/Dockerfile,"# VERSION:        0.4
# DOCKER-VERSION  0.6.6
# AUTHOR:         Daniel Mizyrycki <daniel@docker.com>
# DESCRIPTION:    Testing docker PRs and commits on top of master using
# REFERENCES:     This code reuses the excellent implementation of
#                 Docker in Docker made by Jerome Petazzoni.
#                 https://github.com/jpetazzo/dind
# COMMENTS:
#   This Dockerfile adapts /Dockerfile to enable docker PRs and commits testing
#   Optional arguments:
#       [commit]  (default: 'HEAD')
#       [repo]    (default: 'http://github.com/dotcloud/docker')
#       [branch]  (default: 'master')
# TO_BUILD:       docker build -t test_docker .
# TO_RUN:         docker run -privileged test_docker hack/dind test_docker.sh [commit] [repo] [branch]

",2013/11/07 13:05,2014/02/15 13:50,2013/10/19 14:33,2014/02/15 13:50,1,18 days 22:32:00.000000000,ファイル削除
222,"moby
moby",https://github.com/moby/moby,878dcb89f38e8eb7bb07ccd4a4e5ce622252ff30,Dockerfile.centos,Dockerfile.centos,"# Wrap all commands in the ""docker-in-docker"" script to allow nested containers
#ENTRYPOINT [""hack/dind""]
",2015/04/01 05:58,2015/05/01 07:30,2015/04/01 05:58,2015/05/01 07:30,1,0 days 00:00:00.000000000,ファイル削除
223,"docker
docker-ce",https://github.com/docker/docker-ce,78ba8bbfa182d305b3f34d7ecc2d05baa56c1c5b,components/packaging/image/Dockerfile,components/packaging/image/Dockerfile.engine,"# docker-init - TODO move this out, last time we bumped was 2016!
",2018/07/11 09:04,2019/12/05 22:55,2018/07/11 09:04,2019/12/05 22:55,1,0 days 00:00:00.000000000,ファイル削除
224,"docker
docker-ce",https://github.com/docker/docker-ce,78ba8bbfa182d305b3f34d7ecc2d05baa56c1c5b,components/packaging/image/Dockerfile,components/packaging/image/Dockerfile.engine,"# docker-proxy
# TODO if libnetwork folds into the docker tree this can be combined above
",2018/07/11 09:04,2019/12/05 22:55,2018/07/11 09:04,2019/12/05 22:55,1,0 days 00:00:00.000000000,ファイル削除
225,"docker
docker-ce",https://github.com/docker/docker-ce,78ba8bbfa182d305b3f34d7ecc2d05baa56c1c5b,components/packaging/image/Dockerfile,components/packaging/image/Dockerfile.engine,"# TODO The way we set the version could easily be simplified not to depend on hack/...
",2018/07/11 09:04,2019/12/05 22:55,2018/07/11 09:04,2019/12/05 22:55,1,0 days 00:00:00.000000000,ファイル削除
312,"docker
docker-ce",https://github.com/docker/docker-ce,9a9d90f97d60b698ff9786ef021b75881ee294f8,components/engine/Dockerfile.ppc64le,components/engine/Dockerfile.ppc64le,"# This file describes the standard way to build Docker on ppc64le, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker -f Dockerfile.ppc64le .
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/docker/docker --privileged -i -t docker bash
#
# # Run the test suite:
# docker run --privileged docker hack/make.sh test-unit test-integration test-docker-py
#
# Note: AppArmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#

",2017/06/17 09:18,2018/03/09 15:17,2015/02/25 03:33,2018/03/09 15:17,1,843 days 05:45:00.000000000,ファイル削除
313,"docker
docker-ce",https://github.com/docker/docker-ce,f11213a80093591f2a3ac7ed0bb5a03312ffb533,components/engine/Dockerfile.ppc64le,components/engine/Dockerfile.ppc64le,"# See also ensureFrozenImagesLinux() in ""integration-cli/fixtures_linux_daemon_test.go"" (which needs to be updated when adding images to this list)

# Install tomlv, vndr, runc, containerd, tini, proxy dockercli
# Please edit hack/dockerfile/install/<name>.installer to update them.
",2018/02/17 03:51,2018/03/09 15:17,2015/02/25 03:33,2018/03/09 15:17,1,1088 days 00:18:00.000000000,ファイル削除
326,"docker
docker-ce",https://github.com/docker/docker-ce,9a9d90f97d60b698ff9786ef021b75881ee294f8,components/engine/Dockerfile.aarch64,components/engine/Dockerfile.aarch64,"# This file describes the standard way to build Docker on aarch64, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker -f Dockerfile.aarch64 .
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/docker/docker --privileged -i -t docker bash
#
# # Run the test suite:
# docker run --privileged docker hack/make.sh test-unit test-integration test-docker-py
#
# Note: AppArmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#

",2017/06/17 09:18,2018/03/09 15:17,2016/01/15 23:25,2018/03/09 15:17,1,518 days 09:53:00.000000000,ファイル削除
327,"docker
docker-ce",https://github.com/docker/docker-ce,605885e5180c01af497fba3c7bd25b605bb12341,components/engine/Dockerfile.aarch64,components/engine/Dockerfile.aarch64,"# Options for hack/validate/gometalinter
",2017/06/30 17:29,2018/03/09 15:17,2016/01/15 23:25,2018/03/09 15:17,1,531 days 18:04:00.000000000,ファイル削除
328,"docker
docker-ce",https://github.com/docker/docker-ce,f11213a80093591f2a3ac7ed0bb5a03312ffb533,components/engine/Dockerfile.aarch64,components/engine/Dockerfile.aarch64,"# See also ensureFrozenImagesLinux() in ""integration-cli/fixtures_linux_daemon_test.go"" (which needs to be updated when adding images to this list)
#

# Install tomlv, vndr, runc, containerd, tini, proxy dockercli
# Please edit hack/dockerfile/install/<name>.installer to update them.
",2018/02/17 03:51,2018/03/09 15:17,2016/01/15 23:25,2018/03/09 15:17,1,763 days 04:26:00.000000000,ファイル削除
348,"docker
docker-ce",https://github.com/docker/docker-ce,9a9d90f97d60b698ff9786ef021b75881ee294f8,components/engine/Dockerfile.armhf,components/engine/Dockerfile.armhf,"# This file describes the standard way to build Docker on ARMv7, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker -f Dockerfile.armhf .
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/docker/docker --privileged -i -t docker bash
#
# # Run the test suite:
# docker run --privileged docker hack/make.sh test-unit test-integration test-docker-py
#
# Note: AppArmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#

",2017/06/17 09:18,2018/03/09 15:17,2015/11/05 23:38,2018/03/09 15:17,1,589 days 09:40:00.000000000,ファイル削除
349,"docker
docker-ce",https://github.com/docker/docker-ce,605885e5180c01af497fba3c7bd25b605bb12341,components/engine/Dockerfile.armhf,components/engine/Dockerfile.armhf,"# Options for hack/validate/gometalinter
",2017/06/30 17:29,2018/03/09 15:17,2015/11/05 23:38,2018/03/09 15:17,1,602 days 17:51:00.000000000,ファイル削除
350,"docker
docker-ce",https://github.com/docker/docker-ce,f11213a80093591f2a3ac7ed0bb5a03312ffb533,components/engine/Dockerfile.armhf,components/engine/Dockerfile.armhf,"# See also ensureFrozenImagesLinux() in ""integration-cli/fixtures_linux_daemon_test.go"" (which needs to be updated when adding images to this list)

# Install tomlv, vndr, runc, containerd, tini, proxy dockercli
# Please edit hack/dockerfile/install/<name>.installer to update them.
",2018/02/17 03:51,2018/03/09 15:17,2015/11/05 23:38,2018/03/09 15:17,1,834 days 04:13:00.000000000,ファイル削除
364,"docker
docker-ce",https://github.com/docker/docker-ce,9a9d90f97d60b698ff9786ef021b75881ee294f8,components/engine/Dockerfile.s390x,components/engine/Dockerfile.s390x,"# This file describes the standard way to build Docker on s390x, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker -f Dockerfile.s390x .
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/docker/docker --privileged -i -t docker bash
#
# # Run the test suite:
# docker run --privileged docker hack/make.sh test-unit test-integration test-docker-py
#
# Note: AppArmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#

",2017/06/17 09:18,2018/03/09 15:17,2015/02/25 03:33,2018/03/09 15:17,1,843 days 05:45:00.000000000,ファイル削除
365,"docker
docker-ce",https://github.com/docker/docker-ce,f11213a80093591f2a3ac7ed0bb5a03312ffb533,components/engine/Dockerfile.s390x,components/engine/Dockerfile.s390x,"# See also ensureFrozenImagesLinux() in ""integration-cli/fixtures_linux_daemon_test.go"" (which needs to be updated when adding images to this list)

# Install tomlv, vndr, runc, containerd, tini, proxy dockercli
# Please edit hack/dockerfile/install/<name>.installer to update them.
",2018/02/17 03:51,2018/03/09 15:17,2015/02/25 03:33,2018/03/09 15:17,1,1088 days 00:18:00.000000000,ファイル削除
367,"docker
docker-ce",https://github.com/docker/docker-ce,824b119187656e9475e2a02cd33d44f946f9d17b,components/engine/docs/Dockerfile,components/engine/docs/Dockerfile,"# TODO: need the full repo source to get the git version info
",2015/02/18 13:20,2016/10/12 04:14,2013/08/30 08:49,2016/10/12 04:14,1,537 days 04:31:00.000000000,ファイル削除
369,"docker
docker-ce",https://github.com/docker/docker-ce,17fe06fc30b82f739ad1b3366edfbdb99180e339,components/engine/docs/Dockerfile,components/engine/docs/Dockerfile,"# adding the image spec will require Docker 1.5 and `docker build -f docs/Dockerfile .`
#COPY ./image/spec/v1.md /docs/sources/reference/image-spec-v1.md

# TODO: don't do this - look at merging the yml file in build.sh
",2015/02/25 09:37,2016/10/12 04:14,2013/08/30 08:49,2016/10/12 04:14,1,544 days 00:48:00.000000000,ファイル削除
370,"docker
docker-ce",https://github.com/docker/docker-ce,6fb90ed484e943d6cfc0849ab8f7be32241c9802,components/engine/Dockerfile.solaris,components/engine/Dockerfile.solaris,"# Defines an image that hosts a native Docker build environment for Solaris
# TODO: Improve stub

",2016/06/07 16:45,2017/10/25 03:32,2016/06/07 16:45,2017/10/25 03:32,1,0 days 00:00:00.000000000,ファイル削除
371,"docker
docker-ce",https://github.com/docker/docker-ce,4edafc3bc120137c52da71f041df222fcf88cb3d,components/engine/Dockerfile.gccgo,components/engine/Dockerfile.gccgo,"# see https://git.fedorahosted.org/cgit/lvm2.git/tree/INSTALL

# install seccomp
# TODO: switch to libseccomp-dev since dockerinit is gone
",2016/01/20 20:53,2016/08/24 19:09,2015/08/17 18:20,2016/08/24 19:09,1,156 days 02:33:00.000000000,ファイル削除
372,"docker
docker-ce",https://github.com/docker/docker-ce,75f7edc9b6d3db48e524810599193656c42b7a27,components/packaging/image/Dockerfile.engine-dm,components/packaging/image/Dockerfile.engine-dm,"# TODO The way we set the version could easily be simplified not to depend on hack/...
",2018/08/24 07:53,2019/12/05 22:55,2018/08/24 07:53,2019/12/05 22:55,1,0 days 00:00:00.000000000,ファイル削除
373,"docker
docker-ce",https://github.com/docker/docker-ce,75f7edc9b6d3db48e524810599193656c42b7a27,components/packaging/image/Dockerfile.engine-dm,components/packaging/image/Dockerfile.engine-dm,"# docker-proxy
# TODO if libnetwork folds into the docker tree this can be combined above
",2018/08/24 07:53,2019/12/05 22:55,2018/08/24 07:53,2019/12/05 22:55,1,0 days 00:00:00.000000000,ファイル削除
374,"docker
docker-ce",https://github.com/docker/docker-ce,75f7edc9b6d3db48e524810599193656c42b7a27,components/packaging/image/Dockerfile.engine-dm,components/packaging/image/Dockerfile.engine-dm,"# docker-init - TODO move this out, last time we bumped was 2016!
",2018/08/24 07:53,2019/12/05 22:55,2018/08/24 07:53,2019/12/05 22:55,1,0 days 00:00:00.000000000,ファイル削除
375,"docker
docker-ce",https://github.com/docker/docker-ce,68301c38288c1554119f272cd8e44b6342965cac,components/engine/builder/parser/testfiles/docker/Dockerfile,components/engine/builder/dockerfile/parser/testfiles/docker/Dockerfile,"# TODO replace FPM with some very minimal debhelper stuff
",2014/08/06 05:17,2018/06/03 01:46,2014/08/06 05:17,2018/06/03 01:46,1,0 days 00:00:00.000000000,ファイル削除
380,"docker
docker-ce",https://github.com/docker/docker-ce,7a1680b13a4d40f402fb54bfef604e8539c37662,components/engine/builder/dockerfile/parser/testfiles/docker/Dockerfile,components/engine/builder/dockerfile/parser/testfiles/docker/Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/docker/docker --privileged -i -t docker bash
#
# # Run the test suite:
# docker run --privileged docker hack/make.sh test-unit test-integration test-docker-py
#
# Note: AppArmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#

",2018/05/19 03:28,2018/06/03 01:46,2014/08/06 05:17,2018/06/03 01:46,1,1381 days 22:11:00.000000000,ファイル削除
382,"docker
docker-ce",https://github.com/docker/docker-ce,ae45d9cbead510f527a8882333d5b40be40c1352,components/engine/Dockerfile.centos,components/engine/Dockerfile.centos,"# Wrap all commands in the ""docker-in-docker"" script to allow nested containers
#ENTRYPOINT [""hack/dind""]
",2015/04/01 05:58,2015/05/01 07:30,2015/04/01 05:58,2015/05/01 07:30,1,0 days 00:00:00.000000000,ファイル削除
386,"docker
docker-ce",https://github.com/docker/docker-ce,ba4e682cde6ad56a7fe88c5e61c976e1db93338b,components/engine/hack/infrastructure/docker-ci/nightlyrelease/Dockerfile,components/engine/hack/infrastructure/docker-ci/nightlyrelease/Dockerfile,"# VERSION:        1.6
# DOCKER-VERSION  0.6.6
# AUTHOR:         Daniel Mizyrycki <daniel@docker.com>
# DESCRIPTION:    Build docker nightly release using Docker in Docker.
# REFERENCES:     This code reuses the excellent implementation of docker in docker
#                 made by Jerome Petazzoni.  https://github.com/jpetazzo/dind
# COMMENTS:
#   release_credentials.json is a base64 json encoded file containing:
#       { ""AWS_ACCESS_KEY"": ""Test_docker_AWS_S3_bucket_id"",
#         ""AWS_SECRET_KEY"": ""Test_docker_AWS_S3_bucket_key"",
#         ""GPG_PASSPHRASE"": ""Test_docker_GPG_passphrase_signature"" }
# TO_BUILD:       docker build -t dockerbuilder .
# TO_RELEASE:     docker run -i -t -privileged -e AWS_S3_BUCKET=""test.docker.io"" dockerbuilder hack/dind dockerbuild.sh

",2013/11/07 13:05,2014/02/15 13:50,2013/09/08 02:30,2014/02/15 13:50,1,60 days 10:35:00.000000000,ファイル削除
389,"docker
docker-ce",https://github.com/docker/docker-ce,ba4e682cde6ad56a7fe88c5e61c976e1db93338b,components/engine/hack/infrastructure/docker-ci/docker-test/Dockerfile,components/engine/hack/infrastructure/docker-ci/docker-test/Dockerfile,"# VERSION:        0.4
# DOCKER-VERSION  0.6.6
# AUTHOR:         Daniel Mizyrycki <daniel@docker.com>
# DESCRIPTION:    Testing docker PRs and commits on top of master using
# REFERENCES:     This code reuses the excellent implementation of
#                 Docker in Docker made by Jerome Petazzoni.
#                 https://github.com/jpetazzo/dind
# COMMENTS:
#   This Dockerfile adapts /Dockerfile to enable docker PRs and commits testing
#   Optional arguments:
#       [commit]  (default: 'HEAD')
#       [repo]    (default: 'http://github.com/dotcloud/docker')
#       [branch]  (default: 'master')
# TO_BUILD:       docker build -t test_docker .
# TO_RUN:         docker run -privileged test_docker hack/dind test_docker.sh [commit] [repo] [branch]

",2013/11/07 13:05,2014/02/15 13:50,2013/10/19 14:33,2014/02/15 13:50,1,18 days 22:32:00.000000000,ファイル削除
390,"docker
docker-ce",https://github.com/docker/docker-ce,dd52c68ae4d8dbcbb34a4ba7983eb160dbfe37fc,components/engine/Dockerfile.buildkit,components/engine/Dockerfile.buildkit,"# TODO: Some of this is only really needed for testing, it would be nice to split this up
",2019/05/23 08:49,2019/06/08 02:10,2019/05/23 08:49,2019/06/08 02:10,1,0 days 00:00:00.000000000,ファイル削除
391,"docker
docker-ce",https://github.com/docker/docker-ce,dd52c68ae4d8dbcbb34a4ba7983eb160dbfe37fc,components/engine/Dockerfile.buildkit,components/engine/Dockerfile.buildkit,"# Options for hack/validate/gometalinter
",2019/05/23 08:49,2019/06/08 02:10,2019/05/23 08:49,2019/06/08 02:10,1,0 days 00:00:00.000000000,ファイル削除
394,"nodejs
docker-iojs",https://github.com/nodejs/docker-iojs,b1c0af6449717fd1487d00c3c99b722d9ebfc5a8,Dockerfile,0.10/Dockerfile,"# TODO verify gpg and sha256: http://nodejs.org/dist/v0.10.30/SHASUMS256.txt.asc
",2014/08/12 06:27,2015/01/15 08:41,2014/08/12 06:27,2015/01/15 08:41,1,0 days 00:00:00.000000000,ファイル削除
409,"docker-library
redis",https://github.com/docker-library/redis,0b2910f292fa6ac32318cb2acc84355b11aa8a7a,4.0/32bit/Dockerfile,4.0/32bit/Dockerfile,"# TODO https://github.com/antirez/redis/pull/3494 (deduplicate ""redis-server"" copies)
",2019/08/02 06:14,2020/05/01 00:20,2015/07/16 05:59,2020/05/01 00:20,1,1478 days 00:15:00.000000000,ファイル削除
410,"docker-library
redis",https://github.com/docker-library/redis,0b2910f292fa6ac32318cb2acc84355b11aa8a7a,4.0/Dockerfile,4.0/Dockerfile,"# TODO https://github.com/antirez/redis/pull/3494 (deduplicate ""redis-server"" copies)
",2019/08/02 06:14,2020/05/01 00:20,2015/04/02 02:26,2020/05/01 00:20,1,1583 days 03:48:00.000000000,ファイル削除
411,"docker-library
redis",https://github.com/docker-library/redis,d122863aaf4f9e4c788368a11651c5e23a32c65c,6.0-rc/32bit/Dockerfile,6.0-rc/32bit/Dockerfile,"# TODO https://github.com/antirez/redis/pull/3494 (deduplicate ""redis-server"" copies)
",2019/12/20 02:26,2020/01/01 09:50,2019/12/20 02:26,2020/01/01 09:50,1,0 days 00:00:00.000000000,ファイル削除
412,"docker-library
redis",https://github.com/docker-library/redis,0b2910f292fa6ac32318cb2acc84355b11aa8a7a,4.0/alpine/Dockerfile,4.0/alpine/Dockerfile,"# TODO https://github.com/antirez/redis/pull/3494 (deduplicate ""redis-server"" copies)
",2019/08/02 06:14,2020/05/01 00:20,2017/07/15 00:10,2020/05/01 00:20,1,748 days 06:04:00.000000000,ファイル削除
413,"docker-library
redis",https://github.com/docker-library/redis,d875ae032d7fdcf380a5506c714b2844af3cd2a1,Dockerfile-32bit.template,Dockerfile-32bit.template,"# TODO https://github.com/antirez/redis/pull/3494 (deduplicate ""redis-server"" copies)
",2019/12/28 05:58,2020/01/01 08:01,2019/12/28 05:58,2020/01/01 08:01,1,0 days 00:00:00.000000000,ファイル削除
418,"RocketChat
Docker.Official.Image",https://github.com/RocketChat/Docker.Official.Image,8160b5da4c8c8594fb9e7739119e6b359a49ac5c,Dockerfile,Dockerfile,"## Start Hack
",2019/03/01 06:58,2020/03/05 22:09,2015/07/10 18:04,2020/03/05 22:09,1,1329 days 12:54:00.000000000,ファイル削除
419,"RocketChat
Docker.Official.Image",https://github.com/RocketChat/Docker.Official.Image,8160b5da4c8c8594fb9e7739119e6b359a49ac5c,Dockerfile,Dockerfile,"## All of this needed because of missing 8.11.x tag.  Once we update to 8.15+ we can resume using Dockerfile.old or remove hack and use FROM node:8-slim

## Installing Node.js
",2019/03/01 06:58,2020/03/05 22:09,2015/07/10 18:04,2020/03/05 22:09,1,1329 days 12:54:00.000000000,ファイル削除
420,"RocketChat
Docker.Official.Image",https://github.com/RocketChat/Docker.Official.Image,8160b5da4c8c8594fb9e7739119e6b359a49ac5c,Dockerfile,Dockerfile,"## End Hack

## Actual Rocket.Chat stuff
",2019/03/01 06:58,2020/03/05 22:09,2015/07/10 18:04,2020/03/05 22:09,1,1329 days 12:54:00.000000000,ファイル削除
422,"docker-library
redmine",https://github.com/docker-library/redmine,0ca74edc277862714856657aa9df3b7fab4d4b6f,3.4/alpine/Dockerfile,3.4/alpine/Dockerfile,"# Todo: remove build dependencies
#	runDeps=""$( \
#		scanelf --needed --nobanner --format '%n#p' --recursive /usr/local/bundle/gems \
#		| tr ',' '\n' \
#		| sort -u \
#		| awk 'system(""[ -e /usr/local/lib/"" $1 "" ]"") == 0 { next } { print ""so:"" $1 }' \
#	)""; \
#	apk add --virtual .redmine-rundeps $runDeps; \
#	apk del .build-deps

",2019/04/05 01:29,2020/04/15 06:05,2019/04/05 01:29,2020/04/15 06:05,1,0 days 00:00:00.000000000,ファイル削除
426,"corretto
corretto-8-docker",https://github.com/corretto/corretto-8-docker,5e34c9377e6590699469d8087af24363250599af,Dockerfile-debian,contrib/debian/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
",2019/06/28 01:58,2020/05/28 07:18,2019/06/28 01:58,2020/05/28 07:18,1,0 days 00:00:00.000000000,ファイル削除
427,"docker-library
golang",https://github.com/docker-library/golang,898bf4174e6a575ae311d14a23f96b4f6724ee13,1.4/cross/Dockerfile,1.4/cross/Dockerfile,"# TODO gcc: error: unrecognized command line option '-marm'
#	android/arm \

# ls src/runtime/defs_*_*.h | sed -r 's!^.*/defs_([^_]+)_([^_]+)[.]h$!\1/\2!'

# (set an explicit GOARM of 5 for maximum ARM compatibility)
",2014/11/19 13:24,2016/02/18 07:10,2014/11/15 15:46,2016/02/18 07:10,1,3 days 21:38:00.000000000,ファイル削除
431,"docker-library
wordpress",https://github.com/docker-library/wordpress,637afb53dc03b4af19149a0880e796346f97c137,php5.6/fpm/Dockerfile,php5.6/fpm/Dockerfile,"# TODO consider removing the *-dev deps and only keeping the necessary lib* packages

# set recommended PHP.ini settings
# see https://secure.php.net/manual/en/opcache.installation.php
",2016/12/11 06:58,2019/01/05 09:06,2015/01/31 03:39,2019/01/05 09:06,1,680 days 03:19:00.000000000,ファイル削除
432,"docker-library
wordpress",https://github.com/docker-library/wordpress,f56ccb5de179757eeb043ef5fedea6c3cf4e3bf2,php7.1/apache/Dockerfile,php7.1/apache/Dockerfile,"# TODO consider removing the *-dev deps and only keeping the necessary lib* packages

# set recommended PHP.ini settings
# see https://secure.php.net/manual/en/opcache.installation.php
",2017/01/05 09:59,2019/12/02 18:52,2017/01/05 09:59,2019/12/02 18:52,1,0 days 00:00:00.000000000,ファイル削除
433,"docker-library
wordpress",https://github.com/docker-library/wordpress,637afb53dc03b4af19149a0880e796346f97c137,php5.6/apache/Dockerfile,php5.6/apache/Dockerfile,"# TODO consider removing the *-dev deps and only keeping the necessary lib* packages

# set recommended PHP.ini settings
# see https://secure.php.net/manual/en/opcache.installation.php
",2016/12/11 06:58,2019/01/05 09:06,2014/08/12 06:32,2019/01/05 09:06,1,852 days 00:26:00.000000000,ファイル削除
434,"docker-library
wordpress",https://github.com/docker-library/wordpress,637afb53dc03b4af19149a0880e796346f97c137,php7.0/fpm/Dockerfile,php7.0/fpm/Dockerfile,"# TODO consider removing the *-dev deps and only keeping the necessary lib* packages

# set recommended PHP.ini settings
# see https://secure.php.net/manual/en/opcache.installation.php
",2016/12/11 06:58,2019/01/05 09:06,2016/10/07 04:29,2019/01/05 09:06,1,65 days 02:29:00.000000000,ファイル削除
435,"docker-library
wordpress",https://github.com/docker-library/wordpress,637afb53dc03b4af19149a0880e796346f97c137,php7.0/apache/Dockerfile,php7.0/apache/Dockerfile,"# TODO consider removing the *-dev deps and only keeping the necessary lib* packages

# set recommended PHP.ini settings
# see https://secure.php.net/manual/en/opcache.installation.php
",2016/12/11 06:58,2019/01/05 09:06,2016/10/07 04:29,2019/01/05 09:06,1,65 days 02:29:00.000000000,ファイル削除
436,"docker-library
wordpress",https://github.com/docker-library/wordpress,f56ccb5de179757eeb043ef5fedea6c3cf4e3bf2,php7.1/fpm/Dockerfile,php7.1/fpm/Dockerfile,"# TODO consider removing the *-dev deps and only keeping the necessary lib* packages

# set recommended PHP.ini settings
# see https://secure.php.net/manual/en/opcache.installation.php
",2017/01/05 09:59,2019/12/02 18:52,2017/01/05 09:59,2019/12/02 18:52,1,0 days 00:00:00.000000000,ファイル削除
439,"docker-library
tomcat",https://github.com/docker-library/tomcat,0e18eab4234afbff617aee84e7156ac1b4fd67d5,6/jre7/Dockerfile,6/jre7/Dockerfile,"#!/bin/sh$|#!/usr/bin/env bash|' '{}' +

# TODO find a simple hacky way to verify Tomcat Native is working properly
# (the way we use in 7+ doesn't work here because we have no ""configtest"")

",2017/07/29 03:16,2017/08/04 06:36,2014/10/23 08:32,2017/08/04 06:36,1,1009 days 18:44:00.000000000,ファイル削除
441,"docker-library
tomcat",https://github.com/docker-library/tomcat,0e18eab4234afbff617aee84e7156ac1b4fd67d5,6/jre8/Dockerfile,6/jre8/Dockerfile,"#!/bin/sh$|#!/usr/bin/env bash|' '{}' +

# TODO find a simple hacky way to verify Tomcat Native is working properly
# (the way we use in 7+ doesn't work here because we have no ""configtest"")

",2017/07/29 03:16,2017/08/04 06:36,2014/11/21 07:04,2017/08/04 06:36,1,980 days 20:12:00.000000000,ファイル削除
448,"docker-library
tomcat",https://github.com/docker-library/tomcat,ee7ff91af066dc7df9d88e3cb842c40f0b6d164b,8.5/jdk12/openjdk-oracle/Dockerfile,8.5/jdk12/openjdk-oracle/Dockerfile,"# TODO there's an odd bug on Oracle Linux where installing ""cpp"" (which gets pulled in as a dependency of ""gcc"") and then marking it as automatically-installed will result in the ""filesystem"" package being removed during ""yum autoremove"" (which then fails), so we set it as manually-installed to compensate
",2019/07/03 06:41,2019/09/20 04:49,2019/07/03 06:41,2019/09/20 04:49,1,0 days 00:00:00.000000000,ファイル削除
453,"docker-library
tomcat",https://github.com/docker-library/tomcat,ee7ff91af066dc7df9d88e3cb842c40f0b6d164b,9.0/jdk12/openjdk-oracle/Dockerfile,9.0/jdk12/openjdk-oracle/Dockerfile,"# TODO there's an odd bug on Oracle Linux where installing ""cpp"" (which gets pulled in as a dependency of ""gcc"") and then marking it as automatically-installed will result in the ""filesystem"" package being removed during ""yum autoremove"" (which then fails), so we set it as manually-installed to compensate
",2019/07/03 06:41,2019/09/20 04:49,2019/07/03 06:41,2019/09/20 04:49,1,0 days 00:00:00.000000000,ファイル削除
477,"zendtech
php-zendserver-docker",https://github.com/zendtech/php-zendserver-docker,8a4f6c9cb035044358072c465e41b4b8993731e7,2018.0/7.2/Dockerfile,2018.0/7.2/Dockerfile,"#Copy Zray docker plugin
#TODO: Integrate Zray docker plugin into Zend Server
",2018/06/18 18:44,2020/03/19 19:57,2018/06/18 18:44,2020/03/19 19:57,1,0 days 00:00:00.000000000,ファイル削除
481,"zendtech
php-zendserver-docker",https://github.com/zendtech/php-zendserver-docker,bb3303d34a3e86a4bc9eb1d652c5cce6ad441a6e,7.0/5.5/Dockerfile,7.0/5.5/Dockerfile,"# Zend Server
#
# Version 0.1

# TODO:
# - version as a variable (both php and ZS)

",2014/10/21 17:15,2018/04/30 21:42,2014/10/21 17:15,2018/04/30 21:42,1,0 days 00:00:00.000000000,ファイル削除
482,"zendtech
php-zendserver-docker",https://github.com/zendtech/php-zendserver-docker,bb3303d34a3e86a4bc9eb1d652c5cce6ad441a6e,7.0/5.4/Dockerfile,7.0/5.4/Dockerfile,"# Zend Server
#
# Version 0.1

# TODO:
# - version as a variable (both php and ZS)

",2014/10/21 17:15,2018/04/30 21:42,2014/10/21 17:15,2018/04/30 21:42,1,0 days 00:00:00.000000000,ファイル削除
484,"zendtech
php-zendserver-docker",https://github.com/zendtech/php-zendserver-docker,ed44d0b62d9a118877e5664f5b7c2f31ba681cd7,8.0/5.5/Dockerfile,8.0/5.5/Dockerfile,"# Zend Server
#
# Version 0.2

# TODO:

",2014/12/10 22:53,2016/08/01 18:35,2014/12/10 22:53,2016/08/01 18:35,1,0 days 00:00:00.000000000,ファイル削除
485,"zendtech
php-zendserver-docker",https://github.com/zendtech/php-zendserver-docker,4c3dda9854934f9bfa6893b286dd7532d08e39b9,8.0/openshift/Dockerfile,8.0/openshift/Dockerfile,"# Zend Server
#
# Version 0.2

# TODO:

",2014/12/21 19:44,2015/01/11 21:51,2014/12/21 19:44,2015/01/11 21:51,1,0 days 00:00:00.000000000,ファイル削除
486,"zendtech
php-zendserver-docker",https://github.com/zendtech/php-zendserver-docker,ed44d0b62d9a118877e5664f5b7c2f31ba681cd7,8.0/5.6/Dockerfile,8.0/5.6/Dockerfile,"# Zend Server
#
# Version 0.2

# TODO:

",2014/12/10 22:53,2016/08/01 18:35,2014/12/10 22:53,2016/08/01 18:35,1,0 days 00:00:00.000000000,ファイル削除
487,"zendtech
php-zendserver-docker",https://github.com/zendtech/php-zendserver-docker,82bba8cc44febcc6d7f31e25373fd323a1b54bfc,8.5/5.5/Dockerfile,8.5/5.5/Dockerfile,"# Zend Server
#
# Version 0.2

# TODO:

",2015/10/11 19:18,2018/04/30 21:42,2015/10/11 19:18,2018/04/30 21:42,1,0 days 00:00:00.000000000,ファイル削除
488,"zendtech
php-zendserver-docker",https://github.com/zendtech/php-zendserver-docker,571a4032a3645d26df1690629f1c0551bae4822a,Dockerfile,Dockerfile,"# Zend Server
#
# Version 0.1

# TODO:
# - version as a variable (both php and ZS)

",2014/10/19 23:21,2014/10/20 22:46,2014/10/19 23:21,2014/10/20 22:46,1,0 days 00:00:00.000000000,ファイル削除
489,"zendtech
php-zendserver-docker",https://github.com/zendtech/php-zendserver-docker,b3ff26b9a50d7cc80a23646d86bc5817a6d78d10,5.4/Dockerfile,5.4/Dockerfile,"# Zend Server
#
# Version 0.1

# TODO:
# - version as a variable (both php and ZS)

",2014/10/20 22:47,2014/10/21 17:15,2014/10/20 22:47,2014/10/21 17:15,1,0 days 00:00:00.000000000,ファイル削除
490,"zendtech
php-zendserver-docker",https://github.com/zendtech/php-zendserver-docker,b3ff26b9a50d7cc80a23646d86bc5817a6d78d10,5.5/Dockerfile,5.5/Dockerfile,"# Zend Server
#
# Version 0.1

# TODO:
# - version as a variable (both php and ZS)

",2014/10/20 22:47,2014/10/21 17:15,2014/10/20 22:47,2014/10/21 17:15,1,0 days 00:00:00.000000000,ファイル削除
504,"docker-library
busybox",https://github.com/docker-library/busybox,c28aca6a64e108187f75d573e680cea20893615a,ubuntu/Dockerfile.builder,ubuntu/Dockerfile.builder,"# hack hack hack hack hack
# with glibc, static busybox uses libnss for DNS resolution :(
",2015/10/20 03:07,2016/01/08 03:46,2015/09/15 08:25,2016/01/08 03:46,1,34 days 18:42:00.000000000,ファイル削除
513,"therealprologic
docker-crux",https://github.com/therealprologic/docker-crux,0a2b1fda0bbc86d29be874874d2603c64d808c20,build/aarch64/Dockerfile,build/aarch64/Dockerfile,"# Creates an image to build the CRUX filesystem

# TODO: Once bootstrapped, use 'crux:latest'
",2018/11/08 17:18,2018/11/14 22:29,2018/11/14 22:29,2018/11/14 22:29,1,-7 days +18:49:00.000000000,ファイル削除
517,"docker-library
kibana",https://github.com/docker-library/kibana,cc92280939a05c80282bc33e85e8a24e14f08def,5.0/Dockerfile,5/Dockerfile,"# TODO figure out what's going on here and what it'll settle to for 5.0 GA

",2016/04/19 01:22,2019/04/23 04:53,2016/04/19 01:22,2019/04/23 04:53,1,0 days 00:00:00.000000000,ファイル削除
522,"openliberty
ci.docker",https://github.com/openliberty/ci.docker,70edeb47eda3c959874a737420cb4e31d9005be3,official/javaee8/java11/openj9/Dockerfile,official/latest/javaee8/java11/openj9/Dockerfile,"# These settings are needed so that we can run as a different user than 1001 after server warmup
# TODO: Eventually convert this to OPENJ9_JAVA_OPTIONS once the Liberty server script honors it
",2019/05/29 02:14,2019/10/24 04:35,2019/05/29 02:14,2019/10/24 04:35,1,0 days 00:00:00.000000000,ファイル削除
523,"openliberty
ci.docker",https://github.com/openliberty/ci.docker,70edeb47eda3c959874a737420cb4e31d9005be3,official/kernel/java11/openj9/Dockerfile,official/latest/kernel/java11/openj9/Dockerfile,"# These settings are needed so that we can run as a different user than 1001 after server warmup
# TODO: Eventually convert this to OPENJ9_JAVA_OPTIONS once the Liberty server script honors it
",2019/05/29 02:14,2019/10/24 04:35,2019/05/29 02:14,2019/10/24 04:35,1,0 days 00:00:00.000000000,ファイル削除
524,"openliberty
ci.docker",https://github.com/openliberty/ci.docker,70edeb47eda3c959874a737420cb4e31d9005be3,official/webProfile8/java11/openj9/Dockerfile,official/latest/webProfile8/java11/openj9/Dockerfile,"#These settings are needed so that we can run as a different user than 1001 after server warmup
# TODO: Eventually convert this to OPENJ9_JAVA_OPTIONS once the Liberty server script honors it
",2019/05/29 02:14,2019/10/24 04:35,2019/05/29 02:14,2019/10/24 04:35,1,0 days 00:00:00.000000000,ファイル削除
525,"openliberty
ci.docker",https://github.com/openliberty/ci.docker,79898914adc2141f929c5e8bd3ca6ac23c3b995d,official/19.0.0.6/kernel/java11/openj9/Dockerfile,releases/19.0.0.6/kernel/Dockerfile.ubuntu.adoptopenjdk11,"# These settings are needed so that we can run as a different user than 1001 after server warmup
# TODO: Eventually convert this to OPENJ9_JAVA_OPTIONS once the Liberty server script honors it
",2019/06/21 23:02,2019/12/12 01:36,2019/06/21 23:02,2019/12/12 01:36,1,0 days 00:00:00.000000000,ファイル削除
526,"openliberty
ci.docker",https://github.com/openliberty/ci.docker,2c9acecae083e1a45873df87b7b0de7a14c4ee20,official/19.0.0.x/javaee8/java12/openj9/Dockerfile,official/latest/javaee8/java12/openj9/Dockerfile,"# These settings are needed so that we can run as a different user than 1001 after server warmup
# TODO: Eventually convert this to OPENJ9_JAVA_OPTIONS once the Liberty server script honors it
",2019/06/05 04:45,2019/10/24 04:35,2019/06/05 04:45,2019/10/24 04:35,1,0 days 00:00:00.000000000,ファイル削除
527,"openliberty
ci.docker",https://github.com/openliberty/ci.docker,2c9acecae083e1a45873df87b7b0de7a14c4ee20,official/19.0.0.x/webProfile8/java12/openj9/Dockerfile,official/latest/webProfile8/java12/openj9/Dockerfile,"#These settings are needed so that we can run as a different user than 1001 after server warmup
# TODO: Eventually convert this to OPENJ9_JAVA_OPTIONS once the Liberty server script honors it
",2019/06/05 04:45,2019/10/24 04:35,2019/06/05 04:45,2019/10/24 04:35,1,0 days 00:00:00.000000000,ファイル削除
528,"openliberty
ci.docker",https://github.com/openliberty/ci.docker,2c9acecae083e1a45873df87b7b0de7a14c4ee20,official/19.0.0.x/kernel/java12/openj9/Dockerfile,official/latest/kernel/java12/openj9/Dockerfile,"# These settings are needed so that we can run as a different user than 1001 after server warmup
# TODO: Eventually convert this to OPENJ9_JAVA_OPTIONS once the Liberty server script honors it
",2019/06/05 04:45,2019/10/24 04:35,2019/06/05 04:45,2019/10/24 04:35,1,0 days 00:00:00.000000000,ファイル削除
529,"openliberty
ci.docker",https://github.com/openliberty/ci.docker,79898914adc2141f929c5e8bd3ca6ac23c3b995d,official/19.0.0.6/javaee8/java11/openj9/Dockerfile,releases/19.0.0.6/javaee8/Dockerfile.ubuntu.adoptopenjdk11,"# These settings are needed so that we can run as a different user than 1001 after server warmup
# TODO: Eventually convert this to OPENJ9_JAVA_OPTIONS once the Liberty server script honors it
",2019/06/21 23:02,2019/12/12 01:36,2019/06/21 23:02,2019/12/12 01:36,1,0 days 00:00:00.000000000,ファイル削除
530,"openliberty
ci.docker",https://github.com/openliberty/ci.docker,79898914adc2141f929c5e8bd3ca6ac23c3b995d,official/19.0.0.6/webProfile8/java11/openj9/Dockerfile,releases/19.0.0.6/webProfile8/Dockerfile.ubuntu.adoptopenjdk11,"#These settings are needed so that we can run as a different user than 1001 after server warmup
# TODO: Eventually convert this to OPENJ9_JAVA_OPTIONS once the Liberty server script honors it
",2019/06/21 23:02,2019/12/12 01:36,2019/06/21 23:02,2019/12/12 01:36,1,0 days 00:00:00.000000000,ファイル削除
531,"openliberty
ci.docker",https://github.com/openliberty/ci.docker,5ccbc0792c730cae1f5b31070201f3286cd8ce03,official/19.0.0.9/webProfile8/java11/openj9/Dockerfile,releases/19.0.0.9/webProfile8/Dockerfile.ubuntu.adoptopenjdk11,"#These settings are needed so that we can run as a different user than 1001 after server warmup
# TODO: Eventually convert this to OPENJ9_JAVA_OPTIONS once the Liberty server script honors it
",2019/09/16 23:28,2020/03/17 04:29,2019/09/16 23:28,2020/03/17 04:29,1,0 days 00:00:00.000000000,ファイル削除
532,"openliberty
ci.docker",https://github.com/openliberty/ci.docker,5ccbc0792c730cae1f5b31070201f3286cd8ce03,official/19.0.0.9/javaee8/java11/openj9/Dockerfile,releases/19.0.0.9/javaee8/Dockerfile.ubuntu.adoptopenjdk11,"# These settings are needed so that we can run as a different user than 1001 after server warmup
# TODO: Eventually convert this to OPENJ9_JAVA_OPTIONS once the Liberty server script honors it
",2019/09/16 23:28,2020/03/17 04:29,2019/09/16 23:28,2020/03/17 04:29,1,0 days 00:00:00.000000000,ファイル削除
533,"openliberty
ci.docker",https://github.com/openliberty/ci.docker,5ccbc0792c730cae1f5b31070201f3286cd8ce03,official/19.0.0.9/kernel/java11/openj9/Dockerfile,releases/19.0.0.9/kernel/Dockerfile.ubuntu.adoptopenjdk11,"# These settings are needed so that we can run as a different user than 1001 after server warmup
# TODO: Eventually convert this to OPENJ9_JAVA_OPTIONS once the Liberty server script honors it
",2019/09/16 23:28,2020/03/17 04:29,2019/09/16 23:28,2020/03/17 04:29,1,0 days 00:00:00.000000000,ファイル削除
534,"openliberty
ci.docker",https://github.com/openliberty/ci.docker,5ccbc0792c730cae1f5b31070201f3286cd8ce03,official/19.0.0.9/javaee8/java12/openj9/Dockerfile,official/19.0.0.9/javaee8/java12/openj9/Dockerfile,"# These settings are needed so that we can run as a different user than 1001 after server warmup
# TODO: Eventually convert this to OPENJ9_JAVA_OPTIONS once the Liberty server script honors it
",2019/09/16 23:28,2019/11/14 04:36,2019/09/16 23:28,2019/11/14 04:36,1,0 days 00:00:00.000000000,ファイル削除
535,"openliberty
ci.docker",https://github.com/openliberty/ci.docker,5ccbc0792c730cae1f5b31070201f3286cd8ce03,official/19.0.0.9/webProfile8/java12/openj9/Dockerfile,official/19.0.0.9/webProfile8/java12/openj9/Dockerfile,"#These settings are needed so that we can run as a different user than 1001 after server warmup
# TODO: Eventually convert this to OPENJ9_JAVA_OPTIONS once the Liberty server script honors it
",2019/09/16 23:28,2019/11/14 04:36,2019/09/16 23:28,2019/11/14 04:36,1,0 days 00:00:00.000000000,ファイル削除
536,"openliberty
ci.docker",https://github.com/openliberty/ci.docker,5ccbc0792c730cae1f5b31070201f3286cd8ce03,official/19.0.0.9/kernel/java12/openj9/Dockerfile,official/19.0.0.9/kernel/java12/openj9/Dockerfile,"# These settings are needed so that we can run as a different user than 1001 after server warmup
# TODO: Eventually convert this to OPENJ9_JAVA_OPTIONS once the Liberty server script honors it
",2019/09/16 23:28,2019/11/14 04:36,2019/09/16 23:28,2019/11/14 04:36,1,0 days 00:00:00.000000000,ファイル削除
539,"influxdata
influxdb",https://github.com/influxdata/influxdb,1a5bcd29daa8df8a09113cd71b4d47da2e8332a2,Dockerfile_build_ubuntu64_go1.11,Dockerfile_build_ubuntu64_go1.11,"# TODO(edd) this needs to be updated to 1.11 when the branch is available.
",2018/08/21 23:49,2019/01/12 03:38,2017/07/22 02:51,2019/01/12 03:38,1,395 days 20:58:00.000000000,ファイル削除
540,"cruxlinux
docker-crux",https://github.com/cruxlinux/docker-crux,0a2b1fda0bbc86d29be874874d2603c64d808c20,build/aarch64/Dockerfile,build/aarch64/Dockerfile,"# Creates an image to build the CRUX filesystem

# TODO: Once bootstrapped, use 'crux:latest'
",2018/11/08 17:18,2018/11/14 22:29,2018/11/14 22:29,2018/11/14 22:29,1,-7 days +18:49:00.000000000,ファイル削除
546,"docker-library
pypy",https://github.com/docker-library/pypy,d54416e2be73520a490eb0dd2819d8a2b4df3652,3.5/slim/Dockerfile,3.5/slim/Dockerfile,"# TODO rebuild other cffi modules here too? (other _*_build.py files)
",2019/03/28 07:11,2019/10/15 04:35,2019/02/12 09:21,2019/10/15 04:35,1,43 days 21:50:00.000000000,ファイル削除
547,"docker-library
pypy",https://github.com/docker-library/pypy,d54416e2be73520a490eb0dd2819d8a2b4df3652,3.5/Dockerfile,3.5/Dockerfile,"# TODO rebuild other cffi modules here too? (other _*_build.py files)
",2019/03/28 07:11,2019/10/15 04:35,2014/12/17 08:36,2019/10/15 04:35,1,1561 days 22:35:00.000000000,ファイル削除
559,"hashicorp
docker-vault",https://github.com/hashicorp/docker-vault,38c20af56a8d3d340a2392dd5ad11cdd51760bc4,0.6/Dockerfile,0.6/Dockerfile,"# By default you'll get a single-node development server that stores everything
# in RAM and bootstraps itself. Don't use this configuration for production.
",2016/07/06 05:54,2017/10/06 01:40,2016/01/30 04:18,2017/10/06 01:40,1,158 days 01:36:00.000000000,ファイル削除
560,"hashicorp
docker-vault",https://github.com/hashicorp/docker-vault,70ec3a24d5f8bc77291f5367ef487303f9716d33,0.7.3/Dockerfile,0.7.3/Dockerfile,"# By default you'll get a single-node development server that stores everything
# in RAM and bootstraps itself. Don't use this configuration for production.
",2017/06/08 05:15,2017/10/06 01:40,2017/06/08 05:15,2017/10/06 01:40,1,0 days 00:00:00.000000000,ファイル削除
561,"hashicorp
docker-vault",https://github.com/hashicorp/docker-vault,9b8dfaaf3738b16b4b2afbbdbc41f3419986b394,0.7.2/Dockerfile,0.7.2/Dockerfile,"# By default you'll get a single-node development server that stores everything
# in RAM and bootstraps itself. Don't use this configuration for production.
",2017/05/16 00:26,2017/10/06 01:40,2017/05/16 00:26,2017/10/06 01:40,1,0 days 00:00:00.000000000,ファイル削除
562,"hashicorp
docker-vault",https://github.com/hashicorp/docker-vault,67f88c6cea8da71a9803a401e7a7c950dd884b02,0.7.0/Dockerfile,0.7.0/Dockerfile,"# By default you'll get a single-node development server that stores everything
# in RAM and bootstraps itself. Don't use this configuration for production.
",2017/03/28 23:33,2017/10/06 01:40,2017/03/28 23:33,2017/10/06 01:40,1,0 days 00:00:00.000000000,ファイル削除
563,"hashicorp
docker-vault",https://github.com/hashicorp/docker-vault,638047d80dc87b97f7bda67c758f54b2826959ce,0.8.0-rc1/Dockerfile,0.8.0-rc1/Dockerfile,"# By default you'll get a single-node development server that stores everything
# in RAM and bootstraps itself. Don't use this configuration for production.
",2017/08/04 04:16,2017/10/06 01:40,2017/08/04 04:16,2017/10/06 01:40,1,0 days 00:00:00.000000000,ファイル削除
564,"hashicorp
docker-vault",https://github.com/hashicorp/docker-vault,c087a27b5ec93445e89dc46f25af973f114f1399,0.6.5/Dockerfile,0.6.5/Dockerfile,"# By default you'll get a single-node development server that stores everything
# in RAM and bootstraps itself. Don't use this configuration for production.
",2017/02/08 11:01,2017/10/06 01:40,2017/02/08 11:01,2017/10/06 01:40,1,0 days 00:00:00.000000000,ファイル削除
565,"hashicorp
docker-vault",https://github.com/hashicorp/docker-vault,3d3957180d689ecddb537aa799a878171280e8a3,0.6.2/Dockerfile,0.6.2/Dockerfile,"# By default you'll get a single-node development server that stores everything
# in RAM and bootstraps itself. Don't use this configuration for production.
",2016/10/06 05:37,2017/10/06 01:40,2016/10/06 05:37,2017/10/06 01:40,1,0 days 00:00:00.000000000,ファイル削除
566,"hashicorp
docker-vault",https://github.com/hashicorp/docker-vault,296309e4e40be197e89b9f063463fe02c4c5c3e2,0.6.1/Dockerfile,0.6.1/Dockerfile,"# By default you'll get a single-node development server that stores everything
# in RAM and bootstraps itself. Don't use this configuration for production.
",2016/08/21 04:50,2017/10/06 01:40,2016/08/21 04:50,2017/10/06 01:40,1,0 days 00:00:00.000000000,ファイル削除
567,"hashicorp
docker-vault",https://github.com/hashicorp/docker-vault,b480db2b90dd4190c3ce4e8588624ed426fd7dea,0.6.3/Dockerfile,0.6.3/Dockerfile,"# By default you'll get a single-node development server that stores everything
# in RAM and bootstraps itself. Don't use this configuration for production.
",2016/12/06 01:35,2017/10/06 01:40,2016/12/06 01:35,2017/10/06 01:40,1,0 days 00:00:00.000000000,ファイル削除
568,"hashicorp
docker-vault",https://github.com/hashicorp/docker-vault,7bbdde58de683a2bb6e384e4c20e30308b4ff882,0.6.4/Dockerfile,0.6.4/Dockerfile,"# By default you'll get a single-node development server that stores everything
# in RAM and bootstraps itself. Don't use this configuration for production.
",2016/12/17 05:52,2017/10/06 01:40,2016/12/17 05:52,2017/10/06 01:40,1,0 days 00:00:00.000000000,ファイル削除
569,"hashicorp
docker-vault",https://github.com/hashicorp/docker-vault,20c626ab1c89a17c24f370ae18cfe6cbc0eb8d33,0.8.0-beta1/Dockerfile,0.8.0-beta1/Dockerfile,"# By default you'll get a single-node development server that stores everything
# in RAM and bootstraps itself. Don't use this configuration for production.
",2017/07/26 10:02,2017/10/06 01:40,2017/07/26 10:02,2017/10/06 01:40,1,0 days 00:00:00.000000000,ファイル削除
570,"hashicorp
docker-vault",https://github.com/hashicorp/docker-vault,d1cbdce2b531e9223356efb14e828afa556e1f70,0.8.0/Dockerfile,0.8.0/Dockerfile,"# By default you'll get a single-node development server that stores everything
# in RAM and bootstraps itself. Don't use this configuration for production.
",2017/08/09 22:39,2017/10/06 01:40,2017/08/09 22:39,2017/10/06 01:40,1,0 days 00:00:00.000000000,ファイル削除
571,"hashicorp
docker-vault",https://github.com/hashicorp/docker-vault,9ddc187d94f68f2572e4d3b1e733c98c661d628b,0.8.1/Dockerfile,0.8.1/Dockerfile,"# By default you'll get a single-node development server that stores everything
# in RAM and bootstraps itself. Don't use this configuration for production.
",2017/08/17 21:30,2017/10/06 01:40,2017/08/17 21:30,2017/10/06 01:40,1,0 days 00:00:00.000000000,ファイル削除
572,"hashicorp
docker-vault",https://github.com/hashicorp/docker-vault,0cbe9598ea742e5227a20012332400b0f96a0327,0.8.2/Dockerfile,0.8.2/Dockerfile,"# By default you'll get a single-node development server that stores everything
# in RAM and bootstraps itself. Don't use this configuration for production.
",2017/09/07 04:52,2017/10/06 01:40,2017/09/07 04:52,2017/10/06 01:40,1,0 days 00:00:00.000000000,ファイル削除
578,"docker-library
postgres",https://github.com/docker-library/postgres,064113e0e481a1d0542846b81858e457fde02c90,9.4/Dockerfile,9.4/Dockerfile,"# https://github.com/docker-library/postgres/issues/484 (clang-6.0 required, only available in stretch-backports)
# TODO remove this once we hit buster+
",2018/08/22 06:39,2020/02/15 06:32,2014/07/16 09:14,2020/02/15 06:32,1,1497 days 21:25:00.000000000,ファイル削除
580,"docker-library
postgres",https://github.com/docker-library/postgres,064113e0e481a1d0542846b81858e457fde02c90,9.3/Dockerfile,9.3/Dockerfile,"# https://github.com/docker-library/postgres/issues/484 (clang-6.0 required, only available in stretch-backports)
# TODO remove this once we hit buster+
",2018/08/22 06:39,2018/12/05 07:37,2014/06/24 01:03,2018/12/05 07:37,1,1520 days 05:36:00.000000000,ファイル削除
587,"wikimedia
mediawiki-docker",https://github.com/wikimedia/mediawiki-docker,4b8cc73503e4fadd6f2b01eba840fa787a0d0ee3,Dockerfile,1.23/Dockerfile,"    # Extensions
    # TODO: make submodules shallow clones?
",2017/06/08 08:19,2015/08/14 06:24,2014/10/11 03:48,2015/08/14 06:24,1,971 days 04:31:00.000000000,ファイル削除
592,"docker-library
gcc",https://github.com/docker-library/gcc,3b33871fe9558262cb5ed6253d358f76710e9ccb,7/Dockerfile,7/Dockerfile,"# TODO for some reason, libgo + i386 fails on https://github.com/gcc-mirror/gcc/blob/gcc-7_1_0-release/libgo/runtime/proc.c#L154
# ""error unknown case for SETCONTEXT_CLOBBERS_TLS""
",2017/06/17 02:45,2020/05/08 13:19,2017/05/03 01:38,2020/05/08 13:19,1,45 days 01:07:00.000000000,ファイル削除
597,"docker-library
gcc",https://github.com/docker-library/gcc,3b33871fe9558262cb5ed6253d358f76710e9ccb,6/Dockerfile,6/Dockerfile,"# TODO for some reason, libgo + i386 fails on https://github.com/gcc-mirror/gcc/blob/gcc-7_1_0-release/libgo/runtime/proc.c#L154
# ""error unknown case for SETCONTEXT_CLOBBERS_TLS""
",2017/06/17 02:45,2020/05/07 22:15,2016/09/17 05:48,2020/05/07 22:15,1,272 days 20:57:00.000000000,ファイル削除
603,"docker-library
gcc",https://github.com/docker-library/gcc,3b33871fe9558262cb5ed6253d358f76710e9ccb,5/Dockerfile,5/Dockerfile,"# TODO for some reason, libgo + i386 fails on https://github.com/gcc-mirror/gcc/blob/gcc-7_1_0-release/libgo/runtime/proc.c#L154
# ""error unknown case for SETCONTEXT_CLOBBERS_TLS""
",2017/06/17 02:45,2019/05/04 07:14,2017/10/18 08:20,2019/05/04 07:14,1,-124 days +18:25:00.000000000,ファイル削除
607,"docker-library
gcc",https://github.com/docker-library/gcc,3b33871fe9558262cb5ed6253d358f76710e9ccb,4.9/Dockerfile,4.9/Dockerfile,"# TODO for some reason, libgo + i386 fails on https://github.com/gcc-mirror/gcc/blob/gcc-7_1_0-release/libgo/runtime/proc.c#L154
# ""error unknown case for SETCONTEXT_CLOBBERS_TLS""
",2017/06/17 02:45,2017/09/30 03:05,2016/04/27 23:55,2017/09/30 03:05,1,415 days 02:50:00.000000000,ファイル削除
611,"tianon
dockerfiles",https://github.com/tianon/dockerfiles,02042c331baf96a01030574465fdb4f519108e06,qemu/Dockerfile,qemu/Dockerfile,"# TODO verify signature
",2017/12/19 06:21,2019/01/18 07:41,2014/09/20 16:00,2019/01/18 07:41,1,1185 days 14:21:00.000000000,ファイル削除
616,"tianon
dockerfiles",https://github.com/tianon/dockerfiles,2e37f527a42e05e8b9e62a84ec34355edae69e47,ruby-passenger/Dockerfile,ruby-passenger/Dockerfile,"# TODO find a clean way to do this here in such a way that gems like rmagick can install cleanly without first installing libmagickcore-dev
#ONBUILD ADD Gemfile /apps/rails/Gemfile
#ONBUILD ADD Gemfile.lock /apps/rails/Gemfile.lock
#ONBUILD RUN cd /apps/rails && bundle install --deployment
#ONBUILD ADD . /apps/rails
#ONBUILD RUN chown -R www-data:www-data /apps/rails
",2014/03/29 08:19,2019/09/14 06:33,2014/03/29 08:19,2019/09/14 06:33,1,0 days 00:00:00.000000000,ファイル削除
617,"tianon
dockerfiles",https://github.com/tianon/dockerfiles,6f3b2ee0f98d1abde53cf49b7bb47bba0e466cfd,ruby-unicorn/Dockerfile,ruby-unicorn/Dockerfile,"# TODO find a clean way to do this here in such a way that gems like rmagick can install cleanly without first installing libmagickcore-dev
#ONBUILD ADD Gemfile /apps/rails/Gemfile
#ONBUILD ADD Gemfile.lock /apps/rails/Gemfile.lock
#ONBUILD RUN bundle install --deployment
#ONBUILD ADD . /apps/rails
",2014/03/29 08:29,2019/09/14 06:33,2014/03/29 08:29,2019/09/14 06:33,1,0 days 00:00:00.000000000,ファイル削除
618,"tianon
dockerfiles",https://github.com/tianon/dockerfiles,df966bd85ec8ee2d918eef64d6a93eeee3cf4930,docker/experimental/dind/Dockerfile,docker/experimental/dind/Dockerfile,"# TODO aufs-tools

",2015/08/28 07:47,2016/11/13 01:12,2015/08/28 07:47,2016/11/13 01:12,1,0 days 00:00:00.000000000,ファイル削除
619,"tianon
dockerfiles",https://github.com/tianon/dockerfiles,03c351859fd6a80d65ee4a35a4bb71d7510a6041,nylas/sync-engine/Dockerfile,nylas/sync-engine/Dockerfile," # TODO inbox-api or inbox-start
",2016/01/29 08:18,2019/06/25 13:10,2016/02/16 08:39,2019/06/25 13:10,1,-19 days +23:39:00.000000000,ファイル削除
630,"tianon
dockerfiles",https://github.com/tianon/dockerfiles,4651c8e65b80e0acc3d2f7df2de980ee28a03c7a,familysearch-indexing/Dockerfile,familysearch-indexing/Dockerfile,"# TODO add a very lightweight browser for opening help and/or registration
",2014/02/23 15:47,2019/08/02 14:47,2014/02/23 15:47,2019/08/02 14:47,1,0 days 00:00:00.000000000,ファイル削除
635,"tianon
dockerfiles",https://github.com/tianon/dockerfiles,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,sbin-init/ubuntu/upstart/12.10/Dockerfile,sbin-init/ubuntu/upstart/14.10/Dockerfile,"# much of this was gleaned from https://github.com/lxc/lxc/blob/lxc-0.8.0/templates/lxc-ubuntu.in
# and then heavily modified and hacked like crazy

# we're going to want this bad boy installed so we can connect :)
",2014/06/06 16:45,2019/06/15 05:03,2014/01/12 00:56,2019/06/15 05:03,1,145 days 15:49:00.000000000,ファイル削除
636,"tianon
dockerfiles",https://github.com/tianon/dockerfiles,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,sbin-init/ubuntu/upstart/13.10/Dockerfile,sbin-init/ubuntu/upstart/13.10/Dockerfile,"# much of this was gleaned from https://github.com/lxc/lxc/blob/lxc-0.8.0/templates/lxc-ubuntu.in
# and then heavily modified and hacked like crazy

# we're going to want this bad boy installed so we can connect :)
",2014/06/06 16:45,2014/09/25 13:05,2014/01/12 00:56,2014/09/25 13:05,1,145 days 15:49:00.000000000,ファイル削除
637,"tianon
dockerfiles",https://github.com/tianon/dockerfiles,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,sbin-init/ubuntu/upstart/13.04/Dockerfile,sbin-init/ubuntu/upstart/13.04/Dockerfile,"# much of this was gleaned from https://github.com/lxc/lxc/blob/lxc-0.8.0/templates/lxc-ubuntu.in
# and then heavily modified and hacked like crazy

# we're going to want this bad boy installed so we can connect :)
",2014/06/06 16:45,2014/09/25 13:05,2014/01/12 00:56,2014/09/25 13:05,1,145 days 15:49:00.000000000,ファイル削除
638,"tianon
dockerfiles",https://github.com/tianon/dockerfiles,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,sbin-init/ubuntu/upstart/12.04/Dockerfile,sbin-init/ubuntu/upstart/12.04/Dockerfile,"# much of this was gleaned from https://github.com/lxc/lxc/blob/lxc-0.8.0/templates/lxc-ubuntu.in
# and then heavily modified and hacked like crazy

# we're going to want this bad boy installed so we can connect :)
",2014/06/06 16:45,2019/06/15 05:03,2014/01/12 00:56,2019/06/15 05:03,1,145 days 15:49:00.000000000,ファイル削除
639,"tianon
dockerfiles",https://github.com/tianon/dockerfiles,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,sbin-init/ubuntu/upstart/14.04/Dockerfile,sbin-init/ubuntu/upstart/14.04/Dockerfile,"# much of this was gleaned from https://github.com/lxc/lxc/blob/lxc-0.8.0/templates/lxc-ubuntu.in
# and then heavily modified and hacked like crazy

# we're going to want this bad boy installed so we can connect :)
",2014/06/06 16:45,2019/06/15 05:03,2014/05/13 06:16,2019/06/15 05:03,1,24 days 10:29:00.000000000,ファイル削除
640,"tianon
dockerfiles",https://github.com/tianon/dockerfiles,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,sbin-init/ubuntu/upstart/Dockerfile.template,sbin-init/ubuntu/upstart/Dockerfile.template,"# much of this was gleaned from https://github.com/lxc/lxc/blob/lxc-0.8.0/templates/lxc-ubuntu.in
# and then heavily modified and hacked like crazy

# we're going to want this bad boy installed so we can connect :)
",2014/06/06 16:45,2019/06/15 05:03,2014/02/12 08:56,2019/06/15 05:03,1,114 days 07:49:00.000000000,ファイル削除
653,"caddyserver
caddy-docker",https://github.com/caddyserver/caddy-docker,e57e714a75e86e3ba872b0d3885056155f25a237,alpine/Dockerfile,2.0/alpine/Dockerfile,"# TODO: alter filename after v2 release (version will be taken out of name)
",2020/03/15 20:54,2020/06/28 02:37,2019/10/19 05:34,2020/06/28 02:37,1,148 days 15:20:00.000000000,ファイル削除
676,"docker
docker",https://github.com/docker/docker,bc82b139955c4a0edb20b070926469cceea0fbbb,Dockerfile.armhf,Dockerfile.armhf,"# This file describes the standard way to build Docker on ARMv7, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker -f Dockerfile.armhf .
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/docker/docker --privileged -i -t docker bash
#
# # Run the test suite:
# docker run --privileged docker hack/make.sh test-unit test-integration test-docker-py
#
# Note: AppArmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#

",2017/06/17 09:18,2018/03/09 15:17,2015/11/05 23:38,2018/03/09 15:17,1,589 days 09:40:00.000000000,ファイル削除
677,"docker
docker",https://github.com/docker/docker,d6e1cc32d309ee237342975388e729570343a974,Dockerfile.armhf,Dockerfile.armhf,"# Options for hack/validate/gometalinter
",2017/06/30 17:29,2018/03/09 15:17,2015/11/05 23:38,2018/03/09 15:17,1,602 days 17:51:00.000000000,ファイル削除
678,"docker
docker",https://github.com/docker/docker,b529d1b0936b90ae14d584c73f7332919f8d76b7,Dockerfile.armhf,Dockerfile.armhf,"# See also ensureFrozenImagesLinux() in ""integration-cli/fixtures_linux_daemon_test.go"" (which needs to be updated when adding images to this list)

# Install tomlv, vndr, runc, containerd, tini, proxy dockercli
# Please edit hack/dockerfile/install/<name>.installer to update them.
",2018/02/17 03:51,2018/03/09 15:17,2015/11/05 23:38,2018/03/09 15:17,1,834 days 04:13:00.000000000,ファイル削除
731,"docker
docker",https://github.com/docker/docker,bc82b139955c4a0edb20b070926469cceea0fbbb,Dockerfile.aarch64,Dockerfile.aarch64,"# This file describes the standard way to build Docker on aarch64, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker -f Dockerfile.aarch64 .
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/docker/docker --privileged -i -t docker bash
#
# # Run the test suite:
# docker run --privileged docker hack/make.sh test-unit test-integration test-docker-py
#
# Note: AppArmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#

",2017/06/17 09:18,2018/03/09 15:17,2016/01/15 23:25,2018/03/09 15:17,1,518 days 09:53:00.000000000,ファイル削除
732,"docker
docker",https://github.com/docker/docker,d6e1cc32d309ee237342975388e729570343a974,Dockerfile.aarch64,Dockerfile.aarch64,"# Options for hack/validate/gometalinter
",2017/06/30 17:29,2018/03/09 15:17,2016/01/15 23:25,2018/03/09 15:17,1,531 days 18:04:00.000000000,ファイル削除
733,"docker
docker",https://github.com/docker/docker,b529d1b0936b90ae14d584c73f7332919f8d76b7,Dockerfile.aarch64,Dockerfile.aarch64,"# See also ensureFrozenImagesLinux() in ""integration-cli/fixtures_linux_daemon_test.go"" (which needs to be updated when adding images to this list)
#

# Install tomlv, vndr, runc, containerd, tini, proxy dockercli
# Please edit hack/dockerfile/install/<name>.installer to update them.
",2018/02/17 03:51,2018/03/09 15:17,2016/01/15 23:25,2018/03/09 15:17,1,763 days 04:26:00.000000000,ファイル削除
755,"docker
docker",https://github.com/docker/docker,bc82b139955c4a0edb20b070926469cceea0fbbb,Dockerfile.ppc64le,Dockerfile.ppc64le,"# This file describes the standard way to build Docker on ppc64le, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker -f Dockerfile.ppc64le .
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/docker/docker --privileged -i -t docker bash
#
# # Run the test suite:
# docker run --privileged docker hack/make.sh test-unit test-integration test-docker-py
#
# Note: AppArmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#

",2017/06/17 09:18,2018/03/09 15:17,2015/02/25 03:33,2018/03/09 15:17,1,843 days 05:45:00.000000000,ファイル削除
756,"docker
docker",https://github.com/docker/docker,b529d1b0936b90ae14d584c73f7332919f8d76b7,Dockerfile.ppc64le,Dockerfile.ppc64le,"# See also ensureFrozenImagesLinux() in ""integration-cli/fixtures_linux_daemon_test.go"" (which needs to be updated when adding images to this list)

# Install tomlv, vndr, runc, containerd, tini, proxy dockercli
# Please edit hack/dockerfile/install/<name>.installer to update them.
",2018/02/17 03:51,2018/03/09 15:17,2015/02/25 03:33,2018/03/09 15:17,1,1088 days 00:18:00.000000000,ファイル削除
770,"docker
docker",https://github.com/docker/docker,bc82b139955c4a0edb20b070926469cceea0fbbb,Dockerfile.s390x,Dockerfile.s390x,"# This file describes the standard way to build Docker on s390x, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker -f Dockerfile.s390x .
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/docker/docker --privileged -i -t docker bash
#
# # Run the test suite:
# docker run --privileged docker hack/make.sh test-unit test-integration test-docker-py
#
# Note: AppArmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#

",2017/06/17 09:18,2018/03/09 15:17,2015/02/25 03:33,2018/03/09 15:17,1,843 days 05:45:00.000000000,ファイル削除
771,"docker
docker",https://github.com/docker/docker,b529d1b0936b90ae14d584c73f7332919f8d76b7,Dockerfile.s390x,Dockerfile.s390x,"# See also ensureFrozenImagesLinux() in ""integration-cli/fixtures_linux_daemon_test.go"" (which needs to be updated when adding images to this list)

# Install tomlv, vndr, runc, containerd, tini, proxy dockercli
# Please edit hack/dockerfile/install/<name>.installer to update them.
",2018/02/17 03:51,2018/03/09 15:17,2015/02/25 03:33,2018/03/09 15:17,1,1088 days 00:18:00.000000000,ファイル削除
798,"docker
docker",https://github.com/docker/docker,3e84b9e56abdff7230e84a1830085c79c73aa3b7,docs/Dockerfile,docs/Dockerfile,"# TODO: need the full repo source to get the git version info
",2015/02/18 13:20,2016/10/12 04:14,2013/08/30 08:49,2016/10/12 04:14,1,537 days 04:31:00.000000000,ファイル削除
799,"docker
docker",https://github.com/docker/docker,8d4459fffb5c1885b65506093538e059f0b51d90,docs/Dockerfile,docs/Dockerfile,"# adding the image spec will require Docker 1.5 and `docker build -f docs/Dockerfile .`
#COPY ./image/spec/v1.md /docs/sources/reference/image-spec-v1.md

# TODO: don't do this - look at merging the yml file in build.sh
",2015/02/25 09:37,2016/10/12 04:14,2013/08/30 08:49,2016/10/12 04:14,1,544 days 00:48:00.000000000,ファイル削除
800,"docker
docker",https://github.com/docker/docker,22c46af4b358cf3ec4f7af47c701064c00cf7de4,builder/parser/testfiles/docker/Dockerfile,builder/dockerfile/parser/testfiles/docker/Dockerfile,"# TODO replace FPM with some very minimal debhelper stuff
",2014/08/06 05:17,2018/06/03 01:46,2014/08/06 05:17,2018/06/03 01:46,1,0 days 00:00:00.000000000,ファイル削除
805,"docker
docker",https://github.com/docker/docker,80bc8b4766cc808186af91930152d78afb22aef8,builder/dockerfile/parser/testfiles/docker/Dockerfile,builder/dockerfile/parser/testfiles/docker/Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/docker/docker --privileged -i -t docker bash
#
# # Run the test suite:
# docker run --privileged docker hack/make.sh test-unit test-integration test-docker-py
#
# Note: AppArmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#

",2018/05/19 03:28,2018/06/03 01:46,2014/08/06 05:17,2018/06/03 01:46,1,1381 days 22:11:00.000000000,ファイル削除
806,"docker
docker",https://github.com/docker/docker,934328d8ea650bf8a9c3c719999ce2a1f5dd5df6,Dockerfile.solaris,Dockerfile.solaris,"# Defines an image that hosts a native Docker build environment for Solaris
# TODO: Improve stub

",2016/06/07 16:45,2017/10/25 03:32,2016/06/07 16:45,2017/10/25 03:32,1,0 days 00:00:00.000000000,ファイル削除
807,"docker
docker",https://github.com/docker/docker,82c56755ea9e6c0ce197fbdfd41d0c5d1724b50c,Dockerfile.buildkit,Dockerfile.buildkit,"# TODO: Some of this is only really needed for testing, it would be nice to split this up
",2019/05/23 08:49,2019/06/08 02:10,2019/05/23 08:49,2019/06/08 02:10,1,0 days 00:00:00.000000000,ファイル削除
808,"docker
docker",https://github.com/docker/docker,82c56755ea9e6c0ce197fbdfd41d0c5d1724b50c,Dockerfile.buildkit,Dockerfile.buildkit,"# Options for hack/validate/gometalinter
",2019/05/23 08:49,2019/06/08 02:10,2019/05/23 08:49,2019/06/08 02:10,1,0 days 00:00:00.000000000,ファイル削除
809,"docker
docker",https://github.com/docker/docker,4357ed4a7363a1032edf93cf03232953c805184f,Dockerfile.gccgo,Dockerfile.gccgo,"# see https://git.fedorahosted.org/cgit/lvm2.git/tree/INSTALL

# install seccomp
# TODO: switch to libseccomp-dev since dockerinit is gone
",2016/01/20 20:53,2016/08/24 19:09,2015/08/17 18:20,2016/08/24 19:09,1,156 days 02:33:00.000000000,ファイル削除
813,"docker
docker",https://github.com/docker/docker,249f76bebdb3c24ae0a59e3be7ae73fd1d88c065,hack/infrastructure/docker-ci/nightlyrelease/Dockerfile,hack/infrastructure/docker-ci/nightlyrelease/Dockerfile,"# VERSION:        1.6
# DOCKER-VERSION  0.6.6
# AUTHOR:         Daniel Mizyrycki <daniel@docker.com>
# DESCRIPTION:    Build docker nightly release using Docker in Docker.
# REFERENCES:     This code reuses the excellent implementation of docker in docker
#                 made by Jerome Petazzoni.  https://github.com/jpetazzo/dind
# COMMENTS:
#   release_credentials.json is a base64 json encoded file containing:
#       { ""AWS_ACCESS_KEY"": ""Test_docker_AWS_S3_bucket_id"",
#         ""AWS_SECRET_KEY"": ""Test_docker_AWS_S3_bucket_key"",
#         ""GPG_PASSPHRASE"": ""Test_docker_GPG_passphrase_signature"" }
# TO_BUILD:       docker build -t dockerbuilder .
# TO_RELEASE:     docker run -i -t -privileged -e AWS_S3_BUCKET=""test.docker.io"" dockerbuilder hack/dind dockerbuild.sh

",2013/11/07 13:05,2014/02/15 13:50,2013/09/08 02:30,2014/02/15 13:50,1,60 days 10:35:00.000000000,ファイル削除
816,"docker
docker",https://github.com/docker/docker,249f76bebdb3c24ae0a59e3be7ae73fd1d88c065,hack/infrastructure/docker-ci/docker-test/Dockerfile,hack/infrastructure/docker-ci/docker-test/Dockerfile,"# VERSION:        0.4
# DOCKER-VERSION  0.6.6
# AUTHOR:         Daniel Mizyrycki <daniel@docker.com>
# DESCRIPTION:    Testing docker PRs and commits on top of master using
# REFERENCES:     This code reuses the excellent implementation of
#                 Docker in Docker made by Jerome Petazzoni.
#                 https://github.com/jpetazzo/dind
# COMMENTS:
#   This Dockerfile adapts /Dockerfile to enable docker PRs and commits testing
#   Optional arguments:
#       [commit]  (default: 'HEAD')
#       [repo]    (default: 'http://github.com/dotcloud/docker')
#       [branch]  (default: 'master')
# TO_BUILD:       docker build -t test_docker .
# TO_RUN:         docker run -privileged test_docker hack/dind test_docker.sh [commit] [repo] [branch]

",2013/11/07 13:05,2014/02/15 13:50,2013/10/19 14:33,2014/02/15 13:50,1,18 days 22:32:00.000000000,ファイル削除
817,"docker
docker",https://github.com/docker/docker,878dcb89f38e8eb7bb07ccd4a4e5ce622252ff30,Dockerfile.centos,Dockerfile.centos,"# Wrap all commands in the ""docker-in-docker"" script to allow nested containers
#ENTRYPOINT [""hack/dind""]
",2015/04/01 05:58,2015/05/01 07:30,2015/04/01 05:58,2015/05/01 07:30,1,0 days 00:00:00.000000000,ファイル削除
821,"docker-library
mongo",https://github.com/docker-library/mongo,32bf9f7905feb2b039c623e76e66d1602e73d277,3.4/Dockerfile,3.4/Dockerfile,"# TODO some sort of download verification here
",2017/09/01 01:47,2020/01/08 09:38,2016/11/02 05:59,2020/01/08 09:38,1,302 days 19:48:00.000000000,ファイル削除
822,"docker-library
mongo",https://github.com/docker-library/mongo,daeeeccd0edd110e6341ba3ee2d699caf885fbce,3.4/windows/windowsservercore-ltsc2016/Dockerfile,3.4/windows/windowsservercore-ltsc2016/Dockerfile,"# TODO docker-entrypoint.ps1 ? (for ""docker run <image> --flag --flag --flag"")

",2017/11/23 07:25,2020/01/08 09:38,2017/11/23 07:25,2020/01/08 09:38,1,0 days 00:00:00.000000000,ファイル削除
823,"docker-library
mongo",https://github.com/docker-library/mongo,89549b2b779421c057b04858477012b7aa17f498,3.3/windows/windowsservercore/Dockerfile,3.4/windows/windowsservercore-1709/Dockerfile,"# TODO docker-entrypoint.ps1 ? (for ""docker run <image> --flag --flag --flag"")

",2016/08/18 07:14,2019/04/12 08:17,2016/08/18 07:14,2019/04/12 08:17,1,0 days 00:00:00.000000000,ファイル削除
826,"docker-library
mongo",https://github.com/docker-library/mongo,b6a2025cd8ddf3cf15e125e208177b44dc08771f,4.2-rc/Dockerfile,4.2-rc/Dockerfile,"# TODO some sort of download verification here
",2019/06/13 08:19,2019/08/14 01:19,2019/06/13 08:19,2019/08/14 01:19,1,0 days 00:00:00.000000000,ファイル削除
828,"docker-library
mongo",https://github.com/docker-library/mongo,692ec82754bde8d6d4e663462669b3be2a6f8b2b,3.7/windows/windowsservercore-1709/Dockerfile,4.0/windows/windowsservercore-1709/Dockerfile,"# TODO docker-entrypoint.ps1 ? (for ""docker run <image> --flag --flag --flag"")

",2018/01/17 02:12,2019/04/12 08:17,2018/01/17 02:12,2019/04/12 08:17,1,0 days 00:00:00.000000000,ファイル削除
829,"docker-library
mongo",https://github.com/docker-library/mongo,89549b2b779421c057b04858477012b7aa17f498,3.0/windows/windowsservercore/Dockerfile,3.0/windows/windowsservercore-1709/Dockerfile,"# TODO docker-entrypoint.ps1 ? (for ""docker run <image> --flag --flag --flag"")

",2016/08/18 07:14,2018/05/10 02:02,2016/08/18 07:14,2018/05/10 02:02,1,0 days 00:00:00.000000000,ファイル削除
830,"docker-library
mongo",https://github.com/docker-library/mongo,375c4226fe653262306de9539bb2d3fc985dc3b4,3.6-rc/windows/windowsservercore-1709/Dockerfile,3.6/windows/windowsservercore-1709/Dockerfile,"# TODO docker-entrypoint.ps1 ? (for ""docker run <image> --flag --flag --flag"")

",2017/11/23 09:40,2019/04/12 08:17,2017/11/23 09:40,2019/04/12 08:17,1,0 days 00:00:00.000000000,ファイル削除
831,"docker-library
mongo",https://github.com/docker-library/mongo,daeeeccd0edd110e6341ba3ee2d699caf885fbce,3.0/windows/windowsservercore-ltsc2016/Dockerfile,3.0/windows/windowsservercore-ltsc2016/Dockerfile,"# TODO docker-entrypoint.ps1 ? (for ""docker run <image> --flag --flag --flag"")

",2017/11/23 07:25,2018/05/10 02:02,2017/11/23 07:25,2018/05/10 02:02,1,0 days 00:00:00.000000000,ファイル削除
832,"docker-library
mongo",https://github.com/docker-library/mongo,daeeeccd0edd110e6341ba3ee2d699caf885fbce,3.2/windows/windowsservercore-ltsc2016/Dockerfile,3.2/windows/windowsservercore-ltsc2016/Dockerfile,"# TODO docker-entrypoint.ps1 ? (for ""docker run <image> --flag --flag --flag"")

",2017/11/23 07:25,2018/12/25 03:19,2017/11/23 07:25,2018/12/25 03:19,1,0 days 00:00:00.000000000,ファイル削除
834,"docker-library
mongo",https://github.com/docker-library/mongo,89549b2b779421c057b04858477012b7aa17f498,3.2/windows/windowsservercore/Dockerfile,3.2/windows/windowsservercore-1709/Dockerfile,"# TODO docker-entrypoint.ps1 ? (for ""docker run <image> --flag --flag --flag"")

",2016/08/18 07:14,2018/12/25 03:19,2016/08/18 07:14,2018/12/25 03:19,1,0 days 00:00:00.000000000,ファイル削除
836,"docker-library
mongo",https://github.com/docker-library/mongo,17f05e95936bc3ec911446ffe4c2f5889363083d,3.5/windows/windowsservercore/Dockerfile,3.5/windows/windowsservercore-1709/Dockerfile,"# TODO docker-entrypoint.ps1 ? (for ""docker run <image> --flag --flag --flag"")

",2017/04/01 05:30,2017/12/06 10:55,2017/04/01 05:30,2017/12/06 10:55,1,0 days 00:00:00.000000000,ファイル削除
837,"docker-library
mongo",https://github.com/docker-library/mongo,d7084920a1d3db7f50fc352c1c879845e36e48a6,4.0-rc/windows/windowsservercore-ltsc2016/Dockerfile,4.0-rc/windows/windowsservercore-ltsc2016/Dockerfile,"# TODO docker-entrypoint.ps1 ? (for ""docker run <image> --flag --flag --flag"")

",2018/05/23 00:17,2018/06/28 01:51,2018/05/23 00:17,2018/06/28 01:51,1,0 days 00:00:00.000000000,ファイル削除
838,"docker-library
mongo",https://github.com/docker-library/mongo,d7084920a1d3db7f50fc352c1c879845e36e48a6,4.0-rc/windows/windowsservercore-1709/Dockerfile,4.0-rc/windows/windowsservercore-1709/Dockerfile,"# TODO docker-entrypoint.ps1 ? (for ""docker run <image> --flag --flag --flag"")

",2018/05/23 00:17,2018/06/28 01:51,2018/05/23 00:17,2018/06/28 01:51,1,0 days 00:00:00.000000000,ファイル削除
839,"docker-library
mongo",https://github.com/docker-library/mongo,daeeeccd0edd110e6341ba3ee2d699caf885fbce,3.5/windows/windowsservercore-ltsc2016/Dockerfile,3.5/windows/windowsservercore-ltsc2016/Dockerfile,"# TODO docker-entrypoint.ps1 ? (for ""docker run <image> --flag --flag --flag"")

",2017/11/23 07:25,2017/12/06 10:55,2017/11/23 07:25,2017/12/06 10:55,1,0 days 00:00:00.000000000,ファイル削除
840,"docker-library
mongo",https://github.com/docker-library/mongo,380200038360980631e362f964857d48489f99a2,4.1/windows/windowsservercore-1803/Dockerfile,4.2/windows/windowsservercore-1803/Dockerfile,"# TODO docker-entrypoint.ps1 ? (for ""docker run <image> --flag --flag --flag"")

",2018/07/18 05:51,2019/12/10 07:37,2018/07/18 05:51,2019/12/10 07:37,1,0 days 00:00:00.000000000,ファイル削除
841,"docker-library
mongo",https://github.com/docker-library/mongo,380200038360980631e362f964857d48489f99a2,4.1/windows/windowsservercore-1709/Dockerfile,4.1/windows/windowsservercore-1709/Dockerfile,"# TODO docker-entrypoint.ps1 ? (for ""docker run <image> --flag --flag --flag"")

",2018/07/18 05:51,2019/04/12 08:17,2018/07/18 05:51,2019/04/12 08:17,1,0 days 00:00:00.000000000,ファイル削除
843,"docker-library
mongo",https://github.com/docker-library/mongo,380200038360980631e362f964857d48489f99a2,4.0/windows/windowsservercore-1803/Dockerfile,4.0/windows/windowsservercore-1803/Dockerfile,"# TODO docker-entrypoint.ps1 ? (for ""docker run <image> --flag --flag --flag"")

",2018/07/18 05:51,2019/12/10 07:37,2018/07/18 05:51,2019/12/10 07:37,1,0 days 00:00:00.000000000,ファイル削除
846,"docker-library
mongo",https://github.com/docker-library/mongo,b6a2025cd8ddf3cf15e125e208177b44dc08771f,4.2-rc/windows/windowsservercore-ltsc2016/Dockerfile,4.2-rc/windows/windowsservercore-ltsc2016/Dockerfile,"# TODO docker-entrypoint.ps1 ? (for ""docker run <image> --flag --flag --flag"")

",2019/06/13 08:19,2019/08/14 01:19,2019/06/13 08:19,2019/08/14 01:19,1,0 days 00:00:00.000000000,ファイル削除
847,"docker-library
mongo",https://github.com/docker-library/mongo,b6a2025cd8ddf3cf15e125e208177b44dc08771f,4.2-rc/windows/windowsservercore-1803/Dockerfile,4.2-rc/windows/windowsservercore-1803/Dockerfile,"# TODO docker-entrypoint.ps1 ? (for ""docker run <image> --flag --flag --flag"")

",2019/06/13 08:19,2019/08/14 01:19,2019/06/13 08:19,2019/08/14 01:19,1,0 days 00:00:00.000000000,ファイル削除
848,"docker-library
mongo",https://github.com/docker-library/mongo,32bf9f7905feb2b039c623e76e66d1602e73d277,3.2/Dockerfile,3.2/Dockerfile,"# TODO some sort of download verification here
",2017/09/01 01:47,2018/12/25 03:19,2015/11/01 01:56,2018/12/25 03:19,1,669 days 23:51:00.000000000,ファイル削除
851,"docker-library
mongo",https://github.com/docker-library/mongo,692ec82754bde8d6d4e663462669b3be2a6f8b2b,3.7/Dockerfile,3.7/Dockerfile,"# TODO some sort of download verification here
",2018/01/17 02:12,2018/06/28 01:51,2018/01/17 02:12,2018/06/28 01:51,1,0 days 00:00:00.000000000,ファイル削除
852,"docker-library
mongo",https://github.com/docker-library/mongo,32bf9f7905feb2b039c623e76e66d1602e73d277,3.0/Dockerfile,3.0/Dockerfile,"# TODO some sort of download verification here
",2017/09/01 01:47,2018/05/10 02:02,2015/01/26 04:48,2018/05/10 02:02,1,948 days 20:59:00.000000000,ファイル削除
854,"docker-library
mongo",https://github.com/docker-library/mongo,ec80a4a2218babddb8b572209e45841b96c1954c,3.4-rc/windows/windowsservercore/Dockerfile,3.4-rc/windows/windowsservercore/Dockerfile,"# TODO docker-entrypoint.ps1 ? (for ""docker run <image> --flag --flag --flag"")

",2016/11/02 05:59,2016/11/30 02:50,2016/11/02 05:59,2016/11/30 02:50,1,0 days 00:00:00.000000000,ファイル削除
859,"docker-library
official-images",https://github.com/docker-library/official-images,f6cbc219978a8cb48e0735eb0d460125fb0dab4e,bashbrew/Dockerfile.release,bashbrew/Dockerfile.release,"# gpg: key 0F386284C03A1162: public key ""Philip Estes <estesp@gmail.com>"" imported
#ENV MANIFEST_TOOL_GPG_KEY 27F3EA268A97867EAF0BD05C0F386284C03A1162
# TODO consume Phil's releases again (once he fixes https://github.com/estesp/manifest-tool/issues/47 properly)

",2017/09/12 07:52,2020/04/25 06:51,2017/05/03 06:36,2020/04/25 06:51,1,132 days 01:16:00.000000000,ファイル削除
860,"docker-library
official-images",https://github.com/docker-library/official-images,84aa9ed158196e09a9e68f34d6a2a02ce43a0f7e,bashbrew/put-multiarch/Dockerfile,bashbrew/put-multiarch/Dockerfile,"# TODO find a way to make --mirror-only / SSL work with backpan too :(
#RUN cpanm Digest::SHA Module::Signature
# TODO find a way to make --verify work with backpan as well :'(
#ENV PERL_CPANM_OPT $PERL_CPANM_OPT --verify

# reinstall cpanm itself, for good measure
",2019/05/10 08:53,2019/07/23 08:40,2019/05/10 08:53,2019/07/23 08:40,1,0 days 00:00:00.000000000,ファイル削除
861,"influxdata
kapacitor",https://github.com/influxdata/kapacitor,5dd218345c6ac415de818984998112a9ecad5167,vendor/github.com/docker/docker/Dockerfile,vendor/github.com/docker/docker/Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/docker/docker --privileged -i -t docker bash
#
# # Run the test suite:
# docker run --privileged docker hack/make.sh test-unit test-integration-cli test-docker-py
#
# # Publish a release:
# docker run --privileged \
#  -e AWS_S3_BUCKET=baz \
#  -e AWS_ACCESS_KEY=foo \
#  -e AWS_SECRET_KEY=bar \
#  -e GPG_PASSPHRASE=gloubiboulga \
#  docker hack/release.sh
#
# Note: AppArmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#

",2017/07/26 04:32,2018/03/17 04:23,2017/07/26 04:32,2018/03/17 04:23,1,0 days 00:00:00.000000000,ファイル削除
862,"influxdata
kapacitor",https://github.com/influxdata/kapacitor,5dd218345c6ac415de818984998112a9ecad5167,vendor/github.com/docker/docker/Dockerfile,vendor/github.com/docker/docker/Dockerfile,"# See also ""hack/make/.ensure-frozen-images"" (which needs to be updated any time this list is)

# Install tomlv, vndr, runc, containerd, tini, docker-proxy
# Please edit hack/dockerfile/install-binaries.sh to update them.
",2017/07/26 04:32,2018/03/17 04:23,2017/07/26 04:32,2018/03/17 04:23,1,0 days 00:00:00.000000000,ファイル削除
863,"influxdata
kapacitor",https://github.com/influxdata/kapacitor,5dd218345c6ac415de818984998112a9ecad5167,vendor/github.com/docker/docker/Dockerfile.armhf,vendor/github.com/docker/docker/Dockerfile.armhf,"# This file describes the standard way to build Docker on ARMv7, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker -f Dockerfile.armhf .
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/docker/docker --privileged -i -t docker bash
#
# # Run the test suite:
# docker run --privileged docker hack/make.sh test-unit test-integration-cli test-docker-py
#
# Note: AppArmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#

",2017/07/26 04:32,2018/03/17 04:23,2017/07/26 04:32,2018/03/17 04:23,1,0 days 00:00:00.000000000,ファイル削除
864,"influxdata
kapacitor",https://github.com/influxdata/kapacitor,5dd218345c6ac415de818984998112a9ecad5167,vendor/github.com/docker/docker/Dockerfile.armhf,vendor/github.com/docker/docker/Dockerfile.armhf,"# See also ""hack/make/.ensure-frozen-images"" (which needs to be updated any time this list is)

# Install tomlv, vndr, runc, containerd, tini, docker-proxy
# Please edit hack/dockerfile/install-binaries.sh to update them.
",2017/07/26 04:32,2018/03/17 04:23,2017/07/26 04:32,2018/03/17 04:23,1,0 days 00:00:00.000000000,ファイル削除
865,"influxdata
kapacitor",https://github.com/influxdata/kapacitor,5dd218345c6ac415de818984998112a9ecad5167,vendor/github.com/docker/docker/Dockerfile.aarch64,vendor/github.com/docker/docker/Dockerfile.aarch64,"# This file describes the standard way to build Docker on aarch64, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker -f Dockerfile.aarch64 .
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/docker/docker --privileged -i -t docker bash
#
# # Run the test suite:
# docker run --privileged docker hack/make.sh test-unit test-integration-cli test-docker-py
#
# Note: AppArmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#

",2017/07/26 04:32,2018/03/17 04:23,2017/07/26 04:32,2018/03/17 04:23,1,0 days 00:00:00.000000000,ファイル削除
866,"influxdata
kapacitor",https://github.com/influxdata/kapacitor,5dd218345c6ac415de818984998112a9ecad5167,vendor/github.com/docker/docker/Dockerfile.aarch64,vendor/github.com/docker/docker/Dockerfile.aarch64,"# See also ""hack/make/.ensure-frozen-images"" (which needs to be updated any time this list is)

# Install tomlv, vndr, runc, containerd, tini, docker-proxy
# Please edit hack/dockerfile/install-binaries.sh to update them.
",2017/07/26 04:32,2018/03/17 04:23,2017/07/26 04:32,2018/03/17 04:23,1,0 days 00:00:00.000000000,ファイル削除
867,"influxdata
kapacitor",https://github.com/influxdata/kapacitor,5dd218345c6ac415de818984998112a9ecad5167,vendor/github.com/docker/docker/Dockerfile.windows,vendor/github.com/docker/docker/Dockerfile.windows,"# escape=`

# -----------------------------------------------------------------------------------------
# This file describes the standard way to build Docker in a container on Windows
# Server 2016 or Windows 10.
#
# Maintainer: @jhowardmsft
# -----------------------------------------------------------------------------------------


# Prerequisites:
# --------------
#
# 1. Windows Server 2016 or Windows 10 with all Windows updates applied. The major 
#    build number must be at least 14393. This can be confirmed, for example, by 
#    running the following from an elevated PowerShell prompt - this sample output 
#    is from a fully up to date machine as at mid-November 2016:
#
#    >> PS C:\> $(gin).WindowsBuildLabEx
#    >> 14393.447.amd64fre.rs1_release_inmarket.161102-0100
#
# 2. Git for Windows (or another git client) must be installed. https://git-scm.com/download/win.
#
# 3. The machine must be configured to run containers. For example, by following
#    the quick start guidance at https://msdn.microsoft.com/en-us/virtualization/windowscontainers/quick_start/quick_start or
#    https://github.com/docker/labs/blob/master/windows/windows-containers/Setup.md
#
# 4. If building in a Hyper-V VM: For Windows Server 2016 using Windows Server
#    containers as the default option, it is recommended you have at least 1GB 
#    of memory assigned; For Windows 10 where Hyper-V Containers are employed, you
#    should have at least 4GB of memory assigned. Note also, to run Hyper-V 
#    containers in a VM, it is necessary to configure the VM for nested virtualization.

# -----------------------------------------------------------------------------------------


# Usage:
# -----
#
#  The following steps should be run from an (elevated*) Windows PowerShell prompt. 
#
#  (*In a default installation of containers on Windows following the quick-start guidance at
#    https://msdn.microsoft.com/en-us/virtualization/windowscontainers/quick_start/quick_start,
#    the docker.exe client must run elevated to be able to connect to the daemon).
#
# 1. Clone the sources from github.com:
#
#    >>   git clone https://github.com/docker/docker.git C:\go\src\github.com\docker\docker
#    >>   Cloning into 'C:\go\src\github.com\docker\docker'...
#    >>   remote: Counting objects: 186216, done.
#    >>   remote: Compressing objects: 100% (21/21), done.
#    >>   remote: Total 186216 (delta 5), reused 0 (delta 0), pack-reused 186195
#    >>   Receiving objects: 100% (186216/186216), 104.32 MiB | 8.18 MiB/s, done.
#    >>   Resolving deltas: 100% (123139/123139), done.
#    >>   Checking connectivity... done.
#    >>   Checking out files: 100% (3912/3912), done.
#    >>   PS C:\>
#
#
# 2. Change directory to the cloned docker sources:
#
#    >>   cd C:\go\src\github.com\docker\docker 
#
#
# 3. Build a docker image with the components required to build the docker binaries from source
#    by running one of the following:
#
#    >>   docker build -t nativebuildimage -f Dockerfile.windows .          
#    >>   docker build -t nativebuildimage -f Dockerfile.windows -m 2GB .    (if using Hyper-V containers)
#
#
# 4. Build the docker executable binaries by running one of the following:
#
#    >>   docker run --name binaries nativebuildimage hack\make.ps1 -Binary
#    >>   docker run --name binaries -m 2GB nativebuildimage hack\make.ps1 -Binary    (if using Hyper-V containers)
#
#
# 5. Copy the binaries out of the container, replacing HostPath with an appropriate destination 
#    folder on the host system where you want the binaries to be located.
#
#    >>   docker cp binaries:C:\go\src\github.com\docker\docker\bundles\docker.exe C:\HostPath\docker.exe
#    >>   docker cp binaries:C:\go\src\github.com\docker\docker\bundles\dockerd.exe C:\HostPath\dockerd.exe
#
#
# 6. (Optional) Remove the interim container holding the built executable binaries:
#
#    >>    docker rm binaries
#
#
# 7. (Optional) Remove the image used for the container in which the executable
#    binaries are build. Tip - it may be useful to keep this image around if you need to
#    build multiple times. Then you can take advantage of the builder cache to have an
#    image which has all the components required to build the binaries already installed.
#
#    >>    docker rmi nativebuildimage
#

# -----------------------------------------------------------------------------------------


#  The validation tests can either run in a container, or directly on the host. To run in a
#  container, ensure you have created the nativebuildimage above. Then run one of the
#  following from an (elevated) Windows PowerShell prompt:
#
#    >>   docker run --rm nativebuildimage hack\make.ps1 -DCO -PkgImports -GoFormat
#    >>   docker run --rm -m 2GB nativebuildimage hack\make.ps1 -DCO -PkgImports -GoFormat    (if using Hyper-V containers)

# To run the validation tests on the host, from the root of the repository, run the
# following from a Windows PowerShell prompt (elevation is not required): (Note Go
# must be installed to run these tests)
#
#    >>   hack\make.ps1 -DCO -PkgImports -GoFormat

# -----------------------------------------------------------------------------------------


#  To run unit tests, ensure you have created the nativebuildimage above. Then run one of
#  the following from an (elevated) Windows PowerShell prompt:
#
#    >>   docker run --rm nativebuildimage hack\make.ps1 -TestUnit
#    >>   docker run --rm -m 2GB nativebuildimage hack\make.ps1 -TestUnit    (if using Hyper-V containers)


# -----------------------------------------------------------------------------------------


#  To run all tests and binary build, ensure you have created the nativebuildimage above. Then 
#  run one of the following from an (elevated) Windows PowerShell prompt:
#
#    >>   docker run nativebuildimage hack\make.ps1 -All
#    >>   docker run -m 2GB nativebuildimage hack\make.ps1 -All    (if using Hyper-V containers)

# -----------------------------------------------------------------------------------------


# Important notes:
# ---------------
#
# Don't attempt to use a bind-mount to pass a local directory as the bundles target
# directory. It does not work (golang attempts for follow a mapped folder incorrectly). 
# Instead, use docker cp as per the example.
#
# go.zip is not removed from the image as it is used by the Windows CI servers
# to ensure the host and image are running consistent versions of go.
#
# Nanoserver support is a work in progress. Although the image will build if the 
# FROM statement is updated, it will not work when running autogen through hack\make.ps1. 
# It is suspected that the required GCC utilities (eg gcc, windres, windmc) silently
# quit due to the use of console hooks which are not available.
#
# The docker integration tests do not currently run in a container on Windows, predominantly
# due to Windows not supporting privileged mode, so anything using a volume would fail.
# They (along with the rest of the docker CI suite) can be run using 
# https://github.com/jhowardmsft/docker-w2wCIScripts/blob/master/runCI/Invoke-DockerCI.ps1.
#
# -----------------------------------------------------------------------------------------


# The number of build steps below are explicitly minimised to improve performance.
",2017/07/26 04:32,2018/03/17 04:23,2017/07/26 04:32,2018/03/17 04:23,1,0 days 00:00:00.000000000,ファイル削除
868,"influxdata
kapacitor",https://github.com/influxdata/kapacitor,5dd218345c6ac415de818984998112a9ecad5167,vendor/github.com/docker/docker/Dockerfile.solaris,vendor/github.com/docker/docker/Dockerfile.solaris,"# Defines an image that hosts a native Docker build environment for Solaris
# TODO: Improve stub

",2017/07/26 04:32,2018/03/17 04:23,2017/07/26 04:32,2018/03/17 04:23,1,0 days 00:00:00.000000000,ファイル削除
869,"influxdata
kapacitor",https://github.com/influxdata/kapacitor,5dd218345c6ac415de818984998112a9ecad5167,vendor/github.com/docker/docker/Dockerfile.ppc64le,vendor/github.com/docker/docker/Dockerfile.ppc64le,"# This file describes the standard way to build Docker on ppc64le, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker -f Dockerfile.ppc64le .
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/docker/docker --privileged -i -t docker bash
#
# # Run the test suite:
# docker run --privileged docker hack/make.sh test-unit test-integration-cli test-docker-py
#
# Note: AppArmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#

",2017/07/26 04:32,2018/03/17 04:23,2017/07/26 04:32,2018/03/17 04:23,1,0 days 00:00:00.000000000,ファイル削除
870,"influxdata
kapacitor",https://github.com/influxdata/kapacitor,5dd218345c6ac415de818984998112a9ecad5167,vendor/github.com/docker/docker/Dockerfile.ppc64le,vendor/github.com/docker/docker/Dockerfile.ppc64le,"# See also ""hack/make/.ensure-frozen-images"" (which needs to be updated any time this list is)

# Install tomlv, vndr, runc, containerd, tini, docker-proxy
# Please edit hack/dockerfile/install-binaries.sh to update them.
",2017/07/26 04:32,2018/03/17 04:23,2017/07/26 04:32,2018/03/17 04:23,1,0 days 00:00:00.000000000,ファイル削除
871,"influxdata
kapacitor",https://github.com/influxdata/kapacitor,5dd218345c6ac415de818984998112a9ecad5167,vendor/github.com/docker/docker/Dockerfile.s390x,vendor/github.com/docker/docker/Dockerfile.s390x,"# This file describes the standard way to build Docker on s390x, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker -f Dockerfile.s390x .
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/docker/docker --privileged -i -t docker bash
#
# # Run the test suite:
# docker run --privileged docker hack/make.sh test-unit test-integration-cli test-docker-py
#
# Note: AppArmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#

",2017/07/26 04:32,2018/03/17 04:23,2017/07/26 04:32,2018/03/17 04:23,1,0 days 00:00:00.000000000,ファイル削除
872,"influxdata
kapacitor",https://github.com/influxdata/kapacitor,5dd218345c6ac415de818984998112a9ecad5167,vendor/github.com/docker/docker/Dockerfile.s390x,vendor/github.com/docker/docker/Dockerfile.s390x,"# See also ""hack/make/.ensure-frozen-images"" (which needs to be updated any time this list is)

# Install tomlv, vndr, runc, containerd, tini, docker-proxy
# Please edit hack/dockerfile/install-binaries.sh to update them.
",2017/07/26 04:32,2018/03/17 04:23,2017/07/26 04:32,2018/03/17 04:23,1,0 days 00:00:00.000000000,ファイル削除
873,"influxdata
kapacitor",https://github.com/influxdata/kapacitor,5dd218345c6ac415de818984998112a9ecad5167,vendor/github.com/docker/docker/Dockerfile.simple,vendor/github.com/docker/docker/Dockerfile.simple,"# docker build -t docker:simple -f Dockerfile.simple .
# docker run --rm docker:simple hack/make.sh dynbinary
# docker run --rm --privileged docker:simple hack/dind hack/make.sh test-unit
# docker run --rm --privileged -v /var/lib/docker docker:simple hack/dind hack/make.sh dynbinary test-integration-cli

# This represents the bare minimum required to build and test Docker.

",2017/07/26 04:32,2018/03/17 04:23,2017/07/26 04:32,2018/03/17 04:23,1,0 days 00:00:00.000000000,ファイル削除
874,"influxdata
kapacitor",https://github.com/influxdata/kapacitor,5dd218345c6ac415de818984998112a9ecad5167,vendor/github.com/docker/docker/Dockerfile.simple,vendor/github.com/docker/docker/Dockerfile.simple,"# Install runc, containerd, tini and docker-proxy
# Please edit hack/dockerfile/install-binaries.sh to update them.
",2017/07/26 04:32,2018/03/17 04:23,2017/07/26 04:32,2018/03/17 04:23,1,0 days 00:00:00.000000000,ファイル削除
879,"docker-library
openjdk",https://github.com/docker-library/openjdk,3eb0351b208d739fac35345c85e3c6237c2114ec,11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# TODO signature? checksum?
",2019/05/23 06:37,2019/04/19 08:20,2018/09/06 07:03,2019/04/19 08:20,1,258 days 23:34:00.000000000,ファイル削除
890,"docker-library
openjdk",https://github.com/docker-library/openjdk,3eb0351b208d739fac35345c85e3c6237c2114ec,11/jdk/windows/windowsservercore-1809/Dockerfile,11/jdk/windows/windowsservercore-1809/Dockerfile,"# TODO signature? checksum?
",2019/05/23 06:37,2019/04/19 08:20,2019/01/15 17:49,2019/04/19 08:20,1,127 days 12:48:00.000000000,ファイル削除
892,"docker-library
openjdk",https://github.com/docker-library/openjdk,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,13/jdk/oracle/Dockerfile,13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??

",2019/01/02 17:24,2020/03/18 06:09,2019/01/02 17:24,2020/03/18 06:09,1,0 days 00:00:00.000000000,ファイル削除
893,"docker-library
openjdk",https://github.com/docker-library/openjdk,572682ed1cb951ab8d978e8015e4a910093db920,11/jre/windows/windowsservercore-1803/Dockerfile,11/jre/windows/windowsservercore-1803/Dockerfile,"# TODO signature? checksum?
",2019/07/17 08:32,2019/12/10 07:35,2019/07/17 08:32,2019/12/10 07:35,1,0 days 00:00:00.000000000,ファイル削除
916,"docker-library
openjdk",https://github.com/docker-library/openjdk,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,11/jdk/oracle/Dockerfile,11/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??

",2018/09/13 07:10,2019/04/19 08:20,2018/09/13 07:10,2019/04/19 08:20,1,0 days 00:00:00.000000000,ファイル削除
917,"docker-library
openjdk",https://github.com/docker-library/openjdk,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,12/jdk/oracle/Dockerfile,12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??

",2018/09/13 07:10,2019/09/18 08:59,2018/09/13 07:10,2019/09/18 08:59,1,0 days 00:00:00.000000000,ファイル削除
919,"docker-library
openjdk",https://github.com/docker-library/openjdk,3eb0351b208d739fac35345c85e3c6237c2114ec,8/jdk/windows/windowsservercore-1803/Dockerfile,8/jdk/windows/windowsservercore-1803/Dockerfile,"# TODO signature? checksum?
",2019/05/23 06:37,2019/12/10 07:35,2018/11/08 01:22,2019/12/10 07:35,1,196 days 05:15:00.000000000,ファイル削除
920,"docker-library
openjdk",https://github.com/docker-library/openjdk,3eb0351b208d739fac35345c85e3c6237c2114ec,8/jre/windows/windowsservercore-1803/Dockerfile,8/jre/windows/windowsservercore-1803/Dockerfile,"# TODO signature? checksum?
",2019/05/23 06:37,2019/12/10 07:35,2019/05/23 06:37,2019/12/10 07:35,1,0 days 00:00:00.000000000,ファイル削除
925,"docker-library
openjdk",https://github.com/docker-library/openjdk,3eb0351b208d739fac35345c85e3c6237c2114ec,11/jdk/windows/windowsservercore-1803/Dockerfile,11/jdk/windows/windowsservercore-1803/Dockerfile,"# TODO signature? checksum?
",2019/05/23 06:37,2019/04/19 08:20,2019/05/23 06:37,2019/04/19 08:20,1,0 days 00:00:00.000000000,ファイル削除
926,"docker-library
openjdk",https://github.com/docker-library/openjdk,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,10/jdk/oracle/Dockerfile,10/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??

",2018/09/13 07:10,2018/12/07 01:27,2018/09/13 07:10,2018/12/07 01:27,1,0 days 00:00:00.000000000,ファイル削除
927,"docker-library
docker",https://github.com/docker-library/docker,5dd425e5b74a02bde63257e56c2bb67cbae74686,18.09-rc/Dockerfile,18.09/Dockerfile,"# TODO ENV DOCKER_SHA256
# https://github.com/docker/docker-ce/blob/5b073ee2cf564edee5adca05eee574142f7627bb/components/packaging/static/hash_files !!
# (no SHA file artifacts on download.docker.com yet as of 2017-06-07 though)

",2018/08/23 06:02,2019/09/05 12:01,2018/08/23 06:02,2019/09/05 12:01,1,0 days 00:00:00.000000000,ファイル削除
928,"docker-library
docker",https://github.com/docker-library/docker,5dd425e5b74a02bde63257e56c2bb67cbae74686,18.09-rc/Dockerfile,18.09/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
",2018/08/23 06:02,2019/09/05 12:01,2019/03/22 07:02,2019/09/05 12:01,1,-212 days +23:00:00.000000000,ファイル削除
929,"docker-library
docker",https://github.com/docker-library/docker,690c2cedc6c5e8a47507240b7d8a39a19f03bae6,18.02-rc/Dockerfile,18.02-rc/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
",2018/01/26 02:44,2018/02/09 02:29,2018/01/26 02:44,2018/02/09 02:29,1,0 days 00:00:00.000000000,ファイル削除
930,"docker-library
docker",https://github.com/docker-library/docker,690c2cedc6c5e8a47507240b7d8a39a19f03bae6,18.02-rc/Dockerfile,18.02-rc/Dockerfile,"# TODO ENV DOCKER_SHA256
# https://github.com/docker/docker-ce/blob/5b073ee2cf564edee5adca05eee574142f7627bb/components/packaging/static/hash_files !!
# (no SHA file artifacts on download.docker.com yet as of 2017-06-07 though)

",2018/01/26 02:44,2018/02/09 02:29,2018/01/26 02:44,2018/02/09 02:29,1,0 days 00:00:00.000000000,ファイル削除
931,"docker-library
docker",https://github.com/docker-library/docker,690c2cedc6c5e8a47507240b7d8a39a19f03bae6,18.02-rc/dind/Dockerfile,18.03/dind/Dockerfile,"# TODO aufs-tools

# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
",2018/01/26 02:44,2018/07/20 03:30,2018/01/26 02:44,2018/07/20 03:30,1,0 days 00:00:00.000000000,ファイル削除
932,"docker-library
docker",https://github.com/docker-library/docker,bc5d62520258cacb230485ee96754f9f9aa117c4,18.03/dind/Dockerfile,18.03/dind/Dockerfile,"# https://github.com/docker/docker/tree/master/hack/dind
",2018/05/09 03:09,2018/07/20 03:30,2018/01/26 02:44,2018/07/20 03:30,1,103 days 00:25:00.000000000,ファイル削除
934,"docker-library
docker",https://github.com/docker-library/docker,1c8b144ed9ec49ac8cc7ca75f8628fd8de6c82b5,1.11/dind/Dockerfile,17.09/dind/Dockerfile,"# TODO aufs-tools

# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
",2016/07/01 02:09,2018/02/09 02:29,2015/08/07 04:54,2018/02/09 02:29,1,328 days 21:15:00.000000000,ファイル削除
938,"docker-library
docker",https://github.com/docker-library/docker,1c8b144ed9ec49ac8cc7ca75f8628fd8de6c82b5,1.10/dind/Dockerfile,17.12/dind/Dockerfile,"# TODO aufs-tools

# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
",2016/07/01 02:09,2018/05/11 01:18,2015/08/07 04:54,2018/05/11 01:18,1,328 days 21:15:00.000000000,ファイル削除
939,"docker-library
docker",https://github.com/docker-library/docker,bc5d62520258cacb230485ee96754f9f9aa117c4,17.12/dind/Dockerfile,17.12/dind/Dockerfile,"# https://github.com/docker/docker/tree/master/hack/dind
",2018/05/09 03:09,2018/05/11 01:18,2015/08/07 04:54,2018/05/11 01:18,1,1005 days 22:15:00.000000000,ファイル削除
940,"docker-library
docker",https://github.com/docker-library/docker,84fbcfc4cbef254dce2e7ecd7fcff788da4690df,18.06-rc/dind/Dockerfile,18.06-rc/dind/Dockerfile,"# TODO aufs-tools

# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
",2018/07/03 02:02,2018/08/23 01:26,2018/08/14 04:55,2018/08/23 01:26,1,-43 days +21:07:00.000000000,ファイル削除
941,"docker-library
docker",https://github.com/docker-library/docker,84fbcfc4cbef254dce2e7ecd7fcff788da4690df,18.06-rc/dind/Dockerfile,18.06-rc/dind/Dockerfile,"# https://github.com/docker/docker/tree/master/hack/dind
",2018/07/03 02:02,2018/08/23 01:26,2018/08/14 04:55,2018/08/23 01:26,1,-43 days +21:07:00.000000000,ファイル削除
942,"docker-library
docker",https://github.com/docker-library/docker,84fbcfc4cbef254dce2e7ecd7fcff788da4690df,18.06-rc/Dockerfile,18.06-rc/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
",2018/07/03 02:02,2018/08/23 01:26,2018/08/14 04:55,2018/08/23 01:26,1,-43 days +21:07:00.000000000,ファイル削除
943,"docker-library
docker",https://github.com/docker-library/docker,84fbcfc4cbef254dce2e7ecd7fcff788da4690df,18.06-rc/Dockerfile,18.06-rc/Dockerfile,"# TODO ENV DOCKER_SHA256
# https://github.com/docker/docker-ce/blob/5b073ee2cf564edee5adca05eee574142f7627bb/components/packaging/static/hash_files !!
# (no SHA file artifacts on download.docker.com yet as of 2017-06-07 though)

",2018/07/03 02:02,2018/08/23 01:26,2018/08/14 04:55,2018/08/23 01:26,1,-43 days +21:07:00.000000000,ファイル削除
950,"docker-library
docker",https://github.com/docker-library/docker,f4d3f30de26100deddd4afdc37dd04bb6d018b26,17.12-rc/Dockerfile,17.12-rc/Dockerfile,"# TODO ENV DOCKER_SHA256
# https://github.com/docker/docker-ce/blob/5b073ee2cf564edee5adca05eee574142f7627bb/components/packaging/static/hash_files !!
# (no SHA file artifacts on download.docker.com yet as of 2017-06-07 though)

",2017/12/13 03:04,2017/12/28 08:29,2018/02/15 04:59,2017/12/28 08:29,1,-65 days +22:05:00.000000000,ファイル削除
951,"docker-library
docker",https://github.com/docker-library/docker,f4d3f30de26100deddd4afdc37dd04bb6d018b26,17.12-rc/Dockerfile,17.12-rc/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
",2017/12/13 03:04,2017/12/28 08:29,2018/02/15 04:59,2017/12/28 08:29,1,-65 days +22:05:00.000000000,ファイル削除
952,"docker-library
docker",https://github.com/docker-library/docker,5dd425e5b74a02bde63257e56c2bb67cbae74686,18.09-rc/dind/Dockerfile,18.09/dind/Dockerfile,"# TODO aufs-tools

# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
",2018/08/23 06:02,2019/09/05 12:01,2019/04/10 06:28,2019/09/05 12:01,1,-231 days +23:34:00.000000000,ファイル削除
953,"docker-library
docker",https://github.com/docker-library/docker,5dd425e5b74a02bde63257e56c2bb67cbae74686,18.09-rc/dind/Dockerfile,18.09/dind/Dockerfile,"# https://github.com/docker/docker/tree/master/hack/dind
",2018/08/23 06:02,2019/09/05 12:01,2018/08/23 06:02,2019/09/05 12:01,1,0 days 00:00:00.000000000,ファイル削除
954,"docker-library
docker",https://github.com/docker-library/docker,2f6926c4fb37274b90fae3ba6c3320619a8d0289,17.07/windows/windowsservercore/Dockerfile,17.10/windows/windowsservercore/Dockerfile,"# TODO ENV DOCKER_SHA256
# https://github.com/docker/docker-ce/blob/5b073ee2cf564edee5adca05eee574142f7627bb/components/packaging/static/hash_files !!
# (no SHA file artifacts on download.docker.com yet as of 2017-06-07 though)

",2017/10/13 08:46,2017/11/22 02:48,2017/10/13 08:46,2017/11/22 02:48,1,0 days 00:00:00.000000000,ファイル削除
956,"docker-library
docker",https://github.com/docker-library/docker,2f6926c4fb37274b90fae3ba6c3320619a8d0289,17.10-rc/windows/windowsservercore/Dockerfile,17.10-rc/windows/windowsservercore/Dockerfile,"# TODO ENV DOCKER_SHA256
# https://github.com/docker/docker-ce/blob/5b073ee2cf564edee5adca05eee574142f7627bb/components/packaging/static/hash_files !!
# (no SHA file artifacts on download.docker.com yet as of 2017-06-07 though)

",2017/10/13 08:46,2017/10/19 01:49,2017/10/13 08:46,2017/10/19 01:49,1,0 days 00:00:00.000000000,ファイル削除
957,"docker-library
docker",https://github.com/docker-library/docker,2f6926c4fb37274b90fae3ba6c3320619a8d0289,17.09/windows/windowsservercore/Dockerfile,17.09/windows/windowsservercore-1709/Dockerfile,"# TODO ENV DOCKER_SHA256
# https://github.com/docker/docker-ce/blob/5b073ee2cf564edee5adca05eee574142f7627bb/components/packaging/static/hash_files !!
# (no SHA file artifacts on download.docker.com yet as of 2017-06-07 though)

",2017/10/13 08:46,2017/12/09 03:24,2017/10/13 08:46,2017/12/09 03:24,1,0 days 00:00:00.000000000,ファイル削除
958,"docker-library
docker",https://github.com/docker-library/docker,2f6926c4fb37274b90fae3ba6c3320619a8d0289,17.06/windows/windowsservercore/Dockerfile,17.06/windows/windowsservercore/Dockerfile,"# TODO ENV DOCKER_SHA256
# https://github.com/docker/docker-ce/blob/5b073ee2cf564edee5adca05eee574142f7627bb/components/packaging/static/hash_files !!
# (no SHA file artifacts on download.docker.com yet as of 2017-06-07 though)

",2017/10/13 08:46,2017/11/08 23:45,2017/10/13 08:46,2017/11/08 23:45,1,0 days 00:00:00.000000000,ファイル削除
959,"docker-library
docker",https://github.com/docker-library/docker,5d58870994d0ba33a5228af06876fe2026752924,18.03-rc/dind/Dockerfile,18.05-rc/dind/Dockerfile,"# TODO aufs-tools

# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
",2018/02/23 03:05,2018/05/11 01:18,2018/04/13 02:07,2018/05/11 01:18,1,-49 days +00:58:00.000000000,ファイル削除
960,"docker-library
docker",https://github.com/docker-library/docker,bc5d62520258cacb230485ee96754f9f9aa117c4,18.05-rc/dind/Dockerfile,18.05-rc/dind/Dockerfile,"# https://github.com/docker/docker/tree/master/hack/dind
",2018/05/09 03:09,2018/05/11 01:18,2018/04/13 02:07,2018/05/11 01:18,1,26 days 01:02:00.000000000,ファイル削除
961,"docker-library
docker",https://github.com/docker-library/docker,045fbbc0ac44b1db42ef8b499f2bef1db8dcfe61,18.04-rc/dind/Dockerfile,18.06/dind/Dockerfile,"# TODO aufs-tools

# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
",2018/04/04 02:45,2019/06/15 06:03,2018/04/04 02:45,2019/06/15 06:03,1,0 days 00:00:00.000000000,ファイル削除
962,"docker-library
docker",https://github.com/docker-library/docker,bc5d62520258cacb230485ee96754f9f9aa117c4,18.04/dind/Dockerfile,18.06/dind/Dockerfile,"# https://github.com/docker/docker/tree/master/hack/dind
",2018/05/09 03:09,2019/06/15 06:03,2018/04/04 02:45,2019/06/15 06:03,1,35 days 00:24:00.000000000,ファイル削除
963,"docker-library
docker",https://github.com/docker-library/docker,5235be1da9e2347f1efbbc2a6689726cb72569ce,17.11-rc/windows/windowsservercore/Dockerfile,17.11-rc/windows/windowsservercore/Dockerfile,"# TODO ENV DOCKER_SHA256
# https://github.com/docker/docker-ce/blob/5b073ee2cf564edee5adca05eee574142f7627bb/components/packaging/static/hash_files !!
# (no SHA file artifacts on download.docker.com yet as of 2017-06-07 though)

",2017/10/31 23:21,2017/11/17 04:22,2017/11/03 03:17,2017/11/17 04:22,1,-3 days +20:04:00.000000000,ファイル削除
964,"docker-library
docker",https://github.com/docker-library/docker,5235be1da9e2347f1efbbc2a6689726cb72569ce,17.11-rc/dind/Dockerfile,17.11-rc/dind/Dockerfile,"# TODO aufs-tools

# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
",2017/10/31 23:21,2017/11/22 02:48,2017/11/03 03:17,2017/11/22 02:48,1,-3 days +20:04:00.000000000,ファイル削除
965,"docker-library
docker",https://github.com/docker-library/docker,5235be1da9e2347f1efbbc2a6689726cb72569ce,17.11-rc/Dockerfile,17.11-rc/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
",2017/10/31 23:21,2017/11/22 02:48,2017/10/31 23:21,2017/11/22 02:48,1,0 days 00:00:00.000000000,ファイル削除
966,"docker-library
docker",https://github.com/docker-library/docker,5235be1da9e2347f1efbbc2a6689726cb72569ce,17.11-rc/Dockerfile,17.11-rc/Dockerfile,"# TODO ENV DOCKER_SHA256
# https://github.com/docker/docker-ce/blob/5b073ee2cf564edee5adca05eee574142f7627bb/components/packaging/static/hash_files !!
# (no SHA file artifacts on download.docker.com yet as of 2017-06-07 though)

",2017/10/31 23:21,2017/11/01 06:04,2017/10/31 23:21,2017/11/01 06:04,1,0 days 00:00:00.000000000,ファイル削除
967,"docker-library
docker",https://github.com/docker-library/docker,737f83092a47b012d09a0cbf0ed72759550301cb,1.13-rc/experimental/dind/Dockerfile,1.13-rc/experimental/dind/Dockerfile,"# TODO aufs-tools

# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
",2016/11/12 10:36,2016/11/13 01:13,2016/11/12 10:36,2016/11/13 01:13,1,0 days 00:00:00.000000000,ファイル削除
968,"docker-library
docker",https://github.com/docker-library/docker,737f83092a47b012d09a0cbf0ed72759550301cb,1.13-rc/dind/Dockerfile,1.13-rc/dind/Dockerfile,"# TODO aufs-tools

# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
",2016/11/12 10:36,2017/01/19 03:43,2016/11/12 10:36,2017/01/19 03:43,1,0 days 00:00:00.000000000,ファイル削除
969,"docker-library
docker",https://github.com/docker-library/docker,f1341e1e9a099073463b1e8192c45435ce3e6760,1.2/dind/Dockerfile,1.2/dind/Dockerfile,"# TODO aufs-tools

",2015/08/07 04:56,2015/08/22 12:24,2015/08/07 04:56,2015/08/22 12:24,1,0 days 00:00:00.000000000,ファイル削除
970,"docker-library
docker",https://github.com/docker-library/docker,f1341e1e9a099073463b1e8192c45435ce3e6760,1.5/dind/Dockerfile,1.5/dind/Dockerfile,"# TODO aufs-tools

",2015/08/07 04:56,2015/08/22 12:24,2015/08/07 04:56,2015/08/22 12:24,1,0 days 00:00:00.000000000,ファイル削除
971,"docker-library
docker",https://github.com/docker-library/docker,f1341e1e9a099073463b1e8192c45435ce3e6760,1.1/dind/Dockerfile,1.1/dind/Dockerfile,"# TODO aufs-tools

",2015/08/07 04:56,2015/08/22 12:24,2015/08/07 04:56,2015/08/22 12:24,1,0 days 00:00:00.000000000,ファイル削除
972,"docker-library
docker",https://github.com/docker-library/docker,f1341e1e9a099073463b1e8192c45435ce3e6760,1.3/dind/Dockerfile,1.3/dind/Dockerfile,"# TODO aufs-tools

",2015/08/07 04:56,2015/08/22 12:24,2015/08/07 04:56,2015/08/22 12:24,1,0 days 00:00:00.000000000,ファイル削除
973,"docker-library
docker",https://github.com/docker-library/docker,f1341e1e9a099073463b1e8192c45435ce3e6760,1.0/dind/Dockerfile,1.0/dind/Dockerfile,"# TODO aufs-tools

",2015/08/07 04:56,2015/08/22 12:24,2015/08/07 04:56,2015/08/22 12:24,1,0 days 00:00:00.000000000,ファイル削除
974,"docker-library
docker",https://github.com/docker-library/docker,f1341e1e9a099073463b1e8192c45435ce3e6760,1.4/dind/Dockerfile,1.4/dind/Dockerfile,"# TODO aufs-tools

",2015/08/07 04:56,2015/08/22 12:24,2015/08/07 04:56,2015/08/22 12:24,1,0 days 00:00:00.000000000,ファイル削除
976,"docker-library
docker",https://github.com/docker-library/docker,8390fd856922deec4ca7bf0004e6e8e81f60c9f2,17.06-rc/Dockerfile,17.06/Dockerfile,"# TODO ENV DOCKER_SHA256
# https://github.com/docker/docker-ce/blob/5b073ee2cf564edee5adca05eee574142f7627bb/components/packaging/static/hash_files !!
# (no SHA file artifacts on download.docker.com yet as of 2017-06-07 though)

",2017/06/08 08:31,2017/09/28 01:49,2017/08/30 01:16,2017/09/28 01:49,1,-83 days +07:15:00.000000000,ファイル削除
977,"docker-library
docker",https://github.com/docker-library/docker,454a0ff9e99d4fde7112b25d64d25f940ab28a99,17.06/Dockerfile,17.06/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
",2017/10/12 06:31,2017/11/08 23:45,2017/09/30 02:02,2017/11/08 23:45,1,12 days 04:29:00.000000000,ファイル削除
978,"docker-library
docker",https://github.com/docker-library/docker,2aa6d388f205fc20ad22402bfed4ece715c7cb48,17.09/windows/windowsservercore-ltsc2016/Dockerfile,17.09/windows/windowsservercore-ltsc2016/Dockerfile,"# TODO ENV DOCKER_SHA256
# https://github.com/docker/docker-ce/blob/5b073ee2cf564edee5adca05eee574142f7627bb/components/packaging/static/hash_files !!
# (no SHA file artifacts on download.docker.com yet as of 2017-06-07 though)

",2017/11/23 08:09,2017/12/09 03:24,2017/11/23 08:09,2017/12/09 03:24,1,0 days 00:00:00.000000000,ファイル削除
979,"docker-library
docker",https://github.com/docker-library/docker,e7e2e3119360567641d334f1d274952236632357,17.06-rc/dind/Dockerfile,17.06-rc/dind/Dockerfile,"# TODO aufs-tools

# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
",2017/05/31 01:53,2017/06/29 09:41,2017/05/31 01:53,2017/06/29 09:41,1,0 days 00:00:00.000000000,ファイル削除
980,"docker-library
docker",https://github.com/docker-library/docker,20e81e7474e54f9edbb33c931e4731ef6c5b8335,1.9-rc/dind/Dockerfile,1.9-rc/dind/Dockerfile,"# TODO aufs-tools

",2015/10/14 23:05,2015/11/21 04:15,2015/11/14 07:05,2015/11/21 04:15,1,-31 days +16:00:00.000000000,ファイル削除
983,"docker-library
docker",https://github.com/docker-library/docker,ce8784112e81f724c96dae8272dd7367d712f3e9,17.09-rc/Dockerfile,17.09/Dockerfile,"# TODO ENV DOCKER_SHA256
# https://github.com/docker/docker-ce/blob/5b073ee2cf564edee5adca05eee574142f7627bb/components/packaging/static/hash_files !!
# (no SHA file artifacts on download.docker.com yet as of 2017-06-07 though)

",2017/09/08 01:31,2018/02/09 02:29,2017/12/03 23:02,2018/02/09 02:29,1,-87 days +02:29:00.000000000,ファイル削除
984,"docker-library
docker",https://github.com/docker-library/docker,454a0ff9e99d4fde7112b25d64d25f940ab28a99,17.09/Dockerfile,17.09/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
",2017/10/12 06:31,2018/02/09 02:29,2017/12/03 23:02,2018/02/09 02:29,1,-53 days +07:29:00.000000000,ファイル削除
985,"docker-library
docker",https://github.com/docker-library/docker,8ada62f762b30d09fd54664710c0ef3b64038f07,17.10-rc/Dockerfile,17.12/Dockerfile,"# TODO ENV DOCKER_SHA256
# https://github.com/docker/docker-ce/blob/5b073ee2cf564edee5adca05eee574142f7627bb/components/packaging/static/hash_files !!
# (no SHA file artifacts on download.docker.com yet as of 2017-06-07 though)

",2017/10/06 01:38,2018/05/11 01:18,2017/10/06 01:38,2018/05/11 01:18,1,0 days 00:00:00.000000000,ファイル削除
986,"docker-library
docker",https://github.com/docker-library/docker,454a0ff9e99d4fde7112b25d64d25f940ab28a99,17.10-rc/Dockerfile,17.12/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
",2017/10/12 06:31,2018/05/11 01:18,2017/10/06 01:38,2018/05/11 01:18,1,6 days 04:53:00.000000000,ファイル削除
987,"docker-library
docker",https://github.com/docker-library/docker,8de8842b2fffc6bb43609c133b54207ffb7b4ce2,18.01-rc/Dockerfile,18.06/Dockerfile,"# TODO ENV DOCKER_SHA256
# https://github.com/docker/docker-ce/blob/5b073ee2cf564edee5adca05eee574142f7627bb/components/packaging/static/hash_files !!
# (no SHA file artifacts on download.docker.com yet as of 2017-06-07 though)

",2018/01/05 04:48,2019/06/15 06:03,2018/01/05 04:48,2019/06/15 06:03,1,0 days 00:00:00.000000000,ファイル削除
988,"docker-library
docker",https://github.com/docker-library/docker,8de8842b2fffc6bb43609c133b54207ffb7b4ce2,18.01-rc/Dockerfile,18.06/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
",2018/01/05 04:48,2019/06/15 06:03,2018/01/05 04:48,2019/06/15 06:03,1,0 days 00:00:00.000000000,ファイル削除
989,"docker-library
docker",https://github.com/docker-library/docker,06717e6f2add8226068bec54abb23e646dea90e0,17.03-rc/dind/Dockerfile,17.03-rc/dind/Dockerfile,"# TODO aufs-tools

# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
",2017/02/23 06:49,2017/06/29 09:41,2017/05/31 03:18,2017/06/29 09:41,1,-97 days +03:31:00.000000000,ファイル削除
991,"docker-library
docker",https://github.com/docker-library/docker,8390fd856922deec4ca7bf0004e6e8e81f60c9f2,17.03-rc/Dockerfile,17.03-rc/Dockerfile,"# TODO ENV DOCKER_SHA256
# https://github.com/docker/docker-ce/blob/5b073ee2cf564edee5adca05eee574142f7627bb/components/packaging/static/hash_files !!
# (no SHA file artifacts on download.docker.com yet as of 2017-06-07 though)

",2017/06/08 08:31,2017/06/29 09:41,2017/05/31 03:18,2017/06/29 09:41,1,8 days 05:13:00.000000000,ファイル削除
992,"docker-library
docker",https://github.com/docker-library/docker,f522868d85d70569fb3e90bd913efa1c3394a264,17.09-rc/windows/windowsservercore-1709/Dockerfile,17.09-rc/windows/windowsservercore-1709/Dockerfile,"# TODO ENV DOCKER_SHA256
# https://github.com/docker/docker-ce/blob/5b073ee2cf564edee5adca05eee574142f7627bb/components/packaging/static/hash_files !!
# (no SHA file artifacts on download.docker.com yet as of 2017-06-07 though)

",2017/12/03 23:02,2017/12/05 09:35,2017/12/03 23:02,2017/12/05 09:35,1,0 days 00:00:00.000000000,ファイル削除
993,"docker-library
docker",https://github.com/docker-library/docker,f522868d85d70569fb3e90bd913efa1c3394a264,17.09-rc/windows/windowsservercore-ltsc2016/Dockerfile,17.09-rc/windows/windowsservercore-ltsc2016/Dockerfile,"# TODO ENV DOCKER_SHA256
# https://github.com/docker/docker-ce/blob/5b073ee2cf564edee5adca05eee574142f7627bb/components/packaging/static/hash_files !!
# (no SHA file artifacts on download.docker.com yet as of 2017-06-07 though)

",2017/12/03 23:02,2017/12/05 09:35,2017/12/03 23:02,2017/12/05 09:35,1,0 days 00:00:00.000000000,ファイル削除
994,"docker-library
docker",https://github.com/docker-library/docker,ce8784112e81f724c96dae8272dd7367d712f3e9,17.09-rc/dind/Dockerfile,17.12-rc/dind/Dockerfile,"# TODO aufs-tools

# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
",2017/09/08 01:31,2018/03/01 02:44,2017/12/03 23:02,2018/03/01 02:44,1,-87 days +02:29:00.000000000,ファイル削除
996,"docker-library
docker",https://github.com/docker-library/docker,8390fd856922deec4ca7bf0004e6e8e81f60c9f2,17.03/Dockerfile,17.07/Dockerfile,"# TODO ENV DOCKER_SHA256
# https://github.com/docker/docker-ce/blob/5b073ee2cf564edee5adca05eee574142f7627bb/components/packaging/static/hash_files !!
# (no SHA file artifacts on download.docker.com yet as of 2017-06-07 though)

",2017/06/08 08:31,2017/10/19 01:49,2016/09/29 05:18,2017/10/19 01:49,1,252 days 03:13:00.000000000,ファイル削除
997,"docker-library
docker",https://github.com/docker-library/docker,454a0ff9e99d4fde7112b25d64d25f940ab28a99,17.07/Dockerfile,17.07/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
",2017/10/12 06:31,2017/10/19 01:49,2016/06/17 03:03,2017/10/19 01:49,1,482 days 03:28:00.000000000,ファイル削除
999,"docker-library
docker",https://github.com/docker-library/docker,8390fd856922deec4ca7bf0004e6e8e81f60c9f2,17.05/Dockerfile,17.05/Dockerfile,"# TODO ENV DOCKER_SHA256
# https://github.com/docker/docker-ce/blob/5b073ee2cf564edee5adca05eee574142f7627bb/components/packaging/static/hash_files !!
# (no SHA file artifacts on download.docker.com yet as of 2017-06-07 though)

",2017/06/08 08:31,2017/06/29 09:41,2016/03/31 06:43,2017/06/29 09:41,1,434 days 01:48:00.000000000,ファイル削除
1000,"docker-library
docker",https://github.com/docker-library/docker,5d58870994d0ba33a5228af06876fe2026752924,18.03-rc/Dockerfile,18.05-rc/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
",2018/02/23 03:05,2018/05/11 01:18,2018/04/13 02:07,2018/05/11 01:18,1,-49 days +00:58:00.000000000,ファイル削除
1001,"docker-library
docker",https://github.com/docker-library/docker,5d58870994d0ba33a5228af06876fe2026752924,18.03-rc/Dockerfile,18.05-rc/Dockerfile,"# TODO ENV DOCKER_SHA256
# https://github.com/docker/docker-ce/blob/5b073ee2cf564edee5adca05eee574142f7627bb/components/packaging/static/hash_files !!
# (no SHA file artifacts on download.docker.com yet as of 2017-06-07 though)

",2018/02/23 03:05,2018/05/11 01:18,2018/04/13 02:07,2018/05/11 01:18,1,-49 days +00:58:00.000000000,ファイル削除
1004,"docker-library
docker",https://github.com/docker-library/docker,045fbbc0ac44b1db42ef8b499f2bef1db8dcfe61,18.04-rc/Dockerfile,18.05/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
",2018/04/04 02:45,2018/07/20 03:30,2018/04/04 02:45,2018/07/20 03:30,1,0 days 00:00:00.000000000,ファイル削除
1005,"docker-library
docker",https://github.com/docker-library/docker,045fbbc0ac44b1db42ef8b499f2bef1db8dcfe61,18.04-rc/Dockerfile,18.05/Dockerfile,"# TODO ENV DOCKER_SHA256
# https://github.com/docker/docker-ce/blob/5b073ee2cf564edee5adca05eee574142f7627bb/components/packaging/static/hash_files !!
# (no SHA file artifacts on download.docker.com yet as of 2017-06-07 though)

",2018/04/04 02:45,2018/07/20 03:30,2018/04/04 02:45,2018/07/20 03:30,1,0 days 00:00:00.000000000,ファイル削除
1006,"docker-library
docker",https://github.com/docker-library/docker,a98e0c42a96497670c36f4b2dcad2bcc81f18f35,1.6/dind/Dockerfile,1.6/dind/Dockerfile,"# TODO aufs-tools

",2015/08/07 04:54,2015/08/22 12:24,2015/08/07 04:54,2015/08/22 12:24,1,0 days 00:00:00.000000000,ファイル削除
1007,"docker-library
docker",https://github.com/docker-library/docker,b4404c1aadf1a09b5216b27fb35499bdcfd4d77a,1.11-rc/dind/Dockerfile,1.11-rc/dind/Dockerfile,"# TODO aufs-tools

",2016/03/31 06:43,2016/04/14 05:33,2016/03/31 06:43,2016/04/14 05:33,1,0 days 00:00:00.000000000,ファイル削除
1009,"docker-library
docker",https://github.com/docker-library/docker,1c8b144ed9ec49ac8cc7ca75f8628fd8de6c82b5,1.12-rc/dind/Dockerfile,1.12-rc/dind/Dockerfile,"# TODO aufs-tools

# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
",2016/07/01 02:09,2016/10/12 08:54,2016/09/29 05:18,2016/10/12 08:54,1,-91 days +20:51:00.000000000,ファイル削除
1010,"docker-library
docker",https://github.com/docker-library/docker,56215ac49d9947e317154fad823410df1201089b,17.05-rc/dind/Dockerfile,17.05-rc/dind/Dockerfile,"# TODO aufs-tools

# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
",2017/04/14 02:58,2017/05/06 05:03,2017/04/14 02:58,2017/05/06 05:03,1,0 days 00:00:00.000000000,ファイル削除
1011,"docker-library
docker",https://github.com/docker-library/docker,dba6c6279614ac0a7e520f0b7f7c027250488a4f,1.12-rc/experimental/dind/Dockerfile,1.12-rc/experimental/dind/Dockerfile,"# TODO aufs-tools

# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
",2016/09/29 05:18,2016/10/12 08:54,2016/09/29 05:18,2016/10/12 08:54,1,0 days 00:00:00.000000000,ファイル削除
1012,"docker-library
docker",https://github.com/docker-library/docker,8de8842b2fffc6bb43609c133b54207ffb7b4ce2,18.01-rc/dind/Dockerfile,18.01/dind/Dockerfile,"# TODO aufs-tools

# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
",2018/01/05 04:48,2018/02/09 02:29,2018/01/05 04:48,2018/02/09 02:29,1,0 days 00:00:00.000000000,ファイル削除
1013,"docker-library
docker",https://github.com/docker-library/docker,eb714a73e7e3f87705f468c3c6e9f4e316136bf5,1.12/experimental/dind/Dockerfile,1.12/experimental/dind/Dockerfile,"# TODO aufs-tools

# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
",2016/08/23 04:06,2017/03/03 05:33,2016/08/23 04:06,2017/03/03 05:33,1,0 days 00:00:00.000000000,ファイル削除
1014,"docker-library
docker",https://github.com/docker-library/docker,8ada62f762b30d09fd54664710c0ef3b64038f07,17.10-rc/dind/Dockerfile,17.10-rc/dind/Dockerfile,"# TODO aufs-tools

# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
",2017/10/06 01:38,2017/10/19 01:49,2017/10/06 01:38,2017/10/19 01:49,1,0 days 00:00:00.000000000,ファイル削除
1015,"docker-library
docker",https://github.com/docker-library/docker,e9c09260bfaea5199c6c053a83fc46564aa14990,17.04-rc/dind/Dockerfile,17.04-rc/dind/Dockerfile,"# TODO aufs-tools

# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
",2017/03/23 03:11,2017/04/07 01:25,2017/03/23 03:11,2017/04/07 01:25,1,0 days 00:00:00.000000000,ファイル削除
1016,"docker-library
docker",https://github.com/docker-library/docker,945f73423dd843ee587567712b6657d5780307da,1.10-rc/dind/Dockerfile,1.10-rc/dind/Dockerfile,"# TODO aufs-tools

",2016/01/16 06:50,2016/02/23 09:28,2016/02/20 17:34,2016/02/23 09:28,1,-36 days +13:16:00.000000000,ファイル削除
