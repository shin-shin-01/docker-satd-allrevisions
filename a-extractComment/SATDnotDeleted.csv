,Comments
0,"# TODO add PGP checking when the feature will be added to Erlang/OTP's build system
# http://erlang.org/pipermail/erlang-questions/2019-January/097067.html
"
30,"# hack in ""ENABLE_PATH_CHECK"" disabling to suppress:
#   warning: Insecure world writable dir
"
114,"# TODO: Some of this is only really needed for testing, it would be nice to split this up
"
121,"# TODO: This is here because hack/make.sh binary copies these extras binaries
# from $PATH into the bundles dir.
# It would be nice to handle this in a different way.
"
122,"# Install go-swagger for validating swagger.yaml
# This is https://github.com/kolyshkin/go-swagger/tree/golang-1.13-fix
# TODO: move to under moby/ or fix upstream go-swagger to work for us.
"
123,"# Switch to use iptables instead of nftables (to match the CI hosts)
# TODO use some kind of runtime auto-detection instead if/when nftables is supported (https://github.com/moby/moby/issues/26824)
"
177,"# Install dockercli
# Please edit hack/dockerfile/install/<name>.installer to update them.
"
184,"# docker build -t docker:simple -f Dockerfile.simple .
# docker run --rm docker:simple hack/make.sh dynbinary
# docker run --rm --privileged docker:simple hack/dind hack/make.sh test-unit
# docker run --rm --privileged -v /var/lib/docker docker:simple hack/dind hack/make.sh dynbinary test-integration

# This represents the bare minimum required to build and test Docker.

"
185,"# Install runc, containerd, tini and docker-proxy
# Please edit hack/dockerfile/install/<name>.installer to update them.
"
200,"# escape=`

# -----------------------------------------------------------------------------------------
# This file describes the standard way to build Docker in a container on Windows
# Server 2016 or Windows 10.
#
# Maintainer: @jhowardmsft
# -----------------------------------------------------------------------------------------


# Prerequisites:
# --------------
#
# 1. Windows Server 2016 or Windows 10 with all Windows updates applied. The major 
#    build number must be at least 14393. This can be confirmed, for example, by 
#    running the following from an elevated PowerShell prompt - this sample output 
#    is from a fully up to date machine as at mid-November 2016:
#
#    >> PS C:\> $(gin).WindowsBuildLabEx
#    >> 14393.447.amd64fre.rs1_release_inmarket.161102-0100
#
# 2. Git for Windows (or another git client) must be installed. https://git-scm.com/download/win.
#
# 3. The machine must be configured to run containers. For example, by following
#    the quick start guidance at https://msdn.microsoft.com/en-us/virtualization/windowscontainers/quick_start/quick_start or
#    https://github.com/docker/labs/blob/master/windows/windows-containers/Setup.md
#
# 4. If building in a Hyper-V VM: For Windows Server 2016 using Windows Server
#    containers as the default option, it is recommended you have at least 1GB 
#    of memory assigned; For Windows 10 where Hyper-V Containers are employed, you
#    should have at least 4GB of memory assigned. Note also, to run Hyper-V 
#    containers in a VM, it is necessary to configure the VM for nested virtualization.

# -----------------------------------------------------------------------------------------


# Usage:
# -----
#
#  The following steps should be run from an (elevated*) Windows PowerShell prompt. 
#
#  (*In a default installation of containers on Windows following the quick-start guidance at
#    https://msdn.microsoft.com/en-us/virtualization/windowscontainers/quick_start/quick_start,
#    the docker.exe client must run elevated to be able to connect to the daemon).
#
# 1. Clone the sources from github.com:
#
#    >>   git clone https://github.com/docker/docker.git C:\gopath\src\github.com\docker\docker
#    >>   Cloning into 'C:\gopath\src\github.com\docker\docker'...
#    >>   remote: Counting objects: 186216, done.
#    >>   remote: Compressing objects: 100% (21/21), done.
#    >>   remote: Total 186216 (delta 5), reused 0 (delta 0), pack-reused 186195
#    >>   Receiving objects: 100% (186216/186216), 104.32 MiB | 8.18 MiB/s, done.
#    >>   Resolving deltas: 100% (123139/123139), done.
#    >>   Checking connectivity... done.
#    >>   Checking out files: 100% (3912/3912), done.
#    >>   PS C:\>
#
#
# 2. Change directory to the cloned docker sources:
#
#    >>   cd C:\gopath\src\github.com\docker\docker 
#
#
# 3. Build a docker image with the components required to build the docker binaries from source
#    by running one of the following:
#
#    >>   docker build -t nativebuildimage -f Dockerfile.windows .          
#    >>   docker build -t nativebuildimage -f Dockerfile.windows -m 2GB .    (if using Hyper-V containers)
#
#
# 4. Build the docker executable binaries by running one of the following:
#
#    >>   $DOCKER_GITCOMMIT=(git rev-parse --short HEAD)
#    >>   docker run --name binaries -e DOCKER_GITCOMMIT=$DOCKER_GITCOMMIT nativebuildimage hack\make.ps1 -Binary
#    >>   docker run --name binaries -e DOCKER_GITCOMMIT=$DOCKER_GITCOMMIT -m 2GB nativebuildimage hack\make.ps1 -Binary    (if using Hyper-V containers)
#
#
# 5. Copy the binaries out of the container, replacing HostPath with an appropriate destination 
#    folder on the host system where you want the binaries to be located.
#
#    >>   docker cp binaries:C:\gopath\src\github.com\docker\docker\bundles\docker.exe C:\HostPath\docker.exe
#    >>   docker cp binaries:C:\gopath\src\github.com\docker\docker\bundles\dockerd.exe C:\HostPath\dockerd.exe
#
#
# 6. (Optional) Remove the interim container holding the built executable binaries:
#
#    >>    docker rm binaries
#
#
# 7. (Optional) Remove the image used for the container in which the executable
#    binaries are build. Tip - it may be useful to keep this image around if you need to
#    build multiple times. Then you can take advantage of the builder cache to have an
#    image which has all the components required to build the binaries already installed.
#
#    >>    docker rmi nativebuildimage
#

# -----------------------------------------------------------------------------------------


#  The validation tests can only run directly on the host. This is because they calculate
#  information from the git repo, but the .git directory is not passed into the image as
#  it is excluded via .dockerignore. Run the following from a Windows PowerShell prompt
#  (elevation is not required): (Note Go must be installed to run these tests)
#
#    >>   hack\make.ps1 -DCO -PkgImports -GoFormat


# -----------------------------------------------------------------------------------------


#  To run unit tests, ensure you have created the nativebuildimage above. Then run one of
#  the following from an (elevated) Windows PowerShell prompt:
#
#    >>   docker run --rm nativebuildimage hack\make.ps1 -TestUnit
#    >>   docker run --rm -m 2GB nativebuildimage hack\make.ps1 -TestUnit    (if using Hyper-V containers)


# -----------------------------------------------------------------------------------------


#  To run unit tests and binary build, ensure you have created the nativebuildimage above. Then 
#  run one of the following from an (elevated) Windows PowerShell prompt:
#
#    >>   docker run nativebuildimage hack\make.ps1 -All
#    >>   docker run -m 2GB nativebuildimage hack\make.ps1 -All    (if using Hyper-V containers)

# -----------------------------------------------------------------------------------------


# Important notes:
# ---------------
#
# Don't attempt to use a bind mount to pass a local directory as the bundles target
# directory. It does not work (golang attempts for follow a mapped folder incorrectly).
# Instead, use docker cp as per the example.
#
# go.zip is not removed from the image as it is used by the Windows CI servers
# to ensure the host and image are running consistent versions of go.
#
# Nanoserver support is a work in progress. Although the image will build if the 
# FROM statement is updated, it will not work when running autogen through hack\make.ps1. 
# It is suspected that the required GCC utilities (eg gcc, windres, windmc) silently
# quit due to the use of console hooks which are not available.
#
# The docker integration tests do not currently run in a container on Windows, predominantly
# due to Windows not supporting privileged mode, so anything using a volume would fail.
# They (along with the rest of the docker CI suite) can be run using 
# https://github.com/kevpar/docker-w2wCIScripts/blob/master/runCI/Invoke-DockerCI.ps1.
#
# -----------------------------------------------------------------------------------------


# The number of build steps below are explicitly minimised to improve performance.

# Extremely important - do not change the following line to reference a ""specific"" image, 
# such as `mcr.microsoft.com/windows/servercore:ltsc2019`. If using this Dockerfile in process
# isolated containers, the kernel of the host must match the container image, and hence
# would fail between Windows Server 2016 (aka RS1) and Windows Server 2019 (aka RS5).
# It is expected that the image `microsoft/windowsservercore:latest` is present, and matches
# the hosts kernel version before doing a build. 
"
381,"# FIXME(vdemeester) only used for e2e, could be in e2e special image in the future
"
393,"# TODO - consider replacing with an official image and a multi-stage build to pluck the binaries out
#ARG CONTAINERD_VERSION=v1.1.2
#ARG CONTAINERD_VERSION=47a128d
#ARG CONTAINERD_VERSION=6c3e782f
"
394,"# TODO - consider replacing with an official image and a multi-stage build to pluck the binaries out
"
397,"# TODO https://github.com/redis/redis/pull/3494 (deduplicate ""redis-server"" copies)
"
415,"# TODO pin specific commit

# cache-fill
"
416,"    # TODO: the distribution given by apache is not gzipped correctly - unzip correctly when fixed
"
420,"# TODO: remove this line after updating photon-build image with new
# versions of sqlite and rpm with -libs subpackages
"
426,"# FIXME(chris-crone): virtualenv 16.3.0 breaks build, force 16.2.0 until fixed
"
428,"# Todo: remove build dependencies
#	runDeps=""$( \
#		scanelf --needed --nobanner --format '%n#p' --recursive /usr/local/bundle/gems \
#		| tr ',' '\n' \
#		| sort -u \
#		| awk 'system(""[ -e /usr/local/lib/"" $1 "" ]"") == 0 { next } { print ""so:"" $1 }' \
#	)""; \
#	apk add --virtual .redmine-rundeps $runDeps; \
#	apk del .build-deps

"
430,"# This is a hack (see libcompose#32) - will be removed when libcompose will be fixed
# (i.e go get able)
"
433,"# TODO TARGET_ARCH='i386' (heinous package conflicts trying to get ""gcc -m32""/""gcc-multilib"" to work with all the cross-compiling gccs)

"
434,"# TODO consider removing the *-dev deps and only keeping the necessary lib* packages

# set recommended PHP.ini settings
# see https://secure.php.net/manual/en/opcache.installation.php
"
447,"# TODO there's an odd bug on Oracle Linux where installing ""cpp"" (which gets pulled in as a dependency of ""gcc"") and then marking it as automatically-installed will result in the ""filesystem"" package being removed during ""yum autoremove"" (which then fails), so we set it as manually-installed to compensate
"
475,"# http://tomcat.10.x6.nabble.com/VOTE-Release-Apache-Tomcat-8-0-32-tp5046007p5048274.html (ie, HACK HACK HACK)
"
483,"#Copy Zray docker plugin
#TODO: Integrate Zray docker plugin into Zend Server
"
500,"# TODO s390x ? (needs BR2_TOOLCHAIN_BUILDROOT_UCLIBC support)
"
501,"# TODO ppc64el ? (needs BR2_TOOLCHAIN_BUILDROOT_UCLIBC support)
"
503,"# hack hack hack hack hack
# with glibc, static busybox uses libnss for DNS resolution :(
"
508,"# TODO remove CONFIG_FEATURE_SYNC_FANCY from this explicit list after the next release of busybox (since it's disabled by default upstream now; 1.27+)
# CONFIG_LAST_SUPPORTED_WCHAR: see https://github.com/docker-library/busybox/issues/13 (UTF-8 input)
# see http://wiki.musl-libc.org/wiki/Building_Busybox
"
512,"## install additional libs typically needed by hackage packages
#RUN apt-get update && \
#    apt-get install ${OPTS_APT} zlib1g-dev libtinfo-dev

## run ghci by default unless a command is specified
"
514,"# TODO https://github.com/memcached/memcached/issues/382 ""t/chunked-extstore.t is flaky on arm32v6""
"
516,"# FIXME(oleg_nenashev): This is not an official AdoptOpenJDK Docker Image.
# There is no official Alpine images at the moment.
# Needs upgrade when/if there is an official alpine image.
"
517,"# TODO: revert before the GA release of Java 11 support (JENKINS-55087)
"
519,/* TODO decide what to do (if anything) about non-GitHub repos with respect to URL */
520,"# TODO find a way to make --mirror-only / SSL work with backpan too :(
"
521,"# TODO find a way to make --verify work with backpan as well :'(
#ENV PERL_CPANM_OPT $PERL_CPANM_OPT --verify

# reinstall cpanm itself, for good measure
"
523,"# This is ugly... But for some reason npm and node aren't available at this stage.
"
524,"# Hack needed to force use of bundled library instead of system level outdated library
# https://github.com/lovell/sharp/issues/892
"
525,"# TODO: Create configuration file from environment variables?
# TODO: Add entrypoint to run the bridge
"
526,"  ## hack to avoid RStudio-bug in detecting build-dependencies         
  # && ln -s&& ln -s ln -s /usr/local/bin/R /usr/bin/R \
  # && ln -s&& ln -s ln -s /usr/local/lib/R /usr/lib/R

"
542,"# fixme: needs to check out a tag on the next 1.14 release
"
546,"# TODO rebuild other cffi modules here too? (other _*_build.py files)
"
554,"# TODO switch to buster once https://github.com/docker-library/php/issues/865 is resolved in a clean way (either in the PHP image or in PHP itself)

# install the PHP extensions we need
"
562,"# By default you'll get a single-node development server that stores everything
# in RAM and bootstraps itself. Don't use this configuration for production.
"
578,"# https://github.com/docker-library/postgres/issues/484 (clang-6.0 required, only available in stretch-backports)
# TODO remove this once we hit buster+
"
587,"# TODO convert ""dpkg --print-architecture"" to Alpine architecture for downloading the correct architecture binary
"
594,"	# Extensions
	# TODO: make submodules shallow clones?
"
596,"# By default you'll get an insecure single-node development server that stores
# everything in RAM, exposes a web UI and HTTP endpoints, and bootstraps itself.
# Don't use this configuration for production.
"
605,"# TODO for some reason, libgo + i386 fails on https://github.com/gcc-mirror/gcc/blob/gcc-7_1_0-release/libgo/runtime/proc.c#L154
# ""error unknown case for SETCONTEXT_CLOBBERS_TLS""
"
615,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
617,"# TODO .asc / .sha256sum
"
619,"# TODO aufs-tools

# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
"
620,"# https://github.com/docker/docker/tree/master/hack/dind
"
625,"# TODO find some way to include ccextractor (currently buster-only)

# FPL_MainFeature detection only seemed to work with OpenJDK 9 (8 was insufficient)
"
626,"# TODO copy/steal ""browser.sh"" stuff from slack

"
628,"# TODO see note above about redis
"
629,"#RUN cd /xo/xo-server/public/http && for e in ../../../xo-web/public/*; do ln -s ""$e""; done

# TODO use links to get a redis server/database instead (since that's where configuration actually goes)
"
630,"# https://github.com/docker/docker/tree/master/hack/dind
#ENV DIND_COMMIT 130b0bc6032cc675d064e1cc62626cacc9c07a57

#RUN set -eux; \
#	wget -O /usr/local/bin/dind ""https://raw.githubusercontent.com/docker/docker/${DIND_COMMIT}/hack/dind""; \
#	chmod +x /usr/local/bin/dind

"
634,"# TODO add ""nbtscan"" when we get to Alpine 3.12 (if it makes it out of edge)
# https://pkgs.alpinelinux.org/packages?name=nbtscan&branch=edge&arch=x86_64

"
636,"# TODO verify that ookla's ""armhf"" really is armv6
"
637,"# TODO figure out what ookla means by their bare ""arm"" arch
"
638,"# TODO verify sha256 values! (add "".sha256"" to the end of this URL)
"
639,"# TODO move this down when COPY adheres to USER (and remove chown)
"
646,"# TODO set ""TARGET"" appropriately based on ""apk --print-arch"" to avoid ""uname -m"" detection
"
647,"# TODO pin a version
"
648,"# TODO pin versions
"
649,"# FIXME Remove this once rosdep detects ROS 2 packages https://github.com/ros-infrastructure/rosdep/issues/660
# ignore installed rosdep keys
"
651,"# FIXME Remove this once ament_export_interfaces respects COLCON_CURRENT_PREFIX https://github.com/ament/ament_cmake/issues/173
#Workaround hard coded paths in nightly tarball setup scripts
"
652,"# FIXME This is a workaround for pytest not found causing builds to fail
# Following RUN statements tests for regression of https://github.com/ros2/ros2/issues/722
"
654,"# FIXME renaming manifest.xml is a workaround for rosdep misbehaving when both
# manifest.xml and package.xml are present
# install dependencies
"
656,"# other csi-sanity options: --ginkgo.v -ginkgo.noColor
#TODO remove ""--ginkgo.skip"" option after fixing volume paginatin by token:
"
659,/** TODO: support other architectures here **/
661,"# TODO: alter filename after v2 release (version will be taken out of name)
"
823,"# TODO docker-entrypoint.ps1 ? (for ""docker run <image> --flag --flag --flag"")

"
825,"# TODO some sort of download verification here
"
865,"#>?7Eno#6aQis>7';?/u3u76%YmzrF""/)~*}r5a~K6j_GcRaPQ[nu\i|ۥ|*F2"
866,"#&^#=MuwIS&撶6jƻ<rCeړT+zkkY/.؞(pۮʋ).7	brަ]_-[jh4]7""0U_gpRznk7p\JOwvK&+%75ziYLWVڱYUck%muŴ>!#/'sMVO-b漾#6$5EzC²jԘe3+`,Xz5}<w,3(K{f]FeYF|eVFDnS1JzVўTնPT(/уD$`]csD	OlĚ6a;3&Z 	!锉TAy`3LM~F@-,۳Bt6qQpmkN8l_Z9M\+5m3KmuM.4n"
867,"#>9"">!>!}@voW/d+CRAp=S=VϷd?g>SSB=^G&&HC?cNUj7&pοR7K]'gG¿J<""gQM]>'s]d]T""}Q'{C~=}I'STsTKpcͮTwɾ""q}ˮ;d[u;J@r$[M;P7ԝ퀺Avvu4@jKcW+|d'*OdG[ܿ'~pOTܡ)`H
"
868,"#[O5 7}2c#HWR4㗝N-߈AKUJn҄Q,'ry	R""XqmsW	HacK_WPl`|wZg!aap\7#+=Zp;U*Jwٞ	z(rQHGO\EwS$m]{KwS?ꔫg<h47L>0/tPOC}9׶OЪT(^4
"
869,"# <xIdҼPշ-׵wNk!&X}VޯQ1v$]@cU,DbT$""?59Fz!O!431SklƎ8LlKů܏g`OQ<N:|ůxů-~.3'4'TNtɱw7J:{?ռ`&i/T|Q{UgLYVP.~cK^AUx`T.
"
870,#z\}OuQABarfrvO7gj?:۩kҽC[]Ύ~?OUb5Mbԗ
871,"#iV +6ȯWXH˟K+rj.,~>p2|av1~XM}!bVv]pFixMem|)5Ho,;h(GuêO?7焦{5$,T8ݾ2aH8m+S""Q{ci؏F<ej-QUQr4̂)M&(,>qЕG0zJNf:jkx(վ&O>^tULKdoߓ:egM<8nߓh1̈́BGNB6ۃ>Gi+ݬ`c5'ȼdo'Ll$g
"
890,"# TODO strip ""demo"" and ""man"" folders?
"
893,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
901,"# TODO signature? checksum?
"
930,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??

"
960,"# TODO ENV DOCKER_SHA256
# https://github.com/docker/docker-ce/blob/5b073ee2cf564edee5adca05eee574142f7627bb/components/packaging/static/hash_files !!
# (no SHA file artifacts on download.docker.com yet as of 2017-06-07 though)

"
1032,"  # shellcheck disable=SC1083,SC2086 # TODO not sure about intention here
"
