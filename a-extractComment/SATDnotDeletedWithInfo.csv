,project,gitPath,CommitID,Dockerfiles,LatestDockerfile,Comments,CommitDate,DeleteComment,(File) FirstCommit,(File) Deleted,isSATD,firstCommitからコメント追加までの日数,コメント追加からコメント削除までの日数
0,"docker-library
rabbitmq",https://github.com/docker-library/rabbitmq,1efb3fc74b333e3317ec6fe2292d54cc491f5438,3.8-beta/ubuntu/Dockerfile,3.8-rc/ubuntu/Dockerfile,"# TODO add PGP checking when the feature will be added to Erlang/OTP's build system
# http://erlang.org/pipermail/erlang-questions/2019-January/097067.html
",2019/01/30 22:23,,2019/01/30 22:23,,1,0 days 00:00:00.000000000,削除されていません
1,"docker-library
rabbitmq",https://github.com/docker-library/rabbitmq,1efb3fc74b333e3317ec6fe2292d54cc491f5438,3.8-beta/alpine/Dockerfile,3.8-rc/alpine/Dockerfile,"# TODO add PGP checking when the feature will be added to Erlang/OTP's build system
# http://erlang.org/pipermail/erlang-questions/2019-January/097067.html
",2019/01/30 22:23,,2019/01/30 22:23,,1,0 days 00:00:00.000000000,削除されていません
4,"docker-library
rabbitmq",https://github.com/docker-library/rabbitmq,af5f6ff9a3916d89be6d190d562d247ae12ffa73,3.8/ubuntu/Dockerfile,3.8/ubuntu/Dockerfile,"# TODO add PGP checking when the feature will be added to Erlang/OTP's build system
# http://erlang.org/pipermail/erlang-questions/2019-January/097067.html
",2019/10/02 00:45,,2019/10/02 00:45,,1,0 days 00:00:00.000000000,削除されていません
5,"docker-library
rabbitmq",https://github.com/docker-library/rabbitmq,af5f6ff9a3916d89be6d190d562d247ae12ffa73,3.8/alpine/Dockerfile,3.8/alpine/Dockerfile,"# TODO add PGP checking when the feature will be added to Erlang/OTP's build system
# http://erlang.org/pipermail/erlang-questions/2019-January/097067.html
",2019/10/02 00:45,,2019/10/02 00:45,,1,0 days 00:00:00.000000000,削除されていません
14,"docker-library
rabbitmq",https://github.com/docker-library/rabbitmq,f22c0b266cfeb8cb6d776f9e6a961908c2557ad3,Dockerfile-alpine.template,Dockerfile-alpine.template,"# TODO add PGP checking when the feature will be added to Erlang/OTP's build system
# http://erlang.org/pipermail/erlang-questions/2019-January/097067.html
",2019/01/25 08:19,,2019/01/25 08:19,,1,0 days 00:00:00.000000000,削除されていません
15,"docker-library
rabbitmq",https://github.com/docker-library/rabbitmq,f22c0b266cfeb8cb6d776f9e6a961908c2557ad3,Dockerfile-ubuntu.template,Dockerfile-ubuntu.template,"# TODO add PGP checking when the feature will be added to Erlang/OTP's build system
# http://erlang.org/pipermail/erlang-questions/2019-January/097067.html
",2019/01/25 08:19,,2019/01/25 08:19,,1,0 days 00:00:00.000000000,削除されていません
30,"docker-library
ruby",https://github.com/docker-library/ruby,6959194971f4f84e9bef2976ae6b8a469fa58dae,2.5-rc/stretch/slim/Dockerfile,2.5/stretch/slim/Dockerfile,"# hack in ""ENABLE_PATH_CHECK"" disabling to suppress:
#   warning: Insecure world writable dir
",2017/10/22 08:56,,2017/10/22 08:56,,1,0 days 00:00:00.000000000,削除されていません
31,"docker-library
ruby",https://github.com/docker-library/ruby,ee2df55c3abd3d0eccea5733f7041b733f8a5a62,2.5-rc/alpine3.7/Dockerfile,2.5/alpine3.11/Dockerfile,"# hack in ""ENABLE_PATH_CHECK"" disabling to suppress:
#   warning: Insecure world writable dir
",2017/12/07 20:22,,2017/12/07 20:22,,1,0 days 00:00:00.000000000,削除されていません
32,"docker-library
ruby",https://github.com/docker-library/ruby,06192e37c6daec1d2f2a516c04c7bcc97174b1e2,2.5/alpine3.8/Dockerfile,2.5/alpine3.12/Dockerfile,"# hack in ""ENABLE_PATH_CHECK"" disabling to suppress:
#   warning: Insecure world writable dir
",2018/10/19 04:00,,2018/10/19 04:00,,1,0 days 00:00:00.000000000,削除されていません
33,"docker-library
ruby",https://github.com/docker-library/ruby,6959194971f4f84e9bef2976ae6b8a469fa58dae,2.5-rc/stretch/Dockerfile,2.5/stretch/Dockerfile,"# hack in ""ENABLE_PATH_CHECK"" disabling to suppress:
#   warning: Insecure world writable dir
",2017/10/22 08:56,,2017/10/22 08:56,,1,0 days 00:00:00.000000000,削除されていません
34,"docker-library
ruby",https://github.com/docker-library/ruby,b0c1b3c89142267912d8d0b532e206463c7d8ee0,2.7-rc/stretch/Dockerfile,2.7/buster/Dockerfile,"# hack in ""ENABLE_PATH_CHECK"" disabling to suppress:
#   warning: Insecure world writable dir
",2019/05/31 05:23,,2019/05/31 05:23,,1,0 days 00:00:00.000000000,削除されていません
35,"docker-library
ruby",https://github.com/docker-library/ruby,486c3159dbd4d832ae30fedeba525b9b2425d060,2.7-rc/alpine3.10/Dockerfile,2.7/alpine3.12/Dockerfile,"# hack in ""ENABLE_PATH_CHECK"" disabling to suppress:
#   warning: Insecure world writable dir
",2019/06/20 22:15,,2019/06/20 22:15,,1,0 days 00:00:00.000000000,削除されていません
36,"docker-library
ruby",https://github.com/docker-library/ruby,d85cf42c5541e1827197397412480a61004d089f,Dockerfile-slim.template,Dockerfile-slim.template,"# hack in ""ENABLE_PATH_CHECK"" disabling to suppress:
#   warning: Insecure world writable dir
",2016/09/21 02:14,,2016/02/04 05:11,,1,229 days 21:03:00.000000000,削除されていません
37,"docker-library
ruby",https://github.com/docker-library/ruby,bb5c7101e13cfa3632dfc21245b172c205d90353,2.6-rc/alpine3.8/Dockerfile,2.6/alpine3.12/Dockerfile,"# hack in ""ENABLE_PATH_CHECK"" disabling to suppress:
#   warning: Insecure world writable dir
",2018/09/14 02:30,,2018/09/14 02:30,,1,0 days 00:00:00.000000000,削除されていません
38,"docker-library
ruby",https://github.com/docker-library/ruby,d85cf42c5541e1827197397412480a61004d089f,Dockerfile-alpine.template,Dockerfile-alpine.template,"# hack in ""ENABLE_PATH_CHECK"" disabling to suppress:
#   warning: Insecure world writable dir
",2016/09/21 02:14,,2016/02/04 05:11,,1,229 days 21:03:00.000000000,削除されていません
39,"docker-library
ruby",https://github.com/docker-library/ruby,53ca276f03918cee2d9db367638be49725e5f152,2.6-rc/stretch/slim/Dockerfile,2.6/stretch/slim/Dockerfile,"# hack in ""ENABLE_PATH_CHECK"" disabling to suppress:
#   warning: Insecure world writable dir
",2018/03/29 20:41,,2018/03/29 20:41,,1,0 days 00:00:00.000000000,削除されていません
40,"docker-library
ruby",https://github.com/docker-library/ruby,b0c1b3c89142267912d8d0b532e206463c7d8ee0,2.7-rc/stretch/slim/Dockerfile,2.7/buster/slim/Dockerfile,"# hack in ""ENABLE_PATH_CHECK"" disabling to suppress:
#   warning: Insecure world writable dir
",2019/05/31 05:23,,2019/05/31 05:23,,1,0 days 00:00:00.000000000,削除されていません
41,"docker-library
ruby",https://github.com/docker-library/ruby,d85cf42c5541e1827197397412480a61004d089f,Dockerfile.template,Dockerfile-debian.template,"# hack in ""ENABLE_PATH_CHECK"" disabling to suppress:
#   warning: Insecure world writable dir
",2016/09/21 02:14,,2016/02/04 05:11,,1,229 days 21:03:00.000000000,削除されていません
42,"docker-library
ruby",https://github.com/docker-library/ruby,53ca276f03918cee2d9db367638be49725e5f152,2.6-rc/alpine3.7/Dockerfile,2.6/alpine3.11/Dockerfile,"# hack in ""ENABLE_PATH_CHECK"" disabling to suppress:
#   warning: Insecure world writable dir
",2018/03/29 20:41,,2018/03/29 20:41,,1,0 days 00:00:00.000000000,削除されていません
43,"docker-library
ruby",https://github.com/docker-library/ruby,53ca276f03918cee2d9db367638be49725e5f152,2.6-rc/stretch/Dockerfile,2.6/stretch/Dockerfile,"# hack in ""ENABLE_PATH_CHECK"" disabling to suppress:
#   warning: Insecure world writable dir
",2018/03/29 20:41,,2018/03/29 20:41,,1,0 days 00:00:00.000000000,削除されていません
45,"docker-library
ruby",https://github.com/docker-library/ruby,3b767347867328b98aefa48e60de95b2190f631e,2.5/buster/slim/Dockerfile,2.5/buster/slim/Dockerfile,"# hack in ""ENABLE_PATH_CHECK"" disabling to suppress:
#   warning: Insecure world writable dir
",2019/07/11 01:33,,2019/07/11 01:33,,1,0 days 00:00:00.000000000,削除されていません
46,"docker-library
ruby",https://github.com/docker-library/ruby,3b767347867328b98aefa48e60de95b2190f631e,2.6/buster/Dockerfile,2.6/buster/Dockerfile,"# hack in ""ENABLE_PATH_CHECK"" disabling to suppress:
#   warning: Insecure world writable dir
",2019/07/11 01:33,,2019/07/11 01:33,,1,0 days 00:00:00.000000000,削除されていません
47,"docker-library
ruby",https://github.com/docker-library/ruby,3b767347867328b98aefa48e60de95b2190f631e,2.6/buster/slim/Dockerfile,2.6/buster/slim/Dockerfile,"# hack in ""ENABLE_PATH_CHECK"" disabling to suppress:
#   warning: Insecure world writable dir
",2019/07/11 01:33,,2019/07/11 01:33,,1,0 days 00:00:00.000000000,削除されていません
48,"docker-library
ruby",https://github.com/docker-library/ruby,defb10adcd6dd2178be3cd9c884fd035b52d42fb,2.7/alpine3.11/Dockerfile,2.7/alpine3.11/Dockerfile,"# hack in ""ENABLE_PATH_CHECK"" disabling to suppress:
#   warning: Insecure world writable dir
",2020/01/03 06:41,,2020/01/03 06:41,,1,0 days 00:00:00.000000000,削除されていません
49,"docker-library
ruby",https://github.com/docker-library/ruby,3b767347867328b98aefa48e60de95b2190f631e,2.5/buster/Dockerfile,2.5/buster/Dockerfile,"# hack in ""ENABLE_PATH_CHECK"" disabling to suppress:
#   warning: Insecure world writable dir
",2019/07/11 01:33,,2019/07/11 01:33,,1,0 days 00:00:00.000000000,削除されていません
114,"moby
moby",https://github.com/moby/moby,d539038d9712daa44254412c6fcc6d78a14da691,Dockerfile,Dockerfile,"# TODO: Some of this is only really needed for testing, it would be nice to split this up
",2017/09/30 06:09,,2013/06/22 11:42,,1,1560 days 18:27:00.000000000,削除されていません
121,"moby
moby",https://github.com/moby/moby,4e3ab9e9fbca682f75eb350c8ad4312282869a03,Dockerfile,Dockerfile,"# TODO: This is here because hack/make.sh binary copies these extras binaries
# from $PATH into the bundles dir.
# It would be nice to handle this in a different way.
",2019/07/17 21:37,,2013/06/22 11:42,,1,2216 days 09:55:00.000000000,削除されていません
122,"moby
moby",https://github.com/moby/moby,4e3ab9e9fbca682f75eb350c8ad4312282869a03,Dockerfile,Dockerfile,"# Install go-swagger for validating swagger.yaml
# This is https://github.com/kolyshkin/go-swagger/tree/golang-1.13-fix
# TODO: move to under moby/ or fix upstream go-swagger to work for us.
",2019/07/17 21:37,,2013/06/22 11:42,,1,2216 days 09:55:00.000000000,削除されていません
123,"moby
moby",https://github.com/moby/moby,d1a3a17c671b9f89a90e59b58a92f04da0a4e3d9,Dockerfile,Dockerfile,"# Switch to use iptables instead of nftables (to match the CI hosts)
# TODO use some kind of runtime auto-detection instead if/when nftables is supported (https://github.com/moby/moby/issues/26824)
",2020/01/15 23:22,,2013/06/22 11:42,,1,2398 days 11:40:00.000000000,削除されていません
177,"moby
moby",https://github.com/moby/moby,be8885525c4d1ef4a13bbd6396f60e8657bc5573,Dockerfile.e2e,Dockerfile.e2e,"# Install dockercli
# Please edit hack/dockerfile/install/<name>.installer to update them.
",2017/12/08 10:10,,2017/09/08 23:43,,1,90 days 10:27:00.000000000,削除されていません
184,"moby
moby",https://github.com/moby/moby,bc82b139955c4a0edb20b070926469cceea0fbbb,Dockerfile.simple,Dockerfile.simple,"# docker build -t docker:simple -f Dockerfile.simple .
# docker run --rm docker:simple hack/make.sh dynbinary
# docker run --rm --privileged docker:simple hack/dind hack/make.sh test-unit
# docker run --rm --privileged -v /var/lib/docker docker:simple hack/dind hack/make.sh dynbinary test-integration

# This represents the bare minimum required to build and test Docker.

",2017/06/17 09:18,,2015/02/28 14:37,,1,839 days 18:41:00.000000000,削除されていません
185,"moby
moby",https://github.com/moby/moby,be8885525c4d1ef4a13bbd6396f60e8657bc5573,Dockerfile.simple,Dockerfile.simple,"# Install runc, containerd, tini and docker-proxy
# Please edit hack/dockerfile/install/<name>.installer to update them.
",2017/12/08 10:10,,2015/02/28 14:37,,1,1013 days 19:33:00.000000000,削除されていません
200,"moby
moby",https://github.com/moby/moby,83fd212f2cb71aae2f4a5a60c893c2bd01e59b72,Dockerfile.windows,Dockerfile.windows,"# escape=`

# -----------------------------------------------------------------------------------------
# This file describes the standard way to build Docker in a container on Windows
# Server 2016 or Windows 10.
#
# Maintainer: @jhowardmsft
# -----------------------------------------------------------------------------------------


# Prerequisites:
# --------------
#
# 1. Windows Server 2016 or Windows 10 with all Windows updates applied. The major 
#    build number must be at least 14393. This can be confirmed, for example, by 
#    running the following from an elevated PowerShell prompt - this sample output 
#    is from a fully up to date machine as at mid-November 2016:
#
#    >> PS C:\> $(gin).WindowsBuildLabEx
#    >> 14393.447.amd64fre.rs1_release_inmarket.161102-0100
#
# 2. Git for Windows (or another git client) must be installed. https://git-scm.com/download/win.
#
# 3. The machine must be configured to run containers. For example, by following
#    the quick start guidance at https://msdn.microsoft.com/en-us/virtualization/windowscontainers/quick_start/quick_start or
#    https://github.com/docker/labs/blob/master/windows/windows-containers/Setup.md
#
# 4. If building in a Hyper-V VM: For Windows Server 2016 using Windows Server
#    containers as the default option, it is recommended you have at least 1GB 
#    of memory assigned; For Windows 10 where Hyper-V Containers are employed, you
#    should have at least 4GB of memory assigned. Note also, to run Hyper-V 
#    containers in a VM, it is necessary to configure the VM for nested virtualization.

# -----------------------------------------------------------------------------------------


# Usage:
# -----
#
#  The following steps should be run from an (elevated*) Windows PowerShell prompt. 
#
#  (*In a default installation of containers on Windows following the quick-start guidance at
#    https://msdn.microsoft.com/en-us/virtualization/windowscontainers/quick_start/quick_start,
#    the docker.exe client must run elevated to be able to connect to the daemon).
#
# 1. Clone the sources from github.com:
#
#    >>   git clone https://github.com/docker/docker.git C:\gopath\src\github.com\docker\docker
#    >>   Cloning into 'C:\gopath\src\github.com\docker\docker'...
#    >>   remote: Counting objects: 186216, done.
#    >>   remote: Compressing objects: 100% (21/21), done.
#    >>   remote: Total 186216 (delta 5), reused 0 (delta 0), pack-reused 186195
#    >>   Receiving objects: 100% (186216/186216), 104.32 MiB | 8.18 MiB/s, done.
#    >>   Resolving deltas: 100% (123139/123139), done.
#    >>   Checking connectivity... done.
#    >>   Checking out files: 100% (3912/3912), done.
#    >>   PS C:\>
#
#
# 2. Change directory to the cloned docker sources:
#
#    >>   cd C:\gopath\src\github.com\docker\docker 
#
#
# 3. Build a docker image with the components required to build the docker binaries from source
#    by running one of the following:
#
#    >>   docker build -t nativebuildimage -f Dockerfile.windows .          
#    >>   docker build -t nativebuildimage -f Dockerfile.windows -m 2GB .    (if using Hyper-V containers)
#
#
# 4. Build the docker executable binaries by running one of the following:
#
#    >>   $DOCKER_GITCOMMIT=(git rev-parse --short HEAD)
#    >>   docker run --name binaries -e DOCKER_GITCOMMIT=$DOCKER_GITCOMMIT nativebuildimage hack\make.ps1 -Binary
#    >>   docker run --name binaries -e DOCKER_GITCOMMIT=$DOCKER_GITCOMMIT -m 2GB nativebuildimage hack\make.ps1 -Binary    (if using Hyper-V containers)
#
#
# 5. Copy the binaries out of the container, replacing HostPath with an appropriate destination 
#    folder on the host system where you want the binaries to be located.
#
#    >>   docker cp binaries:C:\gopath\src\github.com\docker\docker\bundles\docker.exe C:\HostPath\docker.exe
#    >>   docker cp binaries:C:\gopath\src\github.com\docker\docker\bundles\dockerd.exe C:\HostPath\dockerd.exe
#
#
# 6. (Optional) Remove the interim container holding the built executable binaries:
#
#    >>    docker rm binaries
#
#
# 7. (Optional) Remove the image used for the container in which the executable
#    binaries are build. Tip - it may be useful to keep this image around if you need to
#    build multiple times. Then you can take advantage of the builder cache to have an
#    image which has all the components required to build the binaries already installed.
#
#    >>    docker rmi nativebuildimage
#

# -----------------------------------------------------------------------------------------


#  The validation tests can only run directly on the host. This is because they calculate
#  information from the git repo, but the .git directory is not passed into the image as
#  it is excluded via .dockerignore. Run the following from a Windows PowerShell prompt
#  (elevation is not required): (Note Go must be installed to run these tests)
#
#    >>   hack\make.ps1 -DCO -PkgImports -GoFormat


# -----------------------------------------------------------------------------------------


#  To run unit tests, ensure you have created the nativebuildimage above. Then run one of
#  the following from an (elevated) Windows PowerShell prompt:
#
#    >>   docker run --rm nativebuildimage hack\make.ps1 -TestUnit
#    >>   docker run --rm -m 2GB nativebuildimage hack\make.ps1 -TestUnit    (if using Hyper-V containers)


# -----------------------------------------------------------------------------------------


#  To run unit tests and binary build, ensure you have created the nativebuildimage above. Then 
#  run one of the following from an (elevated) Windows PowerShell prompt:
#
#    >>   docker run nativebuildimage hack\make.ps1 -All
#    >>   docker run -m 2GB nativebuildimage hack\make.ps1 -All    (if using Hyper-V containers)

# -----------------------------------------------------------------------------------------


# Important notes:
# ---------------
#
# Don't attempt to use a bind mount to pass a local directory as the bundles target
# directory. It does not work (golang attempts for follow a mapped folder incorrectly).
# Instead, use docker cp as per the example.
#
# go.zip is not removed from the image as it is used by the Windows CI servers
# to ensure the host and image are running consistent versions of go.
#
# Nanoserver support is a work in progress. Although the image will build if the 
# FROM statement is updated, it will not work when running autogen through hack\make.ps1. 
# It is suspected that the required GCC utilities (eg gcc, windres, windmc) silently
# quit due to the use of console hooks which are not available.
#
# The docker integration tests do not currently run in a container on Windows, predominantly
# due to Windows not supporting privileged mode, so anything using a volume would fail.
# They (along with the rest of the docker CI suite) can be run using 
# https://github.com/kevpar/docker-w2wCIScripts/blob/master/runCI/Invoke-DockerCI.ps1.
#
# -----------------------------------------------------------------------------------------


# The number of build steps below are explicitly minimised to improve performance.

# Extremely important - do not change the following line to reference a ""specific"" image, 
# such as `mcr.microsoft.com/windows/servercore:ltsc2019`. If using this Dockerfile in process
# isolated containers, the kernel of the host must match the container image, and hence
# would fail between Windows Server 2016 (aka RS1) and Windows Server 2019 (aka RS5).
# It is expected that the image `microsoft/windowsservercore:latest` is present, and matches
# the hosts kernel version before doing a build. 
",2019/09/26 18:59,,2015/12/01 17:47,,1,1395 days 01:12:00.000000000,削除されていません
227,"docker
docker-ce",https://github.com/docker/docker-ce,91c1ef0fbfd3df31b78094b54869d49bf78afeeb,components/engine/Dockerfile.e2e,components/engine/Dockerfile.e2e,"# Install dockercli
# Please edit hack/dockerfile/install/<name>.installer to update them.
",2017/12/08 10:10,,2017/09/08 23:43,,1,90 days 10:27:00.000000000,削除されていません
242,"docker
docker-ce",https://github.com/docker/docker-ce,79bc167c15cf847a2930b00f70676d84a7c8cf86,components/engine/Dockerfile.windows,components/engine/Dockerfile.windows,"# escape=`

# -----------------------------------------------------------------------------------------
# This file describes the standard way to build Docker in a container on Windows
# Server 2016 or Windows 10.
#
# Maintainer: @jhowardmsft
# -----------------------------------------------------------------------------------------


# Prerequisites:
# --------------
#
# 1. Windows Server 2016 or Windows 10 with all Windows updates applied. The major 
#    build number must be at least 14393. This can be confirmed, for example, by 
#    running the following from an elevated PowerShell prompt - this sample output 
#    is from a fully up to date machine as at mid-November 2016:
#
#    >> PS C:\> $(gin).WindowsBuildLabEx
#    >> 14393.447.amd64fre.rs1_release_inmarket.161102-0100
#
# 2. Git for Windows (or another git client) must be installed. https://git-scm.com/download/win.
#
# 3. The machine must be configured to run containers. For example, by following
#    the quick start guidance at https://msdn.microsoft.com/en-us/virtualization/windowscontainers/quick_start/quick_start or
#    https://github.com/docker/labs/blob/master/windows/windows-containers/Setup.md
#
# 4. If building in a Hyper-V VM: For Windows Server 2016 using Windows Server
#    containers as the default option, it is recommended you have at least 1GB 
#    of memory assigned; For Windows 10 where Hyper-V Containers are employed, you
#    should have at least 4GB of memory assigned. Note also, to run Hyper-V 
#    containers in a VM, it is necessary to configure the VM for nested virtualization.

# -----------------------------------------------------------------------------------------


# Usage:
# -----
#
#  The following steps should be run from an (elevated*) Windows PowerShell prompt. 
#
#  (*In a default installation of containers on Windows following the quick-start guidance at
#    https://msdn.microsoft.com/en-us/virtualization/windowscontainers/quick_start/quick_start,
#    the docker.exe client must run elevated to be able to connect to the daemon).
#
# 1. Clone the sources from github.com:
#
#    >>   git clone https://github.com/docker/docker.git C:\gopath\src\github.com\docker\docker
#    >>   Cloning into 'C:\gopath\src\github.com\docker\docker'...
#    >>   remote: Counting objects: 186216, done.
#    >>   remote: Compressing objects: 100% (21/21), done.
#    >>   remote: Total 186216 (delta 5), reused 0 (delta 0), pack-reused 186195
#    >>   Receiving objects: 100% (186216/186216), 104.32 MiB | 8.18 MiB/s, done.
#    >>   Resolving deltas: 100% (123139/123139), done.
#    >>   Checking connectivity... done.
#    >>   Checking out files: 100% (3912/3912), done.
#    >>   PS C:\>
#
#
# 2. Change directory to the cloned docker sources:
#
#    >>   cd C:\gopath\src\github.com\docker\docker 
#
#
# 3. Build a docker image with the components required to build the docker binaries from source
#    by running one of the following:
#
#    >>   docker build -t nativebuildimage -f Dockerfile.windows .          
#    >>   docker build -t nativebuildimage -f Dockerfile.windows -m 2GB .    (if using Hyper-V containers)
#
#
# 4. Build the docker executable binaries by running one of the following:
#
#    >>   $DOCKER_GITCOMMIT=(git rev-parse --short HEAD)
#    >>   docker run --name binaries -e DOCKER_GITCOMMIT=$DOCKER_GITCOMMIT nativebuildimage hack\make.ps1 -Binary
#    >>   docker run --name binaries -e DOCKER_GITCOMMIT=$DOCKER_GITCOMMIT -m 2GB nativebuildimage hack\make.ps1 -Binary    (if using Hyper-V containers)
#
#
# 5. Copy the binaries out of the container, replacing HostPath with an appropriate destination 
#    folder on the host system where you want the binaries to be located.
#
#    >>   docker cp binaries:C:\gopath\src\github.com\docker\docker\bundles\docker.exe C:\HostPath\docker.exe
#    >>   docker cp binaries:C:\gopath\src\github.com\docker\docker\bundles\dockerd.exe C:\HostPath\dockerd.exe
#
#
# 6. (Optional) Remove the interim container holding the built executable binaries:
#
#    >>    docker rm binaries
#
#
# 7. (Optional) Remove the image used for the container in which the executable
#    binaries are build. Tip - it may be useful to keep this image around if you need to
#    build multiple times. Then you can take advantage of the builder cache to have an
#    image which has all the components required to build the binaries already installed.
#
#    >>    docker rmi nativebuildimage
#

# -----------------------------------------------------------------------------------------


#  The validation tests can only run directly on the host. This is because they calculate
#  information from the git repo, but the .git directory is not passed into the image as
#  it is excluded via .dockerignore. Run the following from a Windows PowerShell prompt
#  (elevation is not required): (Note Go must be installed to run these tests)
#
#    >>   hack\make.ps1 -DCO -PkgImports -GoFormat


# -----------------------------------------------------------------------------------------


#  To run unit tests, ensure you have created the nativebuildimage above. Then run one of
#  the following from an (elevated) Windows PowerShell prompt:
#
#    >>   docker run --rm nativebuildimage hack\make.ps1 -TestUnit
#    >>   docker run --rm -m 2GB nativebuildimage hack\make.ps1 -TestUnit    (if using Hyper-V containers)


# -----------------------------------------------------------------------------------------


#  To run unit tests and binary build, ensure you have created the nativebuildimage above. Then 
#  run one of the following from an (elevated) Windows PowerShell prompt:
#
#    >>   docker run nativebuildimage hack\make.ps1 -All
#    >>   docker run -m 2GB nativebuildimage hack\make.ps1 -All    (if using Hyper-V containers)

# -----------------------------------------------------------------------------------------


# Important notes:
# ---------------
#
# Don't attempt to use a bind mount to pass a local directory as the bundles target
# directory. It does not work (golang attempts for follow a mapped folder incorrectly).
# Instead, use docker cp as per the example.
#
# go.zip is not removed from the image as it is used by the Windows CI servers
# to ensure the host and image are running consistent versions of go.
#
# Nanoserver support is a work in progress. Although the image will build if the 
# FROM statement is updated, it will not work when running autogen through hack\make.ps1. 
# It is suspected that the required GCC utilities (eg gcc, windres, windmc) silently
# quit due to the use of console hooks which are not available.
#
# The docker integration tests do not currently run in a container on Windows, predominantly
# due to Windows not supporting privileged mode, so anything using a volume would fail.
# They (along with the rest of the docker CI suite) can be run using 
# https://github.com/kevpar/docker-w2wCIScripts/blob/master/runCI/Invoke-DockerCI.ps1.
#
# -----------------------------------------------------------------------------------------


# The number of build steps below are explicitly minimised to improve performance.

# Extremely important - do not change the following line to reference a ""specific"" image, 
# such as `mcr.microsoft.com/windows/servercore:ltsc2019`. If using this Dockerfile in process
# isolated containers, the kernel of the host must match the container image, and hence
# would fail between Windows Server 2016 (aka RS1) and Windows Server 2019 (aka RS5).
# It is expected that the image `microsoft/windowsservercore:latest` is present, and matches
# the hosts kernel version before doing a build. 
",2019/09/26 18:59,,2015/12/01 17:47,,1,1395 days 01:12:00.000000000,削除されていません
249,"docker
docker-ce",https://github.com/docker/docker-ce,9a9d90f97d60b698ff9786ef021b75881ee294f8,components/engine/Dockerfile.simple,components/engine/Dockerfile.simple,"# docker build -t docker:simple -f Dockerfile.simple .
# docker run --rm docker:simple hack/make.sh dynbinary
# docker run --rm --privileged docker:simple hack/dind hack/make.sh test-unit
# docker run --rm --privileged -v /var/lib/docker docker:simple hack/dind hack/make.sh dynbinary test-integration

# This represents the bare minimum required to build and test Docker.

",2017/06/17 09:18,,2015/02/28 14:37,,1,839 days 18:41:00.000000000,削除されていません
250,"docker
docker-ce",https://github.com/docker/docker-ce,91c1ef0fbfd3df31b78094b54869d49bf78afeeb,components/engine/Dockerfile.simple,components/engine/Dockerfile.simple,"# Install runc, containerd, tini and docker-proxy
# Please edit hack/dockerfile/install/<name>.installer to update them.
",2017/12/08 10:10,,2015/02/28 14:37,,1,1013 days 19:33:00.000000000,削除されていません
283,"docker
docker-ce",https://github.com/docker/docker-ce,e4ccd4c846b6e85d2543ad6649dff52d3e303c70,components/engine/Dockerfile,components/engine/Dockerfile,"# TODO: Some of this is only really needed for testing, it would be nice to split this up
",2017/09/30 06:09,,2013/06/22 11:42,,1,1560 days 18:27:00.000000000,削除されていません
288,"docker
docker-ce",https://github.com/docker/docker-ce,b03d2799c83d1ada6b7ce96e59dfc885d7995c40,components/engine/Dockerfile,components/engine/Dockerfile,"# TODO: This is here because hack/make.sh binary copies these extras binaries
# from $PATH into the bundles dir.
# It would be nice to handle this in a different way.
",2019/07/17 21:37,,2013/06/22 11:42,,1,2216 days 09:55:00.000000000,削除されていません
289,"docker
docker-ce",https://github.com/docker/docker-ce,b03d2799c83d1ada6b7ce96e59dfc885d7995c40,components/engine/Dockerfile,components/engine/Dockerfile,"# Install go-swagger for validating swagger.yaml
# This is https://github.com/kolyshkin/go-swagger/tree/golang-1.13-fix
# TODO: move to under moby/ or fix upstream go-swagger to work for us.
",2019/07/17 21:37,,2013/06/22 11:42,,1,2216 days 09:55:00.000000000,削除されていません
290,"docker
docker-ce",https://github.com/docker/docker-ce,0064565ac48a38f084f45f4fb476b5c2bed4b1d9,components/engine/Dockerfile,components/engine/Dockerfile,"# Switch to use iptables instead of nftables (to match the CI hosts)
# TODO use some kind of runtime auto-detection instead if/when nftables is supported (https://github.com/moby/moby/issues/26824)
",2020/01/15 23:22,,2013/06/22 11:42,,1,2398 days 11:40:00.000000000,削除されていません
381,"docker
docker-ce",https://github.com/docker/docker-ce,0aa2494eadf3ef807aa3fc27674c8c4d9925fb31,components/cli/dockerfiles/Dockerfile.dev,components/cli/dockerfiles/Dockerfile.dev,"# FIXME(vdemeester) only used for e2e, could be in e2e special image in the future
",2018/03/06 19:15,,2017/04/19 08:12,,1,321 days 11:03:00.000000000,削除されていません
393,"docker
docker-ce",https://github.com/docker/docker-ce,f4a7b443427875047af645e72059618ea9e14d9c,components/cli/dockerfiles/Dockerfile.e2e,components/cli/dockerfiles/Dockerfile.e2e,"# TODO - consider replacing with an official image and a multi-stage build to pluck the binaries out
#ARG CONTAINERD_VERSION=v1.1.2
#ARG CONTAINERD_VERSION=47a128d
#ARG CONTAINERD_VERSION=6c3e782f
",2018/03/20 07:56,,2018/05/17 20:11,,1,-59 days +11:45:00.000000000,削除されていません
394,"docker
docker-ce",https://github.com/docker/docker-ce,f4a7b443427875047af645e72059618ea9e14d9c,components/cli/dockerfiles/Dockerfile.e2e,components/cli/dockerfiles/Dockerfile.e2e,"# TODO - consider replacing with an official image and a multi-stage build to pluck the binaries out
",2018/03/20 07:56,,2018/05/17 20:11,,1,-59 days +11:45:00.000000000,削除されていません
397,"docker-library
redis",https://github.com/docker-library/redis,1b36753550afda4dd1227e883ddb2bb50b30c810,5.0/alpine/Dockerfile,5.0/alpine/Dockerfile,"# TODO https://github.com/redis/redis/pull/3494 (deduplicate ""redis-server"" copies)
",2020/08/11 02:05,,2016/05/06 21:48,,1,1557 days 04:17:00.000000000,削除されていません
399,"docker-library
redis",https://github.com/docker-library/redis,1b36753550afda4dd1227e883ddb2bb50b30c810,Dockerfile-alpine.template,Dockerfile-alpine.template,"# TODO https://github.com/redis/redis/pull/3494 (deduplicate ""redis-server"" copies)
",2020/08/11 02:05,,2019/12/28 05:58,,1,226 days 20:07:00.000000000,削除されていません
401,"docker-library
redis",https://github.com/docker-library/redis,1b36753550afda4dd1227e883ddb2bb50b30c810,5.0/Dockerfile,5.0/Dockerfile,"# TODO https://github.com/redis/redis/pull/3494 (deduplicate ""redis-server"" copies)
",2020/08/11 02:05,,2018/06/22 04:14,,1,780 days 21:51:00.000000000,削除されていません
403,"docker-library
redis",https://github.com/docker-library/redis,1b36753550afda4dd1227e883ddb2bb50b30c810,Dockerfile.template,Dockerfile.template,"# TODO https://github.com/redis/redis/pull/3494 (deduplicate ""redis-server"" copies)
",2020/08/11 02:05,,2019/12/28 05:58,,1,226 days 20:07:00.000000000,削除されていません
405,"docker-library
redis",https://github.com/docker-library/redis,1b36753550afda4dd1227e883ddb2bb50b30c810,6.0/Dockerfile,6.0/Dockerfile,"# TODO https://github.com/redis/redis/pull/3494 (deduplicate ""redis-server"" copies)
",2020/08/11 02:05,,2019/12/20 02:26,,1,234 days 23:39:00.000000000,削除されていません
407,"docker-library
redis",https://github.com/docker-library/redis,1b36753550afda4dd1227e883ddb2bb50b30c810,5.0/32bit/Dockerfile,5.0/32bit/Dockerfile,"# TODO https://github.com/redis/redis/pull/3494 (deduplicate ""redis-server"" copies)
",2020/08/11 02:05,,2018/06/22 04:14,,1,780 days 21:51:00.000000000,削除されていません
409,"docker-library
redis",https://github.com/docker-library/redis,1b36753550afda4dd1227e883ddb2bb50b30c810,6.0/alpine/Dockerfile,6.0/alpine/Dockerfile,"# TODO https://github.com/redis/redis/pull/3494 (deduplicate ""redis-server"" copies)
",2020/08/11 02:05,,2019/12/20 02:26,,1,234 days 23:39:00.000000000,削除されていません
415,"tianon
gosu",https://github.com/tianon/gosu,5fb235fb1f30d3fbbacd516033b1546dd246fef5,Dockerfile,Dockerfile,"# TODO pin specific commit

# cache-fill
",2014/11/05 09:30,,2014/07/15 04:52,,1,113 days 04:38:00.000000000,削除されていません
416,"31z4
zookeeper-docker",https://github.com/31z4/zookeeper-docker,15b6f73b9f36a8bf4960c661427ac41de49cf534,3.5.3-beta/Dockerfile,3.5.8/Dockerfile,"    # TODO: the distribution given by apache is not gzipped correctly - unzip correctly when fixed
",2017/10/24 14:12,,2017/10/24 14:12,,1,0 days 00:00:00.000000000,削除されていません
420,"vmware
photon",https://github.com/vmware/photon,a765f0a0375e07e7cad850cf374e748ed92d7420,support/dockerfiles/photon/make-docker-image.sh,support/dockerfiles/photon/make-docker-image.sh,"# TODO: remove this line after updating photon-build image with new
# versions of sqlite and rpm with -libs subpackages
",2016/11/23 08:17,,2015/04/16 03:00,,1,587 days 05:17:00.000000000,削除されていません
426,"docker
compose",https://github.com/docker/compose,f472fd545be79860a3c9e03b6e63fbacb86977d1,Dockerfile,Dockerfile,"# FIXME(chris-crone): virtualenv 16.3.0 breaks build, force 16.2.0 until fixed
",2019/02/05 18:51,,2014/01/17 02:28,,1,1845 days 16:23:00.000000000,削除されていません
428,"docker-library
redmine",https://github.com/docker-library/redmine,0ca74edc277862714856657aa9df3b7fab4d4b6f,4.0/alpine/Dockerfile,4.0/alpine/Dockerfile,"# Todo: remove build dependencies
#	runDeps=""$( \
#		scanelf --needed --nobanner --format '%n#p' --recursive /usr/local/bundle/gems \
#		| tr ',' '\n' \
#		| sort -u \
#		| awk 'system(""[ -e /usr/local/lib/"" $1 "" ]"") == 0 { next } { print ""so:"" $1 }' \
#	)""; \
#	apk add --virtual .redmine-rundeps $runDeps; \
#	apk del .build-deps

",2019/04/05 01:29,,2019/04/05 01:29,,1,0 days 00:00:00.000000000,削除されていません
429,"docker-library
redmine",https://github.com/docker-library/redmine,0ca74edc277862714856657aa9df3b7fab4d4b6f,Dockerfile-alpine.template,Dockerfile-alpine.template,"# Todo: remove build dependencies
#	runDeps=""$( \
#		scanelf --needed --nobanner --format '%n#p' --recursive /usr/local/bundle/gems \
#		| tr ',' '\n' \
#		| sort -u \
#		| awk 'system(""[ -e /usr/local/lib/"" $1 "" ]"") == 0 { next } { print ""so:"" $1 }' \
#	)""; \
#	apk add --virtual .redmine-rundeps $runDeps; \
#	apk del .build-deps

",2019/04/05 01:29,,2019/04/05 01:29,,1,0 days 00:00:00.000000000,削除されていません
430,"containous
traefik",https://github.com/containous/traefik,a5a8d6929e793f6c3a70b1b84f68973c506deced,build.Dockerfile,build.Dockerfile,"# This is a hack (see libcompose#32) - will be removed when libcompose will be fixed
# (i.e go get able)
",2015/09/27 22:56,,2015/09/16 04:38,,1,11 days 18:18:00.000000000,削除されていません
433,"docker-library
hello-world",https://github.com/docker-library/hello-world,7d0ee592e4ed60e2da9d59331e16ecdcadc1ed87,Dockerfile.build,Dockerfile.build,"# TODO TARGET_ARCH='i386' (heinous package conflicts trying to get ""gcc -m32""/""gcc-multilib"" to work with all the cross-compiling gccs)

",2017/06/14 07:55,,2015/06/19 07:48,,1,726 days 00:07:00.000000000,削除されていません
434,"docker-library
wordpress",https://github.com/docker-library/wordpress,591388696848f29bfa627ab38f78678135096f15,php7.2/fpm/Dockerfile,php7.2/fpm/Dockerfile,"# TODO consider removing the *-dev deps and only keeping the necessary lib* packages

# set recommended PHP.ini settings
# see https://secure.php.net/manual/en/opcache.installation.php
",2017/12/09 05:43,,2017/12/09 05:43,,1,0 days 00:00:00.000000000,削除されていません
435,"docker-library
wordpress",https://github.com/docker-library/wordpress,591388696848f29bfa627ab38f78678135096f15,php7.2/apache/Dockerfile,php7.2/apache/Dockerfile,"# TODO consider removing the *-dev deps and only keeping the necessary lib* packages

# set recommended PHP.ini settings
# see https://secure.php.net/manual/en/opcache.installation.php
",2017/12/09 05:43,,2017/12/09 05:43,,1,0 days 00:00:00.000000000,削除されていません
442,"docker-library
wordpress",https://github.com/docker-library/wordpress,54a2bbb62edf0b2ddba14bcb3ab532c6186c9737,Dockerfile-debian.template,Dockerfile-debian.template,"# TODO consider removing the *-dev deps and only keeping the necessary lib* packages

# set recommended PHP.ini settings
# see https://secure.php.net/manual/en/opcache.installation.php
",2017/07/26 06:18,,2016/10/07 04:29,,1,292 days 01:49:00.000000000,削除されていません
447,"docker-library
tomcat",https://github.com/docker-library/tomcat,ee7ff91af066dc7df9d88e3cb842c40f0b6d164b,8.5/jdk13/openjdk-oracle/Dockerfile,8.5/jdk14/openjdk-oraclelinux7/Dockerfile,"# TODO there's an odd bug on Oracle Linux where installing ""cpp"" (which gets pulled in as a dependency of ""gcc"") and then marking it as automatically-installed will result in the ""filesystem"" package being removed during ""yum autoremove"" (which then fails), so we set it as manually-installed to compensate
",2019/07/03 06:41,,2019/07/03 06:41,,1,0 days 00:00:00.000000000,削除されていません
448,"docker-library
tomcat",https://github.com/docker-library/tomcat,ee7ff91af066dc7df9d88e3cb842c40f0b6d164b,9.0/jdk13/openjdk-oracle/Dockerfile,9.0/jdk14/openjdk-oraclelinux7/Dockerfile,"# TODO there's an odd bug on Oracle Linux where installing ""cpp"" (which gets pulled in as a dependency of ""gcc"") and then marking it as automatically-installed will result in the ""filesystem"" package being removed during ""yum autoremove"" (which then fails), so we set it as manually-installed to compensate
",2019/07/03 06:41,,2019/07/03 06:41,,1,0 days 00:00:00.000000000,削除されていません
452,"docker-library
tomcat",https://github.com/docker-library/tomcat,ee7ff91af066dc7df9d88e3cb842c40f0b6d164b,9.0/jdk8/corretto/Dockerfile,9.0/jdk8/corretto/Dockerfile,"# TODO there's an odd bug on Oracle Linux where installing ""cpp"" (which gets pulled in as a dependency of ""gcc"") and then marking it as automatically-installed will result in the ""filesystem"" package being removed during ""yum autoremove"" (which then fails), so we set it as manually-installed to compensate
",2019/07/03 06:41,,2019/06/25 09:08,,1,7 days 21:33:00.000000000,削除されていません
457,"docker-library
tomcat",https://github.com/docker-library/tomcat,ee7ff91af066dc7df9d88e3cb842c40f0b6d164b,7/jdk8/corretto/Dockerfile,7/jdk8/corretto/Dockerfile,"# TODO there's an odd bug on Oracle Linux where installing ""cpp"" (which gets pulled in as a dependency of ""gcc"") and then marking it as automatically-installed will result in the ""filesystem"" package being removed during ""yum autoremove"" (which then fails), so we set it as manually-installed to compensate
",2019/07/03 06:41,,2019/06/25 09:08,,1,7 days 21:33:00.000000000,削除されていません
462,"docker-library
tomcat",https://github.com/docker-library/tomcat,ee7ff91af066dc7df9d88e3cb842c40f0b6d164b,8.5/jdk11/corretto/Dockerfile,8.5/jdk11/corretto/Dockerfile,"# TODO there's an odd bug on Oracle Linux where installing ""cpp"" (which gets pulled in as a dependency of ""gcc"") and then marking it as automatically-installed will result in the ""filesystem"" package being removed during ""yum autoremove"" (which then fails), so we set it as manually-installed to compensate
",2019/07/03 06:41,,2019/06/25 09:08,,1,7 days 21:33:00.000000000,削除されていません
466,"docker-library
tomcat",https://github.com/docker-library/tomcat,ee7ff91af066dc7df9d88e3cb842c40f0b6d164b,9.0/jdk11/corretto/Dockerfile,9.0/jdk11/corretto/Dockerfile,"# TODO there's an odd bug on Oracle Linux where installing ""cpp"" (which gets pulled in as a dependency of ""gcc"") and then marking it as automatically-installed will result in the ""filesystem"" package being removed during ""yum autoremove"" (which then fails), so we set it as manually-installed to compensate
",2019/07/03 06:41,,2019/06/25 09:08,,1,7 days 21:33:00.000000000,削除されていません
470,"docker-library
tomcat",https://github.com/docker-library/tomcat,ee7ff91af066dc7df9d88e3cb842c40f0b6d164b,8.5/jdk8/corretto/Dockerfile,8.5/jdk8/corretto/Dockerfile,"# TODO there's an odd bug on Oracle Linux where installing ""cpp"" (which gets pulled in as a dependency of ""gcc"") and then marking it as automatically-installed will result in the ""filesystem"" package being removed during ""yum autoremove"" (which then fails), so we set it as manually-installed to compensate
",2019/07/03 06:41,,2019/06/25 09:08,,1,7 days 21:33:00.000000000,削除されていません
474,"docker-library
tomcat",https://github.com/docker-library/tomcat,ee7ff91af066dc7df9d88e3cb842c40f0b6d164b,Dockerfile-yum.template,Dockerfile-yum.template,"# TODO there's an odd bug on Oracle Linux where installing ""cpp"" (which gets pulled in as a dependency of ""gcc"") and then marking it as automatically-installed will result in the ""filesystem"" package being removed during ""yum autoremove"" (which then fails), so we set it as manually-installed to compensate
",2019/07/03 06:41,,2019/06/25 09:08,,1,7 days 21:33:00.000000000,削除されていません
475,"docker-library
tomcat",https://github.com/docker-library/tomcat,ec75141e3cb6276b07d66c16042152e2d4de119c,8.5/jre8/Dockerfile,8.5/jdk11/openjdk-buster/Dockerfile,"# http://tomcat.10.x6.nabble.com/VOTE-Release-Apache-Tomcat-8-0-32-tp5046007p5048274.html (ie, HACK HACK HACK)
",2016/04/23 05:22,,2016/04/02 01:43,,1,21 days 03:39:00.000000000,削除されていません
476,"docker-library
tomcat",https://github.com/docker-library/tomcat,ec75141e3cb6276b07d66c16042152e2d4de119c,9.0/jre8/Dockerfile,9.0/jdk11/openjdk-buster/Dockerfile,"# http://tomcat.10.x6.nabble.com/VOTE-Release-Apache-Tomcat-8-0-32-tp5046007p5048274.html (ie, HACK HACK HACK)
",2016/04/23 05:22,,2016/04/02 03:02,,1,21 days 02:20:00.000000000,削除されていません
477,"docker-library
tomcat",https://github.com/docker-library/tomcat,ec75141e3cb6276b07d66c16042152e2d4de119c,8.0/jre8/Dockerfile,9.0/jdk8/openjdk-buster/Dockerfile,"# http://tomcat.10.x6.nabble.com/VOTE-Release-Apache-Tomcat-8-0-32-tp5046007p5048274.html (ie, HACK HACK HACK)
",2016/04/23 05:22,,2014/11/21 07:04,,1,518 days 22:18:00.000000000,削除されていません
478,"docker-library
tomcat",https://github.com/docker-library/tomcat,ec75141e3cb6276b07d66c16042152e2d4de119c,8.0/jre7/Dockerfile,8.5/jdk8/openjdk-slim-buster/Dockerfile,"# http://tomcat.10.x6.nabble.com/VOTE-Release-Apache-Tomcat-8-0-32-tp5046007p5048274.html (ie, HACK HACK HACK)
",2016/04/23 05:22,,2014/10/23 08:32,,1,547 days 20:50:00.000000000,削除されていません
479,"docker-library
tomcat",https://github.com/docker-library/tomcat,8aed00cdb1a1f1496895784e80f239079dcee411,10.0/jdk8/corretto/Dockerfile,10.0/jdk8/corretto/Dockerfile,"# TODO there's an odd bug on Oracle Linux where installing ""cpp"" (which gets pulled in as a dependency of ""gcc"") and then marking it as automatically-installed will result in the ""filesystem"" package being removed during ""yum autoremove"" (which then fails), so we set it as manually-installed to compensate
",2020/04/23 09:23,,2020/04/23 09:23,,1,0 days 00:00:00.000000000,削除されていません
480,"docker-library
tomcat",https://github.com/docker-library/tomcat,8aed00cdb1a1f1496895784e80f239079dcee411,10.0/jdk14/openjdk-oracle/Dockerfile,10.0/jdk14/openjdk-oraclelinux7/Dockerfile,"# TODO there's an odd bug on Oracle Linux where installing ""cpp"" (which gets pulled in as a dependency of ""gcc"") and then marking it as automatically-installed will result in the ""filesystem"" package being removed during ""yum autoremove"" (which then fails), so we set it as manually-installed to compensate
",2020/04/23 09:23,,2020/04/23 09:23,,1,0 days 00:00:00.000000000,削除されていません
481,"docker-library
tomcat",https://github.com/docker-library/tomcat,8aed00cdb1a1f1496895784e80f239079dcee411,10.0/jdk11/corretto/Dockerfile,10.0/jdk11/corretto/Dockerfile,"# TODO there's an odd bug on Oracle Linux where installing ""cpp"" (which gets pulled in as a dependency of ""gcc"") and then marking it as automatically-installed will result in the ""filesystem"" package being removed during ""yum autoremove"" (which then fails), so we set it as manually-installed to compensate
",2020/04/23 09:23,,2020/04/23 09:23,,1,0 days 00:00:00.000000000,削除されていません
483,"zendtech
php-zendserver-docker",https://github.com/zendtech/php-zendserver-docker,e5b879923a6ffd5c342adc77a8c67361a4b38ebf,9.1/7.1/Dockerfile,9.1/7.1/Dockerfile,"#Copy Zray docker plugin
#TODO: Integrate Zray docker plugin into Zend Server
",2018/01/18 22:53,,2017/04/13 22:52,,1,280 days 00:01:00.000000000,削除されていません
485,"zendtech
php-zendserver-docker",https://github.com/zendtech/php-zendserver-docker,cdbc844cac75163cb4880aed38bbfcc7473b4029,8.5/5.6/Dockerfile,8.5/5.6/Dockerfile,"#Copy Zray docker plugin
#TODO: Integrate Zray docker plugin into Zend Server
",2019/04/24 20:47,,2015/10/11 19:18,,1,1291 days 01:29:00.000000000,削除されていません
488,"zendtech
php-zendserver-docker",https://github.com/zendtech/php-zendserver-docker,7ab162d48d5bbf815f0b6ca947ff3c358d18ae92,2019.0/Dockerfile,2019.0/Dockerfile,"#Copy Zray docker plugin
#TODO: Integrate Zray docker plugin into Zend Server
",2019/07/22 17:45,,2019/07/22 17:45,,1,0 days 00:00:00.000000000,削除されていません
496,"zendtech
php-zendserver-docker",https://github.com/zendtech/php-zendserver-docker,408fe81249d365ca7e7bac96a137c9e2b453fc6e,nightly/7.2/Dockerfile,nightly/7.2/Dockerfile,"#Copy Zray docker plugin
#TODO: Integrate Zray docker plugin into Zend Server
",2018/08/07 17:55,,2018/08/07 17:55,,1,0 days 00:00:00.000000000,削除されていません
500,"docker-library
busybox",https://github.com/docker-library/busybox,4bede2d8a0805ac73ce3c04f430a03bccb8f88e9,uclibc/Dockerfile.builder,uclibc/Dockerfile.builder,"# TODO s390x ? (needs BR2_TOOLCHAIN_BUILDROOT_UCLIBC support)
",2017/07/02 02:11,,2015/02/03 15:02,,1,879 days 11:09:00.000000000,削除されていません
501,"docker-library
busybox",https://github.com/docker-library/busybox,4bede2d8a0805ac73ce3c04f430a03bccb8f88e9,uclibc/Dockerfile.builder,uclibc/Dockerfile.builder,"# TODO ppc64el ? (needs BR2_TOOLCHAIN_BUILDROOT_UCLIBC support)
",2017/07/02 02:11,,2015/02/03 15:02,,1,879 days 11:09:00.000000000,削除されていません
503,"docker-library
busybox",https://github.com/docker-library/busybox,6b303c84f063bea2bc3bc86dc86c4db1f3a8b5d3,glibc/Dockerfile.builder,glibc/Dockerfile.builder,"# hack hack hack hack hack
# with glibc, static busybox uses libnss for DNS resolution :(
",2016/01/08 03:46,,2016/01/08 03:46,,1,0 days 00:00:00.000000000,削除されていません
508,"docker-library
busybox",https://github.com/docker-library/busybox,8b0d96682de7f70e9a67bc9ab1a488da289ede38,musl/Dockerfile.builder,musl/Dockerfile.builder,"# TODO remove CONFIG_FEATURE_SYNC_FANCY from this explicit list after the next release of busybox (since it's disabled by default upstream now; 1.27+)
# CONFIG_LAST_SUPPORTED_WCHAR: see https://github.com/docker-library/busybox/issues/13 (UTF-8 input)
# see http://wiki.musl-libc.org/wiki/Building_Busybox
",2017/05/16 05:19,,2016/01/08 03:46,,1,494 days 01:33:00.000000000,削除されていません
512,"haskell
docker-haskell",https://github.com/haskell/docker-haskell,3d147020c8d2beb5a52cb3b9ef89712f9e2c1939,7.8/Dockerfile,7.8/Dockerfile,"## install additional libs typically needed by hackage packages
#RUN apt-get update && \
#    apt-get install ${OPTS_APT} zlib1g-dev libtinfo-dev

## run ghci by default unless a command is specified
",2015/03/28 01:31,,2014/05/29 11:51,,1,302 days 13:40:00.000000000,削除されていません
513,"haskell
docker-haskell",https://github.com/haskell/docker-haskell,3d147020c8d2beb5a52cb3b9ef89712f9e2c1939,7.10/Dockerfile,7.10/Dockerfile,"## install additional libs typically needed by hackage packages
#RUN apt-get update && \
#    apt-get install ${OPTS_APT} zlib1g-dev libtinfo-dev

## run ghci by default unless a command is specified
",2015/03/28 01:31,,2015/03/28 01:31,,1,0 days 00:00:00.000000000,削除されていません
514,"docker-library
memcached",https://github.com/docker-library/memcached,6c09fae709f1cee21d63f7b3619cad097edb6609,alpine/Dockerfile,alpine/Dockerfile,"# TODO https://github.com/memcached/memcached/issues/382 ""t/chunked-extstore.t is flaky on arm32v6""
",2018/05/30 04:45,,2016/01/18 20:51,,1,862 days 07:54:00.000000000,削除されていません
515,"docker-library
memcached",https://github.com/docker-library/memcached,6c09fae709f1cee21d63f7b3619cad097edb6609,debian/Dockerfile,debian/Dockerfile,"# TODO https://github.com/memcached/memcached/issues/382 ""t/chunked-extstore.t is flaky on arm32v6""
",2018/05/30 04:45,,2015/01/01 06:36,,1,1244 days 22:09:00.000000000,削除されていません
516,"cloudbees
jenkins-ci.org-docker",https://github.com/cloudbees/jenkins-ci.org-docker,ae123feaec324dc35350a8bd9ab2704597857f38,Dockerfile-alpine,Dockerfile-alpine,"# FIXME(oleg_nenashev): This is not an official AdoptOpenJDK Docker Image.
# There is no official Alpine images at the moment.
# Needs upgrade when/if there is an official alpine image.
",2020/08/13 18:42,,2017/07/20 18:53,,1,1119 days 23:49:00.000000000,削除されていません
517,"cloudbees
jenkins-ci.org-docker",https://github.com/cloudbees/jenkins-ci.org-docker,07d980e247edc241b6835df024e876cfdb469cad,Dockerfile-jdk11,Dockerfile-jdk11,"# TODO: revert before the GA release of Java 11 support (JENKINS-55087)
",2018/12/08 06:13,,2015/03/17 19:24,,1,1361 days 10:49:00.000000000,削除されていません
519,"docker-library
docs",https://github.com/docker-library/docs,eb5d2577d11856d5bfff9de942ce05cbaa89e63e,.template-helpers/generate-dockerfile-links-partial.tmpl,.template-helpers/generate-dockerfile-links-partial.tmpl,/* TODO decide what to do (if anything) about non-GitHub repos with respect to URL */,2016/06/07 02:56,,2016/06/07 02:56,,1,0 days 00:00:00.000000000,削除されていません
520,"docker-library
docs",https://github.com/docker-library/docs,2633e18b556b92de3d9ce9280b833cd61e941ac2,Dockerfile,Dockerfile,"# TODO find a way to make --mirror-only / SSL work with backpan too :(
",2015/02/11 06:12,,2014/10/22 13:29,,1,111 days 16:43:00.000000000,削除されていません
521,"docker-library
docs",https://github.com/docker-library/docs,2633e18b556b92de3d9ce9280b833cd61e941ac2,Dockerfile,Dockerfile,"# TODO find a way to make --verify work with backpan as well :'(
#ENV PERL_CPANM_OPT $PERL_CPANM_OPT --verify

# reinstall cpanm itself, for good measure
",2015/02/11 06:12,,2014/10/22 13:29,,1,111 days 16:43:00.000000000,削除されていません
523,"RocketChat
Rocket.Chat",https://github.com/RocketChat/Rocket.Chat,79c023e0fb6c24d77c9c06a4bb34b5247565e0fb,.docker/Dockerfile.rhel,.docker/Dockerfile.rhel,"# This is ugly... But for some reason npm and node aren't available at this stage.
",2018/04/11 05:09,,2018/04/11 05:09,,1,0 days 00:00:00.000000000,削除されていません
524,"RocketChat
Rocket.Chat",https://github.com/RocketChat/Rocket.Chat,52439de994dcaac75645f39645dd68bc7e1c21b9,.docker/Dockerfile.rhel,.docker/Dockerfile.rhel,"# Hack needed to force use of bundled library instead of system level outdated library
# https://github.com/lovell/sharp/issues/892
",2018/07/19 04:37,,2018/04/18 12:53,,1,91 days 15:44:00.000000000,削除されていません
525,"ibm-messaging
mq-container",https://github.com/ibm-messaging/mq-container,ec68367227f5c4fd6a59fcab928af0584673a016,incubating/Dockerfile-sfbridge,incubating/Dockerfile-sfbridge,"# TODO: Create configuration file from environment variables?
# TODO: Add entrypoint to run the bridge
",2017/09/07 21:39,,2017/09/07 21:39,,1,0 days 00:00:00.000000000,削除されていません
526,"rocker-org
rocker",https://github.com/rocker-org/rocker,a35c1df7e3dced0956cc4c33fd32ef71a443d8c4,rstudio/testing/Dockerfile,rstudio/testing/Dockerfile,"  ## hack to avoid RStudio-bug in detecting build-dependencies         
  # && ln -s&& ln -s ln -s /usr/local/bin/R /usr/bin/R \
  # && ln -s&& ln -s ln -s /usr/local/lib/R /usr/lib/R

",2016/12/22 03:57,,2016/11/12 15:45,,1,39 days 12:12:00.000000000,削除されていません
542,"nginxinc
docker-nginx",https://github.com/nginxinc/docker-nginx,0501f0b73fd7fbfb139d1e98a7fd3b63426b16a1,stable/alpine-perl/Dockerfile,stable/alpine-perl/Dockerfile,"# fixme: needs to check out a tag on the next 1.14 release
",2019/03/11 23:46,,2017/04/13 22:07,,1,697 days 01:39:00.000000000,削除されていません
543,"nginxinc
docker-nginx",https://github.com/nginxinc/docker-nginx,0501f0b73fd7fbfb139d1e98a7fd3b63426b16a1,stable/alpine/Dockerfile,stable/alpine/Dockerfile,"# fixme: needs to check out a tag on the next 1.14 release
",2019/03/11 23:46,,2016/02/17 02:10,,1,1118 days 21:36:00.000000000,削除されていません
546,"docker-library
pypy",https://github.com/docker-library/pypy,d54416e2be73520a490eb0dd2819d8a2b4df3652,3.6/Dockerfile,3.6/Dockerfile,"# TODO rebuild other cffi modules here too? (other _*_build.py files)
",2019/03/28 07:11,,2019/02/12 09:21,,1,43 days 21:50:00.000000000,削除されていません
547,"docker-library
pypy",https://github.com/docker-library/pypy,d54416e2be73520a490eb0dd2819d8a2b4df3652,2.7/slim/Dockerfile,2.7/slim/Dockerfile,"# TODO rebuild other cffi modules here too? (other _*_build.py files)
",2019/03/28 07:11,,2014/12/20 07:57,,1,1558 days 23:14:00.000000000,削除されていません
548,"docker-library
pypy",https://github.com/docker-library/pypy,d54416e2be73520a490eb0dd2819d8a2b4df3652,3.6/slim/Dockerfile,3.6/slim/Dockerfile,"# TODO rebuild other cffi modules here too? (other _*_build.py files)
",2019/03/28 07:11,,2014/12/20 07:57,,1,1558 days 23:14:00.000000000,削除されていません
549,"docker-library
pypy",https://github.com/docker-library/pypy,d54416e2be73520a490eb0dd2819d8a2b4df3652,2.7/Dockerfile,2.7/Dockerfile,"# TODO rebuild other cffi modules here too? (other _*_build.py files)
",2019/03/28 07:11,,2014/12/17 08:36,,1,1561 days 22:35:00.000000000,削除されていません
550,"docker-library
pypy",https://github.com/docker-library/pypy,d54416e2be73520a490eb0dd2819d8a2b4df3652,Dockerfile-slim.template,Dockerfile-slim.template,"# TODO rebuild other cffi modules here too? (other _*_build.py files)
",2019/03/28 07:11,,2017/08/25 08:16,,1,579 days 22:55:00.000000000,削除されていません
553,"docker-library
pypy",https://github.com/docker-library/pypy,d54416e2be73520a490eb0dd2819d8a2b4df3652,Dockerfile.template,Dockerfile.template,"# TODO rebuild other cffi modules here too? (other _*_build.py files)
",2019/03/28 07:11,,2017/08/25 08:16,,1,579 days 22:55:00.000000000,削除されていません
554,"docker-library
drupal",https://github.com/docker-library/drupal,b05d762e4fa8ff852649ed6673c5653d9bb18401,8.6/fpm/Dockerfile,8.8/fpm-buster/Dockerfile,"# TODO switch to buster once https://github.com/docker-library/php/issues/865 is resolved in a clean way (either in the PHP image or in PHP itself)

# install the PHP extensions we need
",2019/07/20 05:48,,2017/08/04 22:07,,1,714 days 07:41:00.000000000,削除されていません
555,"docker-library
drupal",https://github.com/docker-library/drupal,b05d762e4fa8ff852649ed6673c5653d9bb18401,8.6/apache/Dockerfile,8.8/apache-buster/Dockerfile,"# TODO switch to buster once https://github.com/docker-library/php/issues/865 is resolved in a clean way (either in the PHP image or in PHP itself)

# install the PHP extensions we need
",2019/07/20 05:48,,2017/02/02 13:15,,1,897 days 16:33:00.000000000,削除されていません
556,"docker-library
drupal",https://github.com/docker-library/drupal,b05d762e4fa8ff852649ed6673c5653d9bb18401,8.7/fpm/Dockerfile,8.9/apache-buster/Dockerfile,"# TODO switch to buster once https://github.com/docker-library/php/issues/865 is resolved in a clean way (either in the PHP image or in PHP itself)

# install the PHP extensions we need
",2019/07/20 05:48,,2018/01/19 12:49,,1,546 days 16:59:00.000000000,削除されていません
557,"docker-library
drupal",https://github.com/docker-library/drupal,b05d762e4fa8ff852649ed6673c5653d9bb18401,8.7/apache/Dockerfile,8.9/fpm-buster/Dockerfile,"# TODO switch to buster once https://github.com/docker-library/php/issues/865 is resolved in a clean way (either in the PHP image or in PHP itself)

# install the PHP extensions we need
",2019/07/20 05:48,,2018/01/19 12:49,,1,546 days 16:59:00.000000000,削除されていません
558,"docker-library
drupal",https://github.com/docker-library/drupal,b05d762e4fa8ff852649ed6673c5653d9bb18401,7/fpm/Dockerfile,7/fpm-buster/Dockerfile,"# TODO switch to buster once https://github.com/docker-library/php/issues/865 is resolved in a clean way (either in the PHP image or in PHP itself)

# install the PHP extensions we need
",2019/07/20 05:48,,2016/01/22 08:03,,1,1274 days 21:45:00.000000000,削除されていません
560,"docker-library
drupal",https://github.com/docker-library/drupal,b05d762e4fa8ff852649ed6673c5653d9bb18401,7/apache/Dockerfile,7/apache-buster/Dockerfile,"# TODO switch to buster once https://github.com/docker-library/php/issues/865 is resolved in a clean way (either in the PHP image or in PHP itself)

# install the PHP extensions we need
",2019/07/20 05:48,,2015/04/15 08:20,,1,1556 days 21:28:00.000000000,削除されていません
561,"docker-library
drupal",https://github.com/docker-library/drupal,b05d762e4fa8ff852649ed6673c5653d9bb18401,Dockerfile-debian.template,Dockerfile-debian.template,"# TODO switch to buster once https://github.com/docker-library/php/issues/865 is resolved in a clean way (either in the PHP image or in PHP itself)

# install the PHP extensions we need
",2019/07/20 05:48,,2018/02/15 10:09,,1,519 days 19:39:00.000000000,削除されていません
562,"hashicorp
docker-vault",https://github.com/hashicorp/docker-vault,8d7d53f701331936ae654fff0249ccf872e5de44,0.8.3/Dockerfile,0.X/Dockerfile,"# By default you'll get a single-node development server that stores everything
# in RAM and bootstraps itself. Don't use this configuration for production.
",2017/09/20 01:09,,2017/09/20 01:09,,1,0 days 00:00:00.000000000,削除されていません
578,"docker-library
postgres",https://github.com/docker-library/postgres,064113e0e481a1d0542846b81858e457fde02c90,10/Dockerfile,10/Dockerfile,"# https://github.com/docker-library/postgres/issues/484 (clang-6.0 required, only available in stretch-backports)
# TODO remove this once we hit buster+
",2018/08/22 06:39,,2017/06/22 08:03,,1,425 days 22:36:00.000000000,削除されていません
579,"docker-library
postgres",https://github.com/docker-library/postgres,064113e0e481a1d0542846b81858e457fde02c90,11/Dockerfile,11/Dockerfile,"# https://github.com/docker-library/postgres/issues/484 (clang-6.0 required, only available in stretch-backports)
# TODO remove this once we hit buster+
",2018/08/22 06:39,,2018/05/26 04:46,,1,88 days 01:53:00.000000000,削除されていません
580,"docker-library
postgres",https://github.com/docker-library/postgres,064113e0e481a1d0542846b81858e457fde02c90,9.6/Dockerfile,9.6/Dockerfile,"# https://github.com/docker-library/postgres/issues/484 (clang-6.0 required, only available in stretch-backports)
# TODO remove this once we hit buster+
",2018/08/22 06:39,,2016/05/13 06:01,,1,831 days 00:38:00.000000000,削除されていません
581,"docker-library
postgres",https://github.com/docker-library/postgres,064113e0e481a1d0542846b81858e457fde02c90,9.5/Dockerfile,9.5/Dockerfile,"# https://github.com/docker-library/postgres/issues/484 (clang-6.0 required, only available in stretch-backports)
# TODO remove this once we hit buster+
",2018/08/22 06:39,,2015/07/09 01:47,,1,1140 days 04:52:00.000000000,削除されていません
582,"docker-library
postgres",https://github.com/docker-library/postgres,064113e0e481a1d0542846b81858e457fde02c90,Dockerfile-debian.template,Dockerfile-debian.template,"# https://github.com/docker-library/postgres/issues/484 (clang-6.0 required, only available in stretch-backports)
# TODO remove this once we hit buster+
",2018/08/22 06:39,,2014/08/02 06:15,,1,1481 days 00:24:00.000000000,削除されていません
584,"docker-library
postgres",https://github.com/docker-library/postgres,6f7881a307a7856aa7671260b1f0b690ca51b740,12/Dockerfile,12/Dockerfile,"# https://github.com/docker-library/postgres/issues/484 (clang-6.0 required, only available in stretch-backports)
# TODO remove this once we hit buster+
",2019/05/24 03:35,,2019/05/24 03:35,,1,0 days 00:00:00.000000000,削除されていません
586,"docker-library
postgres",https://github.com/docker-library/postgres,b96659493b841100dc75ed777bff01913d9fe9e1,13/Dockerfile,13/Dockerfile,"# https://github.com/docker-library/postgres/issues/484 (clang-6.0 required, only available in stretch-backports)
# TODO remove this once we hit buster+
",2020/05/22 00:26,,2020/05/22 00:26,,1,0 days 00:00:00.000000000,削除されていません
587,"docker-library
repo-info",https://github.com/docker-library/repo-info,bdc1ec69eaeffb190f5543403e25d9424d2e1ef2,Dockerfile.local,Dockerfile.local,"# TODO convert ""dpkg --print-architecture"" to Alpine architecture for downloading the correct architecture binary
",2019/04/09 07:52,,2016/07/23 08:16,,1,989 days 23:36:00.000000000,削除されていません
588,"docker-library
repo-info",https://github.com/docker-library/repo-info,ee22b9996661e2621ce486b0709aaf1d5dc173a7,Dockerfile.tag-details,Dockerfile.remote,"# TODO find a way to make --mirror-only / SSL work with backpan too :(
",2016/08/06 05:07,,2016/08/06 05:07,,1,0 days 00:00:00.000000000,削除されていません
589,"docker-library
repo-info",https://github.com/docker-library/repo-info,ee22b9996661e2621ce486b0709aaf1d5dc173a7,Dockerfile.tag-details,Dockerfile.remote,"# TODO find a way to make --verify work with backpan as well :'(
#ENV PERL_CPANM_OPT $PERL_CPANM_OPT --verify

# reinstall cpanm itself, for good measure
",2016/08/06 05:07,,2016/08/06 05:07,,1,0 days 00:00:00.000000000,削除されていません
594,"wikimedia
mediawiki-docker",https://github.com/wikimedia/mediawiki-docker,9bdcc59dc6ae7bf40eb7d23c6c0d3b133f174146,dev/Dockerfile,dev/Dockerfile,"	# Extensions
	# TODO: make submodules shallow clones?
",2019/06/28 06:31,,2017/12/21 02:08,,1,554 days 04:23:00.000000000,削除されていません
596,"hashicorp
docker-consul",https://github.com/hashicorp/docker-consul,56b6839bcf594c5bb796a86e860205c5fa5712b1,0.6/Dockerfile,0.X/Dockerfile,"# By default you'll get an insecure single-node development server that stores
# everything in RAM, exposes a web UI and HTTP endpoints, and bootstraps itself.
# Don't use this configuration for production.
",2016/07/06 18:33,,2016/01/30 04:18,,1,158 days 14:15:00.000000000,削除されていません
605,"docker-library
gcc",https://github.com/docker-library/gcc,3b33871fe9558262cb5ed6253d358f76710e9ccb,Dockerfile.template,Dockerfile.template,"# TODO for some reason, libgo + i386 fails on https://github.com/gcc-mirror/gcc/blob/gcc-7_1_0-release/libgo/runtime/proc.c#L154
# ""error unknown case for SETCONTEXT_CLOBBERS_TLS""
",2017/06/17 02:45,,2017/06/16 01:40,,1,1 days 01:05:00.000000000,削除されていません
609,"docker-library
gcc",https://github.com/docker-library/gcc,0a7f7464baaa3a24cdd35e1173d84ab94e32a14d,8/Dockerfile,8/Dockerfile,"# TODO for some reason, libgo + i386 fails on https://github.com/gcc-mirror/gcc/blob/gcc-7_1_0-release/libgo/runtime/proc.c#L154
# ""error unknown case for SETCONTEXT_CLOBBERS_TLS""
",2018/05/03 04:26,,2018/05/03 04:26,,1,0 days 00:00:00.000000000,削除されていません
613,"docker-library
gcc",https://github.com/docker-library/gcc,067197794df278e6be14a76a3e0ec80e9ad86941,9/Dockerfile,9/Dockerfile,"# TODO for some reason, libgo + i386 fails on https://github.com/gcc-mirror/gcc/blob/gcc-7_1_0-release/libgo/runtime/proc.c#L154
# ""error unknown case for SETCONTEXT_CLOBBERS_TLS""
",2019/05/04 07:11,,2019/05/04 07:11,,1,0 days 00:00:00.000000000,削除されていません
614,"docker-library
gcc",https://github.com/docker-library/gcc,97b046b578bd86cae5414d80b3ad0027c590aebd,10/Dockerfile,10/Dockerfile,"# TODO for some reason, libgo + i386 fails on https://github.com/gcc-mirror/gcc/blob/gcc-7_1_0-release/libgo/runtime/proc.c#L154
# ""error unknown case for SETCONTEXT_CLOBBERS_TLS""
",2020/05/08 05:24,,2020/05/08 05:24,,1,0 days 00:00:00.000000000,削除されていません
615,"tianon
dockerfiles",https://github.com/tianon/dockerfiles,019e3dafeac4116b4547194b6452de9de76610dd,docker-master/Dockerfile,docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
",2018/05/30 02:40,,2015/08/28 07:47,,1,1005 days 18:53:00.000000000,削除されていません
617,"tianon
dockerfiles",https://github.com/tianon/dockerfiles,f84280ef47393b585e38e86994de77d605f11028,containerd/Dockerfile,containerd/Dockerfile,"# TODO .asc / .sha256sum
",2020/03/27 08:17,,2020/03/27 08:17,,1,0 days 00:00:00.000000000,削除されていません
619,"tianon
dockerfiles",https://github.com/tianon/dockerfiles,c850c4e79e7a661bf983685b04c9c00d4a20700c,docker/master/dind/Dockerfile,docker-master/dind/Dockerfile,"# TODO aufs-tools

# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
",2017/03/11 16:10,,2015/08/28 07:47,,1,561 days 08:23:00.000000000,削除されていません
620,"tianon
dockerfiles",https://github.com/tianon/dockerfiles,019e3dafeac4116b4547194b6452de9de76610dd,docker-master/dind/Dockerfile,docker-master/dind/Dockerfile,"# https://github.com/docker/docker/tree/master/hack/dind
",2018/05/30 02:40,,2015/08/28 07:47,,1,1005 days 18:53:00.000000000,削除されていません
625,"tianon
dockerfiles",https://github.com/tianon/dockerfiles,8cfd903d3f1ffc976206ff75dab4dbfcd5274ca4,makemkv/Dockerfile,makemkv/Dockerfile,"# TODO find some way to include ccextractor (currently buster-only)

# FPL_MainFeature detection only seemed to work with OpenJDK 9 (8 was insufficient)
",2018/12/26 14:52,,2017/04/02 15:53,,1,632 days 22:59:00.000000000,削除されていません
626,"tianon
dockerfiles",https://github.com/tianon/dockerfiles,41fba5a095a778acf05150e538b08246b9354f8f,zoom/Dockerfile,zoom/Dockerfile,"# TODO copy/steal ""browser.sh"" stuff from slack

",2020/09/10 02:13,,2020/09/10 02:13,,1,0 days 00:00:00.000000000,削除されていません
628,"tianon
dockerfiles",https://github.com/tianon/dockerfiles,a5d820803f01e2582d45be1b00a2808ede979951,xen-orchestra/Dockerfile,xen-orchestra/Dockerfile,"# TODO see note above about redis
",2013/11/02 14:34,,2013/11/02 14:34,,1,0 days 00:00:00.000000000,削除されていません
629,"tianon
dockerfiles",https://github.com/tianon/dockerfiles,87b99df183f09b842b49ea7009ba7b6e2c1894f2,xen-orchestra/Dockerfile,xen-orchestra/Dockerfile,"#RUN cd /xo/xo-server/public/http && for e in ../../../xo-web/public/*; do ln -s ""$e""; done

# TODO use links to get a redis server/database instead (since that's where configuration actually goes)
",2014/02/08 13:56,,2013/11/02 14:34,,1,97 days 23:22:00.000000000,削除されていません
630,"tianon
dockerfiles",https://github.com/tianon/dockerfiles,2733bf5befe88d52b6e4126956499f97441871a6,docker-tianon/Dockerfile,docker-tianon/Dockerfile,"# https://github.com/docker/docker/tree/master/hack/dind
#ENV DIND_COMMIT 130b0bc6032cc675d064e1cc62626cacc9c07a57

#RUN set -eux; \
#	wget -O /usr/local/bin/dind ""https://raw.githubusercontent.com/docker/docker/${DIND_COMMIT}/hack/dind""; \
#	chmod +x /usr/local/bin/dind

",2020/04/19 02:20,,2017/09/19 02:59,,1,942 days 23:21:00.000000000,削除されていません
634,"tianon
dockerfiles",https://github.com/tianon/dockerfiles,ddf64adf1a6c26d5adf9c8fa1c895d01da9834ca,network-toolbox/alpine/Dockerfile,network-toolbox/alpine/Dockerfile,"# TODO add ""nbtscan"" when we get to Alpine 3.12 (if it makes it out of edge)
# https://pkgs.alpinelinux.org/packages?name=nbtscan&branch=edge&arch=x86_64

",2020/02/15 10:49,,2016/09/08 06:32,,1,1255 days 04:17:00.000000000,削除されていません
636,"tianon
dockerfiles",https://github.com/tianon/dockerfiles,16243eae94d9f611d158fb2dc03a0393630c47cc,speedtest/Dockerfile,speedtest/Dockerfile,"# TODO verify that ookla's ""armhf"" really is armv6
",2020/04/30 08:18,,2014/07/12 10:24,,1,2118 days 21:54:00.000000000,削除されていません
637,"tianon
dockerfiles",https://github.com/tianon/dockerfiles,16243eae94d9f611d158fb2dc03a0393630c47cc,speedtest/Dockerfile,speedtest/Dockerfile,"# TODO figure out what ookla means by their bare ""arm"" arch
",2020/04/30 08:18,,2014/07/12 10:24,,1,2118 days 21:54:00.000000000,削除されていません
638,"tianon
dockerfiles",https://github.com/tianon/dockerfiles,1d2040c390a50eca1338d03c4db5ec2db56ef3e2,grafana/Dockerfile,grafana/Dockerfile,"# TODO verify sha256 values! (add "".sha256"" to the end of this URL)
",2018/11/27 11:59,,2017/01/05 01:50,,1,691 days 10:09:00.000000000,削除されていません
639,"tianon
dockerfiles",https://github.com/tianon/dockerfiles,5f053bb00f6af3fad9a1a742cfbd689818160c2c,caff/Dockerfile,caff/Dockerfile,"# TODO move this down when COPY adheres to USER (and remove chown)
",2014/08/27 02:29,,2014/08/27 02:29,,1,0 days 00:00:00.000000000,削除されていません
646,"tianon
dockerfiles",https://github.com/tianon/dockerfiles,848b89e8272c2689af1499cc7642d3f3c9a31337,toybox/Dockerfile,toybox/Dockerfile,"# TODO set ""TARGET"" appropriately based on ""apk --print-arch"" to avoid ""uname -m"" detection
",2020/09/04 06:28,,2020/09/04 06:23,,1,0 days 00:05:00.000000000,削除されていません
647,"tianon
dockerfiles",https://github.com/tianon/dockerfiles,217170cf047605cd6919b5382a8af6476431d607,mojo/Dockerfile,mojo/Dockerfile,"# TODO pin a version
",2019/04/26 13:41,,2014/02/23 16:19,,1,1887 days 21:22:00.000000000,削除されていません
648,"tianon
dockerfiles",https://github.com/tianon/dockerfiles,217170cf047605cd6919b5382a8af6476431d607,mojo/Dockerfile,mojo/Dockerfile,"# TODO pin versions
",2019/04/26 13:41,,2014/02/23 16:19,,1,1887 days 21:22:00.000000000,削除されていません
649,"osrf
docker_images",https://github.com/osrf/docker_images,9210d0d9992df92f34b6b0450f803521b5483789,ros2/nightly/nightly/Dockerfile,ros2/nightly/nightly/Dockerfile,"# FIXME Remove this once rosdep detects ROS 2 packages https://github.com/ros-infrastructure/rosdep/issues/660
# ignore installed rosdep keys
",2019/03/22 09:35,,2018/10/20 13:18,,1,152 days 20:17:00.000000000,削除されていません
651,"osrf
docker_images",https://github.com/osrf/docker_images,3e6535bede473b60d71d009fd9b0596749bd311a,ros2/nightly/nightly/Dockerfile,ros2/nightly/nightly/Dockerfile,"# FIXME Remove this once ament_export_interfaces respects COLCON_CURRENT_PREFIX https://github.com/ament/ament_cmake/issues/173
#Workaround hard coded paths in nightly tarball setup scripts
",2019/06/06 08:44,,2018/10/20 13:18,,1,228 days 19:26:00.000000000,削除されていません
652,"osrf
docker_images",https://github.com/osrf/docker_images,244cc8f750b08c8b63f6008708ee1c810d7cecc6,ros2/source/devel/Dockerfile,ros2/source/devel/Dockerfile,"# FIXME This is a workaround for pytest not found causing builds to fail
# Following RUN statements tests for regression of https://github.com/ros2/ros2/issues/722
",2019/06/05 00:58,,2019/03/22 08:56,,1,74 days 16:02:00.000000000,削除されていません
654,"osrf
docker_images",https://github.com/osrf/docker_images,802c63f18487abd4e9b0fc95c095b2bf9f0835a0,sros/kinetic/Dockerfile,sros/kinetic/Dockerfile,"# FIXME renaming manifest.xml is a workaround for rosdep misbehaving when both
# manifest.xml and package.xml are present
# install dependencies
",2019/12/26 23:57,,2016/08/12 02:31,,1,1231 days 21:26:00.000000000,削除されていません
656,"Nexenta
nexentastor-csi-driver",https://github.com/Nexenta/nexentastor-csi-driver,b1776c49c8762b69856fb30f8edf05d824a83806,Dockerfile.csi-sanity,Dockerfile.csi-sanity,"# other csi-sanity options: --ginkgo.v -ginkgo.noColor
#TODO remove ""--ginkgo.skip"" option after fixing volume paginatin by token:
",2019/07/26 02:24,,2018/11/28 11:14,,1,239 days 15:10:00.000000000,削除されていません
659,"caddyserver
caddy-docker",https://github.com/caddyserver/caddy-docker,dbdd5294d5172438253ed6b5793b26e26ef30eb5,Dockerfile.tmpl,Dockerfile.tmpl,/** TODO: support other architectures here **/,2020/03/11 10:24,,2020/02/05 10:08,,1,35 days 00:16:00.000000000,削除されていません
661,"caddyserver
caddy-docker",https://github.com/caddyserver/caddy-docker,e57e714a75e86e3ba872b0d3885056155f25a237,Dockerfile.tmpl,Dockerfile.tmpl,"# TODO: alter filename after v2 release (version will be taken out of name)
",2020/03/15 20:54,,2020/02/05 10:08,,1,39 days 10:46:00.000000000,削除されていません
714,"docker
docker",https://github.com/docker/docker,d539038d9712daa44254412c6fcc6d78a14da691,Dockerfile,Dockerfile,"# TODO: Some of this is only really needed for testing, it would be nice to split this up
",2017/09/30 06:09,,2013/06/22 11:42,,1,1560 days 18:27:00.000000000,削除されていません
721,"docker
docker",https://github.com/docker/docker,4e3ab9e9fbca682f75eb350c8ad4312282869a03,Dockerfile,Dockerfile,"# TODO: This is here because hack/make.sh binary copies these extras binaries
# from $PATH into the bundles dir.
# It would be nice to handle this in a different way.
",2019/07/17 21:37,,2013/06/22 11:42,,1,2216 days 09:55:00.000000000,削除されていません
722,"docker
docker",https://github.com/docker/docker,4e3ab9e9fbca682f75eb350c8ad4312282869a03,Dockerfile,Dockerfile,"# Install go-swagger for validating swagger.yaml
# This is https://github.com/kolyshkin/go-swagger/tree/golang-1.13-fix
# TODO: move to under moby/ or fix upstream go-swagger to work for us.
",2019/07/17 21:37,,2013/06/22 11:42,,1,2216 days 09:55:00.000000000,削除されていません
723,"docker
docker",https://github.com/docker/docker,d1a3a17c671b9f89a90e59b58a92f04da0a4e3d9,Dockerfile,Dockerfile,"# Switch to use iptables instead of nftables (to match the CI hosts)
# TODO use some kind of runtime auto-detection instead if/when nftables is supported (https://github.com/moby/moby/issues/26824)
",2020/01/15 23:22,,2013/06/22 11:42,,1,2398 days 11:40:00.000000000,削除されていません
777,"docker
docker",https://github.com/docker/docker,be8885525c4d1ef4a13bbd6396f60e8657bc5573,Dockerfile.e2e,Dockerfile.e2e,"# Install dockercli
# Please edit hack/dockerfile/install/<name>.installer to update them.
",2017/12/08 10:10,,2017/09/08 23:43,,1,90 days 10:27:00.000000000,削除されていません
784,"docker
docker",https://github.com/docker/docker,bc82b139955c4a0edb20b070926469cceea0fbbb,Dockerfile.simple,Dockerfile.simple,"# docker build -t docker:simple -f Dockerfile.simple .
# docker run --rm docker:simple hack/make.sh dynbinary
# docker run --rm --privileged docker:simple hack/dind hack/make.sh test-unit
# docker run --rm --privileged -v /var/lib/docker docker:simple hack/dind hack/make.sh dynbinary test-integration

# This represents the bare minimum required to build and test Docker.

",2017/06/17 09:18,,2015/02/28 14:37,,1,839 days 18:41:00.000000000,削除されていません
785,"docker
docker",https://github.com/docker/docker,be8885525c4d1ef4a13bbd6396f60e8657bc5573,Dockerfile.simple,Dockerfile.simple,"# Install runc, containerd, tini and docker-proxy
# Please edit hack/dockerfile/install/<name>.installer to update them.
",2017/12/08 10:10,,2015/02/28 14:37,,1,1013 days 19:33:00.000000000,削除されていません
800,"docker
docker",https://github.com/docker/docker,83fd212f2cb71aae2f4a5a60c893c2bd01e59b72,Dockerfile.windows,Dockerfile.windows,"# escape=`

# -----------------------------------------------------------------------------------------
# This file describes the standard way to build Docker in a container on Windows
# Server 2016 or Windows 10.
#
# Maintainer: @jhowardmsft
# -----------------------------------------------------------------------------------------


# Prerequisites:
# --------------
#
# 1. Windows Server 2016 or Windows 10 with all Windows updates applied. The major 
#    build number must be at least 14393. This can be confirmed, for example, by 
#    running the following from an elevated PowerShell prompt - this sample output 
#    is from a fully up to date machine as at mid-November 2016:
#
#    >> PS C:\> $(gin).WindowsBuildLabEx
#    >> 14393.447.amd64fre.rs1_release_inmarket.161102-0100
#
# 2. Git for Windows (or another git client) must be installed. https://git-scm.com/download/win.
#
# 3. The machine must be configured to run containers. For example, by following
#    the quick start guidance at https://msdn.microsoft.com/en-us/virtualization/windowscontainers/quick_start/quick_start or
#    https://github.com/docker/labs/blob/master/windows/windows-containers/Setup.md
#
# 4. If building in a Hyper-V VM: For Windows Server 2016 using Windows Server
#    containers as the default option, it is recommended you have at least 1GB 
#    of memory assigned; For Windows 10 where Hyper-V Containers are employed, you
#    should have at least 4GB of memory assigned. Note also, to run Hyper-V 
#    containers in a VM, it is necessary to configure the VM for nested virtualization.

# -----------------------------------------------------------------------------------------


# Usage:
# -----
#
#  The following steps should be run from an (elevated*) Windows PowerShell prompt. 
#
#  (*In a default installation of containers on Windows following the quick-start guidance at
#    https://msdn.microsoft.com/en-us/virtualization/windowscontainers/quick_start/quick_start,
#    the docker.exe client must run elevated to be able to connect to the daemon).
#
# 1. Clone the sources from github.com:
#
#    >>   git clone https://github.com/docker/docker.git C:\gopath\src\github.com\docker\docker
#    >>   Cloning into 'C:\gopath\src\github.com\docker\docker'...
#    >>   remote: Counting objects: 186216, done.
#    >>   remote: Compressing objects: 100% (21/21), done.
#    >>   remote: Total 186216 (delta 5), reused 0 (delta 0), pack-reused 186195
#    >>   Receiving objects: 100% (186216/186216), 104.32 MiB | 8.18 MiB/s, done.
#    >>   Resolving deltas: 100% (123139/123139), done.
#    >>   Checking connectivity... done.
#    >>   Checking out files: 100% (3912/3912), done.
#    >>   PS C:\>
#
#
# 2. Change directory to the cloned docker sources:
#
#    >>   cd C:\gopath\src\github.com\docker\docker 
#
#
# 3. Build a docker image with the components required to build the docker binaries from source
#    by running one of the following:
#
#    >>   docker build -t nativebuildimage -f Dockerfile.windows .          
#    >>   docker build -t nativebuildimage -f Dockerfile.windows -m 2GB .    (if using Hyper-V containers)
#
#
# 4. Build the docker executable binaries by running one of the following:
#
#    >>   $DOCKER_GITCOMMIT=(git rev-parse --short HEAD)
#    >>   docker run --name binaries -e DOCKER_GITCOMMIT=$DOCKER_GITCOMMIT nativebuildimage hack\make.ps1 -Binary
#    >>   docker run --name binaries -e DOCKER_GITCOMMIT=$DOCKER_GITCOMMIT -m 2GB nativebuildimage hack\make.ps1 -Binary    (if using Hyper-V containers)
#
#
# 5. Copy the binaries out of the container, replacing HostPath with an appropriate destination 
#    folder on the host system where you want the binaries to be located.
#
#    >>   docker cp binaries:C:\gopath\src\github.com\docker\docker\bundles\docker.exe C:\HostPath\docker.exe
#    >>   docker cp binaries:C:\gopath\src\github.com\docker\docker\bundles\dockerd.exe C:\HostPath\dockerd.exe
#
#
# 6. (Optional) Remove the interim container holding the built executable binaries:
#
#    >>    docker rm binaries
#
#
# 7. (Optional) Remove the image used for the container in which the executable
#    binaries are build. Tip - it may be useful to keep this image around if you need to
#    build multiple times. Then you can take advantage of the builder cache to have an
#    image which has all the components required to build the binaries already installed.
#
#    >>    docker rmi nativebuildimage
#

# -----------------------------------------------------------------------------------------


#  The validation tests can only run directly on the host. This is because they calculate
#  information from the git repo, but the .git directory is not passed into the image as
#  it is excluded via .dockerignore. Run the following from a Windows PowerShell prompt
#  (elevation is not required): (Note Go must be installed to run these tests)
#
#    >>   hack\make.ps1 -DCO -PkgImports -GoFormat


# -----------------------------------------------------------------------------------------


#  To run unit tests, ensure you have created the nativebuildimage above. Then run one of
#  the following from an (elevated) Windows PowerShell prompt:
#
#    >>   docker run --rm nativebuildimage hack\make.ps1 -TestUnit
#    >>   docker run --rm -m 2GB nativebuildimage hack\make.ps1 -TestUnit    (if using Hyper-V containers)


# -----------------------------------------------------------------------------------------


#  To run unit tests and binary build, ensure you have created the nativebuildimage above. Then 
#  run one of the following from an (elevated) Windows PowerShell prompt:
#
#    >>   docker run nativebuildimage hack\make.ps1 -All
#    >>   docker run -m 2GB nativebuildimage hack\make.ps1 -All    (if using Hyper-V containers)

# -----------------------------------------------------------------------------------------


# Important notes:
# ---------------
#
# Don't attempt to use a bind mount to pass a local directory as the bundles target
# directory. It does not work (golang attempts for follow a mapped folder incorrectly).
# Instead, use docker cp as per the example.
#
# go.zip is not removed from the image as it is used by the Windows CI servers
# to ensure the host and image are running consistent versions of go.
#
# Nanoserver support is a work in progress. Although the image will build if the 
# FROM statement is updated, it will not work when running autogen through hack\make.ps1. 
# It is suspected that the required GCC utilities (eg gcc, windres, windmc) silently
# quit due to the use of console hooks which are not available.
#
# The docker integration tests do not currently run in a container on Windows, predominantly
# due to Windows not supporting privileged mode, so anything using a volume would fail.
# They (along with the rest of the docker CI suite) can be run using 
# https://github.com/kevpar/docker-w2wCIScripts/blob/master/runCI/Invoke-DockerCI.ps1.
#
# -----------------------------------------------------------------------------------------


# The number of build steps below are explicitly minimised to improve performance.

# Extremely important - do not change the following line to reference a ""specific"" image, 
# such as `mcr.microsoft.com/windows/servercore:ltsc2019`. If using this Dockerfile in process
# isolated containers, the kernel of the host must match the container image, and hence
# would fail between Windows Server 2016 (aka RS1) and Windows Server 2019 (aka RS5).
# It is expected that the image `microsoft/windowsservercore:latest` is present, and matches
# the hosts kernel version before doing a build. 
",2019/09/26 18:59,,2015/12/01 17:47,,1,1395 days 01:12:00.000000000,削除されていません
823,"docker-library
mongo",https://github.com/docker-library/mongo,9ba0d6f19538d7922f62a41cea6589e366b100d3,4.2/windows/windowsservercore-1809/Dockerfile,4.2/windows/windowsservercore-1809/Dockerfile,"# TODO docker-entrypoint.ps1 ? (for ""docker run <image> --flag --flag --flag"")

",2019/12/04 02:26,,2019/12/04 02:26,,1,0 days 00:00:00.000000000,削除されていません
824,"docker-library
mongo",https://github.com/docker-library/mongo,380200038360980631e362f964857d48489f99a2,4.1/windows/windowsservercore-ltsc2016/Dockerfile,4.2/windows/windowsservercore-ltsc2016/Dockerfile,"# TODO docker-entrypoint.ps1 ? (for ""docker run <image> --flag --flag --flag"")

",2018/07/18 05:51,,2018/07/18 05:51,,1,0 days 00:00:00.000000000,削除されていません
825,"docker-library
mongo",https://github.com/docker-library/mongo,380200038360980631e362f964857d48489f99a2,4.1/Dockerfile,4.2/Dockerfile,"# TODO some sort of download verification here
",2018/07/18 05:51,,2018/07/18 05:51,,1,0 days 00:00:00.000000000,削除されていません
829,"docker-library
mongo",https://github.com/docker-library/mongo,32bf9f7905feb2b039c623e76e66d1602e73d277,3.6/Dockerfile,3.6/Dockerfile,"# TODO some sort of download verification here
",2017/09/01 01:47,,2017/11/23 09:40,,1,-84 days +16:07:00.000000000,削除されていません
830,"docker-library
mongo",https://github.com/docker-library/mongo,d7084920a1d3db7f50fc352c1c879845e36e48a6,4.0-rc/Dockerfile,4.0/Dockerfile,"# TODO some sort of download verification here
",2018/05/23 00:17,,2018/05/23 00:17,,1,0 days 00:00:00.000000000,削除されていません
832,"docker-library
mongo",https://github.com/docker-library/mongo,cac8a53d000f9e9f537438b976b719ad1b5bad3c,Dockerfile-linux.template,Dockerfile-linux.template,"# TODO some sort of download verification here
",2018/12/25 04:14,,2018/12/25 04:14,,1,0 days 00:00:00.000000000,削除されていません
838,"docker-library
mongo",https://github.com/docker-library/mongo,375c4226fe653262306de9539bb2d3fc985dc3b4,3.6-rc/windows/windowsservercore-ltsc2016/Dockerfile,3.6/windows/windowsservercore-ltsc2016/Dockerfile,"# TODO docker-entrypoint.ps1 ? (for ""docker run <image> --flag --flag --flag"")

",2017/11/23 09:40,,2017/11/23 09:40,,1,0 days 00:00:00.000000000,削除されていません
840,"docker-library
mongo",https://github.com/docker-library/mongo,692ec82754bde8d6d4e663462669b3be2a6f8b2b,3.7/windows/windowsservercore-ltsc2016/Dockerfile,4.0/windows/windowsservercore-ltsc2016/Dockerfile,"# TODO docker-entrypoint.ps1 ? (for ""docker run <image> --flag --flag --flag"")

",2018/01/17 02:12,,2018/01/17 02:12,,1,0 days 00:00:00.000000000,削除されていません
847,"docker-library
mongo",https://github.com/docker-library/mongo,3fecc7f8e812d9dc8b03e83f47bfe544442ad9a3,4.4-rc/Dockerfile,4.4/Dockerfile,"# TODO some sort of download verification here
",2020/03/11 08:19,,2020/03/11 08:19,,1,0 days 00:00:00.000000000,削除されていません
849,"docker-library
mongo",https://github.com/docker-library/mongo,3fecc7f8e812d9dc8b03e83f47bfe544442ad9a3,4.4-rc/windows/windowsservercore-ltsc2016/Dockerfile,4.4/windows/windowsservercore-ltsc2016/Dockerfile,"# TODO docker-entrypoint.ps1 ? (for ""docker run <image> --flag --flag --flag"")

",2020/03/11 08:19,,2020/03/11 08:19,,1,0 days 00:00:00.000000000,削除されていません
850,"docker-library
mongo",https://github.com/docker-library/mongo,3fecc7f8e812d9dc8b03e83f47bfe544442ad9a3,4.4-rc/windows/windowsservercore-1809/Dockerfile,4.4/windows/windowsservercore-1809/Dockerfile,"# TODO docker-entrypoint.ps1 ? (for ""docker run <image> --flag --flag --flag"")

",2020/03/11 08:19,,2020/03/11 08:19,,1,0 days 00:00:00.000000000,削除されていません
854,"docker-library
mongo",https://github.com/docker-library/mongo,cac8a53d000f9e9f537438b976b719ad1b5bad3c,Dockerfile-windows.template,Dockerfile-windows.template,"# TODO docker-entrypoint.ps1 ? (for ""docker run <image> --flag --flag --flag"")

",2018/12/25 04:14,,2018/12/25 04:14,,1,0 days 00:00:00.000000000,削除されていません
855,"docker-library
mongo",https://github.com/docker-library/mongo,9ba0d6f19538d7922f62a41cea6589e366b100d3,4.0/windows/windowsservercore-1809/Dockerfile,4.0/windows/windowsservercore-1809/Dockerfile,"# TODO docker-entrypoint.ps1 ? (for ""docker run <image> --flag --flag --flag"")

",2019/12/04 02:26,,2019/12/04 02:26,,1,0 days 00:00:00.000000000,削除されていません
858,"docker-library
mongo",https://github.com/docker-library/mongo,c312dd5c0d72cfabe25fd4b1f9dab6d5fdf1d6ff,3.6/windows/windowsservercore-1809/Dockerfile,3.6/windows/windowsservercore-1809/Dockerfile,"# TODO docker-entrypoint.ps1 ? (for ""docker run <image> --flag --flag --flag"")

",2020/03/21 02:20,,2020/03/21 02:20,,1,0 days 00:00:00.000000000,削除されていません
860,"jenkinsci
jenkins-ci.org-docker",https://github.com/jenkinsci/jenkins-ci.org-docker,ae123feaec324dc35350a8bd9ab2704597857f38,Dockerfile-alpine,Dockerfile-alpine,"# FIXME(oleg_nenashev): This is not an official AdoptOpenJDK Docker Image.
# There is no official Alpine images at the moment.
# Needs upgrade when/if there is an official alpine image.
",2020/08/13 18:42,,2017/07/20 18:53,,1,1119 days 23:49:00.000000000,削除されていません
861,"jenkinsci
jenkins-ci.org-docker",https://github.com/jenkinsci/jenkins-ci.org-docker,07d980e247edc241b6835df024e876cfdb469cad,Dockerfile-jdk11,Dockerfile-jdk11,"# TODO: revert before the GA release of Java 11 support (JENKINS-55087)
",2018/12/08 06:13,,2015/03/17 19:24,,1,1361 days 10:49:00.000000000,削除されていません
865,"SAP
SapMachine-infrastructure",https://github.com/SAP/SapMachine-infrastructure,3d8ad73910352940b35f2495024293c33c1c0ea2,dockerfiles/ubuntu_14_04_x86_64/sysroot-sles11-x86_64.tgz,dockerfiles/ubuntu_14_04_x86_64/sysroot-sles11-x86_64.tgz,"#>?7Eno#6aQis>7';?/u3u76%YmzrF""/)~*}r5a~K6j_GcRaPQ[nu\i|ۥ|*F2",2018/09/25 21:34,,2018/09/25 21:34,,1,0 days 00:00:00.000000000,削除されていません
866,"SAP
SapMachine-infrastructure",https://github.com/SAP/SapMachine-infrastructure,3d8ad73910352940b35f2495024293c33c1c0ea2,dockerfiles/ubuntu_14_04_x86_64/sysroot-sles11-x86_64.tgz,dockerfiles/ubuntu_14_04_x86_64/sysroot-sles11-x86_64.tgz,"#&^#=MuwIS&撶6jƻ<rCeړT+zkkY/.؞(pۮʋ).7	brަ]_-[jh4]7""0U_gpRznk7p\JOwvK&+%75ziYLWVڱYUck%muŴ>!#/'sMVO-b漾#6$5EzC²jԘe3+`,Xz5}<w,3(K{f]FeYF|eVFDnS1JzVўTնPT(/уD$`]csD	OlĚ6a;3&Z 	!锉TAy`3LM~F@-,۳Bt6qQpmkN8l_Z9M\+5m3KmuM.4n",2018/09/25 21:34,,2018/09/25 21:34,,1,0 days 00:00:00.000000000,削除されていません
867,"SAP
SapMachine-infrastructure",https://github.com/SAP/SapMachine-infrastructure,3d8ad73910352940b35f2495024293c33c1c0ea2,dockerfiles/ubuntu_14_04_x86_64/sysroot-sles11-x86_64.tgz,dockerfiles/ubuntu_14_04_x86_64/sysroot-sles11-x86_64.tgz,"#>9"">!>!}@voW/d+CRAp=S=VϷd?g>SSB=^G&&HC?cNUj7&pοR7K]'gG¿J<""gQM]>'s]d]T""}Q'{C~=}I'STsTKpcͮTwɾ""q}ˮ;d[u;J@r$[M;P7ԝ퀺Avvu4@jKcW+|d'*OdG[ܿ'~pOTܡ)`H
",2018/09/25 21:34,,2018/09/25 21:34,,1,0 days 00:00:00.000000000,削除されていません
868,"SAP
SapMachine-infrastructure",https://github.com/SAP/SapMachine-infrastructure,a8b85553ce88b736db88ae64fe4c3478a1022b8f,dockerfiles/ubuntu_14_04_x86_64/sysroot-sles11-x86_64.tgz,dockerfiles/ubuntu_14_04_x86_64/sysroot-sles11-x86_64.tgz,"#[O5 7}2c#HWR4㗝N-߈AKUJn҄Q,'ry	R""XqmsW	HacK_WPl`|wZg!aap\7#+=Zp;U*Jwٞ	z(rQHGO\EwS$m]{KwS?ꔫg<h47L>0/tPOC}9׶OЪT(^4
",2018/09/25 21:34,,2018/09/25 21:34,,1,0 days 00:00:00.000000000,削除されていません
869,"SAP
SapMachine-infrastructure",https://github.com/SAP/SapMachine-infrastructure,a8b85553ce88b736db88ae64fe4c3478a1022b8f,dockerfiles/ubuntu_14_04_x86_64/sysroot-sles11-x86_64.tgz,dockerfiles/ubuntu_14_04_x86_64/sysroot-sles11-x86_64.tgz,"# <xIdҼPշ-׵wNk!&X}VޯQ1v$]@cU,DbT$""?59Fz!O!431SklƎ8LlKů܏g`OQ<N:|ůxů-~.3'4'TNtɱw7J:{?ռ`&i/T|Q{UgLYVP.~cK^AUx`T.
",2018/09/25 21:34,,2018/09/25 21:34,,1,0 days 00:00:00.000000000,削除されていません
870,"SAP
SapMachine-infrastructure",https://github.com/SAP/SapMachine-infrastructure,a8b85553ce88b736db88ae64fe4c3478a1022b8f,dockerfiles/ubuntu_14_04_x86_64/sysroot-sles11-x86_64.tgz,dockerfiles/ubuntu_14_04_x86_64/sysroot-sles11-x86_64.tgz,#z\}OuQABarfrvO7gj?:۩kҽC[]Ύ~?OUb5Mbԗ,2018/09/25 21:34,,2018/09/25 21:34,,1,0 days 00:00:00.000000000,削除されていません
871,"SAP
SapMachine-infrastructure",https://github.com/SAP/SapMachine-infrastructure,a8b85553ce88b736db88ae64fe4c3478a1022b8f,dockerfiles/ubuntu_14_04_x86_64/sysroot-sles11-x86_64.tgz,dockerfiles/ubuntu_14_04_x86_64/sysroot-sles11-x86_64.tgz,"#iV +6ȯWXH˟K+rj.,~>p2|av1~XM}!bVv]pFixMem|)5Ho,;h(GuêO?7焦{5$,T8ݾ2aH8m+S""Q{ci؏F<ej-QUQr4̂)M&(,>qЕG0zJNf:jkx(վ&O>^tULKdoߓ:egM<8nߓh1̈́BGNB6ۃ>Gi+ݬ`c5'ȼdo'Ll$g
",2018/09/25 21:34,,2018/09/25 21:34,,1,0 days 00:00:00.000000000,削除されていません
890,"docker-library
openjdk",https://github.com/docker-library/openjdk,3eb0351b208d739fac35345c85e3c6237c2114ec,11/jdk/slim/Dockerfile,11/jdk/slim-buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
",2019/05/23 06:37,,2018/04/15 01:18,,1,403 days 05:19:00.000000000,削除されていません
893,"docker-library
openjdk",https://github.com/docker-library/openjdk,451e66427f3c53fada288aaff950617c5864745f,11/jdk/slim/Dockerfile,11/jdk/slim-buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
",2019/09/14 06:15,,2018/04/15 01:18,,1,517 days 04:57:00.000000000,削除されていません
896,"docker-library
openjdk",https://github.com/docker-library/openjdk,3eb0351b208d739fac35345c85e3c6237c2114ec,11/jdk/Dockerfile,11/jdk/buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
",2019/05/23 06:37,,2018/04/15 01:18,,1,403 days 05:19:00.000000000,削除されていません
897,"docker-library
openjdk",https://github.com/docker-library/openjdk,451e66427f3c53fada288aaff950617c5864745f,11/jdk/Dockerfile,11/jdk/buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
",2019/09/14 06:15,,2018/04/15 01:18,,1,517 days 04:57:00.000000000,削除されていません
898,"docker-library
openjdk",https://github.com/docker-library/openjdk,572682ed1cb951ab8d978e8015e4a910093db920,11/jre/slim/Dockerfile,11/jre/slim-buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
",2019/07/17 08:32,,2018/04/15 01:18,,1,458 days 07:14:00.000000000,削除されていません
900,"docker-library
openjdk",https://github.com/docker-library/openjdk,451e66427f3c53fada288aaff950617c5864745f,11/jre/slim/Dockerfile,11/jre/slim-buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
",2019/09/14 06:15,,2018/04/15 01:18,,1,517 days 04:57:00.000000000,削除されていません
901,"docker-library
openjdk",https://github.com/docker-library/openjdk,572682ed1cb951ab8d978e8015e4a910093db920,11/jre/windows/windowsservercore-ltsc2016/Dockerfile,11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# TODO signature? checksum?
",2019/07/17 08:32,,2019/07/17 08:32,,1,0 days 00:00:00.000000000,削除されていません
902,"docker-library
openjdk",https://github.com/docker-library/openjdk,572682ed1cb951ab8d978e8015e4a910093db920,11/jre/Dockerfile,11/jre/buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
",2019/07/17 08:32,,2018/04/15 01:18,,1,458 days 07:14:00.000000000,削除されていません
904,"docker-library
openjdk",https://github.com/docker-library/openjdk,451e66427f3c53fada288aaff950617c5864745f,11/jre/Dockerfile,11/jre/buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
",2019/09/14 06:15,,2019/07/17 08:32,,1,58 days 21:43:00.000000000,削除されていません
906,"docker-library
openjdk",https://github.com/docker-library/openjdk,572682ed1cb951ab8d978e8015e4a910093db920,11/jre/windows/windowsservercore-1809/Dockerfile,11/jre/windows/windowsservercore-1809/Dockerfile,"# TODO signature? checksum?
",2019/07/17 08:32,,2019/07/17 08:32,,1,0 days 00:00:00.000000000,削除されていません
910,"docker-library
openjdk",https://github.com/docker-library/openjdk,3eb0351b208d739fac35345c85e3c6237c2114ec,Dockerfile-adopt-linux.template,Dockerfile-adopt-debian.template,"# TODO strip ""demo"" and ""man"" folders?
",2019/05/23 06:37,,2019/05/23 06:37,,1,0 days 00:00:00.000000000,削除されていません
911,"docker-library
openjdk",https://github.com/docker-library/openjdk,451e66427f3c53fada288aaff950617c5864745f,Dockerfile-adopt-linux.template,Dockerfile-adopt-debian.template,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
",2019/09/14 06:15,,2019/05/23 06:37,,1,113 days 23:38:00.000000000,削除されていません
912,"docker-library
openjdk",https://github.com/docker-library/openjdk,3eb0351b208d739fac35345c85e3c6237c2114ec,8/jre/Dockerfile,8/jre/buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
",2019/05/23 06:37,,2014/10/10 21:26,,1,1685 days 09:11:00.000000000,削除されていません
914,"docker-library
openjdk",https://github.com/docker-library/openjdk,451e66427f3c53fada288aaff950617c5864745f,8/jre/Dockerfile,8/jre/buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
",2019/09/14 06:15,,2014/10/10 21:26,,1,1799 days 08:49:00.000000000,削除されていません
915,"docker-library
openjdk",https://github.com/docker-library/openjdk,3eb0351b208d739fac35345c85e3c6237c2114ec,8/jdk/Dockerfile,8/jdk/buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
",2019/05/23 06:37,,2014/07/19 08:19,,1,1768 days 22:18:00.000000000,削除されていません
917,"docker-library
openjdk",https://github.com/docker-library/openjdk,451e66427f3c53fada288aaff950617c5864745f,8/jdk/Dockerfile,8/jdk/buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
",2019/09/14 06:15,,2014/07/19 08:19,,1,1882 days 21:56:00.000000000,削除されていません
918,"docker-library
openjdk",https://github.com/docker-library/openjdk,3eb0351b208d739fac35345c85e3c6237c2114ec,8/jre/windows/windowsservercore-ltsc2016/Dockerfile,8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# TODO signature? checksum?
",2019/05/23 06:37,,2019/05/23 06:37,,1,0 days 00:00:00.000000000,削除されていません
919,"docker-library
openjdk",https://github.com/docker-library/openjdk,3eb0351b208d739fac35345c85e3c6237c2114ec,8/jdk/slim/Dockerfile,8/jdk/slim-buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
",2019/05/23 06:37,,2017/07/22 02:20,,1,670 days 04:17:00.000000000,削除されていません
922,"docker-library
openjdk",https://github.com/docker-library/openjdk,451e66427f3c53fada288aaff950617c5864745f,8/jdk/slim/Dockerfile,8/jdk/slim-buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
",2019/09/14 06:15,,2017/07/22 02:20,,1,784 days 03:55:00.000000000,削除されていません
923,"docker-library
openjdk",https://github.com/docker-library/openjdk,3eb0351b208d739fac35345c85e3c6237c2114ec,8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# TODO signature? checksum?
",2019/05/23 06:37,,2017/11/23 07:52,,1,545 days 22:45:00.000000000,削除されていません
924,"docker-library
openjdk",https://github.com/docker-library/openjdk,3eb0351b208d739fac35345c85e3c6237c2114ec,8/jre/windows/windowsservercore-1809/Dockerfile,8/jre/windows/windowsservercore-1809/Dockerfile,"# TODO signature? checksum?
",2019/05/23 06:37,,2019/05/23 06:37,,1,0 days 00:00:00.000000000,削除されていません
925,"docker-library
openjdk",https://github.com/docker-library/openjdk,3eb0351b208d739fac35345c85e3c6237c2114ec,8/jdk/windows/windowsservercore-1809/Dockerfile,8/jdk/windows/windowsservercore-1809/Dockerfile,"# TODO signature? checksum?
",2019/05/23 06:37,,2019/01/15 17:49,,1,127 days 12:48:00.000000000,削除されていません
926,"docker-library
openjdk",https://github.com/docker-library/openjdk,3eb0351b208d739fac35345c85e3c6237c2114ec,8/jre/slim/Dockerfile,8/jre/slim-buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
",2019/05/23 06:37,,2017/07/22 02:20,,1,670 days 04:17:00.000000000,削除されていません
929,"docker-library
openjdk",https://github.com/docker-library/openjdk,451e66427f3c53fada288aaff950617c5864745f,8/jre/slim/Dockerfile,8/jre/slim-buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
",2019/09/14 06:15,,2017/07/22 02:20,,1,784 days 03:55:00.000000000,削除されていません
930,"docker-library
openjdk",https://github.com/docker-library/openjdk,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,Dockerfile-oracle.template,Dockerfile-oracle-oraclelinux.template,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??

",2018/09/13 07:10,,2018/09/13 07:10,,1,0 days 00:00:00.000000000,削除されていません
933,"docker-library
openjdk",https://github.com/docker-library/openjdk,3eb0351b208d739fac35345c85e3c6237c2114ec,Dockerfile-adopt-windows.template,Dockerfile-adopt-windows-servercore.template,"# TODO signature? checksum?
",2019/05/23 06:37,,2019/05/23 06:37,,1,0 days 00:00:00.000000000,削除されていません
937,"docker-library
openjdk",https://github.com/docker-library/openjdk,3eb0351b208d739fac35345c85e3c6237c2114ec,Dockerfile-adopt-slim.template,Dockerfile-adopt-debian-slim.template,"# TODO strip ""demo"" and ""man"" folders?
",2019/05/23 06:37,,2019/05/23 06:37,,1,0 days 00:00:00.000000000,削除されていません
939,"docker-library
openjdk",https://github.com/docker-library/openjdk,451e66427f3c53fada288aaff950617c5864745f,Dockerfile-adopt-slim.template,Dockerfile-adopt-debian-slim.template,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
",2019/09/14 06:15,,2019/05/23 06:37,,1,113 days 23:38:00.000000000,削除されていません
950,"docker-library
docker",https://github.com/docker-library/docker,8390fd856922deec4ca7bf0004e6e8e81f60c9f2,Dockerfile-dind.template,Dockerfile-dind.template,"# TODO aufs-tools

# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
",2017/06/08 08:31,,2017/06/08 08:31,,1,0 days 00:00:00.000000000,削除されていません
951,"docker-library
docker",https://github.com/docker-library/docker,bc5d62520258cacb230485ee96754f9f9aa117c4,Dockerfile-dind.template,Dockerfile-dind.template,"# https://github.com/docker/docker/tree/master/hack/dind
",2018/05/09 03:09,,2017/06/08 08:31,,1,334 days 18:38:00.000000000,削除されていません
959,"docker-library
docker",https://github.com/docker-library/docker,98ffef81ebfa7601a9ed2f0bf56d78f426bf253c,19.03-rc/Dockerfile,19.03-rc/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
",2019/04/06 08:09,,2019/04/06 08:09,,1,0 days 00:00:00.000000000,削除されていません
960,"docker-library
docker",https://github.com/docker-library/docker,98ffef81ebfa7601a9ed2f0bf56d78f426bf253c,19.03-rc/Dockerfile,19.03-rc/Dockerfile,"# TODO ENV DOCKER_SHA256
# https://github.com/docker/docker-ce/blob/5b073ee2cf564edee5adca05eee574142f7627bb/components/packaging/static/hash_files !!
# (no SHA file artifacts on download.docker.com yet as of 2017-06-07 though)

",2019/04/06 08:09,,2019/04/06 08:09,,1,0 days 00:00:00.000000000,削除されていません
961,"docker-library
docker",https://github.com/docker-library/docker,4975dca2dd357705c5613045348402ab664ccdf0,19.03/Dockerfile,19.03/Dockerfile,"# TODO ENV DOCKER_SHA256
# https://github.com/docker/docker-ce/blob/5b073ee2cf564edee5adca05eee574142f7627bb/components/packaging/static/hash_files !!
# (no SHA file artifacts on download.docker.com yet as of 2017-06-07 though)

",2019/07/23 05:16,,2019/07/23 05:16,,1,0 days 00:00:00.000000000,削除されていません
962,"docker-library
docker",https://github.com/docker-library/docker,4975dca2dd357705c5613045348402ab664ccdf0,19.03/Dockerfile,19.03/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
",2019/07/23 05:16,,2019/07/23 05:16,,1,0 days 00:00:00.000000000,削除されていません
963,"docker-library
docker",https://github.com/docker-library/docker,8390fd856922deec4ca7bf0004e6e8e81f60c9f2,Dockerfile.template,Dockerfile.template,"# TODO ENV DOCKER_SHA256
# https://github.com/docker/docker-ce/blob/5b073ee2cf564edee5adca05eee574142f7627bb/components/packaging/static/hash_files !!
# (no SHA file artifacts on download.docker.com yet as of 2017-06-07 though)

",2017/06/08 08:31,,2017/06/08 08:31,,1,0 days 00:00:00.000000000,削除されていません
964,"docker-library
docker",https://github.com/docker-library/docker,454a0ff9e99d4fde7112b25d64d25f940ab28a99,Dockerfile.template,Dockerfile.template,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
",2017/10/12 06:31,,2017/06/08 08:31,,1,125 days 22:00:00.000000000,削除されていません
970,"docker-library
docker",https://github.com/docker-library/docker,2f6926c4fb37274b90fae3ba6c3320619a8d0289,Dockerfile-windows-windowsservercore.template,Dockerfile-windows-windowsservercore.template,"# TODO ENV DOCKER_SHA256
# https://github.com/docker/docker-ce/blob/5b073ee2cf564edee5adca05eee574142f7627bb/components/packaging/static/hash_files !!
# (no SHA file artifacts on download.docker.com yet as of 2017-06-07 though)

",2017/10/13 08:46,,2017/10/13 08:46,,1,0 days 00:00:00.000000000,削除されていません
996,"docker-library
docker",https://github.com/docker-library/docker,98ffef81ebfa7601a9ed2f0bf56d78f426bf253c,19.03-rc/dind/Dockerfile,19.03-rc/dind/Dockerfile,"# TODO aufs-tools

# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
",2019/04/06 08:09,,2019/04/06 08:09,,1,0 days 00:00:00.000000000,削除されていません
997,"docker-library
docker",https://github.com/docker-library/docker,98ffef81ebfa7601a9ed2f0bf56d78f426bf253c,19.03-rc/dind/Dockerfile,19.03-rc/dind/Dockerfile,"# https://github.com/docker/docker/tree/master/hack/dind
",2019/04/06 08:09,,2019/04/06 08:09,,1,0 days 00:00:00.000000000,削除されていません
1017,"docker-library
docker",https://github.com/docker-library/docker,4975dca2dd357705c5613045348402ab664ccdf0,19.03/dind/Dockerfile,19.03/dind/Dockerfile,"# TODO aufs-tools

# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
",2019/07/23 05:16,,2019/07/23 05:16,,1,0 days 00:00:00.000000000,削除されていません
1018,"docker-library
docker",https://github.com/docker-library/docker,4975dca2dd357705c5613045348402ab664ccdf0,19.03/dind/Dockerfile,19.03/dind/Dockerfile,"# https://github.com/docker/docker/tree/master/hack/dind
",2019/07/23 05:16,,2019/07/23 05:16,,1,0 days 00:00:00.000000000,削除されていません
1032,"AdoptOpenJDK
openjdk-docker",https://github.com/AdoptOpenJDK/openjdk-docker,cf0c7d39307a53baf19db72db7d37e1d6ef4b19c,dockerfile_functions.sh,dockerfile_functions.sh,"  # shellcheck disable=SC1083,SC2086 # TODO not sure about intention here
",2020/02/20 06:05,,2018/07/19 20:03,,1,580 days 10:02:00.000000000,削除されていません
1033,"hashicorp
vault",https://github.com/hashicorp/vault,e6ec457488a5469e66a344720c4d237c4156d3e6,scripts/docker/Dockerfile.ui,scripts/docker/Dockerfile.ui,"# By default you'll get a single-node development server that stores everything
# in RAM and bootstraps itself. Don't use this configuration for production.
",2020/07/21 03:11,,2020/07/21 03:11,,1,0 days 00:00:00.000000000,削除されていません
1034,"hashicorp
vault",https://github.com/hashicorp/vault,e6ec457488a5469e66a344720c4d237c4156d3e6,scripts/docker/Dockerfile,scripts/docker/Dockerfile,"# By default you'll get a single-node development server that stores everything
# in RAM and bootstraps itself. Don't use this configuration for production.
",2020/07/21 03:11,,2020/07/21 03:11,,1,0 days 00:00:00.000000000,削除されていません
