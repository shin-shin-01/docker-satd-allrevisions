,CommitID,Dockerfile,LatestDockerfile,Comment,Date,FirstCommit Date,Deleted Date,isSATD,DeletedComment Date,Deleted CommitID
4741,9327ca0955ad75cc1beb759784326304123c6b05,components/engine/Dockerfile,components/engine/Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
# # Apparmor messes with privileged mode: disable it
# /etc/init.d/apparmor stop ; /etc/init.d/apparmor teardown
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/dotcloud/docker -privileged -lxc-conf=lxc.aa_profile=unconfined -i -t docker bash
#
#
# # Run the test suite:
# docker run -privileged -lxc-conf=lxc.aa_profile=unconfined docker go test -v
#
# # Publish a release:
# docker run -privileged -lxc-conf=lxc.aa_profile=unconfined \
# -e AWS_S3_BUCKET=baz \
# -e AWS_ACCESS_KEY=foo \
# -e AWS_SECRET_KEY=bar \
# -e GPG_PASSPHRASE=gloubiboulga \
# -lxc-conf=lxc.aa_profile=unconfined -privileged docker hack/release.sh
# 

",2013-08-26 22:51:22+00:00,2013-06-21 19:42:17-07:00,,1,2013-09-30 19:57:30+00:00,33aa0c2b851e1b478f1e55dc5e4a45cc8ceeac41
16117,4d40f8afe3d3f7cdeee3f6ce2f4f8e725107508a,components/engine/Dockerfile,components/engine/Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
# # Apparmor messes with privileged mode: disable it
# /etc/init.d/apparmor stop ; /etc/init.d/apparmor teardown
#
# # Run the test suite:
# docker run -privileged -lxc-conf=lxc.aa_profile=unconfined docker go test -v
#
# # Publish a release:
# docker run -privileged -lxc-conf=lxc.aa_profile=unconfined \
# -e AWS_S3_BUCKET=baz \
# -e AWS_ACCESS_KEY=foo \
# -e AWS_SECRET_KEY=bar \
# -e GPG_PASSPHRASE=gloubiboulga \
# -lxc-conf=lxc.aa_profile=unconfined -privileged docker hack/release/release.sh
# 

",2013-09-07 02:58:05+00:00,2013-06-21 19:42:17-07:00,,1,2013-09-07 03:14:03+00:00,742fb66041377fe472ebc29508c4ea7f2140cb11
14383,742fb66041377fe472ebc29508c4ea7f2140cb11,components/engine/Dockerfile,components/engine/Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
# # Apparmor messes with privileged mode: disable it
# /etc/init.d/apparmor stop ; /etc/init.d/apparmor teardown
#
# # Run the test suite:
# docker run -privileged -lxc-conf=lxc.aa_profile=unconfined docker go test -v
#
# # Publish a release:
# docker run -privileged -lxc-conf=lxc.aa_profile=unconfined \
# -e AWS_S3_BUCKET=baz \
# -e AWS_ACCESS_KEY=foo \
# -e AWS_SECRET_KEY=bar \
# -e GPG_PASSPHRASE=gloubiboulga \
# -lxc-conf=lxc.aa_profile=unconfined -privileged docker hack/release.sh
# 

",2013-09-07 03:14:03+00:00,2013-06-21 19:42:17-07:00,,1,2013-09-07 03:16:13+00:00,970480b8f8cf2b4730078f136de5e7341571be25
6781,33aa0c2b851e1b478f1e55dc5e4a45cc8ceeac41,components/engine/Dockerfile,components/engine/Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
# # Apparmor messes with privileged mode: disable it
# /etc/init.d/apparmor stop ; /etc/init.d/apparmor teardown
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/dotcloud/docker -privileged -lxc-conf=lxc.aa_profile=unconfined -i -t docker bash
#
#
# # Run the test suite:
# docker run -privileged -lxc-conf=lxc.aa_profile=unconfined docker go test -v
#
# # Publish a release:
# docker run -privileged -lxc-conf=lxc.aa_profile=unconfined \
#  -e AWS_S3_BUCKET=baz \
#  -e AWS_ACCESS_KEY=foo \
#  -e AWS_SECRET_KEY=bar \
#  -e GPG_PASSPHRASE=gloubiboulga \
#  docker hack/release.sh
#

",2013-09-30 19:57:30+00:00,2013-06-21 19:42:17-07:00,,1,2013-10-16 00:31:34+00:00,8846d6c44348681e2964d46b103d645e3fd6b8dc
13265,952ac8a789e9be9ce4386ba3b14931a1c7d2e239,components/engine/Dockerfile,components/engine/Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
# # Apparmor messes with privileged mode: disable it
# /etc/init.d/apparmor stop ; /etc/init.d/apparmor teardown
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/dotcloud/docker -privileged -lxc-conf=lxc.aa_profile=unconfined -i -t docker bash
#
#
# # Run the test suite:
# docker run -privileged -lxc-conf=lxc.aa_profile=unconfined docker hack/make.sh test
#
# # Publish a release:
# docker run -privileged -lxc-conf=lxc.aa_profile=unconfined \
#  -e AWS_S3_BUCKET=baz \
#  -e AWS_ACCESS_KEY=foo \
#  -e AWS_SECRET_KEY=bar \
#  -e GPG_PASSPHRASE=gloubiboulga \
#  docker hack/release.sh
#

",2013-10-05 02:25:15+00:00,2013-06-21 19:42:17-07:00,,1,2013-11-05 18:29:54+00:00,b64b038b0002d739898d6610cf45275358571fe9
13760,5e4f4153669d1dbd07f53a9267d5d8677c107b51,components/engine/Dockerfile,components/engine/Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/dotcloud/docker -privileged -i -t docker bash
#
# # Run the test suite:
# docker run -privileged docker hack/make.sh test
#
# # Publish a release:
# docker run -privileged \
#  -e AWS_S3_BUCKET=baz \
#  -e AWS_ACCESS_KEY=foo \
#  -e AWS_SECRET_KEY=bar \
#  -e GPG_PASSPHRASE=gloubiboulga \
#  docker hack/release.sh
#
# Note: Apparmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#

",2013-10-31 21:58:43+00:00,2013-06-21 19:42:17-07:00,,1,2014-03-13 17:46:02+00:00,c48adc6929a1f41dd086e3f9b91af773bbd2c8f2
16064,a7fc58e1eb11c1f9c94348203647b59eff438fdf,components/engine/Dockerfile,components/engine/Dockerfile,"# TODO add linux/386 and linux/arm
",2013-12-19 06:06:14+00:00,2013-06-21 19:42:17-07:00,,1,2014-01-31 19:48:10+00:00,df82456ed97e08ffa192c1f821acd9315295e7da
7959,5ca82c401df8f0d035205702e2b6848d6afa3910,components/engine/Dockerfile,components/engine/Dockerfile,"# TODO replace FPM with some very minimal debhelper stuff
",2013-12-25 03:40:41+00:00,2013-06-21 19:42:17-07:00,,1,2015-11-12 17:51:36+00:00,d41faf6fe1177b1ca296d996242f1d5ac854955c
6430,c48adc6929a1f41dd086e3f9b91af773bbd2c8f2,components/engine/Dockerfile,components/engine/Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/dotcloud/docker --privileged -i -t docker bash
#
# # Run the test suite:
# docker run --privileged docker hack/make.sh test
#
# # Publish a release:
# docker run --privileged \
#  -e AWS_S3_BUCKET=baz \
#  -e AWS_ACCESS_KEY=foo \
#  -e AWS_SECRET_KEY=bar \
#  -e GPG_PASSPHRASE=gloubiboulga \
#  docker hack/release.sh
#
# Note: Apparmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#

",2014-03-13 17:46:02+00:00,2013-06-21 19:42:17-07:00,,1,2014-07-24 22:19:50+00:00,6ae4c9014c47cc292e642bb85211b74fcf01af7a
2759,79b92f27aa2690e85e628e6ce11033bf0333d828,components/engine/Dockerfile,components/engine/Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/docker/docker --privileged -i -t docker bash
#
# # Run the test suite:
# docker run --privileged docker hack/make.sh test
#
# # Publish a release:
# docker run --privileged \
#  -e AWS_S3_BUCKET=baz \
#  -e AWS_ACCESS_KEY=foo \
#  -e AWS_SECRET_KEY=bar \
#  -e GPG_PASSPHRASE=gloubiboulga \
#  docker hack/release.sh
#
# Note: Apparmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#

",2014-06-19 02:04:08+00:00,2013-06-21 19:42:17-07:00,,1,2015-06-13 16:21:50+00:00,57eb64c9c05d84f5c98a381a0d497a23b5a1792a
2725,e5820ed7e4b39ee86c7a0b12702340d6f296667a,components/engine/Dockerfile,components/engine/Dockerfile,"# see also ""hack/make/.ensure-frozen-images"" (which needs to be updated any time this list is)

# Download man page generator
",2014-09-03 14:26:19+00:00,2013-06-21 19:42:17-07:00,,1,2016-09-07 15:02:51+00:00,bcba22b38ed2bf9c8ec2aca2bc50390e96761c0c
13765,44958a29f2f2eb9a144b895146af552f1a3cd8d1,components/engine/Dockerfile,components/engine/Dockerfile,"# TODO when https://jenkins.dockerproject.com/job/Windows/ is green, add windows back to the list above
#	windows/amd64 windows/386

# (set an explicit GOARM of 5 for maximum compatibility)
",2015-01-22 22:42:17+00:00,2013-06-21 19:42:17-07:00,,1,2015-02-11 18:54:34+00:00,c13ff1800716bee309a2c14b666bc9422b710dbd
16292,92fbf90d6ef31c368fe9dd7f3b4617cc953c65fe,components/engine/Dockerfile,components/engine/Dockerfile,"# see also ""hack/make/.ensure-frozen-images"" (which needs to be updated any time this list is)

# Install man page generator
",2015-02-26 19:20:32+00:00,2013-06-21 19:42:17-07:00,,1,2015-04-30 17:29:01+00:00,585f4aedc7e0a60950dcb3d1ac04f0a439f290db
16567,1d551c443cbd014f7310d20396a5a81de5ad47ee,components/engine/Dockerfile,components/engine/Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/docker/docker --privileged -i -t docker bash
#
# # Run the test suite:
# docker run --privileged docker hack/make.sh test
#
# # Publish a release:
# docker run --privileged \
#  -e AWS_S3_BUCKET=baz \
#  -e AWS_ACCESS_KEY=foo \
#  -e AWS_SECRET_KEY=bar \
#  -e GPG_PASSPHRASE=gloubiboulga \
#  docker hack/release.sh
#
# Note: AppArmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#

",2015-05-01 23:42:53+00:00,2013-06-21 19:42:17-07:00,,1,2016-08-16 21:18:43+00:00,a0933c7d27b0559510dd97c75bc54edcd14f6130
748,4edafc3bc120137c52da71f041df222fcf88cb3d,components/engine/Dockerfile,components/engine/Dockerfile,"# install seccomp
# TODO: switch to libseccomp-dev since dockerinit is gone
",2016-01-20 11:53:54+00:00,2013-06-21 19:42:17-07:00,,1,2016-02-02 19:37:43+00:00,5e084d01fea3e874cd77be21aab90b7d65b88977
14550,26d82a2984d6a5c6399fdff9a1624f18d0863df0,components/engine/Dockerfile,components/engine/Dockerfile,"# !!! TEMPORARY HACK !!!
# Because of https://github.com/golang/go/issues/15286 we have to revert to Go 1.5.3 for windows/amd64 in master
# To change which version of Go to compile with, simply prepend PATH with /usr/local/go1.5.3/bin
# and set GOROOT to /usr/local/go1.5.3
",2016-03-15 03:12:09+00:00,2013-06-21 19:42:17-07:00,,1,2016-05-27 13:54:57+00:00,9b06540d329d2fcf96839faa3f760ce6b7cbfbe4
7121,7bef93723c911971da6fbb12ad26697205d1a9e1,components/engine/Dockerfile,components/engine/Dockerfile,"# see also ""hack/make/.ensure-frozen-images"" (which needs to be updated any time this list is)

# Download toml validator
",2016-05-12 14:52:00+00:00,2013-06-21 19:42:17-07:00,,1,2016-09-23 09:27:52+00:00,f04a024adba7d860a4efa598ccfb1f8749400461
7120,7bef93723c911971da6fbb12ad26697205d1a9e1,components/engine/Dockerfile,components/engine/Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/docker/docker --privileged -i -t docker bash
#
# # Run the test suite:
# docker run --privileged docker hack/make.sh test-unit test-integration-cli test-docker-py
#
# # Publish a release:
# docker run --privileged \
#  -e AWS_S3_BUCKET=baz \
#  -e AWS_ACCESS_KEY=foo \
#  -e AWS_SECRET_KEY=bar \
#  -e GPG_PASSPHRASE=gloubiboulga \
#  docker hack/release.sh
#
# Note: AppArmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#

",2016-05-12 14:52:00+00:00,2013-06-21 19:42:17-07:00,,1,2017-05-09 15:20:42+00:00,8a093adb5cceabb305117fc020841db4bfec435e
10203,6fb90ed484e943d6cfc0849ab8f7be32241c9802,components/engine/Dockerfile,components/engine/Dockerfile,"# See also ""hack/make/.ensure-frozen-images"" (which needs to be updated any time this list is)

# Install tomlv, vndr, runc, containerd, grimes, docker-proxy
# Please edit hack/dockerfile/install-binaries.sh to update them.
",2016-06-07 07:45:21+00:00,2013-06-21 19:42:17-07:00,,1,2016-11-09 14:29:42+00:00,72ae55dd14ba3300f3b722866d86e0bc88f5dc39
8017,58bc04a76a6821834e956fbce23b5c52ecfac918,components/engine/Dockerfile,components/engine/Dockerfile,"# See also ""hack/make/.ensure-frozen-images"" (which needs to be updated any time this list is)

# Install tomlv, runc, containerd and grimes
# Please edit hack/dockerfile/install-binaries.sh to update them.
",2016-09-21 23:18:22+00:00,2013-06-21 19:42:17-07:00,,1,2016-10-25 15:54:13+00:00,ea2938292ab3607a9dab7b1c9143ff7b620b6599
13606,d08760316a8b777b01850352d326617c1c75b7ce,components/engine/Dockerfile,components/engine/Dockerfile,"# See also ""hack/make/.ensure-frozen-images"" (which needs to be updated any time this list is)

# Download toml validator
",2016-09-22 02:15:18+00:00,2013-06-21 19:42:17-07:00,,1,2016-10-05 20:15:30+00:00,391b6f94da2ef9268f60766b92216b482d48ac70
6265,75e7ddadb0fc7a072bf1f95a336ee7b4bcb40e7f,components/engine/Dockerfile,components/engine/Dockerfile,"# see also ""hack/make/.ensure-frozen-images"" (which needs to be updated any time this list is)

# Install tomlv, runc, containerd.and grimes
# Please edit hack/dockerfile/install-binaries.sh to update them.
",2016-09-23 16:20:57+00:00,2013-06-21 19:42:17-07:00,,1,2016-09-23 17:37:28+00:00,da06cf8da01009b5e8f23eae96d661d30a9ba8f7
3034,391b6f94da2ef9268f60766b92216b482d48ac70,components/engine/Dockerfile,components/engine/Dockerfile,"# See also ""hack/make/.ensure-frozen-images"" (which needs to be updated any time this list is)

# Install tomlv, runc, containerd.and grimes
# Please edit hack/dockerfile/install-binaries.sh to update them.
",2016-10-05 20:15:30+00:00,2013-06-21 19:42:17-07:00,,1,2016-10-06 17:36:31+00:00,9ad2ffa17adf20a0e82e1e0ef48ae406bdabc181
10876,44e77a4b4f79be08a5f353adfa2533a6aa8c845a,components/engine/Dockerfile,components/engine/Dockerfile,"# See also ""hack/make/.ensure-frozen-images"" (which needs to be updated any time this list is)

# Install tomlv, runc, containerd, grimes, docker-proxy
# Please edit hack/dockerfile/install-binaries.sh to update them.
",2016-10-18 23:30:47+00:00,2013-06-21 19:42:17-07:00,,1,2016-11-03 16:47:50+00:00,64d7644ec8c917daa03c0013a86bc5b7521b3a54
16644,515ebb7b5cb98dec83a7333059b6178ceb5fab78,components/engine/Dockerfile,components/engine/Dockerfile,"# See also ""hack/make/.ensure-frozen-images"" (which needs to be updated any time this list is)

# Install tomlv, vndr, runc, containerd, tini, docker-proxy
# Please edit hack/dockerfile/install-binaries.sh to update them.
",2016-10-24 22:18:58+00:00,2013-06-21 19:42:17-07:00,,1,2017-04-12 13:37:40+00:00,4de7d7962060bdf994c78b6a15e91e509833168c
16331,c9bef385b2510bc2b9624989e0f516152cd05c1f,components/engine/Dockerfile,components/engine/Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/docker/docker --privileged -i -t docker bash
#
# # Run the test suite:
# docker run -e DOCKER_GITCOMMIT=foo --privileged docker hack/make.sh test-unit test-integration-cli test-docker-py
#
# # Publish a release:
# docker run --privileged \
#  -e AWS_S3_BUCKET=baz \
#  -e AWS_ACCESS_KEY=foo \
#  -e AWS_SECRET_KEY=bar \
#  -e GPG_PASSPHRASE=gloubiboulga \
#  docker hack/release.sh
#
# Note: AppArmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#

",2016-12-01 13:33:30+00:00,2013-06-21 19:42:17-07:00,,1,2017-08-14 16:20:18+00:00,9685380dbb006361ee592c9971ca3813a8e3b4ad
16332,c9bef385b2510bc2b9624989e0f516152cd05c1f,components/engine/Dockerfile,components/engine/Dockerfile,"# See also ensureFrozenImagesLinux() in ""integration-cli/fixtures_linux_daemon_test.go"" (which needs to be updated when adding images to this list)

# Install tomlv, vndr, runc, containerd, tini, docker-proxy dockercli
# Please edit hack/dockerfile/install-binaries.sh to update them.
",2016-12-01 13:33:30+00:00,2013-06-21 19:42:17-07:00,,1,2018-02-22 17:06:34+00:00,c679327e8019ed4c68b1e7199eba5c9069fedca6
8979,2160e9bb7d89df1a9261eb809546a2f902817ed1,components/engine/Dockerfile,components/engine/Dockerfile,"# See also ensureFrozenImagesLinux() in ""integration-cli/fixtures_linux_daemon_test.go"" (which needs to be updated when adding images to this list)

# Install tomlv, vndr, runc, containerd, tini, docker-proxy
# Please edit hack/dockerfile/install-binaries.sh to update them.
",2016-12-31 19:11:30+00:00,2013-06-21 19:42:17-07:00,,1,2017-05-05 22:03:30+00:00,0456165ea42cca2fbad96aedc6509e951f6a1d9a
16481,9a9d90f97d60b698ff9786ef021b75881ee294f8,components/engine/Dockerfile,components/engine/Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/docker/docker --privileged -i -t docker bash
#
# # Run the test suite:
# docker run -e DOCKER_GITCOMMIT=foo --privileged docker hack/make.sh test-unit test-integration test-docker-py
#
# # Publish a release:
# docker run --privileged \
#  -e AWS_S3_BUCKET=baz \
#  -e AWS_ACCESS_KEY=foo \
#  -e AWS_SECRET_KEY=bar \
#  -e GPG_PASSPHRASE=gloubiboulga \
#  docker hack/release.sh
#
# Note: AppArmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#

",2017-06-17 00:18:44+00:00,2013-06-21 19:42:17-07:00,,1,2018-02-15 17:07:01+00:00,481715cd839638feb344bdcba36851505b49b633
11428,605885e5180c01af497fba3c7bd25b605bb12341,components/engine/Dockerfile,components/engine/Dockerfile,"# Options for hack/validate/gometalinter
",2017-06-30 08:29:56+00:00,2013-06-21 19:42:17-07:00,,1,2019-09-11 06:51:06+00:00,2652782fc983bd35c9e2a7a888c3ebb595cc31e1
15830,e4ccd4c846b6e85d2543ad6649dff52d3e303c70,components/engine/Dockerfile,components/engine/Dockerfile,"# TODO: This is for the docker-py tests, which shouldn't really be needed for
# this image, but currently CI is expecting to run this image. This should be
# split out into a separate image, including all the `python-*` deps installed
# above.
",2017-09-29 21:09:14+00:00,2013-06-21 19:42:17-07:00,,1,2019-07-18 21:01:38+00:00,d52a66f6949167cfd0e3be0df34549086d9addb0
15829,e4ccd4c846b6e85d2543ad6649dff52d3e303c70,components/engine/Dockerfile,components/engine/Dockerfile,"# TODO: Some of this is only really needed for testing, it would be nice to split this up
",2017-09-29 21:09:14+00:00,2013-06-21 19:42:17-07:00,,1,,
15828,e4ccd4c846b6e85d2543ad6649dff52d3e303c70,components/engine/Dockerfile,components/engine/Dockerfile,"# See also ensureFrozenImagesLinux() in ""integration-cli/fixtures_linux_daemon_test.go"" (which needs to be updated when adding images to this list)

# Just a little hack so we don't have to install these deps twice, once for runc and once for dockerd
",2017-09-29 21:09:14+00:00,2013-06-21 19:42:17-07:00,,1,2019-04-20 20:34:05+00:00,4ada9355cb2594d16b801d2fad428302886f4021
15827,e4ccd4c846b6e85d2543ad6649dff52d3e303c70,components/engine/Dockerfile,components/engine/Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Use make to build a development environment image and run it in a container.
# # This is slow the first time.
# make BIND_DIR=. shell
#
# The following commands are executed inside the running container.

# # Make a dockerd binary.
# # hack/make.sh binary
#
# # Install dockerd to /usr/local/bin
# # make install
#
# # Run unit tests
# # hack/test/unit
#
# # Run tests e.g. integration, py
# # hack/make.sh binary test-integration test-docker-py
#
# # Publish a release:
# docker run --privileged \
#  -e AWS_S3_BUCKET=baz \
#  -e AWS_ACCESS_KEY=foo \
#  -e AWS_SECRET_KEY=bar \
#  -e GPG_PASSPHRASE=gloubiboulga \
#  docker hack/release.sh
#
# Note: AppArmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#

",2017-09-29 21:09:14+00:00,2013-06-21 19:42:17-07:00,,1,2018-05-18 18:28:43+00:00,7a1680b13a4d40f402fb54bfef604e8539c37662
4843,91c1ef0fbfd3df31b78094b54869d49bf78afeeb,components/engine/Dockerfile,components/engine/Dockerfile,"# FIXME(vdemeester) this is kept for other script depending on it to not fail right away
# Remove this once the other scripts uses something else to detect the version
",2017-12-08 01:10:04+00:00,2013-06-21 19:42:17-07:00,,1,2018-09-07 08:35:33+00:00,97a0cbc24bf3f77186e4c980f901e15061b832a4
15193,c6bfcea4c884c56b4860c83eb65b39a0fe356c4f,components/engine/Dockerfile,components/engine/Dockerfile,"# TODO: when issue #35963 fixed, we can upgrade the busybox to multi-arch
",2018-01-05 02:58:14+00:00,2013-06-21 19:42:17-07:00,,1,2018-02-15 17:07:01+00:00,481715cd839638feb344bdcba36851505b49b633
12004,f11213a80093591f2a3ac7ed0bb5a03312ffb533,components/engine/Dockerfile,components/engine/Dockerfile,"# See also ensureFrozenImagesLinux() in ""integration-cli/fixtures_linux_daemon_test.go"" (which needs to be updated when adding images to this list)

# Install tomlv, vndr, runc, containerd, tini, proxy dockercli
# Please edit hack/dockerfile/install/<name>.installer to update them.
",2018-02-16 18:51:30+00:00,2013-06-21 19:42:17-07:00,,1,2018-03-01 01:35:10+00:00,da1e08d48493406ce290a1b99269e52879af5b0e
7979,7a1680b13a4d40f402fb54bfef604e8539c37662,components/engine/Dockerfile,components/engine/Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Use make to build a development environment image and run it in a container.
# # This is slow the first time.
# make BIND_DIR=. shell
#
# The following commands are executed inside the running container.

# # Make a dockerd binary.
# # hack/make.sh binary
#
# # Install dockerd to /usr/local/bin
# # make install
#
# # Run unit tests
# # hack/test/unit
#
# # Run tests e.g. integration, py
# # hack/make.sh binary test-integration test-docker-py
#
# Note: AppArmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#

",2018-05-18 18:28:43+00:00,2013-06-21 19:42:17-07:00,,1,2019-10-05 20:41:27+00:00,1fcfa3c1aabd517aca3f04b2e72dc1a10dc04db5
9127,b03d2799c83d1ada6b7ce96e59dfc885d7995c40,components/engine/Dockerfile,components/engine/Dockerfile,"# Install go-swagger for validating swagger.yaml
# This is https://github.com/kolyshkin/go-swagger/tree/golang-1.13-fix
# TODO: move to under moby/ or fix upstream go-swagger to work for us.
",2019-07-17 12:37:56+00:00,2013-06-21 19:42:17-07:00,,1,,
9129,b03d2799c83d1ada6b7ce96e59dfc885d7995c40,components/engine/Dockerfile,components/engine/Dockerfile,"# TODO: This is here because hack/make.sh binary copies these extras binaries
# from $PATH into the bundles dir.
# It would be nice to handle this in a different way.
",2019-07-17 12:37:56+00:00,2013-06-21 19:42:17-07:00,,1,,
10219,0064565ac48a38f084f45f4fb476b5c2bed4b1d9,components/engine/Dockerfile,components/engine/Dockerfile,"# Switch to use iptables instead of nftables (to match the CI hosts)
# TODO use some kind of runtime auto-detection instead if/when nftables is supported (https://github.com/moby/moby/issues/26824)
",2020-01-15 14:22:41+00:00,2013-06-21 19:42:17-07:00,,1,,
13531,68301c38288c1554119f272cd8e44b6342965cac,components/engine/builder/parser/testfiles/docker/Dockerfile,components/engine/builder/dockerfile/parser/testfiles/docker/Dockerfile,"# TODO replace FPM with some very minimal debhelper stuff
",2014-08-05 20:17:40+00:00,2014-08-05 13:17:40-07:00,2018-11-19 09:12:15+01:00,1,2018-06-04 17:09:05+00:00,78419943dda676e1819ea8cded1b00d733038858
13530,68301c38288c1554119f272cd8e44b6342965cac,components/engine/builder/parser/testfiles/docker/Dockerfile,components/engine/builder/dockerfile/parser/testfiles/docker/Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/docker/docker --privileged -i -t docker bash
#
# # Run the test suite:
# docker run --privileged docker hack/make.sh test
#
# # Publish a release:
# docker run --privileged \
#  -e AWS_S3_BUCKET=baz \
#  -e AWS_ACCESS_KEY=foo \
#  -e AWS_SECRET_KEY=bar \
#  -e GPG_PASSPHRASE=gloubiboulga \
#  docker hack/release.sh
#
# Note: Apparmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#

",2014-08-05 20:17:40+00:00,2014-08-05 13:17:40-07:00,2018-11-19 09:12:15+01:00,1,2015-06-13 16:21:50+00:00,57eb64c9c05d84f5c98a381a0d497a23b5a1792a
5143,57eb64c9c05d84f5c98a381a0d497a23b5a1792a,components/engine/builder/parser/testfiles/docker/Dockerfile,components/engine/builder/dockerfile/parser/testfiles/docker/Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/docker/docker --privileged -i -t docker bash
#
# # Run the test suite:
# docker run --privileged docker hack/make.sh test
#
# # Publish a release:
# docker run --privileged \
#  -e AWS_S3_BUCKET=baz \
#  -e AWS_ACCESS_KEY=foo \
#  -e AWS_SECRET_KEY=bar \
#  -e GPG_PASSPHRASE=gloubiboulga \
#  docker hack/release.sh
#
# Note: AppArmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#

",2015-06-13 16:21:50+00:00,2014-08-05 13:17:40-07:00,2018-11-19 09:12:15+01:00,1,2016-07-04 14:43:53+00:00,dc5e6798a10239fe6fc1ad788095ee9668247889
2956,dc5e6798a10239fe6fc1ad788095ee9668247889,components/engine/builder/dockerfile/parser/testfiles/docker/Dockerfile,components/engine/builder/dockerfile/parser/testfiles/docker/Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/docker/docker --privileged -i -t docker bash
#
# # Run the test suite:
# docker run --privileged docker hack/make.sh test-unit test-integration-cli test-docker-py
#
# # Publish a release:
# docker run --privileged \
#  -e AWS_S3_BUCKET=baz \
#  -e AWS_ACCESS_KEY=foo \
#  -e AWS_SECRET_KEY=bar \
#  -e GPG_PASSPHRASE=gloubiboulga \
#  docker hack/release.sh
#
# Note: AppArmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#

",2016-07-04 14:43:53+00:00,2014-08-05 13:17:40-07:00,2018-11-19 09:12:15+01:00,1,2017-12-01 04:12:05+00:00,6a8cf843af181b118737a9abd0c7b3cded3a93cd
2128,94ae8f10c7281c0b5bd8f0945ac9ce250dbd55db,components/engine/builder/dockerfile/parser/testfiles/docker/Dockerfile,components/engine/builder/dockerfile/parser/testfiles/docker/Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/docker/docker --privileged -i -t docker bash
#
# # Run the test suite:
# docker run --privileged docker hack/make.sh test-unit test-integration test-docker-py
#
# # Publish a release:
# docker run --privileged \
#  -e AWS_S3_BUCKET=baz \
#  -e AWS_ACCESS_KEY=foo \
#  -e AWS_SECRET_KEY=bar \
#  -e GPG_PASSPHRASE=gloubiboulga \
#  docker hack/release.sh
#
# Note: AppArmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#

",2017-11-28 02:21:47+00:00,2014-08-05 13:17:40-07:00,2018-11-19 09:12:15+01:00,1,2018-05-18 18:28:43+00:00,7a1680b13a4d40f402fb54bfef604e8539c37662
7985,7a1680b13a4d40f402fb54bfef604e8539c37662,components/engine/builder/dockerfile/parser/testfiles/docker/Dockerfile,components/engine/builder/dockerfile/parser/testfiles/docker/Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/docker/docker --privileged -i -t docker bash
#
# # Run the test suite:
# docker run --privileged docker hack/make.sh test-unit test-integration test-docker-py
#
# Note: AppArmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#

",2018-05-18 18:28:43+00:00,2014-08-05 13:17:40-07:00,2018-11-19 09:12:15+01:00,1,2018-06-04 17:09:05+00:00,78419943dda676e1819ea8cded1b00d733038858
3758,736b960e2df15e35aca9abec3ef6a9bc64ead7b3,components/engine/testing/nightlyrelease/Dockerfile,components/engine/hack/infrastructure/docker-ci/nightlyrelease/Dockerfile,"#### FIXME. Temporarily install docker with proper apparmor handling
",2013-09-21 19:14:40+00:00,2013-09-07 10:30:29-07:00,2014-03-10 13:20:49-07:00,1,2013-11-07 04:05:26+00:00,ba4e682cde6ad56a7fe88c5e61c976e1db93338b
6161,aac90cd92e4389ce099b59cb7313755538ca4d48,components/engine/hack/infrastructure/docker-ci/nightlyrelease/Dockerfile,components/engine/hack/infrastructure/docker-ci/nightlyrelease/Dockerfile,"# VERSION:        1.5
# DOCKER-VERSION  0.6.4
# AUTHOR:         Daniel Mizyrycki <daniel@dotcloud.com>
# DESCRIPTION:    Build docker nightly release using Docker in Docker.
# REFERENCES:     This code reuses the excellent implementation of docker in docker
#                 made by Jerome Petazzoni.  https://github.com/jpetazzo/dind
# COMMENTS:
#   release_credentials.json is a base64 json encoded file containing:
#       { ""AWS_ACCESS_KEY"": ""Test_docker_AWS_S3_bucket_id"",
#         ""AWS_SECRET_KEY"": ""Test_docker_AWS_S3_bucket_key"",
#         ""GPG_PASSPHRASE"": ""Test_docker_GPG_passphrase_signature"" }
# TO_BUILD:       docker build -t dockerbuilder .
# TO_RELEASE:     docker run -i -t -privileged -e AWS_S3_BUCKET=""test.docker.io"" dockerbuilder hack/dind dockerbuild.sh

",2013-10-27 19:13:03+00:00,2013-09-07 10:30:29-07:00,2014-03-10 13:20:49-07:00,1,2013-10-29 20:44:03+00:00,d5914d940b1e172dc97b01692bf13fc83223b061
8250,7a7c9f0f1d41534dd4afd66f7d8fa56e38ed94e1,components/engine/hack/infrastructure/docker-ci/nightlyrelease/Dockerfile,components/engine/hack/infrastructure/docker-ci/nightlyrelease/Dockerfile,"#### FIXME. Temporarily install docker and dind with proper apparmor handling
",2013-10-28 23:51:31+00:00,2013-09-07 10:30:29-07:00,2014-03-10 13:20:49-07:00,1,2013-10-29 20:44:03+00:00,d5914d940b1e172dc97b01692bf13fc83223b061
4863,ba4e682cde6ad56a7fe88c5e61c976e1db93338b,components/engine/hack/infrastructure/docker-ci/nightlyrelease/Dockerfile,components/engine/hack/infrastructure/docker-ci/nightlyrelease/Dockerfile,"# VERSION:        1.6
# DOCKER-VERSION  0.6.6
# AUTHOR:         Daniel Mizyrycki <daniel@docker.com>
# DESCRIPTION:    Build docker nightly release using Docker in Docker.
# REFERENCES:     This code reuses the excellent implementation of docker in docker
#                 made by Jerome Petazzoni.  https://github.com/jpetazzo/dind
# COMMENTS:
#   release_credentials.json is a base64 json encoded file containing:
#       { ""AWS_ACCESS_KEY"": ""Test_docker_AWS_S3_bucket_id"",
#         ""AWS_SECRET_KEY"": ""Test_docker_AWS_S3_bucket_key"",
#         ""GPG_PASSPHRASE"": ""Test_docker_GPG_passphrase_signature"" }
# TO_BUILD:       docker build -t dockerbuilder .
# TO_RELEASE:     docker run -i -t -privileged -e AWS_S3_BUCKET=""test.docker.io"" dockerbuilder hack/dind dockerbuild.sh

",2013-11-07 04:05:26+00:00,2013-09-07 10:30:29-07:00,2014-03-10 13:20:49-07:00,1,2014-02-14 20:50:16-08:00,d96c32338087d2d4f61af1fa34985c2cfed62307
12370,8802449935b4e4d4be8e279e99348a99c4e13bc0,components/engine/hack/infrastructure/docker-ci/docker-test/Dockerfile,components/engine/hack/infrastructure/docker-ci/docker-test/Dockerfile,"# VERSION:        0.3
# DOCKER-VERSION  0.6.3
# AUTHOR:         Daniel Mizyrycki <daniel@dotcloud.com>
# DESCRIPTION:    Testing docker PRs and commits on top of master using
# REFERENCES:     This code reuses the excellent implementation of
#                 Docker in Docker made by Jerome Petazzoni.
#                 https://github.com/jpetazzo/dind
# COMMENTS:
#   This Dockerfile adapts /Dockerfile to enable docker PRs and commits testing
#   Optional arguments:
#       [commit]  (default: 'HEAD')
#       [repo]    (default: 'http://github.com/dotcloud/docker')
#       [branch]  (default: 'master')
# TO_BUILD:       docker build -t test_docker .
# TO_RUN:         docker run -privileged test_docker hack/dind test_docker.sh [commit] [repo] [branch]

",2013-10-19 05:33:16+00:00,2013-10-18 22:33:16-07:00,2014-03-10 13:20:49-07:00,1,2013-11-07 04:05:26+00:00,ba4e682cde6ad56a7fe88c5e61c976e1db93338b
14389,837c6b480c6859db6bf3f3fb044b070afb3f336d,components/engine/hack/infrastructure/docker-ci/docker-test/Dockerfile,components/engine/hack/infrastructure/docker-ci/docker-test/Dockerfile,"#### FIXME. Temporarily install docker and dind with proper apparmor handling
",2013-10-30 02:37:56+00:00,2013-10-18 22:33:16-07:00,2014-03-10 13:20:49-07:00,1,2013-10-31 16:42:19+00:00,ce0d02b06fc3cacbb34bfef7b633b65764d3bae0
4864,ba4e682cde6ad56a7fe88c5e61c976e1db93338b,components/engine/hack/infrastructure/docker-ci/docker-test/Dockerfile,components/engine/hack/infrastructure/docker-ci/docker-test/Dockerfile,"# VERSION:        0.4
# DOCKER-VERSION  0.6.6
# AUTHOR:         Daniel Mizyrycki <daniel@docker.com>
# DESCRIPTION:    Testing docker PRs and commits on top of master using
# REFERENCES:     This code reuses the excellent implementation of
#                 Docker in Docker made by Jerome Petazzoni.
#                 https://github.com/jpetazzo/dind
# COMMENTS:
#   This Dockerfile adapts /Dockerfile to enable docker PRs and commits testing
#   Optional arguments:
#       [commit]  (default: 'HEAD')
#       [repo]    (default: 'http://github.com/dotcloud/docker')
#       [branch]  (default: 'master')
# TO_BUILD:       docker build -t test_docker .
# TO_RUN:         docker run -privileged test_docker hack/dind test_docker.sh [commit] [repo] [branch]

",2013-11-07 04:05:26+00:00,2013-10-18 22:33:16-07:00,2014-03-10 13:20:49-07:00,1,2014-02-14 20:50:16-08:00,d96c32338087d2d4f61af1fa34985c2cfed62307
5871,0f4b49bea82d2dc2fb6004befdde9f1d380cb527,components/engine/docs/Dockerfile,components/engine/docs/Dockerfile,"#
#    docker build -t docker:docs . && docker run -p 8000:8000 docker:docs
#

# TODO switch to http://packages.ubuntu.com/trusty/python-sphinxcontrib-httpdomain once trusty is released

",2014-01-15 02:23:30+00:00,2013-08-29 23:49:41+00:00,2017-01-31 13:41:02-08:00,1,2015-02-18 04:20:46+00:00,824b119187656e9475e2a02cd33d44f946f9d17b
142,824b119187656e9475e2a02cd33d44f946f9d17b,components/engine/docs/Dockerfile,components/engine/docs/Dockerfile,"# TODO: don't do this - look at merging the yml file in build.sh
",2015-02-18 04:20:46+00:00,2013-08-29 23:49:41+00:00,2017-01-31 13:41:02-08:00,1,2015-02-25 00:37:36+00:00,17fe06fc30b82f739ad1b3366edfbdb99180e339
141,824b119187656e9475e2a02cd33d44f946f9d17b,components/engine/docs/Dockerfile,components/engine/docs/Dockerfile,"# TODO: need the full repo source to get the git version info
",2015-02-18 04:20:46+00:00,2013-08-29 23:49:41+00:00,2017-01-31 13:41:02-08:00,1,2015-06-15 13:57:12-07:00,f0cfc88b9ec1ae3f920cc1a54576c74422bf5ce9
16621,17fe06fc30b82f739ad1b3366edfbdb99180e339,components/engine/docs/Dockerfile,components/engine/docs/Dockerfile,"# adding the image spec will require Docker 1.5 and `docker build -f docs/Dockerfile .`
#COPY ./image/spec/v1.md /docs/sources/reference/image-spec-v1.md

# TODO: don't do this - look at merging the yml file in build.sh
",2015-02-25 00:37:36+00:00,2013-08-29 23:49:41+00:00,2017-01-31 13:41:02-08:00,1,2015-06-15 13:57:12-07:00,f0cfc88b9ec1ae3f920cc1a54576c74422bf5ce9
10108,78ba8bbfa182d305b3f34d7ecc2d05baa56c1c5b,components/packaging/image/Dockerfile,components/packaging/image/Dockerfile,"# docker-init - TODO move this out, last time we bumped was 2016!
",2018-07-11 00:04:55+00:00,2018-07-10 17:04:55-07:00,,1,,
10107,78ba8bbfa182d305b3f34d7ecc2d05baa56c1c5b,components/packaging/image/Dockerfile,components/packaging/image/Dockerfile,"# docker-proxy
# TODO if libnetwork folds into the docker tree this can be combined above
",2018-07-11 00:04:55+00:00,2018-07-10 17:04:55-07:00,,1,,
10106,78ba8bbfa182d305b3f34d7ecc2d05baa56c1c5b,components/packaging/image/Dockerfile,components/packaging/image/Dockerfile,"# TODO The way we set the version could easily be simplified not to depend on hack/...
",2018-07-11 00:04:55+00:00,2018-07-10 17:04:55-07:00,,1,,
10105,78ba8bbfa182d305b3f34d7ecc2d05baa56c1c5b,components/packaging/image/Dockerfile,components/packaging/image/Dockerfile,"#COPY hack/dockerfile/binaries-commits /

",2018-07-11 00:04:55+00:00,2018-07-10 17:04:55-07:00,,1,,
