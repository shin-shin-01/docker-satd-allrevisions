,CommitID,Dockerfile,LatestDockerfile,Comment,Date,FirstCommit Date,Deleted Date,RenameList,logIndex,DeletedComment Date,Deleted CommitID,Deleted Filename
16565,4d40f8afe3d3f7cdeee3f6ce2f4f8e725107508a,components/engine/Dockerfile,components/engine/Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
# # Apparmor messes with privileged mode: disable it
# /etc/init.d/apparmor stop ; /etc/init.d/apparmor teardown
#
# # Run the test suite:
# docker run -privileged -lxc-conf=lxc.aa_profile=unconfined docker go test -v
#
# # Publish a release:
# docker run -privileged -lxc-conf=lxc.aa_profile=unconfined \
# -e AWS_S3_BUCKET=baz \
# -e AWS_ACCESS_KEY=foo \
# -e AWS_SECRET_KEY=bar \
# -e GPG_PASSPHRASE=gloubiboulga \
# -lxc-conf=lxc.aa_profile=unconfined -privileged docker hack/release/release.sh
# ",2013-09-07 02:58:05+00:00,2013-07-08 21:30:29-07:00,,components/engine/Dockerfile,67312,2013-09-07 03:14:03+00:00,742fb66041377fe472ebc29508c4ea7f2140cb11,components/engine/Dockerfile
14774,742fb66041377fe472ebc29508c4ea7f2140cb11,components/engine/Dockerfile,components/engine/Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
# # Apparmor messes with privileged mode: disable it
# /etc/init.d/apparmor stop ; /etc/init.d/apparmor teardown
#
# # Run the test suite:
# docker run -privileged -lxc-conf=lxc.aa_profile=unconfined docker go test -v
#
# # Publish a release:
# docker run -privileged -lxc-conf=lxc.aa_profile=unconfined \
# -e AWS_S3_BUCKET=baz \
# -e AWS_ACCESS_KEY=foo \
# -e AWS_SECRET_KEY=bar \
# -e GPG_PASSPHRASE=gloubiboulga \
# -lxc-conf=lxc.aa_profile=unconfined -privileged docker hack/release.sh
# ",2013-09-07 03:14:03+00:00,2013-07-08 21:30:29-07:00,,components/engine/Dockerfile,67311,2013-09-07 03:16:13+00:00,970480b8f8cf2b4730078f136de5e7341571be25,components/engine/Dockerfile
2842,970480b8f8cf2b4730078f136de5e7341571be25,components/engine/Dockerfile,components/engine/Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
# # Apparmor messes with privileged mode: disable it
# /etc/init.d/apparmor stop ; /etc/init.d/apparmor teardown
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/dotcloud/docker -privileged -lxc-conf=lxc.aa_profile=unconfined -i -t docker bash
#
#
# # Run the test suite:
# docker run -privileged -lxc-conf=lxc.aa_profile=unconfined docker go test -v
#
# # Publish a release:
# docker run -privileged -lxc-conf=lxc.aa_profile=unconfined \
# -e AWS_S3_BUCKET=baz \
# -e AWS_ACCESS_KEY=foo \
# -e AWS_SECRET_KEY=bar \
# -e GPG_PASSPHRASE=gloubiboulga \
# -lxc-conf=lxc.aa_profile=unconfined -privileged docker hack/release.sh
# ",2013-09-07 03:16:13+00:00,2013-07-08 21:30:29-07:00,,components/engine/Dockerfile,67310,2013-09-30 19:57:30+00:00,33aa0c2b851e1b478f1e55dc5e4a45cc8ceeac41,components/engine/Dockerfile
6941,33aa0c2b851e1b478f1e55dc5e4a45cc8ceeac41,components/engine/Dockerfile,components/engine/Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
# # Apparmor messes with privileged mode: disable it
# /etc/init.d/apparmor stop ; /etc/init.d/apparmor teardown
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/dotcloud/docker -privileged -lxc-conf=lxc.aa_profile=unconfined -i -t docker bash
#
#
# # Run the test suite:
# docker run -privileged -lxc-conf=lxc.aa_profile=unconfined docker go test -v
#
# # Publish a release:
# docker run -privileged -lxc-conf=lxc.aa_profile=unconfined \
#  -e AWS_S3_BUCKET=baz \
#  -e AWS_ACCESS_KEY=foo \
#  -e AWS_SECRET_KEY=bar \
#  -e GPG_PASSPHRASE=gloubiboulga \
#  docker hack/release.sh
#",2013-09-30 19:57:30+00:00,2013-07-08 21:30:29-07:00,,components/engine/Dockerfile,67289,2013-10-16 00:31:34+00:00,8846d6c44348681e2964d46b103d645e3fd6b8dc,components/engine/Dockerfile
11797,8846d6c44348681e2964d46b103d645e3fd6b8dc,components/engine/Dockerfile,components/engine/Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
# # Apparmor messes with privileged mode: disable it
# /etc/init.d/apparmor stop ; /etc/init.d/apparmor teardown
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/dotcloud/docker -privileged -lxc-conf=lxc.aa_profile=unconfined -i -t docker bash
#
#
# # Run the test suite:
# docker run -privileged -lxc-conf=lxc.aa_profile=unconfined docker hack/make.sh test
#
# # Publish a release:
# docker run -privileged -lxc-conf=lxc.aa_profile=unconfined \
#  -e AWS_S3_BUCKET=baz \
#  -e AWS_ACCESS_KEY=foo \
#  -e AWS_SECRET_KEY=bar \
#  -e GPG_PASSPHRASE=gloubiboulga \
#  docker hack/release.sh
#",2013-10-16 00:31:34+00:00,2013-07-08 21:30:29-07:00,,components/engine/Dockerfile,67259,2013-11-05 18:29:54+00:00,b64b038b0002d739898d6610cf45275358571fe9,components/engine/Dockerfile
14129,5e4f4153669d1dbd07f53a9267d5d8677c107b51,components/engine/Dockerfile,components/engine/Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/dotcloud/docker -privileged -i -t docker bash
#
# # Run the test suite:
# docker run -privileged docker hack/make.sh test
#
# # Publish a release:
# docker run -privileged \
#  -e AWS_S3_BUCKET=baz \
#  -e AWS_ACCESS_KEY=foo \
#  -e AWS_SECRET_KEY=bar \
#  -e GPG_PASSPHRASE=gloubiboulga \
#  docker hack/release.sh
#
# Note: Apparmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#",2013-11-01 20:55:19+00:00,2013-07-08 21:30:29-07:00,,components/engine/Dockerfile,67174,2014-03-13 17:46:02+00:00,c48adc6929a1f41dd086e3f9b91af773bbd2c8f2,components/engine/Dockerfile
16512,a7fc58e1eb11c1f9c94348203647b59eff438fdf,components/engine/Dockerfile,components/engine/Dockerfile,# TODO add linux/386 and linux/arm,2013-12-19 18:33:49+00:00,2013-07-08 21:30:29-07:00,,components/engine/Dockerfile,66839,2014-01-31 19:48:10+00:00,df82456ed97e08ffa192c1f821acd9315295e7da,components/engine/Dockerfile
8156,5ca82c401df8f0d035205702e2b6848d6afa3910,components/engine/Dockerfile,components/engine/Dockerfile,# TODO replace FPM with some very minimal debhelper stuff,2013-12-30 06:27:01+00:00,2013-07-08 21:30:29-07:00,,components/engine/Dockerfile,66827,2015-11-12 17:51:36+00:00,d41faf6fe1177b1ca296d996242f1d5ac854955c,components/engine/Dockerfile
6579,c48adc6929a1f41dd086e3f9b91af773bbd2c8f2,components/engine/Dockerfile,components/engine/Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/dotcloud/docker --privileged -i -t docker bash
#
# # Run the test suite:
# docker run --privileged docker hack/make.sh test
#
# # Publish a release:
# docker run --privileged \
#  -e AWS_S3_BUCKET=baz \
#  -e AWS_ACCESS_KEY=foo \
#  -e AWS_SECRET_KEY=bar \
#  -e GPG_PASSPHRASE=gloubiboulga \
#  docker hack/release.sh
#
# Note: Apparmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#",2014-03-13 17:46:02+00:00,2013-07-08 21:30:29-07:00,,components/engine/Dockerfile,66488,2014-07-24 22:19:50+00:00,6ae4c9014c47cc292e642bb85211b74fcf01af7a,components/engine/Dockerfile
4058,6ae4c9014c47cc292e642bb85211b74fcf01af7a,components/engine/Dockerfile,components/engine/Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/docker/docker --privileged -i -t docker bash
#
# # Run the test suite:
# docker run --privileged docker hack/make.sh test
#
# # Publish a release:
# docker run --privileged \
#  -e AWS_S3_BUCKET=baz \
#  -e AWS_ACCESS_KEY=foo \
#  -e AWS_SECRET_KEY=bar \
#  -e GPG_PASSPHRASE=gloubiboulga \
#  docker hack/release.sh
#
# Note: Apparmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#",2014-07-24 22:19:50+00:00,2013-07-08 21:30:29-07:00,,components/engine/Dockerfile,65234,2016-08-16 21:18:43+00:00,a0933c7d27b0559510dd97c75bc54edcd14f6130,components/engine/Dockerfile
14134,44958a29f2f2eb9a144b895146af552f1a3cd8d1,components/engine/Dockerfile,components/engine/Dockerfile,"# TODO when https://jenkins.dockerproject.com/job/Windows/ is green, add windows back to the list above
#	windows/amd64 windows/386",2015-01-22 22:42:17+00:00,2013-07-08 21:30:29-07:00,,components/engine/Dockerfile,63244,2015-02-11 18:54:34+00:00,c13ff1800716bee309a2c14b666bc9422b710dbd,components/engine/Dockerfile
11404,c071c815d3338d8357acfbdfeb95122cb8eaba2e,components/engine/Dockerfile,components/engine/Dockerfile,"# see also ""hack/make/.ensure-frozen-images"" (which needs to be updated any time this list is)",2015-03-10 01:02:59+00:00,2013-07-08 21:30:29-07:00,,components/engine/Dockerfile,62889,2017-04-12 13:37:40+00:00,4de7d7962060bdf994c78b6a15e91e509833168c,components/engine/Dockerfile
765,4edafc3bc120137c52da71f041df222fcf88cb3d,components/engine/Dockerfile,components/engine/Dockerfile,"# install seccomp
# TODO: switch to libseccomp-dev since dockerinit is gone",2016-01-26 12:47:02+00:00,2013-07-08 21:30:29-07:00,,components/engine/Dockerfile,55362,2016-02-02 19:37:43+00:00,5e084d01fea3e874cd77be21aab90b7d65b88977,components/engine/Dockerfile
6281,2a1e2c7de1d97b0f8123e0e7d0cd79d4efa10c80,components/engine/Dockerfile,components/engine/Dockerfile,"# !!! TEMPORARY HACK !!!
# Because of https://github.com/golang/go/issues/15286 we have to revert to Go 1.5.3 for windows/amd64 in master
# To change which version of Go to compile with, simply prepend PATH with /usr/local/go1.5.3/bin
# and set GOROOT to /usr/local/go1.5.3",2016-04-16 01:00:45+00:00,2013-07-08 21:30:29-07:00,,components/engine/Dockerfile,53797,2016-05-27 13:54:57+00:00,9b06540d329d2fcf96839faa3f760ce6b7cbfbe4,components/engine/Dockerfile
3023,dc5e6798a10239fe6fc1ad788095ee9668247889,components/engine/Dockerfile,components/engine/Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/docker/docker --privileged -i -t docker bash
#
# # Run the test suite:
# docker run --privileged docker hack/make.sh test-unit test-integration-cli test-docker-py
#
# # Publish a release:
# docker run --privileged \
#  -e AWS_S3_BUCKET=baz \
#  -e AWS_ACCESS_KEY=foo \
#  -e AWS_SECRET_KEY=bar \
#  -e GPG_PASSPHRASE=gloubiboulga \
#  docker hack/release.sh
#
# Note: AppArmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#",2016-07-04 14:43:53+00:00,2013-07-08 21:30:29-07:00,,components/engine/Dockerfile,52065,2017-05-09 15:20:42+00:00,8a093adb5cceabb305117fc020841db4bfec435e,components/engine/Dockerfile
6410,75e7ddadb0fc7a072bf1f95a336ee7b4bcb40e7f,components/engine/Dockerfile,components/engine/Dockerfile,"# Install tomlv, runc, containerd.and grimes
# Please edit hack/dockerfile/install-binaries.sh to update them.",2016-09-23 16:21:29+00:00,2013-07-08 21:30:29-07:00,,components/engine/Dockerfile,50007,2016-10-06 17:36:31+00:00,9ad2ffa17adf20a0e82e1e0ef48ae406bdabc181,components/engine/Dockerfile
3285,6e5d016ba60c4baa4931a603c3c7a407ca69b4bc,components/engine/Dockerfile,components/engine/Dockerfile,"# Install tomlv, runc, containerd and grimes
# Please edit hack/dockerfile/install-binaries.sh to update them.",2016-10-05 21:47:15+00:00,2013-07-08 21:30:29-07:00,,components/engine/Dockerfile,49599,2016-10-25 12:13:22+00:00,44e77a4b4f79be08a5f353adfa2533a6aa8c845a,components/engine/Dockerfile
11166,44e77a4b4f79be08a5f353adfa2533a6aa8c845a,components/engine/Dockerfile,components/engine/Dockerfile,"# Install tomlv, runc, containerd, grimes, docker-proxy
# Please edit hack/dockerfile/install-binaries.sh to update them.",2016-10-25 12:13:22+00:00,2013-07-08 21:30:29-07:00,,components/engine/Dockerfile,48620,2016-11-03 22:31:46+00:00,61646d77af8af895590b2069eefe76586bd48988,components/engine/Dockerfile
15619,61646d77af8af895590b2069eefe76586bd48988,components/engine/Dockerfile,components/engine/Dockerfile,"# Install tomlv, vndr, runc, containerd, grimes, docker-proxy
# Please edit hack/dockerfile/install-binaries.sh to update them.",2016-11-03 22:31:46+00:00,2013-07-08 21:30:29-07:00,,components/engine/Dockerfile,48254,2016-11-09 14:29:42+00:00,72ae55dd14ba3300f3b722866d86e0bc88f5dc39,components/engine/Dockerfile
9586,64d7644ec8c917daa03c0013a86bc5b7521b3a54,components/engine/Dockerfile,components/engine/Dockerfile,"# Install tomlv, vndr, runc, containerd, tini, docker-proxy
# Please edit hack/dockerfile/install-binaries.sh to update them.",2016-11-08 22:42:54+00:00,2013-07-08 21:30:29-07:00,,components/engine/Dockerfile,47817,2017-05-05 19:14:29+00:00,a8b3ac7249227d42799924b538781a42b2aab9d3,components/engine/Dockerfile
16954,391556ba38c94b792431ee57d6c0bf7dc4d6ea4a,components/engine/Dockerfile,components/engine/Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/docker/docker --privileged -i -t docker bash
#
# # Run the test suite:
# docker run -e DOCKER_GITCOMMIT=foo --privileged docker hack/make.sh test-unit test-integration-cli test-docker-py
#
# # Publish a release:
# docker run --privileged \
#  -e AWS_S3_BUCKET=baz \
#  -e AWS_ACCESS_KEY=foo \
#  -e AWS_SECRET_KEY=bar \
#  -e GPG_PASSPHRASE=gloubiboulga \
#  docker hack/release.sh
#
# Note: AppArmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#",2017-05-05 18:33:48+00:00,2013-07-08 21:30:29-07:00,,components/engine/Dockerfile,42903,2017-08-14 16:20:18+00:00,9685380dbb006361ee592c9971ca3813a8e3b4ad,components/engine/Dockerfile
10657,a8b3ac7249227d42799924b538781a42b2aab9d3,components/engine/Dockerfile,components/engine/Dockerfile,"# Install tomlv, vndr, runc, containerd, tini, docker-proxy dockercli
# Please edit hack/dockerfile/install-binaries.sh to update them.",2017-05-05 19:14:29+00:00,2013-07-08 21:30:29-07:00,,components/engine/Dockerfile,42901,2018-02-22 17:06:34+00:00,c679327e8019ed4c68b1e7199eba5c9069fedca6,components/engine/Dockerfile
16940,9a9d90f97d60b698ff9786ef021b75881ee294f8,components/engine/Dockerfile,components/engine/Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/docker/docker --privileged -i -t docker bash
#
# # Run the test suite:
# docker run -e DOCKER_GITCOMMIT=foo --privileged docker hack/make.sh test-unit test-integration test-docker-py
#
# # Publish a release:
# docker run --privileged \
#  -e AWS_S3_BUCKET=baz \
#  -e AWS_ACCESS_KEY=foo \
#  -e AWS_SECRET_KEY=bar \
#  -e GPG_PASSPHRASE=gloubiboulga \
#  docker hack/release.sh
#
# Note: AppArmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#",2017-08-09 15:02:57+00:00,2013-07-08 21:30:29-07:00,,components/engine/Dockerfile,38114,2018-02-15 17:07:01+00:00,481715cd839638feb344bdcba36851505b49b633,components/engine/Dockerfile
16585,57c34191f2bcdc0f6d0f60583cc37522a0e25a2b,components/engine/Dockerfile,components/engine/Dockerfile,# Options for hack/validate/gometalinter,2017-09-13 01:45:34+00:00,2013-07-08 21:30:29-07:00,,components/engine/Dockerfile,37476,2019-09-11 06:58:38+00:00,2652782fc983bd35c9e2a7a888c3ebb595cc31e1,components/engine/Dockerfile
15612,c6bfcea4c884c56b4860c83eb65b39a0fe356c4f,components/engine/Dockerfile,components/engine/Dockerfile,"# TODO: when issue #35963 fixed, we can upgrade the busybox to multi-arch",2018-01-11 05:14:09+00:00,2013-07-08 21:30:29-07:00,,components/engine/Dockerfile,32241,2018-02-15 17:07:01+00:00,481715cd839638feb344bdcba36851505b49b633,components/engine/Dockerfile
6297,1d51022fe81c77d3b394b80996310fa5e6812c1e,components/engine/Dockerfile,components/engine/Dockerfile,"# # Make a dockerd binary.
# # hack/make.sh binary
#
# # Install dockerd to /usr/local/bin
# # make install
#
# # Run unit tests
# # hack/test/unit
#
# # Run tests e.g. integration, py
# # hack/make.sh binary test-integration test-docker-py
#
# # Publish a release:
# docker run --privileged \
#  -e AWS_S3_BUCKET=baz \
#  -e AWS_ACCESS_KEY=foo \
#  -e AWS_SECRET_KEY=bar \
#  -e GPG_PASSPHRASE=gloubiboulga \
#  docker hack/release.sh
#
# Note: AppArmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#",2018-02-14 11:08:37+00:00,2013-07-08 21:30:29-07:00,,components/engine/Dockerfile,28945,2018-05-18 18:28:43+00:00,7a1680b13a4d40f402fb54bfef604e8539c37662,components/engine/Dockerfile
12325,f11213a80093591f2a3ac7ed0bb5a03312ffb533,components/engine/Dockerfile,components/engine/Dockerfile,"# Install tomlv, vndr, runc, containerd, tini, proxy dockercli
# Please edit hack/dockerfile/install/<name>.installer to update them.",2018-02-21 20:39:24+00:00,2013-07-08 21:30:29-07:00,,components/engine/Dockerfile,27994,2018-03-01 01:35:10+00:00,da1e08d48493406ce290a1b99269e52879af5b0e,components/engine/Dockerfile
16273,e4ccd4c846b6e85d2543ad6649dff52d3e303c70,components/engine/Dockerfile,components/engine/Dockerfile,"# TODO: This is for the docker-py tests, which shouldn't really be needed for
# this image, but currently CI is expecting to run this image. This should be
# split out into a separate image, including all the `python-*` deps installed
# above.",2018-02-26 08:10:17+00:00,2013-07-08 21:30:29-07:00,,components/engine/Dockerfile,27751,2019-07-18 21:01:38+00:00,d52a66f6949167cfd0e3be0df34549086d9addb0,components/engine/Dockerfile
16272,e4ccd4c846b6e85d2543ad6649dff52d3e303c70,components/engine/Dockerfile,components/engine/Dockerfile,"# TODO: Some of this is only really needed for testing, it would be nice to split this up",2018-02-26 08:10:17+00:00,2013-07-08 21:30:29-07:00,,components/engine/Dockerfile,27751,,,
16271,e4ccd4c846b6e85d2543ad6649dff52d3e303c70,components/engine/Dockerfile,components/engine/Dockerfile,"# Just a little hack so we don't have to install these deps twice, once for runc and once for dockerd",2018-02-26 08:10:17+00:00,2013-07-08 21:30:29-07:00,,components/engine/Dockerfile,27751,2019-04-20 20:34:05+00:00,4ada9355cb2594d16b801d2fad428302886f4021,components/engine/Dockerfile
6042,6150221be34e401da3514cab1e8ccb6eabc6f812,components/engine/Dockerfile,components/engine/Dockerfile,"# FIXME(vdemeester) this is kept for other script depending on it to not fail right away
# Remove this once the other scripts uses something else to detect the version",2018-02-28 08:04:48+00:00,2013-07-08 21:30:29-07:00,,components/engine/Dockerfile,27742,2018-09-07 08:35:33+00:00,97a0cbc24bf3f77186e4c980f901e15061b832a4,components/engine/Dockerfile
8177,7a1680b13a4d40f402fb54bfef604e8539c37662,components/engine/Dockerfile,components/engine/Dockerfile,"# # Make a dockerd binary.
# # hack/make.sh binary
#
# # Install dockerd to /usr/local/bin
# # make install
#
# # Run unit tests
# # hack/test/unit
#
# # Run tests e.g. integration, py
# # hack/make.sh binary test-integration test-docker-py
#
# Note: AppArmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#",2018-05-18 18:28:43+00:00,2013-07-08 21:30:29-07:00,,components/engine/Dockerfile,22949,2019-10-05 22:22:23+00:00,8b0f27a432b0bac35e0dbc1e7a193b865131d557,components/engine/Dockerfile
2128,dc33a78fc6b34d721b116e595312c113e5fb81af,components/engine/Dockerfile,components/engine/Dockerfile,"# Install go-swagger for validating swagger.yaml
# This is https://github.com/kolyshkin/go-swagger/tree/golang-1.13-fix
# TODO: move to under moby/ or fix upstream go-swagger to work for us.",2019-10-08 18:29:59+00:00,2013-07-08 21:30:29-07:00,,components/engine/Dockerfile,8061,,,
8869,63569a36d81ca48b4e6ea2d598e73ff2249db2f8,components/engine/Dockerfile,components/engine/Dockerfile,"# TODO: This is here because hack/make.sh binary copies these extras binaries
# from $PATH into the bundles dir.
# It would be nice to handle this in a different way.",2019-12-02 17:52:16+00:00,2013-07-08 21:30:29-07:00,,components/engine/Dockerfile,6703,,,
10320,96de465e2a5ab8a2d154e2daf8e2581e39725871,components/engine/Dockerfile,components/engine/Dockerfile,"# Switch to use iptables instead of nftables (to match the CI hosts)
# TODO use some kind of runtime auto-detection instead if/when nftables is supported (https://github.com/moby/moby/issues/26824)",2020-02-25 23:31:07+00:00,2013-07-08 21:30:29-07:00,,components/engine/Dockerfile,5037,,,
13891,68301c38288c1554119f272cd8e44b6342965cac,components/engine/builder/parser/testfiles/docker/Dockerfile,components/engine/builder/dockerfile/parser/testfiles/docker/Dockerfile,# TODO replace FPM with some very minimal debhelper stuff,2014-08-28 01:52:29+00:00,2014-08-27 18:52:29-07:00,2018-11-19 09:12:15+01:00,components/engine/builder/parser/testfiles/docker/Dockerfile,64937,2018-11-19 09:12:15+01:00,4727924dbd112f47287ac73802a43c53aa1d2cb9,components/engine/builder/dockerfile/parser/testfiles/docker/Dockerfile
13890,68301c38288c1554119f272cd8e44b6342965cac,components/engine/builder/parser/testfiles/docker/Dockerfile,components/engine/builder/dockerfile/parser/testfiles/docker/Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/docker/docker --privileged -i -t docker bash
#
# # Run the test suite:
# docker run --privileged docker hack/make.sh test
#
# # Publish a release:
# docker run --privileged \
#  -e AWS_S3_BUCKET=baz \
#  -e AWS_ACCESS_KEY=foo \
#  -e AWS_SECRET_KEY=bar \
#  -e GPG_PASSPHRASE=gloubiboulga \
#  docker hack/release.sh
#
# Note: Apparmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#",2014-08-28 01:52:29+00:00,2014-08-27 18:52:29-07:00,2018-11-19 09:12:15+01:00,components/engine/builder/parser/testfiles/docker/Dockerfile,64937,2016-07-04 14:43:53+00:00,dc5e6798a10239fe6fc1ad788095ee9668247889,components/engine/builder/dockerfile/parser/testfiles/docker/Dockerfile
3025,dc5e6798a10239fe6fc1ad788095ee9668247889,components/engine/builder/dockerfile/parser/testfiles/docker/Dockerfile,components/engine/builder/dockerfile/parser/testfiles/docker/Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/docker/docker --privileged -i -t docker bash
#
# # Run the test suite:
# docker run --privileged docker hack/make.sh test-unit test-integration-cli test-docker-py
#
# # Publish a release:
# docker run --privileged \
#  -e AWS_S3_BUCKET=baz \
#  -e AWS_ACCESS_KEY=foo \
#  -e AWS_SECRET_KEY=bar \
#  -e GPG_PASSPHRASE=gloubiboulga \
#  docker hack/release.sh
#
# Note: AppArmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#",2016-07-04 14:43:53+00:00,2014-08-27 18:52:29-07:00,2018-11-19 09:12:15+01:00,components/engine/builder/dockerfile/parser/testfiles/docker/Dockerfile,52065,2017-12-01 04:12:05+00:00,6a8cf843af181b118737a9abd0c7b3cded3a93cd,components/engine/builder/dockerfile/parser/testfiles/docker/Dockerfile
2173,94ae8f10c7281c0b5bd8f0945ac9ce250dbd55db,components/engine/builder/dockerfile/parser/testfiles/docker/Dockerfile,components/engine/builder/dockerfile/parser/testfiles/docker/Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/docker/docker --privileged -i -t docker bash
#
# # Run the test suite:
# docker run --privileged docker hack/make.sh test-unit test-integration test-docker-py
#
# # Publish a release:
# docker run --privileged \
#  -e AWS_S3_BUCKET=baz \
#  -e AWS_ACCESS_KEY=foo \
#  -e AWS_SECRET_KEY=bar \
#  -e GPG_PASSPHRASE=gloubiboulga \
#  docker hack/release.sh
#
# Note: AppArmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#",2017-11-28 03:01:14+00:00,2014-08-27 18:52:29-07:00,2018-11-19 09:12:15+01:00,components/engine/builder/dockerfile/parser/testfiles/docker/Dockerfile,35250,2018-05-18 18:28:43+00:00,7a1680b13a4d40f402fb54bfef604e8539c37662,components/engine/builder/dockerfile/parser/testfiles/docker/Dockerfile
8183,7a1680b13a4d40f402fb54bfef604e8539c37662,components/engine/builder/dockerfile/parser/testfiles/docker/Dockerfile,components/engine/builder/dockerfile/parser/testfiles/docker/Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/docker/docker --privileged -i -t docker bash
#
# # Run the test suite:
# docker run --privileged docker hack/make.sh test-unit test-integration test-docker-py
#
# Note: AppArmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#",2018-05-18 18:28:43+00:00,2014-08-27 18:52:29-07:00,2018-11-19 09:12:15+01:00,components/engine/builder/dockerfile/parser/testfiles/docker/Dockerfile,22949,2018-11-19 09:12:15+01:00,4727924dbd112f47287ac73802a43c53aa1d2cb9,components/engine/builder/dockerfile/parser/testfiles/docker/Dockerfile
3851,736b960e2df15e35aca9abec3ef6a9bc64ead7b3,components/engine/testing/nightlyrelease/Dockerfile,components/engine/hack/infrastructure/docker-ci/nightlyrelease/Dockerfile,#### FIXME. Temporarily install docker with proper apparmor handling,2013-10-11 01:29:10+00:00,2013-10-10 18:29:10-07:00,2014-03-10 13:20:49-07:00,components/engine/testing/nightlyrelease/Dockerfile,67271,2013-11-01 13:55:19-07:00,5e4f4153669d1dbd07f53a9267d5d8677c107b51,components/engine/hack/infrastructure/docker-ci/nightlyrelease/Dockerfile
6303,aac90cd92e4389ce099b59cb7313755538ca4d48,components/engine/hack/infrastructure/docker-ci/nightlyrelease/Dockerfile,components/engine/hack/infrastructure/docker-ci/nightlyrelease/Dockerfile,"# VERSION:        1.5
# DOCKER-VERSION  0.6.4
# AUTHOR:         Daniel Mizyrycki <daniel@dotcloud.com>
# DESCRIPTION:    Build docker nightly release using Docker in Docker.
# REFERENCES:     This code reuses the excellent implementation of docker in docker
#                 made by Jerome Petazzoni.  https://github.com/jpetazzo/dind
# COMMENTS:
#   release_credentials.json is a base64 json encoded file containing:
#       { ""AWS_ACCESS_KEY"": ""Test_docker_AWS_S3_bucket_id"",
#         ""AWS_SECRET_KEY"": ""Test_docker_AWS_S3_bucket_key"",
#         ""GPG_PASSPHRASE"": ""Test_docker_GPG_passphrase_signature"" }
# TO_BUILD:       docker build -t dockerbuilder .
# TO_RELEASE:     docker run -i -t -privileged -e AWS_S3_BUCKET=""test.docker.io"" dockerbuilder hack/dind dockerbuild.sh",2013-11-07 03:13:58+00:00,2013-10-10 18:29:10-07:00,2014-03-10 13:20:49-07:00,components/engine/hack/infrastructure/docker-ci/nightlyrelease/Dockerfile,67104,2013-11-07 04:05:26+00:00,ba4e682cde6ad56a7fe88c5e61c976e1db93338b,components/engine/hack/infrastructure/docker-ci/nightlyrelease/Dockerfile
8453,7a7c9f0f1d41534dd4afd66f7d8fa56e38ed94e1,components/engine/hack/infrastructure/docker-ci/nightlyrelease/Dockerfile,components/engine/hack/infrastructure/docker-ci/nightlyrelease/Dockerfile,#### FIXME. Temporarily install docker and dind with proper apparmor handling,2013-11-07 03:13:58+00:00,2013-10-10 18:29:10-07:00,2014-03-10 13:20:49-07:00,components/engine/hack/infrastructure/docker-ci/nightlyrelease/Dockerfile,67103,2013-11-07 04:05:26+00:00,ba4e682cde6ad56a7fe88c5e61c976e1db93338b,components/engine/hack/infrastructure/docker-ci/nightlyrelease/Dockerfile
4978,ba4e682cde6ad56a7fe88c5e61c976e1db93338b,components/engine/hack/infrastructure/docker-ci/nightlyrelease/Dockerfile,components/engine/hack/infrastructure/docker-ci/nightlyrelease/Dockerfile,"# VERSION:        1.6
# DOCKER-VERSION  0.6.6
# AUTHOR:         Daniel Mizyrycki <daniel@docker.com>
# DESCRIPTION:    Build docker nightly release using Docker in Docker.
# REFERENCES:     This code reuses the excellent implementation of docker in docker
#                 made by Jerome Petazzoni.  https://github.com/jpetazzo/dind
# COMMENTS:
#   release_credentials.json is a base64 json encoded file containing:
#       { ""AWS_ACCESS_KEY"": ""Test_docker_AWS_S3_bucket_id"",
#         ""AWS_SECRET_KEY"": ""Test_docker_AWS_S3_bucket_key"",
#         ""GPG_PASSPHRASE"": ""Test_docker_GPG_passphrase_signature"" }
# TO_BUILD:       docker build -t dockerbuilder .
# TO_RELEASE:     docker run -i -t -privileged -e AWS_S3_BUCKET=""test.docker.io"" dockerbuilder hack/dind dockerbuild.sh",2013-11-07 04:05:26+00:00,2013-10-10 18:29:10-07:00,2014-03-10 13:20:49-07:00,components/engine/hack/infrastructure/docker-ci/nightlyrelease/Dockerfile,67097,2014-03-10 13:20:49-07:00,66069773bceabb9e8aaa1f6ac7bd84ab221eca94,components/engine/hack/infrastructure/docker-ci/nightlyrelease/Dockerfile
12699,8802449935b4e4d4be8e279e99348a99c4e13bc0,components/engine/hack/infrastructure/docker-ci/docker-test/Dockerfile,components/engine/hack/infrastructure/docker-ci/docker-test/Dockerfile,"# VERSION:        0.3
# DOCKER-VERSION  0.6.3
# AUTHOR:         Daniel Mizyrycki <daniel@dotcloud.com>
# DESCRIPTION:    Testing docker PRs and commits on top of master using
# REFERENCES:     This code reuses the excellent implementation of
#                 Docker in Docker made by Jerome Petazzoni.
#                 https://github.com/jpetazzo/dind
# COMMENTS:
#   This Dockerfile adapts /Dockerfile to enable docker PRs and commits testing
#   Optional arguments:
#       [commit]  (default: 'HEAD')
#       [repo]    (default: 'http://github.com/dotcloud/docker')
#       [branch]  (default: 'master')
# TO_BUILD:       docker build -t test_docker .
# TO_RUN:         docker run -privileged test_docker hack/dind test_docker.sh [commit] [repo] [branch]",2013-10-19 05:33:16+00:00,2013-10-18 22:33:16-07:00,2014-03-10 13:20:49-07:00,components/engine/hack/infrastructure/docker-ci/docker-test/Dockerfile,67219,2013-11-07 04:05:26+00:00,ba4e682cde6ad56a7fe88c5e61c976e1db93338b,components/engine/hack/infrastructure/docker-ci/docker-test/Dockerfile
14780,837c6b480c6859db6bf3f3fb044b070afb3f336d,components/engine/hack/infrastructure/docker-ci/docker-test/Dockerfile,components/engine/hack/infrastructure/docker-ci/docker-test/Dockerfile,#### FIXME. Temporarily install docker and dind with proper apparmor handling,2013-11-07 03:13:58+00:00,2013-10-18 22:33:16-07:00,2014-03-10 13:20:49-07:00,components/engine/hack/infrastructure/docker-ci/docker-test/Dockerfile,67102,2013-11-07 04:05:26+00:00,ba4e682cde6ad56a7fe88c5e61c976e1db93338b,components/engine/hack/infrastructure/docker-ci/docker-test/Dockerfile
4979,ba4e682cde6ad56a7fe88c5e61c976e1db93338b,components/engine/hack/infrastructure/docker-ci/docker-test/Dockerfile,components/engine/hack/infrastructure/docker-ci/docker-test/Dockerfile,"# VERSION:        0.4
# DOCKER-VERSION  0.6.6
# AUTHOR:         Daniel Mizyrycki <daniel@docker.com>
# DESCRIPTION:    Testing docker PRs and commits on top of master using
# REFERENCES:     This code reuses the excellent implementation of
#                 Docker in Docker made by Jerome Petazzoni.
#                 https://github.com/jpetazzo/dind
# COMMENTS:
#   This Dockerfile adapts /Dockerfile to enable docker PRs and commits testing
#   Optional arguments:
#       [commit]  (default: 'HEAD')
#       [repo]    (default: 'http://github.com/dotcloud/docker')
#       [branch]  (default: 'master')
# TO_BUILD:       docker build -t test_docker .
# TO_RUN:         docker run -privileged test_docker hack/dind test_docker.sh [commit] [repo] [branch]",2013-11-07 04:05:26+00:00,2013-10-18 22:33:16-07:00,2014-03-10 13:20:49-07:00,components/engine/hack/infrastructure/docker-ci/docker-test/Dockerfile,67097,2014-03-10 13:20:49-07:00,66069773bceabb9e8aaa1f6ac7bd84ab221eca94,components/engine/hack/infrastructure/docker-ci/docker-test/Dockerfile
6010,0f4b49bea82d2dc2fb6004befdde9f1d380cb527,components/engine/docs/Dockerfile,components/engine/docs/Dockerfile,# TODO switch to http://packages.ubuntu.com/trusty/python-sphinxcontrib-httpdomain once trusty is released,2014-01-15 02:23:30+00:00,2013-08-30 00:13:32+00:00,2017-01-31 13:41:02-08:00,components/engine/docs/Dockerfile,66782,2014-04-16 00:02:10+00:00,0bb55ea3f447eb4d411403e0be9a7efecda62087,components/engine/docs/Dockerfile
144,824b119187656e9475e2a02cd33d44f946f9d17b,components/engine/docs/Dockerfile,components/engine/docs/Dockerfile,# TODO: need the full repo source to get the git version info,2015-02-26 01:41:39+00:00,2013-08-30 00:13:32+00:00,2017-01-31 13:41:02-08:00,components/engine/docs/Dockerfile,62983,2015-06-15 13:19:38-07:00,9a276424db9080271213aa606d9aafef9c79b644,components/engine/docs/Dockerfile
145,824b119187656e9475e2a02cd33d44f946f9d17b,components/engine/docs/Dockerfile,components/engine/docs/Dockerfile,# TODO: don't do this - look at merging the yml file in build.sh,2015-02-26 01:41:39+00:00,2013-08-30 00:13:32+00:00,2017-01-31 13:41:02-08:00,components/engine/docs/Dockerfile,62983,2015-06-15 13:19:38-07:00,9a276424db9080271213aa606d9aafef9c79b644,components/engine/docs/Dockerfile
10373,78ba8bbfa182d305b3f34d7ecc2d05baa56c1c5b,components/packaging/image/Dockerfile,components/packaging/image/Dockerfile,"# docker-init - TODO move this out, last time we bumped was 2016!",2018-07-12 17:41:52+00:00,2018-07-12 10:41:52-07:00,,components/packaging/image/Dockerfile,21751,,,
10372,78ba8bbfa182d305b3f34d7ecc2d05baa56c1c5b,components/packaging/image/Dockerfile,components/packaging/image/Dockerfile,"# docker-proxy
# TODO if libnetwork folds into the docker tree this can be combined above",2018-07-12 17:41:52+00:00,2018-07-12 10:41:52-07:00,,components/packaging/image/Dockerfile,21751,,,
10371,78ba8bbfa182d305b3f34d7ecc2d05baa56c1c5b,components/packaging/image/Dockerfile,components/packaging/image/Dockerfile,# TODO The way we set the version could easily be simplified not to depend on hack/...,2018-07-12 17:41:52+00:00,2018-07-12 10:41:52-07:00,,components/packaging/image/Dockerfile,21751,,,
10370,78ba8bbfa182d305b3f34d7ecc2d05baa56c1c5b,components/packaging/image/Dockerfile,components/packaging/image/Dockerfile,#COPY hack/dockerfile/binaries-commits /,2018-07-12 17:41:52+00:00,2018-07-12 10:41:52-07:00,,components/packaging/image/Dockerfile,21751,,,
