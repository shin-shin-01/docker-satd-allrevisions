,CommitID,Dockerfile,LatestDockerfile,Comment,Date,FirstCommit Date,Deleted Date,RenameList,logIndex,DeletedComment Date,Deleted CommitID,Deleted Filename
2267,fa806f26aff927eb0d98b41e79786ae98987da5b,Dockerfile,Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
# # Apparmor messes with privileged mode: disable it
# /etc/init.d/apparmor stop ; /etc/init.d/apparmor teardown
#
# # Run the test suite:
# docker run -privileged -lxc-conf=lxc.aa_profile=unconfined docker go test -v
#
# # Publish a release:
# docker run -privileged -lxc-conf=lxc.aa_profile=unconfined \
# -e AWS_S3_BUCKET=baz \
# -e AWS_ACCESS_KEY=foo \
# -e AWS_SECRET_KEY=bar \
# -e GPG_PASSPHRASE=gloubiboulga \
# -lxc-conf=lxc.aa_profile=unconfined -privileged docker hack/release/release.sh
# ",2013-09-07 02:58:05+00:00,2013-07-08 21:30:29-07:00,,Dockerfile,3892,2013-09-07 03:14:03+00:00,47838051be695a4e74c80690ceef811dcd3ef62c,Dockerfile
1898,47838051be695a4e74c80690ceef811dcd3ef62c,Dockerfile,Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
# # Apparmor messes with privileged mode: disable it
# /etc/init.d/apparmor stop ; /etc/init.d/apparmor teardown
#
# # Run the test suite:
# docker run -privileged -lxc-conf=lxc.aa_profile=unconfined docker go test -v
#
# # Publish a release:
# docker run -privileged -lxc-conf=lxc.aa_profile=unconfined \
# -e AWS_S3_BUCKET=baz \
# -e AWS_ACCESS_KEY=foo \
# -e AWS_SECRET_KEY=bar \
# -e GPG_PASSPHRASE=gloubiboulga \
# -lxc-conf=lxc.aa_profile=unconfined -privileged docker hack/release.sh
# ",2013-09-07 03:14:03+00:00,2013-07-08 21:30:29-07:00,,Dockerfile,3891,2013-09-07 03:16:13+00:00,d757bd0904b71346b6c83622ae5685bc0c0d4349,Dockerfile
436,d757bd0904b71346b6c83622ae5685bc0c0d4349,Dockerfile,Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
# # Apparmor messes with privileged mode: disable it
# /etc/init.d/apparmor stop ; /etc/init.d/apparmor teardown
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/dotcloud/docker -privileged -lxc-conf=lxc.aa_profile=unconfined -i -t docker bash
#
#
# # Run the test suite:
# docker run -privileged -lxc-conf=lxc.aa_profile=unconfined docker go test -v
#
# # Publish a release:
# docker run -privileged -lxc-conf=lxc.aa_profile=unconfined \
# -e AWS_S3_BUCKET=baz \
# -e AWS_ACCESS_KEY=foo \
# -e AWS_SECRET_KEY=bar \
# -e GPG_PASSPHRASE=gloubiboulga \
# -lxc-conf=lxc.aa_profile=unconfined -privileged docker hack/release.sh
# ",2013-09-07 03:16:13+00:00,2013-07-08 21:30:29-07:00,,Dockerfile,3890,2013-09-30 19:57:30+00:00,ccefe47897bdcef8b56bf54d4bd324989855f3b5,Dockerfile
446,ccefe47897bdcef8b56bf54d4bd324989855f3b5,Dockerfile,Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
# # Apparmor messes with privileged mode: disable it
# /etc/init.d/apparmor stop ; /etc/init.d/apparmor teardown
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/dotcloud/docker -privileged -lxc-conf=lxc.aa_profile=unconfined -i -t docker bash
#
#
# # Run the test suite:
# docker run -privileged -lxc-conf=lxc.aa_profile=unconfined docker go test -v
#
# # Publish a release:
# docker run -privileged -lxc-conf=lxc.aa_profile=unconfined \
#  -e AWS_S3_BUCKET=baz \
#  -e AWS_ACCESS_KEY=foo \
#  -e AWS_SECRET_KEY=bar \
#  -e GPG_PASSPHRASE=gloubiboulga \
#  docker hack/release.sh
#",2013-09-30 19:57:30+00:00,2013-07-08 21:30:29-07:00,,Dockerfile,3880,2013-10-16 00:31:34+00:00,ee7d9b0bdec40d02ba5ef25f557cca9444a19669,Dockerfile
887,ee7d9b0bdec40d02ba5ef25f557cca9444a19669,Dockerfile,Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
# # Apparmor messes with privileged mode: disable it
# /etc/init.d/apparmor stop ; /etc/init.d/apparmor teardown
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/dotcloud/docker -privileged -lxc-conf=lxc.aa_profile=unconfined -i -t docker bash
#
#
# # Run the test suite:
# docker run -privileged -lxc-conf=lxc.aa_profile=unconfined docker hack/make.sh test
#
# # Publish a release:
# docker run -privileged -lxc-conf=lxc.aa_profile=unconfined \
#  -e AWS_S3_BUCKET=baz \
#  -e AWS_ACCESS_KEY=foo \
#  -e AWS_SECRET_KEY=bar \
#  -e GPG_PASSPHRASE=gloubiboulga \
#  docker hack/release.sh
#",2013-10-16 00:31:34+00:00,2013-07-08 21:30:29-07:00,,Dockerfile,3865,2013-11-06 20:03:03+00:00,6d420407caf533f89b60d78c54e0ddc2d307e942,Dockerfile
1960,31638ab2ad2a5380d447780f05f7aa078c9421f5,Dockerfile,Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/dotcloud/docker -privileged -i -t docker bash
#
# # Run the test suite:
# docker run -privileged docker hack/make.sh test
#
# # Publish a release:
# docker run -privileged \
#  -e AWS_S3_BUCKET=baz \
#  -e AWS_ACCESS_KEY=foo \
#  -e AWS_SECRET_KEY=bar \
#  -e GPG_PASSPHRASE=gloubiboulga \
#  docker hack/release.sh
#
# Note: Apparmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#",2013-11-01 20:55:19+00:00,2013-07-08 21:30:29-07:00,,Dockerfile,3827,2014-03-13 17:46:02+00:00,44fe8cbbd174b5d85d4a063ed270f6b9d2279b70,Dockerfile
956,62a81370fffb3cfdb15ef19702f0ea07ab2f4c36,Dockerfile,Dockerfile,# TODO add linux/386 and linux/arm,2013-12-19 18:33:49+00:00,2013-07-08 21:30:29-07:00,,Dockerfile,3725,2014-01-31 19:48:10+00:00,523341d994265b9f72e4869f0fd094fd15f1b480,Dockerfile
2223,484a75f3549239d0489cb0ad518d79ed6783584a,Dockerfile,Dockerfile,# TODO replace FPM with some very minimal debhelper stuff,2013-12-30 06:27:01+00:00,2013-07-08 21:30:29-07:00,,Dockerfile,3722,2015-11-12 17:51:36+00:00,8b9856dbd7a1981aaa76fcf0fc10b37d1141c9af,Dockerfile
46,44fe8cbbd174b5d85d4a063ed270f6b9d2279b70,Dockerfile,Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/dotcloud/docker --privileged -i -t docker bash
#
# # Run the test suite:
# docker run --privileged docker hack/make.sh test
#
# # Publish a release:
# docker run --privileged \
#  -e AWS_S3_BUCKET=baz \
#  -e AWS_ACCESS_KEY=foo \
#  -e AWS_SECRET_KEY=bar \
#  -e GPG_PASSPHRASE=gloubiboulga \
#  docker hack/release.sh
#
# Note: Apparmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#",2014-03-13 17:46:02+00:00,2013-07-08 21:30:29-07:00,,Dockerfile,3625,2014-07-24 22:19:50+00:00,b3ee9ac74e171e00f14027e39278013629e681b8,Dockerfile
1101,b3ee9ac74e171e00f14027e39278013629e681b8,Dockerfile,Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/docker/docker --privileged -i -t docker bash
#
# # Run the test suite:
# docker run --privileged docker hack/make.sh test
#
# # Publish a release:
# docker run --privileged \
#  -e AWS_S3_BUCKET=baz \
#  -e AWS_ACCESS_KEY=foo \
#  -e AWS_SECRET_KEY=bar \
#  -e GPG_PASSPHRASE=gloubiboulga \
#  docker hack/release.sh
#
# Note: Apparmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#",2014-07-24 22:19:50+00:00,2013-07-08 21:30:29-07:00,,Dockerfile,3371,2016-08-16 21:18:43+00:00,37302bbb3f4889e9de2a95d5ea018acdab9e4447,Dockerfile
9,47769994e5cba81a96529b418052afce7a6d51a3,Dockerfile,Dockerfile,"# TODO when https://jenkins.dockerproject.com/job/Windows/ is green, add windows back to the list above
#	windows/amd64 windows/386",2015-01-22 22:42:17+00:00,2013-07-08 21:30:29-07:00,,Dockerfile,2942,2015-02-09 22:22:22+00:00,4bc4587f05a754f52e40928c32c84ea48cc3522f,Dockerfile
2264,09b4c2585284d1125d4d299a7d58b36c1d0baf17,Dockerfile,Dockerfile,"# see also ""hack/make/.ensure-frozen-images"" (which needs to be updated any time this list is)",2015-03-10 01:02:59+00:00,2013-07-08 21:30:29-07:00,,Dockerfile,2893,2017-04-10 20:05:39+00:00,1ecd8ed5186a161c1c43ae7c99b1c81b97188619,Dockerfile
1296,4357ed4a7363a1032edf93cf03232953c805184f,Dockerfile,Dockerfile,"# install seccomp
# TODO: switch to libseccomp-dev since dockerinit is gone",2016-01-26 12:47:02+00:00,2013-07-08 21:30:29-07:00,,Dockerfile,2177,2016-02-02 18:03:52+00:00,9b8d328666a6cd5313208cdf5f116825f06dccdc,Dockerfile
810,3b3e58b639729e0fb3227e21367fea3ff9c5ff03,Dockerfile,Dockerfile,"# !!! TEMPORARY HACK !!!
# Because of https://github.com/golang/go/issues/15286 we have to revert to Go 1.5.3 for windows/amd64 in master
# To change which version of Go to compile with, simply prepend PATH with /usr/local/go1.5.3/bin
# and set GOROOT to /usr/local/go1.5.3",2016-04-16 01:00:45+00:00,2013-07-08 21:30:29-07:00,,Dockerfile,1967,2016-05-25 09:58:48+00:00,40b21745cc14628fc5336fbacddf092667a70c65,Dockerfile
439,11280665b45d0ac9920d17abaf6a7328f2bc77d9,Dockerfile,Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/docker/docker --privileged -i -t docker bash
#
# # Run the test suite:
# docker run --privileged docker hack/make.sh test-unit test-integration-cli test-docker-py
#
# # Publish a release:
# docker run --privileged \
#  -e AWS_S3_BUCKET=baz \
#  -e AWS_ACCESS_KEY=foo \
#  -e AWS_SECRET_KEY=bar \
#  -e GPG_PASSPHRASE=gloubiboulga \
#  docker hack/release.sh
#
# Note: AppArmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#",2016-07-04 14:43:53+00:00,2013-07-08 21:30:29-07:00,,Dockerfile,1833,2017-05-09 15:20:42+00:00,a762ceace4e8c1c7ce4fb582789af9d8074be3e1,Dockerfile
2153,1b41125ad9f1a3881b71bd044d76fd285170addb,Dockerfile,Dockerfile,"# Install tomlv, runc, containerd.and grimes
# Please edit hack/dockerfile/install-binaries.sh to update them.",2016-09-23 16:21:29+00:00,2013-07-08 21:30:29-07:00,,Dockerfile,1705,2016-10-05 21:47:15+00:00,7e12c3bb99381f117be73e05c187be6ce44280b9,Dockerfile
76,7e12c3bb99381f117be73e05c187be6ce44280b9,Dockerfile,Dockerfile,"# Install tomlv, runc, containerd and grimes
# Please edit hack/dockerfile/install-binaries.sh to update them.",2016-10-05 21:47:15+00:00,2013-07-08 21:30:29-07:00,,Dockerfile,1655,2016-10-25 12:13:22+00:00,3996975b0840033bda3919440d122d734a4bc66b,Dockerfile
2,3996975b0840033bda3919440d122d734a4bc66b,Dockerfile,Dockerfile,"# Install tomlv, runc, containerd, grimes, docker-proxy
# Please edit hack/dockerfile/install-binaries.sh to update them.",2016-10-25 12:13:22+00:00,2013-07-08 21:30:29-07:00,,Dockerfile,1583,2016-11-03 22:31:46+00:00,f2614f2107c838d014d31b806e3b8a9f1395cb2b,Dockerfile
59,f2614f2107c838d014d31b806e3b8a9f1395cb2b,Dockerfile,Dockerfile,"# Install tomlv, vndr, runc, containerd, grimes, docker-proxy
# Please edit hack/dockerfile/install-binaries.sh to update them.",2016-11-03 22:31:46+00:00,2013-07-08 21:30:29-07:00,,Dockerfile,1551,2016-11-08 22:42:54+00:00,d58b47623b252803f5cd12f6d9ca584d1587ab22,Dockerfile
1363,d58b47623b252803f5cd12f6d9ca584d1587ab22,Dockerfile,Dockerfile,"# Install tomlv, vndr, runc, containerd, tini, docker-proxy
# Please edit hack/dockerfile/install-binaries.sh to update them.",2016-11-08 22:42:54+00:00,2013-07-08 21:30:29-07:00,,Dockerfile,1491,2017-05-05 19:14:29+00:00,32915b1d0a315598edb737785d0357b5a1b8aa11,Dockerfile
577,5a076d7589d7a30cc0a1e45eff6674a2c8fa1cb0,Dockerfile,Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/docker/docker --privileged -i -t docker bash
#
# # Run the test suite:
# docker run -e DOCKER_GITCOMMIT=foo --privileged docker hack/make.sh test-unit test-integration-cli test-docker-py
#
# # Publish a release:
# docker run --privileged \
#  -e AWS_S3_BUCKET=baz \
#  -e AWS_ACCESS_KEY=foo \
#  -e AWS_SECRET_KEY=bar \
#  -e GPG_PASSPHRASE=gloubiboulga \
#  docker hack/release.sh
#
# Note: AppArmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#",2017-05-05 18:33:48+00:00,2013-07-08 21:30:29-07:00,,Dockerfile,1153,2017-08-09 15:02:57+00:00,bc82b139955c4a0edb20b070926469cceea0fbbb,Dockerfile
1352,32915b1d0a315598edb737785d0357b5a1b8aa11,Dockerfile,Dockerfile,"# Install tomlv, vndr, runc, containerd, tini, docker-proxy dockercli
# Please edit hack/dockerfile/install-binaries.sh to update them.",2017-05-05 19:14:29+00:00,2013-07-08 21:30:29-07:00,,Dockerfile,1151,2018-02-21 20:39:24+00:00,b529d1b0936b90ae14d584c73f7332919f8d76b7,Dockerfile
209,bc82b139955c4a0edb20b070926469cceea0fbbb,Dockerfile,Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/docker/docker --privileged -i -t docker bash
#
# # Run the test suite:
# docker run -e DOCKER_GITCOMMIT=foo --privileged docker hack/make.sh test-unit test-integration test-docker-py
#
# # Publish a release:
# docker run --privileged \
#  -e AWS_S3_BUCKET=baz \
#  -e AWS_ACCESS_KEY=foo \
#  -e AWS_SECRET_KEY=bar \
#  -e GPG_PASSPHRASE=gloubiboulga \
#  docker hack/release.sh
#
# Note: AppArmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#",2017-08-09 15:02:57+00:00,2013-07-08 21:30:29-07:00,,Dockerfile,908,2018-02-14 11:08:37+00:00,ba49e8c49830b69c833edff3c393716da20f897a,Dockerfile
556,b96093fa56a9c085cb3123010be2430753c40cbc,Dockerfile,Dockerfile,# Options for hack/validate/gometalinter,2017-09-13 01:45:34+00:00,2013-07-08 21:30:29-07:00,,Dockerfile,903,2019-09-11 06:58:38+00:00,a464a3d51f89566b3e480d66903056004576cc85,Dockerfile
333,eaae7750efbc80314c5e028c4d43d3cd9e104edd,Dockerfile,Dockerfile,"# TODO: when issue #35963 fixed, we can upgrade the busybox to multi-arch",2018-01-11 05:14:09+00:00,2013-07-08 21:30:29-07:00,,Dockerfile,662,2018-02-15 08:49:15+00:00,e3102d5055995a43b090dbc29342a1846a39edae,Dockerfile
371,ba49e8c49830b69c833edff3c393716da20f897a,Dockerfile,Dockerfile,"# # Make a dockerd binary.
# # hack/make.sh binary
#
# # Install dockerd to /usr/local/bin
# # make install
#
# # Run unit tests
# # hack/test/unit
#
# # Run tests e.g. integration, py
# # hack/make.sh binary test-integration test-docker-py
#
# # Publish a release:
# docker run --privileged \
#  -e AWS_S3_BUCKET=baz \
#  -e AWS_ACCESS_KEY=foo \
#  -e AWS_SECRET_KEY=bar \
#  -e GPG_PASSPHRASE=gloubiboulga \
#  docker hack/release.sh
#
# Note: AppArmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#",2018-02-14 11:08:37+00:00,2013-07-08 21:30:29-07:00,,Dockerfile,508,2018-05-18 18:28:43+00:00,80bc8b4766cc808186af91930152d78afb22aef8,Dockerfile
950,b529d1b0936b90ae14d584c73f7332919f8d76b7,Dockerfile,Dockerfile,"# Install tomlv, vndr, runc, containerd, tini, proxy dockercli
# Please edit hack/dockerfile/install/<name>.installer to update them.",2018-02-21 20:39:24+00:00,2013-07-08 21:30:29-07:00,,Dockerfile,503,2018-02-26 08:10:17+00:00,d539038d9712daa44254412c6fcc6d78a14da691,Dockerfile
12,d539038d9712daa44254412c6fcc6d78a14da691,Dockerfile,Dockerfile,"# Just a little hack so we don't have to install these deps twice, once for runc and once for dockerd",2018-02-26 08:10:17+00:00,2013-07-08 21:30:29-07:00,,Dockerfile,499,2019-04-17 18:11:08+00:00,f067a0acaa98824b5efa3b6e2c370f6e81013a35,Dockerfile
13,d539038d9712daa44254412c6fcc6d78a14da691,Dockerfile,Dockerfile,"# TODO: Some of this is only really needed for testing, it would be nice to split this up",2018-02-26 08:10:17+00:00,2013-07-08 21:30:29-07:00,,Dockerfile,499,,,
14,d539038d9712daa44254412c6fcc6d78a14da691,Dockerfile,Dockerfile,"# TODO: This is for the docker-py tests, which shouldn't really be needed for
# this image, but currently CI is expecting to run this image. This should be
# split out into a separate image, including all the `python-*` deps installed
# above.",2018-02-26 08:10:17+00:00,2013-07-08 21:30:29-07:00,,Dockerfile,499,2019-07-18 18:54:16+00:00,764160031e1dc165411ee6612a129bd26a9872b7,Dockerfile
1241,572cb664621ca08e912a006c5c9cf2fb568ce757,Dockerfile,Dockerfile,"# FIXME(vdemeester) this is kept for other script depending on it to not fail right away
# Remove this once the other scripts uses something else to detect the version",2018-02-28 08:04:48+00:00,2013-07-08 21:30:29-07:00,,Dockerfile,495,2018-09-06 22:24:44+00:00,10fd0516b9f9f04d0f0e2c0755e704303f1a487f,Dockerfile
1776,80bc8b4766cc808186af91930152d78afb22aef8,Dockerfile,Dockerfile,"# # Make a dockerd binary.
# # hack/make.sh binary
#
# # Install dockerd to /usr/local/bin
# # make install
#
# # Run unit tests
# # hack/test/unit
#
# # Run tests e.g. integration, py
# # hack/make.sh binary test-integration test-docker-py
#
# Note: AppArmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#",2018-05-18 18:28:43+00:00,2013-07-08 21:30:29-07:00,,Dockerfile,264,2019-10-03 21:07:00+00:00,82c56755ea9e6c0ce197fbdfd41d0c5d1724b50c,Dockerfile
1559,93f9b902af89f82367d750aa871d40f25ccd99ca,Dockerfile,Dockerfile,"# Install go-swagger for validating swagger.yaml
# This is https://github.com/kolyshkin/go-swagger/tree/golang-1.13-fix
# TODO: move to under moby/ or fix upstream go-swagger to work for us.",2019-10-08 18:29:59+00:00,2013-07-08 21:30:29-07:00,,Dockerfile,98,,,
765,ccb0b0a7cc4f00c0fe79af5e5f5d0a5fa71e7fcb,Dockerfile,Dockerfile,"# TODO: This is here because hack/make.sh binary copies these extras binaries
# from $PATH into the bundles dir.
# It would be nice to handle this in a different way.",2019-12-02 17:52:16+00:00,2013-07-08 21:30:29-07:00,,Dockerfile,79,,,
899,0ce3ab679cb4ad94c81cf426d4942637a61afb85,Dockerfile,Dockerfile,"# Switch to use iptables instead of nftables (to match the CI hosts)
# TODO use some kind of runtime auto-detection instead if/when nftables is supported (https://github.com/moby/moby/issues/26824)",2020-02-25 23:31:07+00:00,2013-07-08 21:30:29-07:00,,Dockerfile,54,,,
2010,eaa9c85511620aa82f1876e1503604f591f00d23,docs/Dockerfile,docs/Dockerfile,# TODO switch to http://packages.ubuntu.com/trusty/python-sphinxcontrib-httpdomain once trusty is released,2014-01-15 02:23:30+00:00,2013-08-30 00:13:32+00:00,2016-10-14 14:12:09-07:00,docs/Dockerfile,3713,2014-04-16 00:02:10+00:00,936a03bfddb24cd45f5f12c20a961bf2ae6ede93,docs/Dockerfile
737,3e84b9e56abdff7230e84a1830085c79c73aa3b7,docs/Dockerfile,docs/Dockerfile,# TODO: don't do this - look at merging the yml file in build.sh,2015-02-26 01:41:39+00:00,2013-08-30 00:13:32+00:00,2016-10-14 14:12:09-07:00,docs/Dockerfile,2911,2015-06-15 13:19:38-07:00,f93fee5f48cc92df8668380e4edc2b7bbd6c62c6,docs/Dockerfile
736,3e84b9e56abdff7230e84a1830085c79c73aa3b7,docs/Dockerfile,docs/Dockerfile,# TODO: need the full repo source to get the git version info,2015-02-26 01:41:39+00:00,2013-08-30 00:13:32+00:00,2016-10-14 14:12:09-07:00,docs/Dockerfile,2911,2015-06-15 13:19:38-07:00,f93fee5f48cc92df8668380e4edc2b7bbd6c62c6,docs/Dockerfile
2224,95f3f77fc417bbc55f03e869136deec27e26bc51,hack/infrastructure/docker-ci/docker-test/Dockerfile,hack/infrastructure/docker-ci/docker-test/Dockerfile,"# VERSION:        0.3
# DOCKER-VERSION  0.6.3
# AUTHOR:         Daniel Mizyrycki <daniel@dotcloud.com>
# DESCRIPTION:    Testing docker PRs and commits on top of master using
# REFERENCES:     This code reuses the excellent implementation of
#                 Docker in Docker made by Jerome Petazzoni.
#                 https://github.com/jpetazzo/dind
# COMMENTS:
#   This Dockerfile adapts /Dockerfile to enable docker PRs and commits testing
#   Optional arguments:
#       [commit]  (default: 'HEAD')
#       [repo]    (default: 'http://github.com/dotcloud/docker')
#       [branch]  (default: 'master')
# TO_BUILD:       docker build -t test_docker .
# TO_RUN:         docker run -privileged test_docker hack/dind test_docker.sh [commit] [repo] [branch]",2013-10-19 05:33:16+00:00,2013-10-18 22:33:16-07:00,2014-03-10 13:20:49-07:00,hack/infrastructure/docker-ci/docker-test/Dockerfile,3845,2013-11-07 04:05:26+00:00,249f76bebdb3c24ae0a59e3be7ae73fd1d88c065,hack/infrastructure/docker-ci/docker-test/Dockerfile
2159,efb4c800a7c8167cf2202466a720c0fad7001a5d,hack/infrastructure/docker-ci/docker-test/Dockerfile,hack/infrastructure/docker-ci/docker-test/Dockerfile,#### FIXME. Temporarily install docker and dind with proper apparmor handling,2013-11-07 03:13:58+00:00,2013-10-18 22:33:16-07:00,2014-03-10 13:20:49-07:00,hack/infrastructure/docker-ci/docker-test/Dockerfile,3800,2013-11-07 04:05:26+00:00,249f76bebdb3c24ae0a59e3be7ae73fd1d88c065,hack/infrastructure/docker-ci/docker-test/Dockerfile
964,249f76bebdb3c24ae0a59e3be7ae73fd1d88c065,hack/infrastructure/docker-ci/docker-test/Dockerfile,hack/infrastructure/docker-ci/docker-test/Dockerfile,"# VERSION:        0.4
# DOCKER-VERSION  0.6.6
# AUTHOR:         Daniel Mizyrycki <daniel@docker.com>
# DESCRIPTION:    Testing docker PRs and commits on top of master using
# REFERENCES:     This code reuses the excellent implementation of
#                 Docker in Docker made by Jerome Petazzoni.
#                 https://github.com/jpetazzo/dind
# COMMENTS:
#   This Dockerfile adapts /Dockerfile to enable docker PRs and commits testing
#   Optional arguments:
#       [commit]  (default: 'HEAD')
#       [repo]    (default: 'http://github.com/dotcloud/docker')
#       [branch]  (default: 'master')
# TO_BUILD:       docker build -t test_docker .
# TO_RUN:         docker run -privileged test_docker hack/dind test_docker.sh [commit] [repo] [branch]",2013-11-07 04:05:26+00:00,2013-10-18 22:33:16-07:00,2014-03-10 13:20:49-07:00,hack/infrastructure/docker-ci/docker-test/Dockerfile,3795,2014-03-10 13:20:49-07:00,bb43761940848650c1eab3c097d826892bd5b140,hack/infrastructure/docker-ci/docker-test/Dockerfile
1210,6e3068700fb32299cf733acd74785e29609b1974,testing/nightlyrelease/Dockerfile,hack/infrastructure/docker-ci/nightlyrelease/Dockerfile,#### FIXME. Temporarily install docker with proper apparmor handling,2013-10-11 01:29:10+00:00,2013-10-10 18:29:10-07:00,2014-03-10 13:20:49-07:00,testing/nightlyrelease/Dockerfile,3872,2013-11-01 13:55:19-07:00,31638ab2ad2a5380d447780f05f7aa078c9421f5,hack/infrastructure/docker-ci/nightlyrelease/Dockerfile
918,17172276366fc3114ae52eb6c83aafbec004d5f3,hack/infrastructure/docker-ci/nightlyrelease/Dockerfile,hack/infrastructure/docker-ci/nightlyrelease/Dockerfile,"# VERSION:        1.5
# DOCKER-VERSION  0.6.4
# AUTHOR:         Daniel Mizyrycki <daniel@dotcloud.com>
# DESCRIPTION:    Build docker nightly release using Docker in Docker.
# REFERENCES:     This code reuses the excellent implementation of docker in docker
#                 made by Jerome Petazzoni.  https://github.com/jpetazzo/dind
# COMMENTS:
#   release_credentials.json is a base64 json encoded file containing:
#       { ""AWS_ACCESS_KEY"": ""Test_docker_AWS_S3_bucket_id"",
#         ""AWS_SECRET_KEY"": ""Test_docker_AWS_S3_bucket_key"",
#         ""GPG_PASSPHRASE"": ""Test_docker_GPG_passphrase_signature"" }
# TO_BUILD:       docker build -t dockerbuilder .
# TO_RELEASE:     docker run -i -t -privileged -e AWS_S3_BUCKET=""test.docker.io"" dockerbuilder hack/dind dockerbuild.sh",2013-11-07 03:13:58+00:00,2013-10-10 18:29:10-07:00,2014-03-10 13:20:49-07:00,hack/infrastructure/docker-ci/nightlyrelease/Dockerfile,3802,2013-11-06 19:13:58-08:00,17172276366fc3114ae52eb6c83aafbec004d5f3,hack/infrastructure/docker-ci/nightlyrelease/Dockerfile
1820,0cbeda73910d6d1d3336da93c5f94df0bdd5fa44,hack/infrastructure/docker-ci/nightlyrelease/Dockerfile,hack/infrastructure/docker-ci/nightlyrelease/Dockerfile,#### FIXME. Temporarily install docker and dind with proper apparmor handling,2013-11-07 03:13:58+00:00,2013-10-10 18:29:10-07:00,2014-03-10 13:20:49-07:00,hack/infrastructure/docker-ci/nightlyrelease/Dockerfile,3801,2013-11-06 19:13:58-08:00,17172276366fc3114ae52eb6c83aafbec004d5f3,hack/infrastructure/docker-ci/nightlyrelease/Dockerfile
963,249f76bebdb3c24ae0a59e3be7ae73fd1d88c065,hack/infrastructure/docker-ci/nightlyrelease/Dockerfile,hack/infrastructure/docker-ci/nightlyrelease/Dockerfile,"# VERSION:        1.6
# DOCKER-VERSION  0.6.6
# AUTHOR:         Daniel Mizyrycki <daniel@docker.com>
# DESCRIPTION:    Build docker nightly release using Docker in Docker.
# REFERENCES:     This code reuses the excellent implementation of docker in docker
#                 made by Jerome Petazzoni.  https://github.com/jpetazzo/dind
# COMMENTS:
#   release_credentials.json is a base64 json encoded file containing:
#       { ""AWS_ACCESS_KEY"": ""Test_docker_AWS_S3_bucket_id"",
#         ""AWS_SECRET_KEY"": ""Test_docker_AWS_S3_bucket_key"",
#         ""GPG_PASSPHRASE"": ""Test_docker_GPG_passphrase_signature"" }
# TO_BUILD:       docker build -t dockerbuilder .
# TO_RELEASE:     docker run -i -t -privileged -e AWS_S3_BUCKET=""test.docker.io"" dockerbuilder hack/dind dockerbuild.sh",2013-11-07 04:05:26+00:00,2013-10-10 18:29:10-07:00,2014-03-10 13:20:49-07:00,hack/infrastructure/docker-ci/nightlyrelease/Dockerfile,3795,2014-03-10 13:20:49-07:00,bb43761940848650c1eab3c097d826892bd5b140,hack/infrastructure/docker-ci/nightlyrelease/Dockerfile
2193,22c46af4b358cf3ec4f7af47c701064c00cf7de4,builder/parser/testfiles/docker/Dockerfile,builder/dockerfile/parser/testfiles/docker/Dockerfile,# TODO replace FPM with some very minimal debhelper stuff,2014-08-28 01:52:29+00:00,2014-08-27 18:52:29-07:00,2018-06-04 14:53:22+02:00,builder/parser/testfiles/docker/Dockerfile,3292,2018-06-04 14:53:22+02:00,e466f999aa9d2add9ccaca655f8d53c3112c121d,builder/dockerfile/parser/testfiles/docker/Dockerfile
2192,22c46af4b358cf3ec4f7af47c701064c00cf7de4,builder/parser/testfiles/docker/Dockerfile,builder/dockerfile/parser/testfiles/docker/Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/docker/docker --privileged -i -t docker bash
#
# # Run the test suite:
# docker run --privileged docker hack/make.sh test
#
# # Publish a release:
# docker run --privileged \
#  -e AWS_S3_BUCKET=baz \
#  -e AWS_ACCESS_KEY=foo \
#  -e AWS_SECRET_KEY=bar \
#  -e GPG_PASSPHRASE=gloubiboulga \
#  docker hack/release.sh
#
# Note: Apparmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#",2014-08-28 01:52:29+00:00,2014-08-27 18:52:29-07:00,2018-06-04 14:53:22+02:00,builder/parser/testfiles/docker/Dockerfile,3292,2016-07-04 14:43:53+00:00,11280665b45d0ac9920d17abaf6a7328f2bc77d9,builder/dockerfile/parser/testfiles/docker/Dockerfile
437,11280665b45d0ac9920d17abaf6a7328f2bc77d9,builder/dockerfile/parser/testfiles/docker/Dockerfile,builder/dockerfile/parser/testfiles/docker/Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/docker/docker --privileged -i -t docker bash
#
# # Run the test suite:
# docker run --privileged docker hack/make.sh test-unit test-integration-cli test-docker-py
#
# # Publish a release:
# docker run --privileged \
#  -e AWS_S3_BUCKET=baz \
#  -e AWS_ACCESS_KEY=foo \
#  -e AWS_SECRET_KEY=bar \
#  -e GPG_PASSPHRASE=gloubiboulga \
#  docker hack/release.sh
#
# Note: AppArmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#",2016-07-04 14:43:53+00:00,2014-08-27 18:52:29-07:00,2018-06-04 14:53:22+02:00,builder/dockerfile/parser/testfiles/docker/Dockerfile,1833,2017-11-28 03:01:14+00:00,b6eed3dca2e57705cb75895cad0b5337c79686d9,builder/dockerfile/parser/testfiles/docker/Dockerfile
703,b6eed3dca2e57705cb75895cad0b5337c79686d9,builder/dockerfile/parser/testfiles/docker/Dockerfile,builder/dockerfile/parser/testfiles/docker/Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/docker/docker --privileged -i -t docker bash
#
# # Run the test suite:
# docker run --privileged docker hack/make.sh test-unit test-integration test-docker-py
#
# # Publish a release:
# docker run --privileged \
#  -e AWS_S3_BUCKET=baz \
#  -e AWS_ACCESS_KEY=foo \
#  -e AWS_SECRET_KEY=bar \
#  -e GPG_PASSPHRASE=gloubiboulga \
#  docker hack/release.sh
#
# Note: AppArmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#",2017-11-28 03:01:14+00:00,2014-08-27 18:52:29-07:00,2018-06-04 14:53:22+02:00,builder/dockerfile/parser/testfiles/docker/Dockerfile,668,2018-05-18 18:28:43+00:00,80bc8b4766cc808186af91930152d78afb22aef8,builder/dockerfile/parser/testfiles/docker/Dockerfile
1782,80bc8b4766cc808186af91930152d78afb22aef8,builder/dockerfile/parser/testfiles/docker/Dockerfile,builder/dockerfile/parser/testfiles/docker/Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/docker/docker --privileged -i -t docker bash
#
# # Run the test suite:
# docker run --privileged docker hack/make.sh test-unit test-integration test-docker-py
#
# Note: AppArmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#",2018-05-18 18:28:43+00:00,2014-08-27 18:52:29-07:00,2018-06-04 14:53:22+02:00,builder/dockerfile/parser/testfiles/docker/Dockerfile,264,2018-06-04 14:53:22+02:00,e466f999aa9d2add9ccaca655f8d53c3112c121d,builder/dockerfile/parser/testfiles/docker/Dockerfile
