,CommitID,Dockerfile,LatestDockerfile,Comment,Date,FirstCommit Date,Deleted Date,isSATD,DeletedComment Date,Deleted CommitID
4731,20d24a450cbf22b6d5268bc1fe76022fa554d6be,Dockerfile,Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
# # Apparmor messes with privileged mode: disable it
# /etc/init.d/apparmor stop ; /etc/init.d/apparmor teardown
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/dotcloud/docker -privileged -lxc-conf=lxc.aa_profile=unconfined -i -t docker bash
#
#
# # Run the test suite:
# docker run -privileged -lxc-conf=lxc.aa_profile=unconfined docker go test -v
#
# # Publish a release:
# docker run -privileged -lxc-conf=lxc.aa_profile=unconfined \
# -e AWS_S3_BUCKET=baz \
# -e AWS_ACCESS_KEY=foo \
# -e AWS_SECRET_KEY=bar \
# -e GPG_PASSPHRASE=gloubiboulga \
# -lxc-conf=lxc.aa_profile=unconfined -privileged docker hack/release.sh
# 

",2013-08-26 22:51:22+00:00,2013-06-21 19:42:17-07:00,,1,2013-09-30 19:57:30+00:00,ccefe47897bdcef8b56bf54d4bd324989855f3b5
11474,fa806f26aff927eb0d98b41e79786ae98987da5b,Dockerfile,Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
# # Apparmor messes with privileged mode: disable it
# /etc/init.d/apparmor stop ; /etc/init.d/apparmor teardown
#
# # Run the test suite:
# docker run -privileged -lxc-conf=lxc.aa_profile=unconfined docker go test -v
#
# # Publish a release:
# docker run -privileged -lxc-conf=lxc.aa_profile=unconfined \
# -e AWS_S3_BUCKET=baz \
# -e AWS_ACCESS_KEY=foo \
# -e AWS_SECRET_KEY=bar \
# -e GPG_PASSPHRASE=gloubiboulga \
# -lxc-conf=lxc.aa_profile=unconfined -privileged docker hack/release/release.sh
# 

",2013-09-07 02:58:05+00:00,2013-06-21 19:42:17-07:00,,1,2013-09-07 03:14:03+00:00,47838051be695a4e74c80690ceef811dcd3ef62c
9766,47838051be695a4e74c80690ceef811dcd3ef62c,Dockerfile,Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
# # Apparmor messes with privileged mode: disable it
# /etc/init.d/apparmor stop ; /etc/init.d/apparmor teardown
#
# # Run the test suite:
# docker run -privileged -lxc-conf=lxc.aa_profile=unconfined docker go test -v
#
# # Publish a release:
# docker run -privileged -lxc-conf=lxc.aa_profile=unconfined \
# -e AWS_S3_BUCKET=baz \
# -e AWS_ACCESS_KEY=foo \
# -e AWS_SECRET_KEY=bar \
# -e GPG_PASSPHRASE=gloubiboulga \
# -lxc-conf=lxc.aa_profile=unconfined -privileged docker hack/release.sh
# 

",2013-09-07 03:14:03+00:00,2013-06-21 19:42:17-07:00,,1,2013-09-07 03:16:13+00:00,d757bd0904b71346b6c83622ae5685bc0c0d4349
2552,ccefe47897bdcef8b56bf54d4bd324989855f3b5,Dockerfile,Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
# # Apparmor messes with privileged mode: disable it
# /etc/init.d/apparmor stop ; /etc/init.d/apparmor teardown
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/dotcloud/docker -privileged -lxc-conf=lxc.aa_profile=unconfined -i -t docker bash
#
#
# # Run the test suite:
# docker run -privileged -lxc-conf=lxc.aa_profile=unconfined docker go test -v
#
# # Publish a release:
# docker run -privileged -lxc-conf=lxc.aa_profile=unconfined \
#  -e AWS_S3_BUCKET=baz \
#  -e AWS_ACCESS_KEY=foo \
#  -e AWS_SECRET_KEY=bar \
#  -e GPG_PASSPHRASE=gloubiboulga \
#  docker hack/release.sh
#

",2013-09-30 19:57:30+00:00,2013-06-21 19:42:17-07:00,,1,2013-10-16 00:31:34+00:00,ee7d9b0bdec40d02ba5ef25f557cca9444a19669
4126,1cbdaebaa1c2326e57945333420d25d6f77011d5,Dockerfile,Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
# # Apparmor messes with privileged mode: disable it
# /etc/init.d/apparmor stop ; /etc/init.d/apparmor teardown
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/dotcloud/docker -privileged -lxc-conf=lxc.aa_profile=unconfined -i -t docker bash
#
#
# # Run the test suite:
# docker run -privileged -lxc-conf=lxc.aa_profile=unconfined docker hack/make.sh test
#
# # Publish a release:
# docker run -privileged -lxc-conf=lxc.aa_profile=unconfined \
#  -e AWS_S3_BUCKET=baz \
#  -e AWS_ACCESS_KEY=foo \
#  -e AWS_SECRET_KEY=bar \
#  -e GPG_PASSPHRASE=gloubiboulga \
#  docker hack/release.sh
#

",2013-10-05 02:25:15+00:00,2013-06-21 19:42:17-07:00,,1,2013-11-05 18:29:54+00:00,962a66cd36a615bb0a7cb9866becdccf4aa97839
10027,31638ab2ad2a5380d447780f05f7aa078c9421f5,Dockerfile,Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/dotcloud/docker -privileged -i -t docker bash
#
# # Run the test suite:
# docker run -privileged docker hack/make.sh test
#
# # Publish a release:
# docker run -privileged \
#  -e AWS_S3_BUCKET=baz \
#  -e AWS_ACCESS_KEY=foo \
#  -e AWS_SECRET_KEY=bar \
#  -e GPG_PASSPHRASE=gloubiboulga \
#  docker hack/release.sh
#
# Note: Apparmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#

",2013-10-31 21:58:43+00:00,2013-06-21 19:42:17-07:00,,1,2014-03-13 17:46:02+00:00,44fe8cbbd174b5d85d4a063ed270f6b9d2279b70
5327,62a81370fffb3cfdb15ef19702f0ea07ab2f4c36,Dockerfile,Dockerfile,"# TODO add linux/386 and linux/arm
",2013-12-19 06:06:14+00:00,2013-06-21 19:42:17-07:00,,1,2014-01-31 19:48:10+00:00,523341d994265b9f72e4869f0fd094fd15f1b480
11271,484a75f3549239d0489cb0ad518d79ed6783584a,Dockerfile,Dockerfile,"# TODO replace FPM with some very minimal debhelper stuff
",2013-12-25 03:40:41+00:00,2013-06-21 19:42:17-07:00,,1,2015-11-12 17:51:36+00:00,8b9856dbd7a1981aaa76fcf0fc10b37d1141c9af
379,44fe8cbbd174b5d85d4a063ed270f6b9d2279b70,Dockerfile,Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/dotcloud/docker --privileged -i -t docker bash
#
# # Run the test suite:
# docker run --privileged docker hack/make.sh test
#
# # Publish a release:
# docker run --privileged \
#  -e AWS_S3_BUCKET=baz \
#  -e AWS_ACCESS_KEY=foo \
#  -e AWS_SECRET_KEY=bar \
#  -e GPG_PASSPHRASE=gloubiboulga \
#  docker hack/release.sh
#
# Note: Apparmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#

",2014-03-13 17:46:02+00:00,2013-06-21 19:42:17-07:00,,1,2014-07-24 22:19:50+00:00,b3ee9ac74e171e00f14027e39278013629e681b8
3449,d0a0e91f1f8c3a43f04e7a58e37498124b283594,Dockerfile,Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/docker/docker --privileged -i -t docker bash
#
# # Run the test suite:
# docker run --privileged docker hack/make.sh test
#
# # Publish a release:
# docker run --privileged \
#  -e AWS_S3_BUCKET=baz \
#  -e AWS_ACCESS_KEY=foo \
#  -e AWS_SECRET_KEY=bar \
#  -e GPG_PASSPHRASE=gloubiboulga \
#  docker hack/release.sh
#
# Note: Apparmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#

",2014-06-19 02:04:08+00:00,2013-06-21 19:42:17-07:00,,1,2015-06-13 16:21:50+00:00,cd44018856be421497a35d96f88dd0eec42fae43
10487,d5151ca8ab5d90300839c8572cb96577de4d6233,Dockerfile,Dockerfile,"# see also ""hack/make/.ensure-frozen-images"" (which needs to be updated any time this list is)

# Download man page generator
",2014-09-03 14:26:19+00:00,2013-06-21 19:42:17-07:00,,1,2016-09-07 15:02:51+00:00,d0fa13a50201cdcef849b0c2ae67b0747222a1c6
162,47769994e5cba81a96529b418052afce7a6d51a3,Dockerfile,Dockerfile,"# TODO when https://jenkins.dockerproject.com/job/Windows/ is green, add windows back to the list above
#	windows/amd64 windows/386

# (set an explicit GOARM of 5 for maximum compatibility)
",2015-01-22 22:42:17+00:00,2013-06-21 19:42:17-07:00,,1,2015-02-11 18:54:34+00:00,df7a04f9a64fc7b8e528a3b99beb71b97b4b22d0
7839,5d70a97b1fff8286220d2bef9ceb248401f046d1,Dockerfile,Dockerfile,"# see also ""hack/make/.ensure-frozen-images"" (which needs to be updated any time this list is)

# Install man page generator
",2015-02-26 19:20:32+00:00,2013-06-21 19:42:17-07:00,,1,2015-04-30 17:29:01+00:00,72e9e12fa015d89c5184d6dda69497f1b090331d
11361,6089e679a2fb2494fd3e599a9eab9327e6a509fc,Dockerfile,Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/docker/docker --privileged -i -t docker bash
#
# # Run the test suite:
# docker run --privileged docker hack/make.sh test
#
# # Publish a release:
# docker run --privileged \
#  -e AWS_S3_BUCKET=baz \
#  -e AWS_ACCESS_KEY=foo \
#  -e AWS_SECRET_KEY=bar \
#  -e GPG_PASSPHRASE=gloubiboulga \
#  docker hack/release.sh
#
# Note: AppArmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#

",2015-05-01 23:42:53+00:00,2013-06-21 19:42:17-07:00,,1,2016-08-16 21:18:43+00:00,37302bbb3f4889e9de2a95d5ea018acdab9e4447
7123,4357ed4a7363a1032edf93cf03232953c805184f,Dockerfile,Dockerfile,"# install seccomp
# TODO: switch to libseccomp-dev since dockerinit is gone
",2016-01-20 11:53:54+00:00,2013-06-21 19:42:17-07:00,,1,2016-02-02 19:37:43+00:00,51620020aff6f31447a71a5a66af0066c524649a
8545,e6590b5fa2c442546d3dcfa3e0580eb024ede823,Dockerfile,Dockerfile,"# !!! TEMPORARY HACK !!!
# Because of https://github.com/golang/go/issues/15286 we have to revert to Go 1.5.3 for windows/amd64 in master
# To change which version of Go to compile with, simply prepend PATH with /usr/local/go1.5.3/bin
# and set GOROOT to /usr/local/go1.5.3
",2016-03-15 03:12:09+00:00,2013-06-21 19:42:17-07:00,,1,2016-05-27 13:54:57+00:00,9b0d385975c80359b4cab2c75e4834fe803e12d5
4466,d8fef66b03c1ea8715470690efbd950033f7f628,Dockerfile,Dockerfile,"# see also ""hack/make/.ensure-frozen-images"" (which needs to be updated any time this list is)

# Download toml validator
",2016-05-12 14:52:00+00:00,2013-06-21 19:42:17-07:00,,1,2016-09-23 09:27:52+00:00,a94067c07fbfa77cdc57aa33c2fe2270cabb9ca3
4465,d8fef66b03c1ea8715470690efbd950033f7f628,Dockerfile,Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/docker/docker --privileged -i -t docker bash
#
# # Run the test suite:
# docker run --privileged docker hack/make.sh test-unit test-integration-cli test-docker-py
#
# # Publish a release:
# docker run --privileged \
#  -e AWS_S3_BUCKET=baz \
#  -e AWS_ACCESS_KEY=foo \
#  -e AWS_SECRET_KEY=bar \
#  -e GPG_PASSPHRASE=gloubiboulga \
#  docker hack/release.sh
#
# Note: AppArmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#

",2016-05-12 14:52:00+00:00,2013-06-21 19:42:17-07:00,,1,2017-05-09 15:20:42+00:00,a762ceace4e8c1c7ce4fb582789af9d8074be3e1
4868,934328d8ea650bf8a9c3c719999ce2a1f5dd5df6,Dockerfile,Dockerfile,"# See also ""hack/make/.ensure-frozen-images"" (which needs to be updated any time this list is)

# Install tomlv, vndr, runc, containerd, grimes, docker-proxy
# Please edit hack/dockerfile/install-binaries.sh to update them.
",2016-06-07 07:45:21+00:00,2013-06-21 19:42:17-07:00,,1,2016-11-09 14:29:42+00:00,93e837d1d2d3a24b0219ccadc1fdf170d242c137
12340,5f4dcd825299bf58e87e69c2bff3ceefc300a432,Dockerfile,Dockerfile,"# See also ""hack/make/.ensure-frozen-images"" (which needs to be updated any time this list is)

# Install tomlv, runc, containerd and grimes
# Please edit hack/dockerfile/install-binaries.sh to update them.
",2016-09-21 23:18:22+00:00,2013-06-21 19:42:17-07:00,,1,2016-10-25 15:54:13+00:00,36f47aa2527f83d7ca7254c43eb08ffc5ce1102e
5521,bd31b24336ff2da098e62a375552586434a012b0,Dockerfile,Dockerfile,"# See also ""hack/make/.ensure-frozen-images"" (which needs to be updated any time this list is)

# Download toml validator
",2016-09-22 02:15:18+00:00,2013-06-21 19:42:17-07:00,,1,2016-10-05 20:15:30+00:00,0b86ca9ad0916b62b7429f5d15821962bc4f7db0
10901,1b41125ad9f1a3881b71bd044d76fd285170addb,Dockerfile,Dockerfile,"# see also ""hack/make/.ensure-frozen-images"" (which needs to be updated any time this list is)

# Install tomlv, runc, containerd.and grimes
# Please edit hack/dockerfile/install-binaries.sh to update them.
",2016-09-23 16:20:57+00:00,2013-06-21 19:42:17-07:00,,1,2016-09-23 17:37:28+00:00,b8265e55508db99aea632033b2f5008f921b11e2
11656,0b86ca9ad0916b62b7429f5d15821962bc4f7db0,Dockerfile,Dockerfile,"# See also ""hack/make/.ensure-frozen-images"" (which needs to be updated any time this list is)

# Install tomlv, runc, containerd.and grimes
# Please edit hack/dockerfile/install-binaries.sh to update them.
",2016-10-05 20:15:30+00:00,2013-06-21 19:42:17-07:00,,1,2016-10-06 17:36:31+00:00,5ee2c2a6475056f55327ce77b61677499a9e3fa8
22,3996975b0840033bda3919440d122d734a4bc66b,Dockerfile,Dockerfile,"# See also ""hack/make/.ensure-frozen-images"" (which needs to be updated any time this list is)

# Install tomlv, runc, containerd, grimes, docker-proxy
# Please edit hack/dockerfile/install-binaries.sh to update them.
",2016-10-18 23:30:47+00:00,2013-06-21 19:42:17-07:00,,1,2016-11-03 16:47:50+00:00,d58b47623b252803f5cd12f6d9ca584d1587ab22
10662,2790ac68b32b399c872de88388bdccc359ed7a88,Dockerfile,Dockerfile,"# See also ""hack/make/.ensure-frozen-images"" (which needs to be updated any time this list is)

# Install tomlv, vndr, runc, containerd, tini, docker-proxy
# Please edit hack/dockerfile/install-binaries.sh to update them.
",2016-10-24 22:18:58+00:00,2013-06-21 19:42:17-07:00,,1,2017-04-12 13:37:40+00:00,330ddf8eb8f8a551677bdfc757fcefdb0cdaec3f
1472,470dfd69b3a86d8966f51d3f7237bdb10d6e00e0,Dockerfile,Dockerfile,"# See also ensureFrozenImagesLinux() in ""integration-cli/fixtures_linux_daemon_test.go"" (which needs to be updated when adding images to this list)

# Install tomlv, vndr, runc, containerd, tini, docker-proxy dockercli
# Please edit hack/dockerfile/install-binaries.sh to update them.
",2016-12-01 13:33:30+00:00,2013-06-21 19:42:17-07:00,,1,2018-02-22 03:20:29+00:00,49ad3d69a7780e54ace50290d0a1a55c1182a947
1471,470dfd69b3a86d8966f51d3f7237bdb10d6e00e0,Dockerfile,Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/docker/docker --privileged -i -t docker bash
#
# # Run the test suite:
# docker run -e DOCKER_GITCOMMIT=foo --privileged docker hack/make.sh test-unit test-integration-cli test-docker-py
#
# # Publish a release:
# docker run --privileged \
#  -e AWS_S3_BUCKET=baz \
#  -e AWS_ACCESS_KEY=foo \
#  -e AWS_SECRET_KEY=bar \
#  -e GPG_PASSPHRASE=gloubiboulga \
#  docker hack/release.sh
#
# Note: AppArmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#

",2016-12-01 13:33:30+00:00,2013-06-21 19:42:17-07:00,,1,2017-08-11 17:39:27+00:00,f34e4d295d5c17a78c33beb14b65e5d001c16968
4953,1ecd8ed5186a161c1c43ae7c99b1c81b97188619,Dockerfile,Dockerfile,"# See also ensureFrozenImagesLinux() in ""integration-cli/fixtures_linux_daemon_test.go"" (which needs to be updated when adding images to this list)

# Install tomlv, vndr, runc, containerd, tini, docker-proxy
# Please edit hack/dockerfile/install-binaries.sh to update them.
",2016-12-31 19:11:30+00:00,2013-06-21 19:42:17-07:00,,1,2017-05-05 22:03:30+00:00,34337db95d8eb85875509e341f452d8b555452b8
1324,bc82b139955c4a0edb20b070926469cceea0fbbb,Dockerfile,Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/docker/docker --privileged -i -t docker bash
#
# # Run the test suite:
# docker run -e DOCKER_GITCOMMIT=foo --privileged docker hack/make.sh test-unit test-integration test-docker-py
#
# # Publish a release:
# docker run --privileged \
#  -e AWS_S3_BUCKET=baz \
#  -e AWS_ACCESS_KEY=foo \
#  -e AWS_SECRET_KEY=bar \
#  -e GPG_PASSPHRASE=gloubiboulga \
#  docker hack/release.sh
#
# Note: AppArmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#

",2017-06-17 00:18:44+00:00,2013-06-21 19:42:17-07:00,,1,2018-02-14 11:03:52+00:00,ba49e8c49830b69c833edff3c393716da20f897a
9796,d6e1cc32d309ee237342975388e729570343a974,Dockerfile,Dockerfile,"# Options for hack/validate/gometalinter
",2017-06-30 08:29:56+00:00,2013-06-21 19:42:17-07:00,,1,2019-09-11 06:51:06+00:00,a464a3d51f89566b3e480d66903056004576cc85
171,d539038d9712daa44254412c6fcc6d78a14da691,Dockerfile,Dockerfile,"# TODO: This is for the docker-py tests, which shouldn't really be needed for
# this image, but currently CI is expecting to run this image. This should be
# split out into a separate image, including all the `python-*` deps installed
# above.
",2017-09-29 21:09:14+00:00,2013-06-21 19:42:17-07:00,,1,2019-07-18 18:54:16+00:00,764160031e1dc165411ee6612a129bd26a9872b7
170,d539038d9712daa44254412c6fcc6d78a14da691,Dockerfile,Dockerfile,"# TODO: Some of this is only really needed for testing, it would be nice to split this up
",2017-09-29 21:09:14+00:00,2013-06-21 19:42:17-07:00,,1,,
168,d539038d9712daa44254412c6fcc6d78a14da691,Dockerfile,Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Use make to build a development environment image and run it in a container.
# # This is slow the first time.
# make BIND_DIR=. shell
#
# The following commands are executed inside the running container.

# # Make a dockerd binary.
# # hack/make.sh binary
#
# # Install dockerd to /usr/local/bin
# # make install
#
# # Run unit tests
# # hack/test/unit
#
# # Run tests e.g. integration, py
# # hack/make.sh binary test-integration test-docker-py
#
# # Publish a release:
# docker run --privileged \
#  -e AWS_S3_BUCKET=baz \
#  -e AWS_ACCESS_KEY=foo \
#  -e AWS_SECRET_KEY=bar \
#  -e GPG_PASSPHRASE=gloubiboulga \
#  docker hack/release.sh
#
# Note: AppArmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#

",2017-09-29 21:09:14+00:00,2013-06-21 19:42:17-07:00,,1,2018-05-18 18:28:43+00:00,80bc8b4766cc808186af91930152d78afb22aef8
169,d539038d9712daa44254412c6fcc6d78a14da691,Dockerfile,Dockerfile,"# See also ensureFrozenImagesLinux() in ""integration-cli/fixtures_linux_daemon_test.go"" (which needs to be updated when adding images to this list)

# Just a little hack so we don't have to install these deps twice, once for runc and once for dockerd
",2017-09-29 21:09:14+00:00,2013-06-21 19:42:17-07:00,,1,2019-04-20 20:34:05+00:00,aac801ac751a9562698d2eb1de262f74476b93f9
4789,be8885525c4d1ef4a13bbd6396f60e8657bc5573,Dockerfile,Dockerfile,"# FIXME(vdemeester) this is kept for other script depending on it to not fail right away
# Remove this once the other scripts uses something else to detect the version
",2017-12-08 01:10:04+00:00,2013-06-21 19:42:17-07:00,,1,2018-09-07 08:35:33+00:00,ec99bd6ab865f49da659cb6a2da3d805eff92ec1
1946,eaae7750efbc80314c5e028c4d43d3cd9e104edd,Dockerfile,Dockerfile,"# TODO: when issue #35963 fixed, we can upgrade the busybox to multi-arch
",2018-01-05 02:58:14+00:00,2013-06-21 19:42:17-07:00,,1,2018-02-15 08:49:15+00:00,e3102d5055995a43b090dbc29342a1846a39edae
5260,b529d1b0936b90ae14d584c73f7332919f8d76b7,Dockerfile,Dockerfile,"# See also ensureFrozenImagesLinux() in ""integration-cli/fixtures_linux_daemon_test.go"" (which needs to be updated when adding images to this list)

# Install tomlv, vndr, runc, containerd, tini, proxy dockercli
# Please edit hack/dockerfile/install/<name>.installer to update them.
",2018-02-16 18:51:30+00:00,2013-06-21 19:42:17-07:00,,1,2018-02-26 13:05:21+00:00,00c1c604d08bbceb73a680d37d7428e6a4e986af
9171,80bc8b4766cc808186af91930152d78afb22aef8,Dockerfile,Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Use make to build a development environment image and run it in a container.
# # This is slow the first time.
# make BIND_DIR=. shell
#
# The following commands are executed inside the running container.

# # Make a dockerd binary.
# # hack/make.sh binary
#
# # Install dockerd to /usr/local/bin
# # make install
#
# # Run unit tests
# # hack/test/unit
#
# # Run tests e.g. integration, py
# # hack/make.sh binary test-integration test-docker-py
#
# Note: AppArmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#

",2018-05-18 18:28:43+00:00,2013-06-21 19:42:17-07:00,,1,2019-10-04 01:57:29+00:00,93f9b902af89f82367d750aa871d40f25ccd99ca
910,4e3ab9e9fbca682f75eb350c8ad4312282869a03,Dockerfile,Dockerfile,"# Install go-swagger for validating swagger.yaml
# This is https://github.com/kolyshkin/go-swagger/tree/golang-1.13-fix
# TODO: move to under moby/ or fix upstream go-swagger to work for us.
",2019-07-17 12:37:56+00:00,2013-06-21 19:42:17-07:00,,1,,
912,4e3ab9e9fbca682f75eb350c8ad4312282869a03,Dockerfile,Dockerfile,"# TODO: This is here because hack/make.sh binary copies these extras binaries
# from $PATH into the bundles dir.
# It would be nice to handle this in a different way.
",2019-07-17 12:37:56+00:00,2013-06-21 19:42:17-07:00,,1,,
4347,d1a3a17c671b9f89a90e59b58a92f04da0a4e3d9,Dockerfile,Dockerfile,"# Switch to use iptables instead of nftables (to match the CI hosts)
# TODO use some kind of runtime auto-detection instead if/when nftables is supported (https://github.com/moby/moby/issues/26824)
",2020-01-15 14:22:41+00:00,2013-06-21 19:42:17-07:00,,1,,
11144,22c46af4b358cf3ec4f7af47c701064c00cf7de4,builder/parser/testfiles/docker/Dockerfile,builder/dockerfile/parser/testfiles/docker/Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/docker/docker --privileged -i -t docker bash
#
# # Run the test suite:
# docker run --privileged docker hack/make.sh test
#
# # Publish a release:
# docker run --privileged \
#  -e AWS_S3_BUCKET=baz \
#  -e AWS_ACCESS_KEY=foo \
#  -e AWS_SECRET_KEY=bar \
#  -e GPG_PASSPHRASE=gloubiboulga \
#  docker hack/release.sh
#
# Note: Apparmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#

",2014-08-05 20:17:40+00:00,2014-08-05 13:17:40-07:00,2018-11-19 09:12:15+01:00,1,2015-06-13 16:21:50+00:00,cd44018856be421497a35d96f88dd0eec42fae43
11145,22c46af4b358cf3ec4f7af47c701064c00cf7de4,builder/parser/testfiles/docker/Dockerfile,builder/dockerfile/parser/testfiles/docker/Dockerfile,"# TODO replace FPM with some very minimal debhelper stuff
",2014-08-05 20:17:40+00:00,2014-08-05 13:17:40-07:00,2018-11-19 09:12:15+01:00,1,2018-06-02 09:46:53-07:00,c9ebd2f13b3aab49c2d90cc38dcf2cd0d059697f
1857,cd44018856be421497a35d96f88dd0eec42fae43,builder/parser/testfiles/docker/Dockerfile,builder/dockerfile/parser/testfiles/docker/Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/docker/docker --privileged -i -t docker bash
#
# # Run the test suite:
# docker run --privileged docker hack/make.sh test
#
# # Publish a release:
# docker run --privileged \
#  -e AWS_S3_BUCKET=baz \
#  -e AWS_ACCESS_KEY=foo \
#  -e AWS_SECRET_KEY=bar \
#  -e GPG_PASSPHRASE=gloubiboulga \
#  docker hack/release.sh
#
# Note: AppArmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#

",2015-06-13 16:21:50+00:00,2014-08-05 13:17:40-07:00,2018-11-19 09:12:15+01:00,1,2016-07-04 14:43:53+00:00,11280665b45d0ac9920d17abaf6a7328f2bc77d9
2407,11280665b45d0ac9920d17abaf6a7328f2bc77d9,builder/dockerfile/parser/testfiles/docker/Dockerfile,builder/dockerfile/parser/testfiles/docker/Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/docker/docker --privileged -i -t docker bash
#
# # Run the test suite:
# docker run --privileged docker hack/make.sh test-unit test-integration-cli test-docker-py
#
# # Publish a release:
# docker run --privileged \
#  -e AWS_S3_BUCKET=baz \
#  -e AWS_ACCESS_KEY=foo \
#  -e AWS_SECRET_KEY=bar \
#  -e GPG_PASSPHRASE=gloubiboulga \
#  docker hack/release.sh
#
# Note: AppArmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#

",2016-07-04 14:43:53+00:00,2014-08-05 13:17:40-07:00,2018-11-19 09:12:15+01:00,1,2017-11-28 02:21:47+00:00,b6eed3dca2e57705cb75895cad0b5337c79686d9
3944,b6eed3dca2e57705cb75895cad0b5337c79686d9,builder/dockerfile/parser/testfiles/docker/Dockerfile,builder/dockerfile/parser/testfiles/docker/Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/docker/docker --privileged -i -t docker bash
#
# # Run the test suite:
# docker run --privileged docker hack/make.sh test-unit test-integration test-docker-py
#
# # Publish a release:
# docker run --privileged \
#  -e AWS_S3_BUCKET=baz \
#  -e AWS_ACCESS_KEY=foo \
#  -e AWS_SECRET_KEY=bar \
#  -e GPG_PASSPHRASE=gloubiboulga \
#  docker hack/release.sh
#
# Note: AppArmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#

",2017-11-28 02:21:47+00:00,2014-08-05 13:17:40-07:00,2018-11-19 09:12:15+01:00,1,2018-05-18 18:28:43+00:00,80bc8b4766cc808186af91930152d78afb22aef8
9177,80bc8b4766cc808186af91930152d78afb22aef8,builder/dockerfile/parser/testfiles/docker/Dockerfile,builder/dockerfile/parser/testfiles/docker/Dockerfile,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/docker/docker --privileged -i -t docker bash
#
# # Run the test suite:
# docker run --privileged docker hack/make.sh test-unit test-integration test-docker-py
#
# Note: AppArmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#

",2018-05-18 18:28:43+00:00,2014-08-05 13:17:40-07:00,2018-11-19 09:12:15+01:00,1,2018-06-02 09:46:53-07:00,c9ebd2f13b3aab49c2d90cc38dcf2cd0d059697f
10285,eaa9c85511620aa82f1876e1503604f591f00d23,docs/Dockerfile,docs/Dockerfile,"#
#    docker build -t docker:docs . && docker run -p 8000:8000 docker:docs
#

# TODO switch to http://packages.ubuntu.com/trusty/python-sphinxcontrib-httpdomain once trusty is released

",2014-01-15 02:23:30+00:00,2013-08-29 23:49:41+00:00,2017-01-31 13:41:02-08:00,1,2015-02-18 04:20:46+00:00,3e84b9e56abdff7230e84a1830085c79c73aa3b7
4227,3e84b9e56abdff7230e84a1830085c79c73aa3b7,docs/Dockerfile,docs/Dockerfile,"# TODO: need the full repo source to get the git version info
",2015-02-18 04:20:46+00:00,2013-08-29 23:49:41+00:00,2017-01-31 13:41:02-08:00,1,2015-06-15 13:57:12-07:00,d409b05970e686993e343d226fae5b463d872082
4228,3e84b9e56abdff7230e84a1830085c79c73aa3b7,docs/Dockerfile,docs/Dockerfile,"# TODO: don't do this - look at merging the yml file in build.sh
",2015-02-18 04:20:46+00:00,2013-08-29 23:49:41+00:00,2017-01-31 13:41:02-08:00,1,2015-02-25 00:37:36+00:00,8d4459fffb5c1885b65506093538e059f0b51d90
5505,8d4459fffb5c1885b65506093538e059f0b51d90,docs/Dockerfile,docs/Dockerfile,"# adding the image spec will require Docker 1.5 and `docker build -f docs/Dockerfile .`
#COPY ./image/spec/v1.md /docs/sources/reference/image-spec-v1.md

# TODO: don't do this - look at merging the yml file in build.sh
",2015-02-25 00:37:36+00:00,2013-08-29 23:49:41+00:00,2017-01-31 13:41:02-08:00,1,2015-06-15 13:57:12-07:00,d409b05970e686993e343d226fae5b463d872082
11285,95f3f77fc417bbc55f03e869136deec27e26bc51,hack/infrastructure/docker-ci/docker-test/Dockerfile,hack/infrastructure/docker-ci/docker-test/Dockerfile,"# VERSION:        0.3
# DOCKER-VERSION  0.6.3
# AUTHOR:         Daniel Mizyrycki <daniel@dotcloud.com>
# DESCRIPTION:    Testing docker PRs and commits on top of master using
# REFERENCES:     This code reuses the excellent implementation of
#                 Docker in Docker made by Jerome Petazzoni.
#                 https://github.com/jpetazzo/dind
# COMMENTS:
#   This Dockerfile adapts /Dockerfile to enable docker PRs and commits testing
#   Optional arguments:
#       [commit]  (default: 'HEAD')
#       [repo]    (default: 'http://github.com/dotcloud/docker')
#       [branch]  (default: 'master')
# TO_BUILD:       docker build -t test_docker .
# TO_RUN:         docker run -privileged test_docker hack/dind test_docker.sh [commit] [repo] [branch]

",2013-10-19 05:33:16+00:00,2013-10-18 22:33:16-07:00,2014-03-10 13:20:49-07:00,1,2013-11-07 04:05:26+00:00,249f76bebdb3c24ae0a59e3be7ae73fd1d88c065
10939,efb4c800a7c8167cf2202466a720c0fad7001a5d,hack/infrastructure/docker-ci/docker-test/Dockerfile,hack/infrastructure/docker-ci/docker-test/Dockerfile,"#### FIXME. Temporarily install docker and dind with proper apparmor handling
",2013-10-30 02:37:56+00:00,2013-10-18 22:33:16-07:00,2014-03-10 13:20:49-07:00,1,2013-10-31 16:42:19+00:00,e37a7d49818581a17303aacd06baf1db6835cfd6
5337,249f76bebdb3c24ae0a59e3be7ae73fd1d88c065,hack/infrastructure/docker-ci/docker-test/Dockerfile,hack/infrastructure/docker-ci/docker-test/Dockerfile,"# VERSION:        0.4
# DOCKER-VERSION  0.6.6
# AUTHOR:         Daniel Mizyrycki <daniel@docker.com>
# DESCRIPTION:    Testing docker PRs and commits on top of master using
# REFERENCES:     This code reuses the excellent implementation of
#                 Docker in Docker made by Jerome Petazzoni.
#                 https://github.com/jpetazzo/dind
# COMMENTS:
#   This Dockerfile adapts /Dockerfile to enable docker PRs and commits testing
#   Optional arguments:
#       [commit]  (default: 'HEAD')
#       [repo]    (default: 'http://github.com/dotcloud/docker')
#       [branch]  (default: 'master')
# TO_BUILD:       docker build -t test_docker .
# TO_RUN:         docker run -privileged test_docker hack/dind test_docker.sh [commit] [repo] [branch]

",2013-11-07 04:05:26+00:00,2013-10-18 22:33:16-07:00,2014-03-10 13:20:49-07:00,1,2014-02-14 20:50:16-08:00,b7db2d5f8022e24faff80d312977c49a4c0408f3
6662,6e3068700fb32299cf733acd74785e29609b1974,testing/nightlyrelease/Dockerfile,hack/infrastructure/docker-ci/nightlyrelease/Dockerfile,"#### FIXME. Temporarily install docker with proper apparmor handling
",2013-09-21 19:14:40+00:00,2013-09-07 10:30:29-07:00,2014-03-10 13:20:49-07:00,1,2013-11-07 04:05:26+00:00,249f76bebdb3c24ae0a59e3be7ae73fd1d88c065
5126,17172276366fc3114ae52eb6c83aafbec004d5f3,hack/infrastructure/docker-ci/nightlyrelease/Dockerfile,hack/infrastructure/docker-ci/nightlyrelease/Dockerfile,"# VERSION:        1.5
# DOCKER-VERSION  0.6.4
# AUTHOR:         Daniel Mizyrycki <daniel@dotcloud.com>
# DESCRIPTION:    Build docker nightly release using Docker in Docker.
# REFERENCES:     This code reuses the excellent implementation of docker in docker
#                 made by Jerome Petazzoni.  https://github.com/jpetazzo/dind
# COMMENTS:
#   release_credentials.json is a base64 json encoded file containing:
#       { ""AWS_ACCESS_KEY"": ""Test_docker_AWS_S3_bucket_id"",
#         ""AWS_SECRET_KEY"": ""Test_docker_AWS_S3_bucket_key"",
#         ""GPG_PASSPHRASE"": ""Test_docker_GPG_passphrase_signature"" }
# TO_BUILD:       docker build -t dockerbuilder .
# TO_RELEASE:     docker run -i -t -privileged -e AWS_S3_BUCKET=""test.docker.io"" dockerbuilder hack/dind dockerbuild.sh

",2013-10-27 19:13:03+00:00,2013-09-07 10:30:29-07:00,2014-03-10 13:20:49-07:00,1,2013-10-29 20:44:03+00:00,d91e1453320dd8ff37f133b530e372c5b9bc1ec9
9333,0cbeda73910d6d1d3336da93c5f94df0bdd5fa44,hack/infrastructure/docker-ci/nightlyrelease/Dockerfile,hack/infrastructure/docker-ci/nightlyrelease/Dockerfile,"#### FIXME. Temporarily install docker and dind with proper apparmor handling
",2013-10-28 23:51:31+00:00,2013-09-07 10:30:29-07:00,2014-03-10 13:20:49-07:00,1,2013-10-29 20:44:03+00:00,d91e1453320dd8ff37f133b530e372c5b9bc1ec9
5336,249f76bebdb3c24ae0a59e3be7ae73fd1d88c065,hack/infrastructure/docker-ci/nightlyrelease/Dockerfile,hack/infrastructure/docker-ci/nightlyrelease/Dockerfile,"# VERSION:        1.6
# DOCKER-VERSION  0.6.6
# AUTHOR:         Daniel Mizyrycki <daniel@docker.com>
# DESCRIPTION:    Build docker nightly release using Docker in Docker.
# REFERENCES:     This code reuses the excellent implementation of docker in docker
#                 made by Jerome Petazzoni.  https://github.com/jpetazzo/dind
# COMMENTS:
#   release_credentials.json is a base64 json encoded file containing:
#       { ""AWS_ACCESS_KEY"": ""Test_docker_AWS_S3_bucket_id"",
#         ""AWS_SECRET_KEY"": ""Test_docker_AWS_S3_bucket_key"",
#         ""GPG_PASSPHRASE"": ""Test_docker_GPG_passphrase_signature"" }
# TO_BUILD:       docker build -t dockerbuilder .
# TO_RELEASE:     docker run -i -t -privileged -e AWS_S3_BUCKET=""test.docker.io"" dockerbuilder hack/dind dockerbuild.sh

",2013-11-07 04:05:26+00:00,2013-09-07 10:30:29-07:00,2014-03-10 13:20:49-07:00,1,2014-02-14 20:50:16-08:00,b7db2d5f8022e24faff80d312977c49a4c0408f3
