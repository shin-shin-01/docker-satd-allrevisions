,CommitID,Dockerfile,Comment
0,d9ad93722f3cb117acad653becfb576c187183f2,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1,d9ad93722f3cb117acad653becfb576c187183f2,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2,d9ad93722f3cb117acad653becfb576c187183f2,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3,d9ad93722f3cb117acad653becfb576c187183f2,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4,d9ad93722f3cb117acad653becfb576c187183f2,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5,228aa1c8e9732a1e3319ecb5c8b845ec2be506cb,/prometheus/Dockerfile,"# https://github.com/prometheus/prometheus/releases
"
6,55be001cb78f22c3eb065bdd50ceeda7c8f04874,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7,55be001cb78f22c3eb065bdd50ceeda7c8f04874,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
8,55be001cb78f22c3eb065bdd50ceeda7c8f04874,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
9,29ce988e421ae653b9422e625570e50cc26e93aa,/docker-tianon/Dockerfile,"# https://doi-janky.infosiftr.net/job/tianon/job/docker-deb/job/repo/lastSuccessfulBuild/artifact/pool/buster/main/amd64/
"
10,29ce988e421ae653b9422e625570e50cc26e93aa,/docker-tianon/Dockerfile,"# https://github.com/docker-library/docker/pull/166
#   dockerd-entrypoint.sh uses DOCKER_TLS_CERTDIR for auto-generating TLS certificates
#   docker-entrypoint.sh uses DOCKER_TLS_CERTDIR for auto-setting DOCKER_TLS_VERIFY and DOCKER_CERT_PATH
# (For this to work, at least the ""client"" subdirectory of this path needs to be shared between the client and server containers via a volume, ""docker cp"", or other means of data sharing.)
"
11,29ce988e421ae653b9422e625570e50cc26e93aa,/docker-tianon/Dockerfile,"# also, ensure the directory pre-exists and has wide enough permissions for ""dockerd-entrypoint.sh"" to create subdirectories, even when run in ""rootless"" mode
"
12,29ce988e421ae653b9422e625570e50cc26e93aa,/docker-tianon/Dockerfile,"# (doing both /certs and /certs/client so that if Docker does a ""copy-up"" into a volume defined on /certs/client, it will ""do the right thing"" by default in a way that still works for rootless users)

"
13,29ce988e421ae653b9422e625570e50cc26e93aa,/docker-tianon/Dockerfile,"# dind

"
14,29ce988e421ae653b9422e625570e50cc26e93aa,/docker-tianon/Dockerfile,"# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
"
15,347ff6704c63f1d3cbdbae81b8f44571229d606f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
16,347ff6704c63f1d3cbdbae81b8f44571229d606f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
17,347ff6704c63f1d3cbdbae81b8f44571229d606f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
18,347ff6704c63f1d3cbdbae81b8f44571229d606f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
19,347ff6704c63f1d3cbdbae81b8f44571229d606f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
20,1c091bb3fa0b957525477ce89261d6da67dd0972,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
21,1c091bb3fa0b957525477ce89261d6da67dd0972,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
22,1c091bb3fa0b957525477ce89261d6da67dd0972,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
23,1c091bb3fa0b957525477ce89261d6da67dd0972,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
24,1c091bb3fa0b957525477ce89261d6da67dd0972,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
25,7632cab35b17b56fccc7ab3740e5451229ac7813,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
26,7632cab35b17b56fccc7ab3740e5451229ac7813,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
27,7632cab35b17b56fccc7ab3740e5451229ac7813,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
28,7ac078092e6e247b4df508c4838f314a3f749b94,/perl/Dockerfile,"# secure by default ♥ (thanks to sri!)
"
29,7ac078092e6e247b4df508c4838f314a3f749b94,/perl/Dockerfile,"# reinstall cpanm itself, for good measure
"
30,ace3cedda4df540c1f730387d4fa5ff33ec62d0d,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
31,27c3ac724e24f69dd52ee9991dcf726f2cb94c22,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
32,27c3ac724e24f69dd52ee9991dcf726f2cb94c22,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
33,27c3ac724e24f69dd52ee9991dcf726f2cb94c22,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
34,27c3ac724e24f69dd52ee9991dcf726f2cb94c22,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
35,27c3ac724e24f69dd52ee9991dcf726f2cb94c22,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
36,f5595db8806c68de390138f17a455b32172e28c9,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
37,3167ed88079e2a5c630b50ffc403bba850391219,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
38,3167ed88079e2a5c630b50ffc403bba850391219,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
39,3167ed88079e2a5c630b50ffc403bba850391219,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
40,3167ed88079e2a5c630b50ffc403bba850391219,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
41,3167ed88079e2a5c630b50ffc403bba850391219,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
42,91f141ce652cd1c2bc8534c03e9c303c844f9acd,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
43,91f141ce652cd1c2bc8534c03e9c303c844f9acd,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
44,91f141ce652cd1c2bc8534c03e9c303c844f9acd,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
45,91f141ce652cd1c2bc8534c03e9c303c844f9acd,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
46,91f141ce652cd1c2bc8534c03e9c303c844f9acd,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
47,fbfec1914a83bf6deb441df95514a7d729acda7f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
48,fbfec1914a83bf6deb441df95514a7d729acda7f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
49,fbfec1914a83bf6deb441df95514a7d729acda7f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
50,fbfec1914a83bf6deb441df95514a7d729acda7f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
51,fbfec1914a83bf6deb441df95514a7d729acda7f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
52,554e781ed509ccb958b32ab05ea2629e16fc1ca1,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
53,554e781ed509ccb958b32ab05ea2629e16fc1ca1,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
54,554e781ed509ccb958b32ab05ea2629e16fc1ca1,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
55,554e781ed509ccb958b32ab05ea2629e16fc1ca1,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
56,554e781ed509ccb958b32ab05ea2629e16fc1ca1,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
57,1b02ed12219583bec8451dfe4907a43e5c288a30,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
58,1b02ed12219583bec8451dfe4907a43e5c288a30,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
59,1b02ed12219583bec8451dfe4907a43e5c288a30,/jenkins/Dockerfile,"# workaround ""apt-key adv --recv-keys"" hanging in stretch and above
"
60,93526420b9b9d51efb4c1c812dbf74304c9e75e6,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
61,93526420b9b9d51efb4c1c812dbf74304c9e75e6,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
62,93526420b9b9d51efb4c1c812dbf74304c9e75e6,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
63,93526420b9b9d51efb4c1c812dbf74304c9e75e6,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
64,93526420b9b9d51efb4c1c812dbf74304c9e75e6,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
65,2e5377c34d1ac0f577f4bdfaf561e94df55dede1,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
66,2e5377c34d1ac0f577f4bdfaf561e94df55dede1,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
67,2e5377c34d1ac0f577f4bdfaf561e94df55dede1,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
68,2e5377c34d1ac0f577f4bdfaf561e94df55dede1,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
69,2e5377c34d1ac0f577f4bdfaf561e94df55dede1,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
70,ce98e133d61a94be539b90a1d79ea4dad94678ce,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
71,a59a26b8c680a26a55b8d88210ebeae6ac8f6722,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
72,a59a26b8c680a26a55b8d88210ebeae6ac8f6722,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
73,a59a26b8c680a26a55b8d88210ebeae6ac8f6722,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
74,a59a26b8c680a26a55b8d88210ebeae6ac8f6722,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
75,a59a26b8c680a26a55b8d88210ebeae6ac8f6722,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
76,5baf4ce6cc1f142f748c9847cb8cdea059f80482,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
77,5baf4ce6cc1f142f748c9847cb8cdea059f80482,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
78,5baf4ce6cc1f142f748c9847cb8cdea059f80482,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
79,5baf4ce6cc1f142f748c9847cb8cdea059f80482,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
80,5baf4ce6cc1f142f748c9847cb8cdea059f80482,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
81,b65c1307c347cbb560c90258dacb3f61683caf48,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
82,b65c1307c347cbb560c90258dacb3f61683caf48,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
83,b65c1307c347cbb560c90258dacb3f61683caf48,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
84,6e4b2d362970d21ece7cce8478c30f37be54397c,/prometheus/Dockerfile,"# https://github.com/prometheus/prometheus/releases
"
85,aadad7125460f83323f824f294469e0b088dfd1d,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
86,aadad7125460f83323f824f294469e0b088dfd1d,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
87,aadad7125460f83323f824f294469e0b088dfd1d,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
88,aadad7125460f83323f824f294469e0b088dfd1d,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
89,aadad7125460f83323f824f294469e0b088dfd1d,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
90,cffe3a3654bdf45a24348eee93bf755c3bb91a8d,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
91,cffe3a3654bdf45a24348eee93bf755c3bb91a8d,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
92,cffe3a3654bdf45a24348eee93bf755c3bb91a8d,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
93,cffe3a3654bdf45a24348eee93bf755c3bb91a8d,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
94,cffe3a3654bdf45a24348eee93bf755c3bb91a8d,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
95,9e5af03e3a17f6a1006436d4b4774feb32c7d536,/jenkins/weekly/Dockerfile,"# grab gosu for easy step-down from root
"
96,9e5af03e3a17f6a1006436d4b4774feb32c7d536,/jenkins/weekly/Dockerfile,"# grab tini for signal processing and zombie killing
"
97,9e5af03e3a17f6a1006436d4b4774feb32c7d536,/jenkins/weekly/Dockerfile,"# https://groups.google.com/d/msg/jenkins-infra/c7m_72vUTXE/37zw9GXhAQAJ
"
98,9e5af03e3a17f6a1006436d4b4774feb32c7d536,/jenkins/weekly/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
99,c0f692dc9e6725af2fcd8cff61224fc9900c0e06,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
100,c0f692dc9e6725af2fcd8cff61224fc9900c0e06,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
101,c0f692dc9e6725af2fcd8cff61224fc9900c0e06,/jenkins/Dockerfile,"# https://groups.google.com/d/msg/jenkins-infra/c7m_72vUTXE/37zw9GXhAQAJ
"
102,c0f692dc9e6725af2fcd8cff61224fc9900c0e06,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
103,2dd80fd277530a262c4629f8b13579572a54bfcf,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
104,6c0615ba535e7a04f401feaacdb48fe2bd0fb79c,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
105,6c0615ba535e7a04f401feaacdb48fe2bd0fb79c,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
106,6c0615ba535e7a04f401feaacdb48fe2bd0fb79c,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
107,6c0615ba535e7a04f401feaacdb48fe2bd0fb79c,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
108,6c0615ba535e7a04f401feaacdb48fe2bd0fb79c,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
109,82e2ea23f58cd1f650dee8850de07806434dbf55,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
110,82e2ea23f58cd1f650dee8850de07806434dbf55,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
111,82e2ea23f58cd1f650dee8850de07806434dbf55,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
112,82e2ea23f58cd1f650dee8850de07806434dbf55,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
113,82e2ea23f58cd1f650dee8850de07806434dbf55,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
114,5b79c734a3913c5ec896504472fc53d2a5549909,/debian/devel/Dockerfile,"# normal build deps
"
115,5b79c734a3913c5ec896504472fc53d2a5549909,/debian/devel/Dockerfile,"# need an editor for ""dch -i""
"
116,5b79c734a3913c5ec896504472fc53d2a5549909,/debian/devel/Dockerfile,"# a few extra little useful things
"
117,5b79c734a3913c5ec896504472fc53d2a5549909,/debian/devel/Dockerfile,"# need deb-src for compiling packages
"
118,5b79c734a3913c5ec896504472fc53d2a5549909,/debian/devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
119,564e7215cb664b0ec7d1fade8fe40db95ebdabd0,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
120,2cff416d32d68519f71e9d77ffcdf4e08fb5b206,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
121,2cff416d32d68519f71e9d77ffcdf4e08fb5b206,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
122,2cff416d32d68519f71e9d77ffcdf4e08fb5b206,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
123,2cff416d32d68519f71e9d77ffcdf4e08fb5b206,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
124,2cff416d32d68519f71e9d77ffcdf4e08fb5b206,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
125,e38016f3a7c012496f0aa95ca9b0f96567e8aeef,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
126,e38016f3a7c012496f0aa95ca9b0f96567e8aeef,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
127,e38016f3a7c012496f0aa95ca9b0f96567e8aeef,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
128,c42d35605d0a9a3db6a7724725b1f2c8418504a2,/mongodb-mms/Dockerfile,"# see https://mms.mongodb.com/settings/monitoring-agent
# click on ""Ubuntu 12.04+""
"
129,5b10a3b8cf5010bac59ea5aeeef67f2ad67104b0,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
130,5b10a3b8cf5010bac59ea5aeeef67f2ad67104b0,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
131,5b10a3b8cf5010bac59ea5aeeef67f2ad67104b0,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
132,5b10a3b8cf5010bac59ea5aeeef67f2ad67104b0,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
133,5b10a3b8cf5010bac59ea5aeeef67f2ad67104b0,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
134,a612d3c8f852b349197ce679632c876fd8cb4765,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
135,92a4ac566e71eaebb123d08664e7dbabfac8a116,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
136,92a4ac566e71eaebb123d08664e7dbabfac8a116,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
137,92a4ac566e71eaebb123d08664e7dbabfac8a116,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
138,47583c4bb2e8db0a42f3f23f3fe54666a2d8606b,/sbin-init/ubuntu/12.04/Dockerfile,"# much of this was gleaned from https://github.com/lxc/lxc/blob/lxc-0.8.0/templates/lxc-ubuntu.in

# we're going to want this bad boy installed so we can connect :)
"
139,47583c4bb2e8db0a42f3f23f3fe54666a2d8606b,/sbin-init/ubuntu/12.04/Dockerfile,"# undo some leet hax of the base image
"
140,47583c4bb2e8db0a42f3f23f3fe54666a2d8606b,/sbin-init/ubuntu/12.04/Dockerfile,"# generate a nice UTF-8 locale for our use
"
141,47583c4bb2e8db0a42f3f23f3fe54666a2d8606b,/sbin-init/ubuntu/12.04/Dockerfile,"# remove some pointless services
"
142,47583c4bb2e8db0a42f3f23f3fe54666a2d8606b,/sbin-init/ubuntu/12.04/Dockerfile,"# /lib/init/fstab: cleared out for bare-bones lxc' > /lib/init/fstab

# small fix for SSH in 13.10 (that's harmless everywhere else)
"
143,47583c4bb2e8db0a42f3f23f3fe54666a2d8606b,/sbin-init/ubuntu/12.04/Dockerfile,"# set a cheap, simple password for great convenience
"
144,47583c4bb2e8db0a42f3f23f3fe54666a2d8606b,/sbin-init/ubuntu/12.04/Dockerfile,"# we can has SSH
"
145,47583c4bb2e8db0a42f3f23f3fe54666a2d8606b,/sbin-init/ubuntu/12.04/Dockerfile,"# pepare for takeoff
"
146,61854a8384fc6f9a2245b11ce27a425b93e31c86,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
147,61854a8384fc6f9a2245b11ce27a425b93e31c86,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
148,61854a8384fc6f9a2245b11ce27a425b93e31c86,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
149,61854a8384fc6f9a2245b11ce27a425b93e31c86,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
150,61854a8384fc6f9a2245b11ce27a425b93e31c86,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
151,6883db25beb1690b9fcc9b1c83c8debdc90092b2,/robomongo/Dockerfile,"# install dependencies...
"
152,29930f944855e52a338407b7923f4a9bfb918523,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
153,29930f944855e52a338407b7923f4a9bfb918523,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
154,29930f944855e52a338407b7923f4a9bfb918523,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
155,29930f944855e52a338407b7923f4a9bfb918523,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
156,29930f944855e52a338407b7923f4a9bfb918523,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
157,96e7aeb722852e3beab21d692895440b3a835dbf,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
158,96e7aeb722852e3beab21d692895440b3a835dbf,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
159,96e7aeb722852e3beab21d692895440b3a835dbf,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
160,96e7aeb722852e3beab21d692895440b3a835dbf,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
161,96e7aeb722852e3beab21d692895440b3a835dbf,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
162,8729185176c063a66552a351644ae19c88bc5c46,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
163,8729185176c063a66552a351644ae19c88bc5c46,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
164,8729185176c063a66552a351644ae19c88bc5c46,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
165,8729185176c063a66552a351644ae19c88bc5c46,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
166,8729185176c063a66552a351644ae19c88bc5c46,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
167,972aaeb9aed61f33b9fc8441d4cde479a42fe897,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
168,972aaeb9aed61f33b9fc8441d4cde479a42fe897,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
169,972aaeb9aed61f33b9fc8441d4cde479a42fe897,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
170,972aaeb9aed61f33b9fc8441d4cde479a42fe897,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
171,972aaeb9aed61f33b9fc8441d4cde479a42fe897,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
172,5f8503098c5d10cfcec33a94fbd558ff4df6fd3b,/qemu/Dockerfile,"#		qemu-system \
#		qemu-utils \
"
173,5f8503098c5d10cfcec33a94fbd558ff4df6fd3b,/qemu/Dockerfile,"# https://www.qemu.org/download/#source
"
174,5f8503098c5d10cfcec33a94fbd558ff4df6fd3b,/qemu/Dockerfile,"# TODO verify signature
"
175,5f8503098c5d10cfcec33a94fbd558ff4df6fd3b,/qemu/Dockerfile,"# system targets
# (https://sources.debian.org/src/qemu/stretch/debian/rules/#L57-L61, slimmed)
"
176,5f8503098c5d10cfcec33a94fbd558ff4df6fd3b,/qemu/Dockerfile,"# user targets
# (https://sources.debian.org/src/qemu/stretch/debian/rules/#L81-L86, slimmed)
"
177,5f8503098c5d10cfcec33a94fbd558ff4df6fd3b,/qemu/Dockerfile,"#		--enable-rbd \
#		--enable-vde \
"
178,5ea5fed6b95f3f266e1bce2d70d6ac3dd4844bd3,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
179,dc483562ee9dd6eed3438e302daae603a5ff9207,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
180,dc483562ee9dd6eed3438e302daae603a5ff9207,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
181,dc483562ee9dd6eed3438e302daae603a5ff9207,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
182,dc483562ee9dd6eed3438e302daae603a5ff9207,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
183,dc483562ee9dd6eed3438e302daae603a5ff9207,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
184,3e3509ed3b28067e069885a9a52826548577919f,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
185,1a46a2e654833762ab2643666b4d34dee59a3749,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
186,1a46a2e654833762ab2643666b4d34dee59a3749,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
187,1a46a2e654833762ab2643666b4d34dee59a3749,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
188,1a46a2e654833762ab2643666b4d34dee59a3749,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
189,1a46a2e654833762ab2643666b4d34dee59a3749,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
190,9971f4f3e8620680da95cf60df5d7fbae3e89b0c,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
191,e15ed391ebdfb1a76d17d3aa19f2812d8d7b9699,/golang/tip/Dockerfile,"# gcc for cgo
"
192,5c1c1e13f0172670dd20aeceab7d32a33444f044,/wine/Dockerfile,"# https://wiki.winehq.org/Debian

"
193,1ea6a1454e28301462cfc5173dbe6e63a840bdd2,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
194,49b50ea53f72c25a96018251f0d26057b354076b,/slack/Dockerfile,"# the .deb file linked at https://slack.com/downloads/instructions/debian includes ""/etc/cron.daily/slack"" which sets up an APT repo entry as in the following installation

# pub   rsa4096 2016-02-18 [SCEA]
#       DB08 5A08 CA13 B8AC B917  E0F6 D938 EC0D 0386 51BD
# uid           [ unknown] https://packagecloud.io/slacktechnologies/slack (https://packagecloud.io/docs#gpg_signing) <support@packagecloud.io>
# sub   rsa4096 2016-02-18 [SEA]
"
195,49b50ea53f72c25a96018251f0d26057b354076b,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libX11-xcb.so.1: cannot open shared object file: No such file or directory
"
196,49b50ea53f72c25a96018251f0d26057b354076b,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libasound.so.2: cannot open shared object file: No such file or directory
"
197,49b50ea53f72c25a96018251f0d26057b354076b,/slack/Dockerfile,"# 3.3.3: slack: error while loading shared libraries: libgtk-3.so.0: cannot open shared object file: No such file or directory
"
198,0cab295d8a53bc16946d474d600eabc9a70ce8cb,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
199,5b2dd823c18c55520eb3248008b495c97c51c30a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
200,5b2dd823c18c55520eb3248008b495c97c51c30a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
201,5b2dd823c18c55520eb3248008b495c97c51c30a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
202,5b2dd823c18c55520eb3248008b495c97c51c30a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
203,5b2dd823c18c55520eb3248008b495c97c51c30a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
204,fb62a37d33a03d33794b16b2e04e762a9c076e2e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
205,fb62a37d33a03d33794b16b2e04e762a9c076e2e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
206,fb62a37d33a03d33794b16b2e04e762a9c076e2e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
207,fb62a37d33a03d33794b16b2e04e762a9c076e2e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
208,fb62a37d33a03d33794b16b2e04e762a9c076e2e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
209,382fc87134265f58231d55943c5906d7ae23bf84,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
210,382fc87134265f58231d55943c5906d7ae23bf84,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
211,382fc87134265f58231d55943c5906d7ae23bf84,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
212,382fc87134265f58231d55943c5906d7ae23bf84,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
213,382fc87134265f58231d55943c5906d7ae23bf84,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
214,21f1fb9b63d6fd28e59c622df6639005666c4d9c,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
215,21f1fb9b63d6fd28e59c622df6639005666c4d9c,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
216,21f1fb9b63d6fd28e59c622df6639005666c4d9c,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
217,21f1fb9b63d6fd28e59c622df6639005666c4d9c,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
218,21f1fb9b63d6fd28e59c622df6639005666c4d9c,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
219,b1a87ee98cec9069278482720bbb0cb9022ec8d1,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
220,b1a87ee98cec9069278482720bbb0cb9022ec8d1,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
221,b1a87ee98cec9069278482720bbb0cb9022ec8d1,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
222,b1a87ee98cec9069278482720bbb0cb9022ec8d1,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
223,b1a87ee98cec9069278482720bbb0cb9022ec8d1,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
224,3e2cb044cbe8c7b3ab18833fd86b73e12d541be0,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
225,3e2cb044cbe8c7b3ab18833fd86b73e12d541be0,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
226,3e2cb044cbe8c7b3ab18833fd86b73e12d541be0,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
227,3e2cb044cbe8c7b3ab18833fd86b73e12d541be0,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
228,3e2cb044cbe8c7b3ab18833fd86b73e12d541be0,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
229,85b3feb60e40982c3b1831938af115f3c92bd7e0,/network-toolbox/debian/Dockerfile,"# dangit, wireshark-common!  *shakes fist*
"
230,d1de16c587a9ce0672b28bae5cb7c6d18a71c011,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
231,799e49e0531d26bfc992bc2bbd4429c1de297f29,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
232,799e49e0531d26bfc992bc2bbd4429c1de297f29,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
233,799e49e0531d26bfc992bc2bbd4429c1de297f29,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
234,799e49e0531d26bfc992bc2bbd4429c1de297f29,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
235,799e49e0531d26bfc992bc2bbd4429c1de297f29,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
236,723c6aba442f6cbe9d0d443d85f40628c979f558,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
237,723c6aba442f6cbe9d0d443d85f40628c979f558,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
238,723c6aba442f6cbe9d0d443d85f40628c979f558,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
239,723c6aba442f6cbe9d0d443d85f40628c979f558,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
240,723c6aba442f6cbe9d0d443d85f40628c979f558,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
241,309a76cfeb082309132e0dee1518677ee9acef52,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
242,309a76cfeb082309132e0dee1518677ee9acef52,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
243,309a76cfeb082309132e0dee1518677ee9acef52,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
244,309a76cfeb082309132e0dee1518677ee9acef52,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
245,309a76cfeb082309132e0dee1518677ee9acef52,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
246,24fdfaf6b40ee45507365fe429845767f942a731,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
247,24fdfaf6b40ee45507365fe429845767f942a731,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
248,24fdfaf6b40ee45507365fe429845767f942a731,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
249,24fdfaf6b40ee45507365fe429845767f942a731,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
250,24fdfaf6b40ee45507365fe429845767f942a731,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
251,b937cb570df97dc2e9c644337ce1cadec1d7c012,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
252,b937cb570df97dc2e9c644337ce1cadec1d7c012,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
253,b937cb570df97dc2e9c644337ce1cadec1d7c012,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
254,b937cb570df97dc2e9c644337ce1cadec1d7c012,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
255,b937cb570df97dc2e9c644337ce1cadec1d7c012,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
256,0127bf8e4554ac9ec7922df196cf61a60ec4f182,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
257,533af93df928eece8240c2ae264aab298aed8109,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
258,bae268cd5be12d7e9c1a75dc9b6896f1b74d45be,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
259,bae268cd5be12d7e9c1a75dc9b6896f1b74d45be,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
260,bae268cd5be12d7e9c1a75dc9b6896f1b74d45be,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
261,bae268cd5be12d7e9c1a75dc9b6896f1b74d45be,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
262,bae268cd5be12d7e9c1a75dc9b6896f1b74d45be,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
263,deadd7f09f37090cff80acd16e6dca7ece2859ef,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
264,158c9324ca84a49036fff32f534591f9eaf2a725,/dell-netextender/Dockerfile,"# https://aur.archlinux.org/cgit/aur.git/tree/PKGBUILD?h=netextender
"
265,b1a8c07ce542a52d55e39b9ee18414d5bee69bfd,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
266,e6db07f706e8cd44496ea451b334797e4eec1ec7,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
267,e6db07f706e8cd44496ea451b334797e4eec1ec7,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
268,e6db07f706e8cd44496ea451b334797e4eec1ec7,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
269,e6db07f706e8cd44496ea451b334797e4eec1ec7,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
270,e6db07f706e8cd44496ea451b334797e4eec1ec7,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
271,e1f20fcf147c0dd9ac5f8c6afd80a98f12facada,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
272,e1f20fcf147c0dd9ac5f8c6afd80a98f12facada,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
273,e1f20fcf147c0dd9ac5f8c6afd80a98f12facada,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
274,e1f20fcf147c0dd9ac5f8c6afd80a98f12facada,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
275,e1f20fcf147c0dd9ac5f8c6afd80a98f12facada,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
276,6c177e36033425611ad73529abc72d9596b47502,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
277,bc02ee1af3ddd77ede2498d95d340a9de7feb176,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
278,bc02ee1af3ddd77ede2498d95d340a9de7feb176,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
279,bc02ee1af3ddd77ede2498d95d340a9de7feb176,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
280,bc02ee1af3ddd77ede2498d95d340a9de7feb176,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
281,bc02ee1af3ddd77ede2498d95d340a9de7feb176,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
282,2855c025e1158e96fd8d973a6b1cf85fb6f0452f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
283,2855c025e1158e96fd8d973a6b1cf85fb6f0452f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
284,2855c025e1158e96fd8d973a6b1cf85fb6f0452f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
285,2855c025e1158e96fd8d973a6b1cf85fb6f0452f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
286,2855c025e1158e96fd8d973a6b1cf85fb6f0452f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
287,54605f7e4da9443f3f3bbe0bdb69c82380a21b2d,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
288,54605f7e4da9443f3f3bbe0bdb69c82380a21b2d,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
289,54605f7e4da9443f3f3bbe0bdb69c82380a21b2d,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
290,54605f7e4da9443f3f3bbe0bdb69c82380a21b2d,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
291,54605f7e4da9443f3f3bbe0bdb69c82380a21b2d,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
292,90c0f6696809d30efded2842492015d74970e295,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
293,90c0f6696809d30efded2842492015d74970e295,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
294,90c0f6696809d30efded2842492015d74970e295,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
295,90c0f6696809d30efded2842492015d74970e295,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
296,90c0f6696809d30efded2842492015d74970e295,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
297,1d86a5014f8d1fec99d9f6af0e93e59d460023f8,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
298,1d86a5014f8d1fec99d9f6af0e93e59d460023f8,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
299,1d86a5014f8d1fec99d9f6af0e93e59d460023f8,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
300,1d86a5014f8d1fec99d9f6af0e93e59d460023f8,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
301,1d86a5014f8d1fec99d9f6af0e93e59d460023f8,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
302,da644f0d53a468fce4b5c8ba54b3ba74bca6baf3,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
303,da644f0d53a468fce4b5c8ba54b3ba74bca6baf3,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
304,da644f0d53a468fce4b5c8ba54b3ba74bca6baf3,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
305,da644f0d53a468fce4b5c8ba54b3ba74bca6baf3,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
306,da644f0d53a468fce4b5c8ba54b3ba74bca6baf3,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
307,9e8ac7f01d20bc0263c0ab3f13f3f2a3be59a54b,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
308,9e8ac7f01d20bc0263c0ab3f13f3f2a3be59a54b,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
309,9e8ac7f01d20bc0263c0ab3f13f3f2a3be59a54b,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
310,9e8ac7f01d20bc0263c0ab3f13f3f2a3be59a54b,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
311,9e8ac7f01d20bc0263c0ab3f13f3f2a3be59a54b,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
312,bb8825459a3c695575fcf31b06d0f3cd9ab8cccc,/makemkv/Dockerfile,"# This disc requires Java runtime (JRE), but none was found. Certain functions will fail, please install Java. See http://www.makemkv.com/bdjava/ for details.
"
313,bb8825459a3c695575fcf31b06d0f3cd9ab8cccc,/makemkv/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
314,bb8825459a3c695575fcf31b06d0f3cd9ab8cccc,/makemkv/Dockerfile,"# FPL_MainFeature detection only seemed to work with OpenJDK 9 (8 was insufficient)
"
315,bb8825459a3c695575fcf31b06d0f3cd9ab8cccc,/makemkv/Dockerfile,"# Unable to execute external program 'ccextractor' as its path is not set in preferences
# Failed to execute external program 'ccextractor' from location '/usr/local/bin/mmccextr'
# (but it doesn't exist in the perferences dialog...)
"
316,bb8825459a3c695575fcf31b06d0f3cd9ab8cccc,/makemkv/Dockerfile,"# http://www.makemkv.com/forum2/viewtopic.php?f=3&t=224
"
317,bb8825459a3c695575fcf31b06d0f3cd9ab8cccc,/makemkv/Dockerfile,"# beta code: http://www.makemkv.com/forum2/viewtopic.php?f=5&t=1053
"
318,bb8825459a3c695575fcf31b06d0f3cd9ab8cccc,/makemkv/Dockerfile,"# pub   dsa2048 2017-05-26 [SC]
#       2ECF 2330 5F1F C0B3 2001  6733 94E3 083A 1804 2697
# uid           [ unknown] MakeMKV (signature) <support@makemkv.com>
"
319,fb973e3db3e5fc1406ccc436635a761241438156,/snapcraft/Dockerfile,"# based initially on https://hub.docker.com/r/didrocks/snapcraft/
"
320,fb973e3db3e5fc1406ccc436635a761241438156,/snapcraft/Dockerfile,"# enable multiverse as snapcraft cleanbuild does
#RUN sed -i 's/ universe$/ universe multiverse/' /etc/apt/sources.list

# pin specific version so we can update with a natural cache bust
"
321,a26c915c726a9c23cf2fef87af19abbc3839f5bf,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
322,a26c915c726a9c23cf2fef87af19abbc3839f5bf,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
323,a26c915c726a9c23cf2fef87af19abbc3839f5bf,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
324,a26c915c726a9c23cf2fef87af19abbc3839f5bf,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
325,a26c915c726a9c23cf2fef87af19abbc3839f5bf,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
326,3c10117b380c43e76f278def8182f1784b9d684d,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
327,3c10117b380c43e76f278def8182f1784b9d684d,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
328,3c10117b380c43e76f278def8182f1784b9d684d,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
329,3c10117b380c43e76f278def8182f1784b9d684d,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
330,3c10117b380c43e76f278def8182f1784b9d684d,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
331,03a9d14489e6bd0e958cc7081536784eee11008a,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
332,5e7435b92ef0b9d335b7494f2e14f7e297baa943,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
333,5e7435b92ef0b9d335b7494f2e14f7e297baa943,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
334,5e7435b92ef0b9d335b7494f2e14f7e297baa943,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
335,5e7435b92ef0b9d335b7494f2e14f7e297baa943,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
336,5e7435b92ef0b9d335b7494f2e14f7e297baa943,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
337,4a23d04f96aa0de3e9dcea31e4f9b82c9192886d,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
338,4a23d04f96aa0de3e9dcea31e4f9b82c9192886d,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
339,4a23d04f96aa0de3e9dcea31e4f9b82c9192886d,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
340,4a23d04f96aa0de3e9dcea31e4f9b82c9192886d,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
341,4a23d04f96aa0de3e9dcea31e4f9b82c9192886d,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
342,79732fc2b0df47b65df1f5f5f7c07619307858fb,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
343,0481aec4d4b439739b6810c1def6cc59a53c0011,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
344,0481aec4d4b439739b6810c1def6cc59a53c0011,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
345,0481aec4d4b439739b6810c1def6cc59a53c0011,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
346,0481aec4d4b439739b6810c1def6cc59a53c0011,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
347,0481aec4d4b439739b6810c1def6cc59a53c0011,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
348,c1b022ccdb5267ceff4c0eb8bb1e77cadc054ab8,/apache2/Dockerfile,"# let's copy a few of the settings from /etc/init.d/apache2
"
349,c1b022ccdb5267ceff4c0eb8bb1e77cadc054ab8,/apache2/Dockerfile,"# and then a few more from $APACHE_CONFDIR/envvars itself
"
350,c1b022ccdb5267ceff4c0eb8bb1e77cadc054ab8,/apache2/Dockerfile,"# ...
"
351,c1b022ccdb5267ceff4c0eb8bb1e77cadc054ab8,/apache2/Dockerfile,"# make CustomLog (access log) go to stdout instead of files
#  and ErrorLog to stderr
"
352,c1b022ccdb5267ceff4c0eb8bb1e77cadc054ab8,/apache2/Dockerfile,"# I really don't like Apache.  Irrationally.
"
353,773cc87d648d738c1e93f443a4a7a2afef00125e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
354,773cc87d648d738c1e93f443a4a7a2afef00125e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
355,773cc87d648d738c1e93f443a4a7a2afef00125e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
356,773cc87d648d738c1e93f443a4a7a2afef00125e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
357,773cc87d648d738c1e93f443a4a7a2afef00125e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
358,a73f2c502b9af54c918a25cfd860da70e4299ae3,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
359,37b6c7cc715b3f1eaa519942c5f0492c905ba73f,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
360,243c74164cf8ecd08411dfd29655f5365bd287c4,/tinygo/Dockerfile,"# the .deb (as of 0.6.0) installs to /usr/local/tinygo but doesn't add ""tinygo"" to PATH
"
361,243c74164cf8ecd08411dfd29655f5365bd287c4,/tinygo/Dockerfile,"# https://tinygo.org/getting-started/linux/

# https://github.com/tinygo-org/tinygo/releases
"
362,57d61884ee8ea9898cad13c77b4292e26de2079f,/vultr-cli/Dockerfile,"# https://github.com/vultr/vultr-cli/releases
"
363,ad9387a7a98feee047b15676b7956e0bc608ef15,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
364,ad9387a7a98feee047b15676b7956e0bc608ef15,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
365,ad9387a7a98feee047b15676b7956e0bc608ef15,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
366,ad9387a7a98feee047b15676b7956e0bc608ef15,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
367,ad9387a7a98feee047b15676b7956e0bc608ef15,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
368,46a24d80db1e6a6ac27e9dc2d83f8439fe667463,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
369,46a24d80db1e6a6ac27e9dc2d83f8439fe667463,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
370,46a24d80db1e6a6ac27e9dc2d83f8439fe667463,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
371,46a24d80db1e6a6ac27e9dc2d83f8439fe667463,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
372,46a24d80db1e6a6ac27e9dc2d83f8439fe667463,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
373,04b75e27d3fc58b6447d6ea49465c26ef09714a4,/slack/Dockerfile,"# the .deb file linked at https://slack.com/downloads/instructions/debian includes ""/etc/cron.daily/slack"" which sets up an APT repo entry as in the following installation

# pub   rsa4096 2016-02-18 [SCEA]
#       DB08 5A08 CA13 B8AC B917  E0F6 D938 EC0D 0386 51BD
# uid           [ unknown] https://packagecloud.io/slacktechnologies/slack (https://packagecloud.io/docs#gpg_signing) <support@packagecloud.io>
# sub   rsa4096 2016-02-18 [SEA]
"
374,04b75e27d3fc58b6447d6ea49465c26ef09714a4,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libX11-xcb.so.1: cannot open shared object file: No such file or directory
"
375,04b75e27d3fc58b6447d6ea49465c26ef09714a4,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libasound.so.2: cannot open shared object file: No such file or directory
"
376,04b75e27d3fc58b6447d6ea49465c26ef09714a4,/slack/Dockerfile,"# 3.3.3: slack: error while loading shared libraries: libgtk-3.so.0: cannot open shared object file: No such file or directory
"
377,a55d60c080e88ea872994ab510f0482a979a2e3e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
378,a55d60c080e88ea872994ab510f0482a979a2e3e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
379,a55d60c080e88ea872994ab510f0482a979a2e3e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
380,a55d60c080e88ea872994ab510f0482a979a2e3e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
381,a55d60c080e88ea872994ab510f0482a979a2e3e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
382,7f6bb896b8de115e389e4d4b1f61c4d8cef98b32,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
383,7f6bb896b8de115e389e4d4b1f61c4d8cef98b32,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
384,7f6bb896b8de115e389e4d4b1f61c4d8cef98b32,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
385,7f6bb896b8de115e389e4d4b1f61c4d8cef98b32,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
386,7f6bb896b8de115e389e4d4b1f61c4d8cef98b32,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
387,eb008d8664ac40cdaeda66c52bd8e441c24faa38,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
388,eb008d8664ac40cdaeda66c52bd8e441c24faa38,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
389,eb008d8664ac40cdaeda66c52bd8e441c24faa38,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
390,eb008d8664ac40cdaeda66c52bd8e441c24faa38,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
391,eb008d8664ac40cdaeda66c52bd8e441c24faa38,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
392,a7a0226b5f3ad051d85ed0f32a3d89abd20ce146,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
393,c0092cbdbf387a838a3944b8f95001c26e6601c8,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
394,c0092cbdbf387a838a3944b8f95001c26e6601c8,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
395,c0092cbdbf387a838a3944b8f95001c26e6601c8,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
396,c0092cbdbf387a838a3944b8f95001c26e6601c8,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
397,c0092cbdbf387a838a3944b8f95001c26e6601c8,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
398,77ceb5bf770c9bb2d3118910a3cb8b5f44f95eef,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
399,77ceb5bf770c9bb2d3118910a3cb8b5f44f95eef,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
400,77ceb5bf770c9bb2d3118910a3cb8b5f44f95eef,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
401,77ceb5bf770c9bb2d3118910a3cb8b5f44f95eef,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
402,77ceb5bf770c9bb2d3118910a3cb8b5f44f95eef,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
403,11d3512ef6436f51c013f78e429ee9cd73b892bb,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
404,11d3512ef6436f51c013f78e429ee9cd73b892bb,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
405,11d3512ef6436f51c013f78e429ee9cd73b892bb,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
406,11d3512ef6436f51c013f78e429ee9cd73b892bb,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
407,11d3512ef6436f51c013f78e429ee9cd73b892bb,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
408,0b2218878950b68f9cb698bde85ff894870b8cfc,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
409,c76474c668922ea048344995e7e2de9debf0d809,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
410,c76474c668922ea048344995e7e2de9debf0d809,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
411,c76474c668922ea048344995e7e2de9debf0d809,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
412,c76474c668922ea048344995e7e2de9debf0d809,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
413,c76474c668922ea048344995e7e2de9debf0d809,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
414,276917f2705c32315071dd49d2255e7501fded46,/github-pages/Dockerfile,"# https://pages.github.com/versions/
"
415,a94df603add0a6a1b23c33bac0e27a23cabdab05,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
416,a94df603add0a6a1b23c33bac0e27a23cabdab05,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
417,a94df603add0a6a1b23c33bac0e27a23cabdab05,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
418,a94df603add0a6a1b23c33bac0e27a23cabdab05,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
419,a94df603add0a6a1b23c33bac0e27a23cabdab05,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
420,aadbee446595e5888f736f6e0229dccc5231ed02,/debian/ubuntu-devel/Dockerfile,"# let's make apt list package versions, since those are handy during devel
"
421,aadbee446595e5888f736f6e0229dccc5231ed02,/debian/ubuntu-devel/Dockerfile,"# normal build deps
"
422,aadbee446595e5888f736f6e0229dccc5231ed02,/debian/ubuntu-devel/Dockerfile,"# get dh-make-golang from Git since it's so rapidly changing
"
423,aadbee446595e5888f736f6e0229dccc5231ed02,/debian/ubuntu-devel/Dockerfile,"# need deb-src for compiling packages
"
424,aadbee446595e5888f736f6e0229dccc5231ed02,/debian/ubuntu-devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
425,aadbee446595e5888f736f6e0229dccc5231ed02,/debian/ubuntu-devel/Dockerfile,"# for ssh to debian hosts, let's make sure we know their fingerprints <3
"
426,aadbee446595e5888f736f6e0229dccc5231ed02,/debian/ubuntu-devel/Dockerfile,"# make sure things are pretty
"
427,aadbee446595e5888f736f6e0229dccc5231ed02,/debian/ubuntu-devel/Dockerfile,"#(force_color_prompt=yes)/\1/' ~/.bashrc

# quilt is much amaze: https://wiki.debian.org/UsingQuilt#Using_quilt_with_Debian_source_packages
"
428,aadbee446595e5888f736f6e0229dccc5231ed02,/debian/ubuntu-devel/Dockerfile,"# make sure pbuilder-dist uses a sane default mirror
"
429,1962188baba2441402b693551e5e6e57b6c0fdc7,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
430,cdef14b2017d86bf06b3efb7eac9434d15547cef,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
431,cdef14b2017d86bf06b3efb7eac9434d15547cef,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
432,cdef14b2017d86bf06b3efb7eac9434d15547cef,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
433,cdef14b2017d86bf06b3efb7eac9434d15547cef,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
434,cdef14b2017d86bf06b3efb7eac9434d15547cef,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
435,0abdccfff7cc95ca63cdd5feb75fa626bee21f03,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
436,0abdccfff7cc95ca63cdd5feb75fa626bee21f03,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
437,0abdccfff7cc95ca63cdd5feb75fa626bee21f03,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
438,0abdccfff7cc95ca63cdd5feb75fa626bee21f03,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
439,0abdccfff7cc95ca63cdd5feb75fa626bee21f03,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
440,0ae30875e3858666511a4f877713619d29c77154,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
441,0ae30875e3858666511a4f877713619d29c77154,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
442,0ae30875e3858666511a4f877713619d29c77154,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
443,f4ce145b16863c424644be3e4cc4af433f5157d4,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
444,f4ce145b16863c424644be3e4cc4af433f5157d4,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
445,f4ce145b16863c424644be3e4cc4af433f5157d4,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
446,f4ce145b16863c424644be3e4cc4af433f5157d4,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
447,f4ce145b16863c424644be3e4cc4af433f5157d4,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
448,22ef5495ae38d9f2e5c50ca59cd1123fc76944e6,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
449,22ef5495ae38d9f2e5c50ca59cd1123fc76944e6,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
450,22ef5495ae38d9f2e5c50ca59cd1123fc76944e6,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
451,22ef5495ae38d9f2e5c50ca59cd1123fc76944e6,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
452,22ef5495ae38d9f2e5c50ca59cd1123fc76944e6,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
453,1f1f12aafa7f666b1b465f752c7e8f9eb08a879a,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
454,48afbf4dc1f348d19c6b16262cb2a8454ab11563,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
455,48afbf4dc1f348d19c6b16262cb2a8454ab11563,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
456,48afbf4dc1f348d19c6b16262cb2a8454ab11563,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
457,48afbf4dc1f348d19c6b16262cb2a8454ab11563,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
458,48afbf4dc1f348d19c6b16262cb2a8454ab11563,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
459,bd14b3258ed77dcb562616ad83a09b6d3e693243,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
460,deb673eae7fa8b25fe7165615c5815cbedbcc57f,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
461,deb673eae7fa8b25fe7165615c5815cbedbcc57f,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
462,deb673eae7fa8b25fe7165615c5815cbedbcc57f,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
463,deb673eae7fa8b25fe7165615c5815cbedbcc57f,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
464,deb673eae7fa8b25fe7165615c5815cbedbcc57f,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
465,4da560cbd677e04b6237f3eb2499df734d3531fb,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
466,4da560cbd677e04b6237f3eb2499df734d3531fb,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
467,4da560cbd677e04b6237f3eb2499df734d3531fb,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
468,4da560cbd677e04b6237f3eb2499df734d3531fb,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
469,4da560cbd677e04b6237f3eb2499df734d3531fb,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
470,01b9c2969fe1f5c7e010f7746673163ada525582,/containerd/Dockerfile,"# runtime deps
"
471,01b9c2969fe1f5c7e010f7746673163ada525582,/containerd/Dockerfile,"# https://github.com/opencontainers/runc/releases
"
472,01b9c2969fe1f5c7e010f7746673163ada525582,/containerd/Dockerfile,"# TODO .asc / .sha256sum
"
473,01b9c2969fe1f5c7e010f7746673163ada525582,/containerd/Dockerfile,"# https://github.com/containerd/containerd/releases
"
474,b126a03ae768aa1fa641d6e2bda33a0d9851ba79,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
475,086fe7886aa24a3693817cb807c3e4d25bd631d7,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
476,086fe7886aa24a3693817cb807c3e4d25bd631d7,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
477,086fe7886aa24a3693817cb807c3e4d25bd631d7,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
478,086fe7886aa24a3693817cb807c3e4d25bd631d7,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
479,086fe7886aa24a3693817cb807c3e4d25bd631d7,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
480,297d6eb8fce7bda65a08c6d76c7d19991d8dc5cb,/golang/tip/Dockerfile,"# gcc for cgo
"
481,059c6b0cd0cc7fc08e6ab09b8d4023b426770dc5,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
482,059c6b0cd0cc7fc08e6ab09b8d4023b426770dc5,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
483,059c6b0cd0cc7fc08e6ab09b8d4023b426770dc5,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
484,059c6b0cd0cc7fc08e6ab09b8d4023b426770dc5,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
485,059c6b0cd0cc7fc08e6ab09b8d4023b426770dc5,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
486,3a6dbe6cca83ceb1a83a034644808c6a83397620,/ymlfmt/Dockerfile,"# https://pypi.org/project/ruamel.yaml/
"
487,7098cea1a6d19e025e913c59146ed24c63b213c3,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
488,7098cea1a6d19e025e913c59146ed24c63b213c3,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
489,7098cea1a6d19e025e913c59146ed24c63b213c3,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
490,7098cea1a6d19e025e913c59146ed24c63b213c3,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
491,7098cea1a6d19e025e913c59146ed24c63b213c3,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
492,674f751593af2d8816ba31027c061ea100fe8ea4,/docker-master/dind/Dockerfile,"# https://github.com/docker/docker/blob/master/project/PACKAGERS.md#runtime-dependencies
"
493,674f751593af2d8816ba31027c061ea100fe8ea4,/docker-master/dind/Dockerfile,"# TODO aufs-tools

# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
"
494,fb6fd0a4cf4184623f5e64dd7b41d594a2571cf8,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
495,fb6fd0a4cf4184623f5e64dd7b41d594a2571cf8,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
496,fb6fd0a4cf4184623f5e64dd7b41d594a2571cf8,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
497,fb6fd0a4cf4184623f5e64dd7b41d594a2571cf8,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
498,fb6fd0a4cf4184623f5e64dd7b41d594a2571cf8,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
499,78a0d3bd7e4171bc6ce4c89820f1ce2004721e46,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
500,78a0d3bd7e4171bc6ce4c89820f1ce2004721e46,/docker-master/Dockerfile,"# (no SHA file artifacts on download.docker.com yet as of 2017-06-07)

"
501,78a0d3bd7e4171bc6ce4c89820f1ce2004721e46,/docker-master/Dockerfile,"# https://github.com/docker-library/docker/pull/166
#   dockerd-entrypoint.sh uses DOCKER_TLS_CERTDIR for auto-generating TLS certificates
#   docker-entrypoint.sh uses DOCKER_TLS_CERTDIR for auto-setting DOCKER_TLS_VERIFY and DOCKER_CERT_PATH
# (For this to work, at least the ""client"" subdirectory of this path needs to be shared between the client and server containers via a volume, ""docker cp"", or other means of data sharing.)
"
502,78a0d3bd7e4171bc6ce4c89820f1ce2004721e46,/docker-master/Dockerfile,"# also, ensure the directory pre-exists and has wide enough permissions for ""dockerd-entrypoint.sh"" to create subdirectories, even when run in ""rootless"" mode
"
503,78a0d3bd7e4171bc6ce4c89820f1ce2004721e46,/docker-master/Dockerfile,"# (doing both /certs and /certs/client so that if Docker does a ""copy-up"" into a volume defined on /certs/client, it will ""do the right thing"" by default in a way that still works for rootless users)

"
504,936581ff707f4846d3477aecc3d0f49307c3fb9a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
505,936581ff707f4846d3477aecc3d0f49307c3fb9a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
506,936581ff707f4846d3477aecc3d0f49307c3fb9a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
507,936581ff707f4846d3477aecc3d0f49307c3fb9a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
508,936581ff707f4846d3477aecc3d0f49307c3fb9a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
509,aa2f9b284953729dd49b06423949c75d3cd2c9bb,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
510,aa2f9b284953729dd49b06423949c75d3cd2c9bb,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
511,aa2f9b284953729dd49b06423949c75d3cd2c9bb,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
512,aa2f9b284953729dd49b06423949c75d3cd2c9bb,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
513,aa2f9b284953729dd49b06423949c75d3cd2c9bb,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
514,602861dba99ee17545eff5f7197333b5e161c6f6,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
515,ae401714a4566dc52493ea14474ac60b49890cb2,/ymlfmt/Dockerfile,"# https://pypi.org/project/ruamel.yaml/
"
516,9615a3c30dc7dff1c936583ba06531263239c1d0,/debian/devel/Dockerfile,"# let's make apt list package versions, since those are handy during devel
"
517,9615a3c30dc7dff1c936583ba06531263239c1d0,/debian/devel/Dockerfile,"# normal build deps
"
518,9615a3c30dc7dff1c936583ba06531263239c1d0,/debian/devel/Dockerfile,"# get dh-make-golang from Git since it's so rapidly changing
"
519,9615a3c30dc7dff1c936583ba06531263239c1d0,/debian/devel/Dockerfile,"# need deb-src for compiling packages
"
520,9615a3c30dc7dff1c936583ba06531263239c1d0,/debian/devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
521,9615a3c30dc7dff1c936583ba06531263239c1d0,/debian/devel/Dockerfile,"# for ssh to debian hosts, let's make sure we know their fingerprints <3
"
522,9615a3c30dc7dff1c936583ba06531263239c1d0,/debian/devel/Dockerfile,"# make sure things are pretty
"
523,9615a3c30dc7dff1c936583ba06531263239c1d0,/debian/devel/Dockerfile,"#(force_color_prompt=yes)/\1/' ~/.bashrc

# quilt is much amaze: https://wiki.debian.org/UsingQuilt#Using_quilt_with_Debian_source_packages
"
524,9615a3c30dc7dff1c936583ba06531263239c1d0,/debian/devel/Dockerfile,"# make sure pbuilder-dist uses a sane default mirror
"
525,ba7f83a99e18000475accf7caf785285d682ea26,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
526,ba7f83a99e18000475accf7caf785285d682ea26,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
527,ba7f83a99e18000475accf7caf785285d682ea26,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
528,ba7f83a99e18000475accf7caf785285d682ea26,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
529,ba7f83a99e18000475accf7caf785285d682ea26,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
530,47583c4bb2e8db0a42f3f23f3fe54666a2d8606b,/sbin-init/ubuntu/13.04/Dockerfile,"# much of this was gleaned from https://github.com/lxc/lxc/blob/lxc-0.8.0/templates/lxc-ubuntu.in

# we're going to want this bad boy installed so we can connect :)
"
531,47583c4bb2e8db0a42f3f23f3fe54666a2d8606b,/sbin-init/ubuntu/13.04/Dockerfile,"# undo some leet hax of the base image
"
532,47583c4bb2e8db0a42f3f23f3fe54666a2d8606b,/sbin-init/ubuntu/13.04/Dockerfile,"# generate a nice UTF-8 locale for our use
"
533,47583c4bb2e8db0a42f3f23f3fe54666a2d8606b,/sbin-init/ubuntu/13.04/Dockerfile,"# remove some pointless services
"
534,47583c4bb2e8db0a42f3f23f3fe54666a2d8606b,/sbin-init/ubuntu/13.04/Dockerfile,"# /lib/init/fstab: cleared out for bare-bones lxc' > /lib/init/fstab

# small fix for SSH in 13.10 (that's harmless everywhere else)
"
535,47583c4bb2e8db0a42f3f23f3fe54666a2d8606b,/sbin-init/ubuntu/13.04/Dockerfile,"# set a cheap, simple password for great convenience
"
536,47583c4bb2e8db0a42f3f23f3fe54666a2d8606b,/sbin-init/ubuntu/13.04/Dockerfile,"# we can has SSH
"
537,47583c4bb2e8db0a42f3f23f3fe54666a2d8606b,/sbin-init/ubuntu/13.04/Dockerfile,"# pepare for takeoff
"
538,5e93cc395b3dfc9546eb9523044754c4cd9af669,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
539,f80f399c0ec2a6acd759fa034657ddb336549936,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
540,f80f399c0ec2a6acd759fa034657ddb336549936,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
541,f80f399c0ec2a6acd759fa034657ddb336549936,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
542,e435b192e3ba964601581168ab1c27945712cc8b,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
543,93ffdac93390afcbbae9e38c3266b1d3b5b2a986,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
544,93ffdac93390afcbbae9e38c3266b1d3b5b2a986,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
545,93ffdac93390afcbbae9e38c3266b1d3b5b2a986,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
546,93ffdac93390afcbbae9e38c3266b1d3b5b2a986,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
547,93ffdac93390afcbbae9e38c3266b1d3b5b2a986,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
548,950c1f0e52939fd3b141441a0d16406204c307b3,/syncthing/Dockerfile,"# gpg: key BCE524C7: public key ""Jakob Borg (calmh) <jakob@nym.se>"" imported
"
549,0539ff6dc21460bdc5550cdfc309c7764c035f36,/prometheus/Dockerfile,"# https://github.com/prometheus/prometheus/releases
"
550,336ebe49c07ab78dbccf4f5461658669faa0487e,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
551,4b56c880c74be356750ba12092a3c59c30d8c8d7,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
552,fb101163aaa24db489d1c0924863bfa419d74b59,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
553,fb101163aaa24db489d1c0924863bfa419d74b59,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
554,fb101163aaa24db489d1c0924863bfa419d74b59,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
555,fb101163aaa24db489d1c0924863bfa419d74b59,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
556,fb101163aaa24db489d1c0924863bfa419d74b59,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
557,b6144573262026530b06e311ac1b62e3081e4ecb,/duplicity/Dockerfile,"# https://bugs.launchpad.net/bugs/1440372 (python3)
"
558,b6144573262026530b06e311ac1b62e3081e4ecb,/duplicity/Dockerfile,"# https://pypi.org/project/b2/
"
559,b6144573262026530b06e311ac1b62e3081e4ecb,/duplicity/Dockerfile,"# duplicity doesn't publish a ""supported b2 modules versions"" list, so I've tried to match the b2 module version to the latest that was available at the time of the current duplicity release
# duplicity 0.8.00 is ~29-May-2019, b2 1.4.0 is ~26-Apr-2019

"
560,b6144573262026530b06e311ac1b62e3081e4ecb,/duplicity/Dockerfile,"# http://duplicity.nongnu.org/
# https://download.savannah.gnu.org/releases/duplicity/?C=S&O=D
"
561,b6144573262026530b06e311ac1b62e3081e4ecb,/duplicity/Dockerfile,"# https://bazaar.launchpad.net/~duplicity-team/duplicity/0.8-series/view/head:/CHANGELOG

"
562,0e026f49f9a897f2d64af7fb1d6decddbbce57a1,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
563,a6a54908654cf1b71e017edbf57e886a8e58a8dd,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
564,a6a54908654cf1b71e017edbf57e886a8e58a8dd,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
565,a6a54908654cf1b71e017edbf57e886a8e58a8dd,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
566,a6a54908654cf1b71e017edbf57e886a8e58a8dd,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
567,a6a54908654cf1b71e017edbf57e886a8e58a8dd,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
568,7b9fb3b2e2c3e7a8fa4a6a8ce4a253f6ffd59630,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
569,7b9fb3b2e2c3e7a8fa4a6a8ce4a253f6ffd59630,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
570,7b9fb3b2e2c3e7a8fa4a6a8ce4a253f6ffd59630,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
571,7b9fb3b2e2c3e7a8fa4a6a8ce4a253f6ffd59630,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
572,7b9fb3b2e2c3e7a8fa4a6a8ce4a253f6ffd59630,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
573,2e37f527a42e05e8b9e62a84ec34355edae69e47,/ruby-passenger/Dockerfile,"# set a few bundle config variables so that a local .bundle in our development directory doesn't screw up our image
"
574,2e37f527a42e05e8b9e62a84ec34355edae69e47,/ruby-passenger/Dockerfile,"# TODO find a clean way to do this here in such a way that gems like rmagick can install cleanly without first installing libmagickcore-dev
#ONBUILD ADD Gemfile /apps/rails/Gemfile
#ONBUILD ADD Gemfile.lock /apps/rails/Gemfile.lock
#ONBUILD RUN cd /apps/rails && bundle install --deployment
#ONBUILD ADD . /apps/rails
#ONBUILD RUN chown -R www-data:www-data /apps/rails
"
575,59a2fcf207b8bfbf2b6e33cc2cf6996af7ab5928,/debian/devel/Dockerfile,"# normal build deps
"
576,59a2fcf207b8bfbf2b6e33cc2cf6996af7ab5928,/debian/devel/Dockerfile,"# need an editor for ""dch -i""
"
577,59a2fcf207b8bfbf2b6e33cc2cf6996af7ab5928,/debian/devel/Dockerfile,"# a few extra little useful things
"
578,59a2fcf207b8bfbf2b6e33cc2cf6996af7ab5928,/debian/devel/Dockerfile,"# need deb-src for compiling packages
"
579,59a2fcf207b8bfbf2b6e33cc2cf6996af7ab5928,/debian/devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
580,59a2fcf207b8bfbf2b6e33cc2cf6996af7ab5928,/debian/devel/Dockerfile,"# for ssh to debian hosts, let's make sure we know their fingerprints <3
"
581,59a2fcf207b8bfbf2b6e33cc2cf6996af7ab5928,/debian/devel/Dockerfile,"# make sure things are pretty
"
582,59a2fcf207b8bfbf2b6e33cc2cf6996af7ab5928,/debian/devel/Dockerfile,"#(force_color_prompt=yes)/\1/' /root/.bashrc

# quilt is much amaze: https://wiki.debian.org/UsingQuilt#Using_quilt_with_Debian_source_packages
"
583,0c8e2e576017b4c8285b24ca229ab358258bf080,/ruby-unicorn/Dockerfile,"# set a few bundle config variables so that a local .bundle in our development directory doesn't screw up our image
"
584,0c8e2e576017b4c8285b24ca229ab358258bf080,/ruby-unicorn/Dockerfile,"# TODO find a clean way to do this here in such a way that gems like rmagick can install cleanly without first installing libmagickcore-dev
#ONBUILD ADD Gemfile /apps/rails/Gemfile
#ONBUILD ADD Gemfile.lock /apps/rails/Gemfile.lock
#ONBUILD RUN bundle install --deployment
#ONBUILD ADD . /apps/rails
"
585,7fc9067e0099fb67237dfb7dae38127b68018a41,/docker/experimental/dind/Dockerfile,"# https://github.com/docker/docker/blob/master/project/PACKAGERS.md#runtime-dependencies
"
586,7fc9067e0099fb67237dfb7dae38127b68018a41,/docker/experimental/dind/Dockerfile,"# TODO aufs-tools

"
587,c6fb1477c0c13e8973445fd3dbf14a4fc75bc43c,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
588,743e4fb91c74bb9d7528ec974c2cde6155f7c086,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
589,743e4fb91c74bb9d7528ec974c2cde6155f7c086,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
590,743e4fb91c74bb9d7528ec974c2cde6155f7c086,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
591,743e4fb91c74bb9d7528ec974c2cde6155f7c086,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
592,743e4fb91c74bb9d7528ec974c2cde6155f7c086,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
593,b09752397d170fa90d308e08b9cf387fff2c5523,/certbot/Dockerfile,"# Executable not found: can't find the executable for the dialog-like program
"
594,b09752397d170fa90d308e08b9cf387fff2c5523,/certbot/Dockerfile,"#VOLUME /etc/letsencrypt
"
595,b09752397d170fa90d308e08b9cf387fff2c5523,/certbot/Dockerfile,"#VOLUME /var/log/letsencrypt

"
596,d828b4fd45c097a5688ed54d9061414bfe35c37c,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
597,d828b4fd45c097a5688ed54d9061414bfe35c37c,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
598,d828b4fd45c097a5688ed54d9061414bfe35c37c,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
599,d828b4fd45c097a5688ed54d9061414bfe35c37c,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
600,d828b4fd45c097a5688ed54d9061414bfe35c37c,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
601,7654ce399e58b3efae39a27b42a9cabba7d75494,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
602,b09752397d170fa90d308e08b9cf387fff2c5523,/network-toolbox/alpine/Dockerfile,"# TODO add ""nbtscan"" when we get to Alpine 3.12 (if it makes it out of edge)
# https://pkgs.alpinelinux.org/packages?name=nbtscan&branch=edge&arch=x86_64

"
603,51f0eb74e0e33c2a5ea5c4ac780268ff40fb109e,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
604,9725b81de258575815f708f32835949e3b7c8fe8,/ehour/Dockerfile,"# https://ehour.nl/download/downloadfile.php?get=ehour-latest-standalone-unix.sh
# https://ehour.nl/download/downloadfile.php?get=ehour-1.4.3-standalone-unix.sh
"
605,0cab295d8a53bc16946d474d600eabc9a70ce8cb,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
606,0cab295d8a53bc16946d474d600eabc9a70ce8cb,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
607,0cab295d8a53bc16946d474d600eabc9a70ce8cb,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
608,0cab295d8a53bc16946d474d600eabc9a70ce8cb,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
609,0cab295d8a53bc16946d474d600eabc9a70ce8cb,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
610,4d35a5d189ce3b17d9f13105e4aac94f112ea881,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
611,4d35a5d189ce3b17d9f13105e4aac94f112ea881,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
612,4d35a5d189ce3b17d9f13105e4aac94f112ea881,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
613,4d35a5d189ce3b17d9f13105e4aac94f112ea881,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
614,4d35a5d189ce3b17d9f13105e4aac94f112ea881,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
615,f7d1d9f97a1fad46e7bb254d590da21f14cc3be6,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
616,f7d1d9f97a1fad46e7bb254d590da21f14cc3be6,/plex/media-server/Dockerfile,"# the published deb has pre/post-inst scripts that don't really apply to Docker (so we'll skip ""install"" entirely)
# (as of 1.18.5.2309, they have bugs around Docker detection, which is mostly for avoiding init behavior)
"
617,f7d1d9f97a1fad46e7bb254d590da21f14cc3be6,/plex/media-server/Dockerfile,"#	apt-get update; \
#	apt-get install /tmp/plex.deb; \
#	rm -rf /var/lib/apt/lists/*; \
"
618,f7d1d9f97a1fad46e7bb254d590da21f14cc3be6,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
619,a3ef918f52efa1917c39c582df0715da7fde3907,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
620,a3ef918f52efa1917c39c582df0715da7fde3907,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
621,a3ef918f52efa1917c39c582df0715da7fde3907,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
622,a3ef918f52efa1917c39c582df0715da7fde3907,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
623,a3ef918f52efa1917c39c582df0715da7fde3907,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
624,4039e50adcafa1e193057a370ae93b7a4ba033f1,/prometheus/Dockerfile,"# https://github.com/prometheus/prometheus/releases
"
625,7bb7b72637a7c79aefe7e93ba98bb3f1fdeeaeeb,/apt-cacher-ng/Dockerfile,"# grab tini for signal processing and zombie killing
"
626,244bb46be24380b7d1e198167a8cce3b7def1131,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
627,244bb46be24380b7d1e198167a8cce3b7def1131,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
628,244bb46be24380b7d1e198167a8cce3b7def1131,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
629,244bb46be24380b7d1e198167a8cce3b7def1131,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
630,244bb46be24380b7d1e198167a8cce3b7def1131,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
631,59ac82fbdc08724570652907f75326b38ce90ec2,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
632,59ac82fbdc08724570652907f75326b38ce90ec2,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
633,59ac82fbdc08724570652907f75326b38ce90ec2,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
634,59ac82fbdc08724570652907f75326b38ce90ec2,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
635,038fc1c9533ec2541f79fbfa75dc2b3b5a0ccfe2,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
636,038fc1c9533ec2541f79fbfa75dc2b3b5a0ccfe2,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
637,038fc1c9533ec2541f79fbfa75dc2b3b5a0ccfe2,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
638,038fc1c9533ec2541f79fbfa75dc2b3b5a0ccfe2,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
639,038fc1c9533ec2541f79fbfa75dc2b3b5a0ccfe2,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
640,e3ea4a5e1e27906c735fca54838f9c11c7857be5,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
641,e3ea4a5e1e27906c735fca54838f9c11c7857be5,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
642,e3ea4a5e1e27906c735fca54838f9c11c7857be5,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
643,e3ea4a5e1e27906c735fca54838f9c11c7857be5,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
644,e3ea4a5e1e27906c735fca54838f9c11c7857be5,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
645,e3ea4a5e1e27906c735fca54838f9c11c7857be5,/docker-master/dind/Dockerfile,"# https://github.com/docker/docker/blob/master/project/PACKAGERS.md#runtime-dependencies
"
646,e3ea4a5e1e27906c735fca54838f9c11c7857be5,/docker-master/dind/Dockerfile,"# pigz: https://github.com/moby/moby/pull/35697 (faster gzip implementation)
"
647,e3ea4a5e1e27906c735fca54838f9c11c7857be5,/docker-master/dind/Dockerfile,"# only install zfs if it's available for the current architecture
# https://git.alpinelinux.org/cgit/aports/tree/main/zfs/APKBUILD?h=3.6-stable#n9 (""all !armhf !ppc64le"" as of 2017-11-01)
# ""apk info XYZ"" exits with a zero exit code but no output when the package exists but not for this arch
"
648,e3ea4a5e1e27906c735fca54838f9c11c7857be5,/docker-master/dind/Dockerfile,"# TODO aufs-tools

# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
"
649,e3ea4a5e1e27906c735fca54838f9c11c7857be5,/docker-master/dind/Dockerfile,"# https://github.com/docker/docker/tree/master/hack/dind
"
650,c561941903e2308be0d6ff9779ff9ed6d657f1c6,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
651,c561941903e2308be0d6ff9779ff9ed6d657f1c6,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
652,c561941903e2308be0d6ff9779ff9ed6d657f1c6,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
653,c561941903e2308be0d6ff9779ff9ed6d657f1c6,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
654,c561941903e2308be0d6ff9779ff9ed6d657f1c6,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
655,345720aba14e9d048d078b008e8bcd19fd1a78dc,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
656,ae401714a4566dc52493ea14474ac60b49890cb2,/xen-orchestra/Dockerfile,"# see https://xen-orchestra.com/docs/from_the_sources.html

"
657,ae401714a4566dc52493ea14474ac60b49890cb2,/xen-orchestra/Dockerfile,"# https://github.com/nodejs/node-gyp/releases
"
658,ae401714a4566dc52493ea14474ac60b49890cb2,/xen-orchestra/Dockerfile,"# https://github.com/vatesfr/xen-orchestra/releases
"
659,ae401714a4566dc52493ea14474ac60b49890cb2,/xen-orchestra/Dockerfile,"#		-e ""s!#'/' = '/path/to/xo-web/dist/'!'/' = '../xo-web/dist/'!"" \
"
660,ae401714a4566dc52493ea14474ac60b49890cb2,/xen-orchestra/Dockerfile,"#uri = 'redis://.*'!uri = 'redis://redis:6379'!"" \
"
661,ae401714a4566dc52493ea14474ac60b49890cb2,/xen-orchestra/Dockerfile,"#' config.toml | grep '../xo-web/dist'; \
"
662,0a6b23ce54217a8c3e66abc5e0f9b19047791305,/debian/devel/Dockerfile,"# normal build deps
"
663,0a6b23ce54217a8c3e66abc5e0f9b19047791305,/debian/devel/Dockerfile,"# need deb-src for compiling packages
"
664,0a6b23ce54217a8c3e66abc5e0f9b19047791305,/debian/devel/Dockerfile,"# let's make apt list package versions, since those are handy during devel
"
665,0a6b23ce54217a8c3e66abc5e0f9b19047791305,/debian/devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
666,0a6b23ce54217a8c3e66abc5e0f9b19047791305,/debian/devel/Dockerfile,"# for ssh to debian hosts, let's make sure we know their fingerprints <3
"
667,0a6b23ce54217a8c3e66abc5e0f9b19047791305,/debian/devel/Dockerfile,"# make sure things are pretty
"
668,0a6b23ce54217a8c3e66abc5e0f9b19047791305,/debian/devel/Dockerfile,"#(force_color_prompt=yes)/\1/' ~/.bashrc

# quilt is much amaze: https://wiki.debian.org/UsingQuilt#Using_quilt_with_Debian_source_packages
"
669,f646f0846c7d0bfddd895c20c4294ccfa3e19bd8,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
670,f646f0846c7d0bfddd895c20c4294ccfa3e19bd8,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
671,f646f0846c7d0bfddd895c20c4294ccfa3e19bd8,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
672,f646f0846c7d0bfddd895c20c4294ccfa3e19bd8,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
673,f646f0846c7d0bfddd895c20c4294ccfa3e19bd8,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
674,4698bd62fe77d3424c9c26ef81d9f9e4af4f2bb3,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
675,9a6a1e3709dc029799ec367c5c0b4b75639cf4c6,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
676,d3c38eaa3bc8d408048dbe0265158dae10e08383,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
677,7377f4be56dc31488e52a16c1c22fa4dbd9a2031,/skype/Dockerfile,"# see https://repo.skype.com

"
678,7377f4be56dc31488e52a16c1c22fa4dbd9a2031,/skype/Dockerfile,"# https://repo.skype.com/data/SKYPE-GPG-KEY
"
679,7377f4be56dc31488e52a16c1c22fa4dbd9a2031,/skype/Dockerfile,"# pub   2048R/DF7587C3 2016-06-22 [expires: 2021-06-21]
#       Key fingerprint = D404 0146 BE39 7250 9FD5  7FC7 1F30 45A5 DF75 87C3
# uid                  Skype Linux Client Repository <se-um@microsoft.com>
# sub   2048R/A4EBB320 2016-06-22 [expires: 2021-06-21]
"
680,903ca9bee79a5bf41871993bf7bf6dbaf5b972da,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
681,903ca9bee79a5bf41871993bf7bf6dbaf5b972da,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
682,903ca9bee79a5bf41871993bf7bf6dbaf5b972da,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
683,c99b4c1eb6920118e62521b501a53710b6a02896,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
684,c99b4c1eb6920118e62521b501a53710b6a02896,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
685,c99b4c1eb6920118e62521b501a53710b6a02896,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
686,c99b4c1eb6920118e62521b501a53710b6a02896,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
687,c99b4c1eb6920118e62521b501a53710b6a02896,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
688,a9cb2089a7501d5cfd2562fa4ad032ef1e5b1b66,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
689,a9cb2089a7501d5cfd2562fa4ad032ef1e5b1b66,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
690,a9cb2089a7501d5cfd2562fa4ad032ef1e5b1b66,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
691,a9cb2089a7501d5cfd2562fa4ad032ef1e5b1b66,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
692,a9cb2089a7501d5cfd2562fa4ad032ef1e5b1b66,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
693,90f25a5ae78b241ebf13905e35a88a412cdc996d,/kafka/Dockerfile,"# https://kafka.apache.org/downloads.html
"
694,47583c4bb2e8db0a42f3f23f3fe54666a2d8606b,/sbin-init/ubuntu/13.10/Dockerfile,"# much of this was gleaned from https://github.com/lxc/lxc/blob/lxc-0.8.0/templates/lxc-ubuntu.in

# we're going to want this bad boy installed so we can connect :)
"
695,47583c4bb2e8db0a42f3f23f3fe54666a2d8606b,/sbin-init/ubuntu/13.10/Dockerfile,"# undo some leet hax of the base image
"
696,47583c4bb2e8db0a42f3f23f3fe54666a2d8606b,/sbin-init/ubuntu/13.10/Dockerfile,"# generate a nice UTF-8 locale for our use
"
697,47583c4bb2e8db0a42f3f23f3fe54666a2d8606b,/sbin-init/ubuntu/13.10/Dockerfile,"# remove some pointless services
"
698,47583c4bb2e8db0a42f3f23f3fe54666a2d8606b,/sbin-init/ubuntu/13.10/Dockerfile,"# /lib/init/fstab: cleared out for bare-bones lxc' > /lib/init/fstab

# small fix for SSH in 13.10 (that's harmless everywhere else)
"
699,47583c4bb2e8db0a42f3f23f3fe54666a2d8606b,/sbin-init/ubuntu/13.10/Dockerfile,"# set a cheap, simple password for great convenience
"
700,47583c4bb2e8db0a42f3f23f3fe54666a2d8606b,/sbin-init/ubuntu/13.10/Dockerfile,"# we can has SSH
"
701,47583c4bb2e8db0a42f3f23f3fe54666a2d8606b,/sbin-init/ubuntu/13.10/Dockerfile,"# pepare for takeoff
"
702,bbe78f67c7a00bbfe8c0ba0ba08f08da7af219f1,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
703,7629184af0641e3c9654678378d58920e6d98653,/mutt-gmail/Dockerfile,"# a browser is necessary!
"
704,7629184af0641e3c9654678378d58920e6d98653,/mutt-gmail/Dockerfile,"# my preferred editor :) (see also muttrc)
"
705,0ab3406f445a74bbe9024d314646c0330b05a106,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
706,0ab3406f445a74bbe9024d314646c0330b05a106,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
707,0ab3406f445a74bbe9024d314646c0330b05a106,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
708,43efa06d4cb32ed6250e25f4d91931c91d0c4d51,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
709,b19fe1a31469a3e22ce9e09eda5503e39eaffe0c,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
710,b19fe1a31469a3e22ce9e09eda5503e39eaffe0c,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
711,b19fe1a31469a3e22ce9e09eda5503e39eaffe0c,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
712,b19fe1a31469a3e22ce9e09eda5503e39eaffe0c,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
713,b19fe1a31469a3e22ce9e09eda5503e39eaffe0c,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
714,b25d4949af0eb0f1d35ce81fc880fe224adfb064,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
715,2b139005df57c03e6a7f891deff824030538378e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
716,2b139005df57c03e6a7f891deff824030538378e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
717,2b139005df57c03e6a7f891deff824030538378e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
718,2b139005df57c03e6a7f891deff824030538378e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
719,2b139005df57c03e6a7f891deff824030538378e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
720,c1610b96ffcea268495de6bc01aa9d72c59f9392,/google-cloud-print-connector/Dockerfile,"# fetch dependencies
# format: import-path=strip-components=tarball-url
"
721,c1610b96ffcea268495de6bc01aa9d72c59f9392,/google-cloud-print-connector/Dockerfile,"# https://github.com/coreos/go-systemd/releases
"
722,c1610b96ffcea268495de6bc01aa9d72c59f9392,/google-cloud-print-connector/Dockerfile,"# https://github.com/satori/go.uuid/releases
# (https://github.com/satori/go.uuid/commit/0ef6afb2f6cdd6cdaeee3885a95099c63f18fc8c -- hopefully we'll get a newer release than v1.2.0 soonish)
"
723,c1610b96ffcea268495de6bc01aa9d72c59f9392,/google-cloud-print-connector/Dockerfile,"# https://github.com/urfave/cli/releases
"
724,c1610b96ffcea268495de6bc01aa9d72c59f9392,/google-cloud-print-connector/Dockerfile,"# https://github.com/golang/net/commits/master
"
725,c1610b96ffcea268495de6bc01aa9d72c59f9392,/google-cloud-print-connector/Dockerfile,"# https://github.com/golang/oauth2/commits/master
"
726,c1610b96ffcea268495de6bc01aa9d72c59f9392,/google-cloud-print-connector/Dockerfile,"# https://bazaar.launchpad.net/~chipaca/go-xdg/v0/files (""view revision"")
# https://bazaar.launchpad.net/~chipaca/go-xdg/v0/revision/10?start_revid=10 (""download tarball"")
"
727,c1610b96ffcea268495de6bc01aa9d72c59f9392,/google-cloud-print-connector/Dockerfile,"#*=}""; dep=""${dep%=$strip}""; \
"
728,c1610b96ffcea268495de6bc01aa9d72c59f9392,/google-cloud-print-connector/Dockerfile,"#*=}""; strip=""${strip%=$tarball}""; \
"
729,c1610b96ffcea268495de6bc01aa9d72c59f9392,/google-cloud-print-connector/Dockerfile,"# https://github.com/google/cloud-print-connector/releases
"
730,876aa0710bc7dc655ed7be5de6af48849a128dd7,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
731,fe9c07579413f3f8199c55c3a3260df5c6d9998f,/mongodb-mms/Dockerfile,"# see https://mms.mongodb.com/settings/monitoring-agent
# click on ""Ubuntu 12.04+""
"
732,490d600bf9226c003f7bc571d4cacb740957ef33,/phpmyadmin/Dockerfile,"# https://docs.phpmyadmin.net/en/latest/setup.html#verifying-phpmyadmin-releases
"
733,490d600bf9226c003f7bc571d4cacb740957ef33,/phpmyadmin/Dockerfile,"# Since July 2015 all phpMyAdmin releases are cryptographically signed by the releasing developer, who through January 2016 was Marc Delisle.
"
734,490d600bf9226c003f7bc571d4cacb740957ef33,/phpmyadmin/Dockerfile,"# Beginning in January 2016, the release manager is Isaac Bennetch.
"
735,490d600bf9226c003f7bc571d4cacb740957ef33,/phpmyadmin/Dockerfile,"# Some additional downloads (for example themes) might be signed by Michal Čihař.
"
736,eb8e818ec03b6d08eb9f2706a7444d8019eb4ba8,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
737,eb8e818ec03b6d08eb9f2706a7444d8019eb4ba8,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
738,eb8e818ec03b6d08eb9f2706a7444d8019eb4ba8,/jenkins/Dockerfile,"# workaround ""apt-key adv --recv-keys"" hanging in stretch and above
"
739,907b9be1c28770094959f33721d36f5680ef3fa4,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
740,907b9be1c28770094959f33721d36f5680ef3fa4,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
741,907b9be1c28770094959f33721d36f5680ef3fa4,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
742,907b9be1c28770094959f33721d36f5680ef3fa4,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
743,907b9be1c28770094959f33721d36f5680ef3fa4,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
744,ff277162d81683ea2bf67b958ee568dcc5fdf461,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
745,ff277162d81683ea2bf67b958ee568dcc5fdf461,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
746,ff277162d81683ea2bf67b958ee568dcc5fdf461,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
747,ff277162d81683ea2bf67b958ee568dcc5fdf461,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
748,ff277162d81683ea2bf67b958ee568dcc5fdf461,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
749,44e5012b3b8c47340ad24da5467c7bc3175173f5,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
750,44e5012b3b8c47340ad24da5467c7bc3175173f5,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
751,44e5012b3b8c47340ad24da5467c7bc3175173f5,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
752,44e5012b3b8c47340ad24da5467c7bc3175173f5,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
753,44e5012b3b8c47340ad24da5467c7bc3175173f5,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
754,30c8452e2ee8dd60bda4be2be9c8505f314bc8ca,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
755,30c8452e2ee8dd60bda4be2be9c8505f314bc8ca,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
756,30c8452e2ee8dd60bda4be2be9c8505f314bc8ca,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
757,30c8452e2ee8dd60bda4be2be9c8505f314bc8ca,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
758,30c8452e2ee8dd60bda4be2be9c8505f314bc8ca,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
759,8d298e846de8ae1ecc670a0c65231b3a1017ad52,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
760,8d298e846de8ae1ecc670a0c65231b3a1017ad52,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
761,8d298e846de8ae1ecc670a0c65231b3a1017ad52,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
762,8d298e846de8ae1ecc670a0c65231b3a1017ad52,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
763,8d298e846de8ae1ecc670a0c65231b3a1017ad52,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
764,cfe33e4e7664ecfc89f9aa1cfe77560d4af2a6c6,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
765,cfe33e4e7664ecfc89f9aa1cfe77560d4af2a6c6,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
766,cfe33e4e7664ecfc89f9aa1cfe77560d4af2a6c6,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
767,cfe33e4e7664ecfc89f9aa1cfe77560d4af2a6c6,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
768,cfe33e4e7664ecfc89f9aa1cfe77560d4af2a6c6,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
769,246be58ceb92835a9f254a0a2a106afc251a5217,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
770,246be58ceb92835a9f254a0a2a106afc251a5217,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
771,246be58ceb92835a9f254a0a2a106afc251a5217,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
772,246be58ceb92835a9f254a0a2a106afc251a5217,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
773,246be58ceb92835a9f254a0a2a106afc251a5217,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
774,80fcef5a236820761ef2232d892c7cfa508b8d78,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
775,80fcef5a236820761ef2232d892c7cfa508b8d78,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
776,80fcef5a236820761ef2232d892c7cfa508b8d78,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
777,80fcef5a236820761ef2232d892c7cfa508b8d78,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
778,80fcef5a236820761ef2232d892c7cfa508b8d78,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
779,355305ddb022155da5469cd2017dda9884dcb15b,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
780,355305ddb022155da5469cd2017dda9884dcb15b,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
781,355305ddb022155da5469cd2017dda9884dcb15b,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
782,355305ddb022155da5469cd2017dda9884dcb15b,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
783,355305ddb022155da5469cd2017dda9884dcb15b,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
784,dc0329014d2e4ef3297df91fd3db4670c34ed55e,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
785,dc0329014d2e4ef3297df91fd3db4670c34ed55e,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
786,dc0329014d2e4ef3297df91fd3db4670c34ed55e,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
787,b7c02294f4eaa1e8aeaa62af6a95b052725eb879,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
788,b7c02294f4eaa1e8aeaa62af6a95b052725eb879,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
789,b7c02294f4eaa1e8aeaa62af6a95b052725eb879,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
790,b7c02294f4eaa1e8aeaa62af6a95b052725eb879,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
791,b7c02294f4eaa1e8aeaa62af6a95b052725eb879,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
792,0bae1beb350affccd25bff078f702994108078c2,/snapcraft/Dockerfile,"# based initially on https://hub.docker.com/r/didrocks/snapcraft/
"
793,0bae1beb350affccd25bff078f702994108078c2,/snapcraft/Dockerfile,"# enable multiverse as snapcraft cleanbuild does
#RUN sed -i 's/ universe$/ universe multiverse/' /etc/apt/sources.list

# pin specific version so we can update with a natural cache bust
"
794,ecc21838d63921733aa542bb906b9a7571ce299e,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
795,c6f1320c42c5faa745eb4f139aa1e9564bdadc47,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
796,c6f1320c42c5faa745eb4f139aa1e9564bdadc47,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
797,c6f1320c42c5faa745eb4f139aa1e9564bdadc47,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
798,c6f1320c42c5faa745eb4f139aa1e9564bdadc47,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
799,c6f1320c42c5faa745eb4f139aa1e9564bdadc47,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
800,deadd7f09f37090cff80acd16e6dca7ece2859ef,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
801,deadd7f09f37090cff80acd16e6dca7ece2859ef,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
802,deadd7f09f37090cff80acd16e6dca7ece2859ef,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
803,deadd7f09f37090cff80acd16e6dca7ece2859ef,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
804,deadd7f09f37090cff80acd16e6dca7ece2859ef,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
805,58cbb8371da5dd066cfc6b545715d26313d2c044,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
806,26f640dbf536e581c64b923e70134446a1e7a219,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
807,26f640dbf536e581c64b923e70134446a1e7a219,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
808,26f640dbf536e581c64b923e70134446a1e7a219,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
809,26f640dbf536e581c64b923e70134446a1e7a219,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
810,26f640dbf536e581c64b923e70134446a1e7a219,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
811,dc78cc220ac49c558570ba918c8d7cf9103a130f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
812,dc78cc220ac49c558570ba918c8d7cf9103a130f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
813,dc78cc220ac49c558570ba918c8d7cf9103a130f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
814,dc78cc220ac49c558570ba918c8d7cf9103a130f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
815,dc78cc220ac49c558570ba918c8d7cf9103a130f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
816,169a8f582b142bad00c03c0d22c449515bcf340d,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
817,40fe0aca2610bd28435b7554ca5aa2db20b7ba51,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
818,40fe0aca2610bd28435b7554ca5aa2db20b7ba51,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
819,40fe0aca2610bd28435b7554ca5aa2db20b7ba51,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
820,40fe0aca2610bd28435b7554ca5aa2db20b7ba51,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
821,40fe0aca2610bd28435b7554ca5aa2db20b7ba51,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
822,a1ee7121def74879e3b37b10e8461a3ff759fd77,/phpmyadmin/Dockerfile,"# https://docs.phpmyadmin.net/en/latest/setup.html#verifying-phpmyadmin-releases
"
823,a1ee7121def74879e3b37b10e8461a3ff759fd77,/phpmyadmin/Dockerfile,"# Since July 2015 all phpMyAdmin releases are cryptographically signed by the releasing developer, who through January 2016 was Marc Delisle.
"
824,a1ee7121def74879e3b37b10e8461a3ff759fd77,/phpmyadmin/Dockerfile,"# Beginning in January 2016, the release manager is Isaac Bennetch.
"
825,a1ee7121def74879e3b37b10e8461a3ff759fd77,/phpmyadmin/Dockerfile,"# Some additional downloads (for example themes) might be signed by Michal Čihař.
"
826,399a3077e95e594737641784af847287c2e0f5c1,/skype/Dockerfile,"# see https://repo.skype.com

"
827,399a3077e95e594737641784af847287c2e0f5c1,/skype/Dockerfile,"# wget is invoked by skypeforlinux for crash reports
"
828,399a3077e95e594737641784af847287c2e0f5c1,/skype/Dockerfile,"# https://repo.skype.com/data/SKYPE-GPG-KEY
"
829,399a3077e95e594737641784af847287c2e0f5c1,/skype/Dockerfile,"# pub   2048R/DF7587C3 2016-06-22 [expires: 2021-06-21]
#       Key fingerprint = D404 0146 BE39 7250 9FD5  7FC7 1F30 45A5 DF75 87C3
# uid                  Skype Linux Client Repository <se-um@microsoft.com>
# sub   2048R/A4EBB320 2016-06-22 [expires: 2021-06-21]
"
830,b9fd6f9e0882f4832121634dbec923dcd9734291,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
831,8a1557b40c8e5b43a1a744bd4dc44099dd714675,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
832,5494cafb185cc0bdc8739c6302b9083afcab052e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
833,5494cafb185cc0bdc8739c6302b9083afcab052e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
834,5494cafb185cc0bdc8739c6302b9083afcab052e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
835,5494cafb185cc0bdc8739c6302b9083afcab052e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
836,5494cafb185cc0bdc8739c6302b9083afcab052e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
837,cd6e90cf0668753b236bdf7938c5c38dcd62ebe1,/ruby-unicorn-nginx/Dockerfile,"# I wish there were a nice clean way to have nginx spawn unicorn itself
"
838,cd6e90cf0668753b236bdf7938c5c38dcd62ebe1,/ruby-unicorn-nginx/Dockerfile,"# configure nginx
"
839,cd6e90cf0668753b236bdf7938c5c38dcd62ebe1,/ruby-unicorn-nginx/Dockerfile,"# log to stderr and stay foregrounded
"
840,cd6e90cf0668753b236bdf7938c5c38dcd62ebe1,/ruby-unicorn-nginx/Dockerfile,"# prevent backgrounding (for Docker)\ndaemon off;' >> /etc/nginx/nginx.conf

# configure unicorn
"
841,cd6e90cf0668753b236bdf7938c5c38dcd62ebe1,/ruby-unicorn-nginx/Dockerfile,"# configure supervisor
"
842,0398d8c076fed924aa2aec87374aa7bed83d701c,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
843,0398d8c076fed924aa2aec87374aa7bed83d701c,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
844,0398d8c076fed924aa2aec87374aa7bed83d701c,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
845,0398d8c076fed924aa2aec87374aa7bed83d701c,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
846,0398d8c076fed924aa2aec87374aa7bed83d701c,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
847,e188013122ce6612e3bf6190a17dcf0a7687dba7,/debian/devel/Dockerfile,"# normal build deps
"
848,e188013122ce6612e3bf6190a17dcf0a7687dba7,/debian/devel/Dockerfile,"# need an editor for ""dch -i""
"
849,e188013122ce6612e3bf6190a17dcf0a7687dba7,/debian/devel/Dockerfile,"# a few extra little useful things
"
850,e188013122ce6612e3bf6190a17dcf0a7687dba7,/debian/devel/Dockerfile,"# need deb-src for compiling packages
"
851,e188013122ce6612e3bf6190a17dcf0a7687dba7,/debian/devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
852,e188013122ce6612e3bf6190a17dcf0a7687dba7,/debian/devel/Dockerfile,"# make sure things are pretty
"
853,e188013122ce6612e3bf6190a17dcf0a7687dba7,/debian/devel/Dockerfile,"#(force_color_prompt=yes)/\1/' /root/.bashrc

"
854,7d6ff9ea5e5c6c3687c75e98a11c360c4e77b7e4,/phpmyadmin/Dockerfile,"# https://docs.phpmyadmin.net/en/latest/setup.html#verifying-phpmyadmin-releases
"
855,7d6ff9ea5e5c6c3687c75e98a11c360c4e77b7e4,/phpmyadmin/Dockerfile,"# Since July 2015 all phpMyAdmin releases are cryptographically signed by the releasing developer, who through January 2016 was Marc Delisle.
"
856,7d6ff9ea5e5c6c3687c75e98a11c360c4e77b7e4,/phpmyadmin/Dockerfile,"# Beginning in January 2016, the release manager is Isaac Bennetch.
"
857,7d6ff9ea5e5c6c3687c75e98a11c360c4e77b7e4,/phpmyadmin/Dockerfile,"# Some additional downloads (for example themes) might be signed by Michal Čihař.
"
858,876aa0710bc7dc655ed7be5de6af48849a128dd7,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
859,876aa0710bc7dc655ed7be5de6af48849a128dd7,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
860,876aa0710bc7dc655ed7be5de6af48849a128dd7,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
861,876aa0710bc7dc655ed7be5de6af48849a128dd7,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
862,876aa0710bc7dc655ed7be5de6af48849a128dd7,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
863,e53d5dc65fa7de2f7ddfc456f49a67eefdcb5709,/steam/Dockerfile,"# zenity is used during early startup for dialogs and progress bars
"
864,e53d5dc65fa7de2f7ddfc456f49a67eefdcb5709,/steam/Dockerfile,"# wget is used for uploading crash dumps
"
865,e53d5dc65fa7de2f7ddfc456f49a67eefdcb5709,/steam/Dockerfile,"# needed for ""dbus-launch"" (not sure what that's used for)
"
866,e53d5dc65fa7de2f7ddfc456f49a67eefdcb5709,/steam/Dockerfile,"# needed for ""localedef"" below
"
867,e53d5dc65fa7de2f7ddfc456f49a67eefdcb5709,/steam/Dockerfile,"# WARNING: setlocale('en_US.UTF-8') failed, using locale: 'C'. International characters may not work.
"
868,e53d5dc65fa7de2f7ddfc456f49a67eefdcb5709,/steam/Dockerfile,"# https://github.com/ValveSoftware/steam-for-linux#getting-started
# http://media.steampowered.com/client/installer/steam.deb redirects to https://repo.steampowered.com/steam/archive/precise/steam_latest.deb
# https://repo.steampowered.com/steam/archive/precise/?C=M&O=D
# https://repo.steampowered.com/steam/archive/precise/?C=N&O=D
# ""steam_latest.deb"" is a symlink to ""steam-launcher_X.X.X.X_all.deb""
# https://repo.steampowered.com/steam/dists/precise/steam/binary-amd64/Packages (current version, current SHA256)
"
869,e53d5dc65fa7de2f7ddfc456f49a67eefdcb5709,/steam/Dockerfile,"# let's head off a few of the things steam will want to install immediately
"
870,e53d5dc65fa7de2f7ddfc456f49a67eefdcb5709,/steam/Dockerfile,"# installing libfontconfig1 from Ubuntu stops some runtime-related fontconfig errors/warnings (https://github.com/ValveSoftware/steam-for-linux/issues/3307#issuecomment-506650268)
"
871,e53d5dc65fa7de2f7ddfc456f49a67eefdcb5709,/steam/Dockerfile,"# useful when using ""--env DEBUGGER=gdb"" or ""--env DEBUGGER=strace"" to debug steam startup issues
#RUN set -eux; \
#	apt-get update; \
#	apt-get install -y --no-install-recommends \
#		gdb \
#		strace \
#	; \
#	rm -rf /var/lib/apt/lists/*

"
872,b5b64b9dd441c55defeb3b3240980aa82c59650d,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
873,b5b64b9dd441c55defeb3b3240980aa82c59650d,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
874,b5b64b9dd441c55defeb3b3240980aa82c59650d,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
875,b5b64b9dd441c55defeb3b3240980aa82c59650d,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
876,b5b64b9dd441c55defeb3b3240980aa82c59650d,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
877,5677fa6244e4db672f1f3dbcd20fbc7940a3bf77,/jenkins/slave/Dockerfile,"#PermitRootLogin.*/PermitRootLogin yes/' /etc/ssh/sshd_config

"
878,5677fa6244e4db672f1f3dbcd20fbc7940a3bf77,/jenkins/slave/Dockerfile,"# let's make /root a volume so ~/.ssh/authorized_keys is easier to save
"
879,1ae08bb36f065c5d64ffd21d0f94b818583618fc,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
880,c84ba2a9d8f34c01389f47b7b4dfc9633ee4818c,/slack/Dockerfile,"# used as a fake browser so clicked URLs (and internal Slack behavior that wants to open a browser) pop up with a URL + clipboard instead of silently doing nothing
"
881,c84ba2a9d8f34c01389f47b7b4dfc9633ee4818c,/slack/Dockerfile,"# the .deb file linked at https://slack.com/downloads/instructions/debian includes ""/etc/cron.daily/slack"" which sets up an APT repo entry as in the following installation

# pub   rsa4096 2016-02-18 [SCEA]
#       DB08 5A08 CA13 B8AC B917  E0F6 D938 EC0D 0386 51BD
# uid           [ unknown] https://packagecloud.io/slacktechnologies/slack (https://packagecloud.io/docs#gpg_signing) <support@packagecloud.io>
# sub   rsa4096 2016-02-18 [SEA]
"
882,c84ba2a9d8f34c01389f47b7b4dfc9633ee4818c,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libX11-xcb.so.1: cannot open shared object file: No such file or directory
"
883,c84ba2a9d8f34c01389f47b7b4dfc9633ee4818c,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libasound.so.2: cannot open shared object file: No such file or directory
"
884,c84ba2a9d8f34c01389f47b7b4dfc9633ee4818c,/slack/Dockerfile,"# 3.3.3: slack: error while loading shared libraries: libgtk-3.so.0: cannot open shared object file: No such file or directory
"
885,c84ba2a9d8f34c01389f47b7b4dfc9633ee4818c,/slack/Dockerfile,"# 4.4.0: Error: libxkbfile.so.1: cannot open shared object file: No such file or directory
"
886,c84ba2a9d8f34c01389f47b7b4dfc9633ee4818c,/slack/Dockerfile,"# 4.4.0: libGL error: failed to load driver: (i915_dri.so, i194, i965, swrast_dir.so, swrast)
"
887,3a6f0baf7f4f54d6c0a643ce10cb4fa7063eca30,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
888,3a6f0baf7f4f54d6c0a643ce10cb4fa7063eca30,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
889,3a6f0baf7f4f54d6c0a643ce10cb4fa7063eca30,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
890,3a6f0baf7f4f54d6c0a643ce10cb4fa7063eca30,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
891,3a6f0baf7f4f54d6c0a643ce10cb4fa7063eca30,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
892,83e5eda38ea9b1e605375f74864645cbc115e13d,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
893,83e5eda38ea9b1e605375f74864645cbc115e13d,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
894,83e5eda38ea9b1e605375f74864645cbc115e13d,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
895,83e5eda38ea9b1e605375f74864645cbc115e13d,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
896,83e5eda38ea9b1e605375f74864645cbc115e13d,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
897,5fa22a07d0ca762cd62995a9e92f69c9cab90469,/prometheus/Dockerfile,"# https://github.com/prometheus/prometheus/releases
"
898,7c6edf1c09acf679b23b2af05f6e7fc80b662b28,/mongodb-mms/Dockerfile,"# see https://mms.mongodb.com/settings/monitoring-agent
# click on ""Ubuntu 12.04+""
"
899,03c64b72c8473f0d1120ac049f627bff4073d572,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
900,f4b0f5be45d4e25e14b3b329fba53b4b1a4bb4af,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
901,f4b0f5be45d4e25e14b3b329fba53b4b1a4bb4af,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
902,f4b0f5be45d4e25e14b3b329fba53b4b1a4bb4af,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
903,f4b0f5be45d4e25e14b3b329fba53b4b1a4bb4af,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
904,f4b0f5be45d4e25e14b3b329fba53b4b1a4bb4af,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
905,6a469203d530c566b5fe7ddf33dfa1329d92f085,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
906,6a469203d530c566b5fe7ddf33dfa1329d92f085,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
907,6a469203d530c566b5fe7ddf33dfa1329d92f085,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
908,6a469203d530c566b5fe7ddf33dfa1329d92f085,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
909,6a469203d530c566b5fe7ddf33dfa1329d92f085,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
910,03579956c6ea648443a838a0fc63ecd24298e21e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
911,03579956c6ea648443a838a0fc63ecd24298e21e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
912,03579956c6ea648443a838a0fc63ecd24298e21e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
913,03579956c6ea648443a838a0fc63ecd24298e21e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
914,03579956c6ea648443a838a0fc63ecd24298e21e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
915,c6ccf4940b20e1cec5098bfaa4e5a4056cb62ea4,/vultr-cli/Dockerfile,"# https://github.com/vultr/vultr-cli/releases
"
916,78a0d3bd7e4171bc6ce4c89820f1ce2004721e46,/google-cloud-print-connector/Dockerfile,"# fetch dependencies
# format: import-path=strip-components=tarball-url
"
917,78a0d3bd7e4171bc6ce4c89820f1ce2004721e46,/google-cloud-print-connector/Dockerfile,"# https://github.com/coreos/go-systemd/releases
"
918,78a0d3bd7e4171bc6ce4c89820f1ce2004721e46,/google-cloud-print-connector/Dockerfile,"# https://github.com/satori/go.uuid/releases
# (https://github.com/satori/go.uuid/commit/0ef6afb2f6cdd6cdaeee3885a95099c63f18fc8c -- hopefully we'll get a newer release than v1.2.0 soonish)
"
919,78a0d3bd7e4171bc6ce4c89820f1ce2004721e46,/google-cloud-print-connector/Dockerfile,"# https://github.com/urfave/cli/releases
"
920,78a0d3bd7e4171bc6ce4c89820f1ce2004721e46,/google-cloud-print-connector/Dockerfile,"# https://github.com/golang/net/commits/master
"
921,78a0d3bd7e4171bc6ce4c89820f1ce2004721e46,/google-cloud-print-connector/Dockerfile,"# https://github.com/golang/oauth2/commits/master
"
922,78a0d3bd7e4171bc6ce4c89820f1ce2004721e46,/google-cloud-print-connector/Dockerfile,"# https://bazaar.launchpad.net/~chipaca/go-xdg/v0/files (""view revision"")
# https://bazaar.launchpad.net/~chipaca/go-xdg/v0/revision/10?start_revid=10 (""download tarball"")
"
923,78a0d3bd7e4171bc6ce4c89820f1ce2004721e46,/google-cloud-print-connector/Dockerfile,"#*=}""; dep=""${dep%=$strip}""; \
"
924,78a0d3bd7e4171bc6ce4c89820f1ce2004721e46,/google-cloud-print-connector/Dockerfile,"#*=}""; strip=""${strip%=$tarball}""; \
"
925,78a0d3bd7e4171bc6ce4c89820f1ce2004721e46,/google-cloud-print-connector/Dockerfile,"# https://github.com/google/cloud-print-connector/releases
"
926,83a5100a9b45f22cc4cde2e84e55e84e2a20b122,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
927,a73aae08eba3a496ef293b4edb3cda8efdab8f14,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
928,a73aae08eba3a496ef293b4edb3cda8efdab8f14,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
929,a73aae08eba3a496ef293b4edb3cda8efdab8f14,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
930,a73aae08eba3a496ef293b4edb3cda8efdab8f14,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
931,a73aae08eba3a496ef293b4edb3cda8efdab8f14,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
932,9fdb76063b8bd8ea8a8b61809e6c603e7434869b,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
933,9fdb76063b8bd8ea8a8b61809e6c603e7434869b,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
934,9fdb76063b8bd8ea8a8b61809e6c603e7434869b,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
935,9fdb76063b8bd8ea8a8b61809e6c603e7434869b,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
936,9fdb76063b8bd8ea8a8b61809e6c603e7434869b,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
937,0facc8b0ce394d8afc6b42e86d689562896658f4,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
938,0facc8b0ce394d8afc6b42e86d689562896658f4,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
939,0facc8b0ce394d8afc6b42e86d689562896658f4,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
940,0facc8b0ce394d8afc6b42e86d689562896658f4,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
941,0facc8b0ce394d8afc6b42e86d689562896658f4,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
942,72b52e5dfc991287822ec2ba35b9725e1085edce,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
943,72b52e5dfc991287822ec2ba35b9725e1085edce,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
944,72b52e5dfc991287822ec2ba35b9725e1085edce,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
945,72b52e5dfc991287822ec2ba35b9725e1085edce,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
946,72b52e5dfc991287822ec2ba35b9725e1085edce,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
947,94eb23defc84af497fbd8a0e0e44fe1576688cb5,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
948,94eb23defc84af497fbd8a0e0e44fe1576688cb5,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
949,94eb23defc84af497fbd8a0e0e44fe1576688cb5,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
950,94eb23defc84af497fbd8a0e0e44fe1576688cb5,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
951,94eb23defc84af497fbd8a0e0e44fe1576688cb5,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
952,1b8253a531703aa393195e2969230de884deb0bf,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
953,1b8253a531703aa393195e2969230de884deb0bf,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
954,fcc0aad9df0539b398bf2822147eb4aeab5cb005,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
955,fcc0aad9df0539b398bf2822147eb4aeab5cb005,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
956,fcc0aad9df0539b398bf2822147eb4aeab5cb005,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
957,fcc0aad9df0539b398bf2822147eb4aeab5cb005,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
958,fcc0aad9df0539b398bf2822147eb4aeab5cb005,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
959,868ece29ee037384e58317bd737895e5f1e05b15,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
960,62a045d1145ab8436460838b45320dd75ab5ec3b,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
961,62a045d1145ab8436460838b45320dd75ab5ec3b,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
962,62a045d1145ab8436460838b45320dd75ab5ec3b,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
963,62a045d1145ab8436460838b45320dd75ab5ec3b,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
964,62a045d1145ab8436460838b45320dd75ab5ec3b,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
965,77c2e52b6604b80e5c491ebc6868a2d2433d3240,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
966,77c2e52b6604b80e5c491ebc6868a2d2433d3240,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
967,77c2e52b6604b80e5c491ebc6868a2d2433d3240,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
968,77c2e52b6604b80e5c491ebc6868a2d2433d3240,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
969,77c2e52b6604b80e5c491ebc6868a2d2433d3240,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
970,69435311601b3244cc0a417f332d355ec8b7d278,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
971,69435311601b3244cc0a417f332d355ec8b7d278,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
972,69435311601b3244cc0a417f332d355ec8b7d278,/plex/media-server/Dockerfile,"# the published deb has pre/post-inst scripts that don't really apply to Docker (so we'll skip ""install"" entirely)
# (as of 1.18.5.2309, they have bugs around Docker detection, which is mostly for avoiding init behavior)
"
973,69435311601b3244cc0a417f332d355ec8b7d278,/plex/media-server/Dockerfile,"#	apt-get update; \
#	apt-get install /tmp/plex.deb; \
#	rm -rf /var/lib/apt/lists/*; \
"
974,809c799cdc170ff4cacd390fe3eef9740be971d8,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
975,809c799cdc170ff4cacd390fe3eef9740be971d8,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
976,809c799cdc170ff4cacd390fe3eef9740be971d8,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
977,809c799cdc170ff4cacd390fe3eef9740be971d8,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
978,809c799cdc170ff4cacd390fe3eef9740be971d8,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
979,b4dfdc415905a8c834fabe580401d4912dc44ef9,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
980,b4dfdc415905a8c834fabe580401d4912dc44ef9,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
981,b4dfdc415905a8c834fabe580401d4912dc44ef9,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
982,b4dfdc415905a8c834fabe580401d4912dc44ef9,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
983,b4dfdc415905a8c834fabe580401d4912dc44ef9,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
984,5e9f314c98dc9613228c4c178ebeef76376a34b4,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
985,5e9f314c98dc9613228c4c178ebeef76376a34b4,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
986,5e9f314c98dc9613228c4c178ebeef76376a34b4,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
987,5e9f314c98dc9613228c4c178ebeef76376a34b4,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
988,5e9f314c98dc9613228c4c178ebeef76376a34b4,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
989,520ee41676068c257abfb4296d580cf22daaac44,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
990,3b1c6762923c32474002bcae1f83ba8de09e736c,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
991,f3b428d00adcf0d556c1560efc8f97d0b247ed8e,/diffoscope/Dockerfile,"# xxd (xxd not available in path. Falling back to Python hexlify.)
"
992,f3b428d00adcf0d556c1560efc8f97d0b247ed8e,/diffoscope/Dockerfile,"# readelf ('readelf' not available in path. Falling back to binary comparison.)
"
993,f3b428d00adcf0d556c1560efc8f97d0b247ed8e,/diffoscope/Dockerfile,"# for ""diffoscope --progress""
"
994,2e4c8a877314acc96cef07d3ed6831e5b71bdb69,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
995,2e4c8a877314acc96cef07d3ed6831e5b71bdb69,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
996,2e4c8a877314acc96cef07d3ed6831e5b71bdb69,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
997,2e4c8a877314acc96cef07d3ed6831e5b71bdb69,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
998,2e4c8a877314acc96cef07d3ed6831e5b71bdb69,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
999,2eac1e38890fcb8184839a3202beafb09b573f0f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1000,2eac1e38890fcb8184839a3202beafb09b573f0f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1001,2eac1e38890fcb8184839a3202beafb09b573f0f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1002,2eac1e38890fcb8184839a3202beafb09b573f0f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1003,2eac1e38890fcb8184839a3202beafb09b573f0f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1004,344626334570ff9cfc2c10e918490a5118d61082,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1005,eae6859ffc83b889feb934e0a4b927a04d87c79a,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
1006,eae6859ffc83b889feb934e0a4b927a04d87c79a,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
1007,eae6859ffc83b889feb934e0a4b927a04d87c79a,/plex/media-server/Dockerfile,"# the published deb has pre/post-inst scripts that don't really apply to Docker (so we'll skip ""install"" entirely)
# (as of 1.18.5.2309, they have bugs around Docker detection, which is mostly for avoiding init behavior)
"
1008,eae6859ffc83b889feb934e0a4b927a04d87c79a,/plex/media-server/Dockerfile,"#	apt-get update; \
#	apt-get install /tmp/plex.deb; \
#	rm -rf /var/lib/apt/lists/*; \
"
1009,bd52492ebeadaed28f667498ca8a86ba36bc84bf,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1010,bd52492ebeadaed28f667498ca8a86ba36bc84bf,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1011,bd52492ebeadaed28f667498ca8a86ba36bc84bf,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1012,bd52492ebeadaed28f667498ca8a86ba36bc84bf,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1013,bd52492ebeadaed28f667498ca8a86ba36bc84bf,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1014,141d9c8265df27a5ab4d7a5cef14a27d3cf3d688,/toybox/Dockerfile,"# ideally, we'd use official static binary releases from http://landley.net/toybox/downloads/binaries/ but they don't include the (pending) ""sh"" implementation so they're not quite enough for a full system yet

"
1015,141d9c8265df27a5ab4d7a5cef14a27d3cf3d688,/toybox/Dockerfile,"# https://landley.net/toybox/downloads/?C=M;O=D
# https://github.com/landley/toybox/releases
"
1016,7f646aca02ee8002ac65d7d2411ab2b346baa984,/network-toolbox/debian/Dockerfile,"# dangit, wireshark-common!  *shakes fist*
"
1017,24ebdd8f531850b417c39197023cc2fa767b1107,/mutt-gmail/Dockerfile,"# a browser is necessary!
"
1018,24ebdd8f531850b417c39197023cc2fa767b1107,/mutt-gmail/Dockerfile,"# my preferred editor :) (see also muttrc)
"
1019,31c5c7877cdfae553ceb2f0812b02fab78b3acfe,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1020,31c5c7877cdfae553ceb2f0812b02fab78b3acfe,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1021,31c5c7877cdfae553ceb2f0812b02fab78b3acfe,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1022,31c5c7877cdfae553ceb2f0812b02fab78b3acfe,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1023,31c5c7877cdfae553ceb2f0812b02fab78b3acfe,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1024,efdc47b45c4e3bd449d1818e45721090a54ef86c,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
1025,efdc47b45c4e3bd449d1818e45721090a54ef86c,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
"
1026,b5b9028dcc9b1de8224d2c774a0c75c600cafe71,/perl/Dockerfile,"# secure by default ♥ (thanks to sri!)
"
1027,b5b9028dcc9b1de8224d2c774a0c75c600cafe71,/perl/Dockerfile,"# reinstall cpanm itself, for good measure
"
1028,9d3ebd81eaec6ecec7d027338f5fb722b23a5bcb,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1029,9d3ebd81eaec6ecec7d027338f5fb722b23a5bcb,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1030,9d3ebd81eaec6ecec7d027338f5fb722b23a5bcb,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
1031,9d3ebd81eaec6ecec7d027338f5fb722b23a5bcb,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
1032,9d3ebd81eaec6ecec7d027338f5fb722b23a5bcb,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
1033,149a552051ffdbc150fcd690846cc076690611c9,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1034,149a552051ffdbc150fcd690846cc076690611c9,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1035,149a552051ffdbc150fcd690846cc076690611c9,/jenkins/Dockerfile,"# workaround ""apt-key adv --recv-keys"" hanging in stretch and above
"
1036,ad984e5c77141ce2ce3e8d1ce79b22aa91a05453,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1037,3a6dbe6cca83ceb1a83a034644808c6a83397620,/certbot/Dockerfile,"# Executable not found: can't find the executable for the dialog-like program
"
1038,3a6dbe6cca83ceb1a83a034644808c6a83397620,/certbot/Dockerfile,"#VOLUME /etc/letsencrypt
"
1039,3a6dbe6cca83ceb1a83a034644808c6a83397620,/certbot/Dockerfile,"#VOLUME /var/log/letsencrypt

"
1040,3a8824648554ed138d8012ea92c9f723ebd87820,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1041,3a8824648554ed138d8012ea92c9f723ebd87820,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1042,3a8824648554ed138d8012ea92c9f723ebd87820,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1043,3a8824648554ed138d8012ea92c9f723ebd87820,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1044,3a8824648554ed138d8012ea92c9f723ebd87820,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1045,4191600de715f34ea670d650186ab73ad5d235db,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1046,4191600de715f34ea670d650186ab73ad5d235db,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1047,4191600de715f34ea670d650186ab73ad5d235db,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
1048,4191600de715f34ea670d650186ab73ad5d235db,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
1049,4191600de715f34ea670d650186ab73ad5d235db,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
1050,1763f822e8c9a77fc9fced4036a8d8b460b6013e,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
1051,1763f822e8c9a77fc9fced4036a8d8b460b6013e,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
1052,1763f822e8c9a77fc9fced4036a8d8b460b6013e,/plex/media-server/Dockerfile,"# the published deb has pre/post-inst scripts that don't really apply to Docker (so we'll skip ""install"" entirely)
# (as of 1.18.5.2309, they have bugs around Docker detection, which is mostly for avoiding init behavior)
"
1053,1763f822e8c9a77fc9fced4036a8d8b460b6013e,/plex/media-server/Dockerfile,"#	apt-get update; \
#	apt-get install /tmp/plex.deb; \
#	rm -rf /var/lib/apt/lists/*; \
"
1054,55fa3f671e1c0fde450e9cb0ce41b8ab8bc1e505,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1055,55fa3f671e1c0fde450e9cb0ce41b8ab8bc1e505,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1056,55fa3f671e1c0fde450e9cb0ce41b8ab8bc1e505,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1057,55fa3f671e1c0fde450e9cb0ce41b8ab8bc1e505,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1058,55fa3f671e1c0fde450e9cb0ce41b8ab8bc1e505,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1059,b46f6841423dfe3787fd87102b3465dabd673b02,/diffoscope/Dockerfile,"# xxd (xxd not available in path. Falling back to Python hexlify.)
"
1060,b46f6841423dfe3787fd87102b3465dabd673b02,/diffoscope/Dockerfile,"# readelf ('readelf' not available in path. Falling back to binary comparison.)
"
1061,b46f6841423dfe3787fd87102b3465dabd673b02,/diffoscope/Dockerfile,"# for ""diffoscope --progress""
"
1062,528ad08d3e9a38abfee526be960a81c443e15a9c,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1063,528ad08d3e9a38abfee526be960a81c443e15a9c,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1064,528ad08d3e9a38abfee526be960a81c443e15a9c,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1065,528ad08d3e9a38abfee526be960a81c443e15a9c,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1066,528ad08d3e9a38abfee526be960a81c443e15a9c,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1067,0d4070ce05449934a6f34517d734a316139d3933,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1068,0d4070ce05449934a6f34517d734a316139d3933,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1069,0d4070ce05449934a6f34517d734a316139d3933,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
1070,0d4070ce05449934a6f34517d734a316139d3933,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
1071,0d4070ce05449934a6f34517d734a316139d3933,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
1072,3771fbb2543412227089139ec22478c5f07ee4be,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1073,3771fbb2543412227089139ec22478c5f07ee4be,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1074,3771fbb2543412227089139ec22478c5f07ee4be,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1075,3771fbb2543412227089139ec22478c5f07ee4be,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1076,3771fbb2543412227089139ec22478c5f07ee4be,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1077,d75df0bfd6cb477d2f6dc377ff197336112fdc89,/slack/Dockerfile,"# the .deb file linked at https://slack.com/downloads/instructions/debian includes ""/etc/cron.daily/slack"" which sets up an APT repo entry as in the following installation

# pub   rsa4096 2016-02-18 [SCEA]
#       DB08 5A08 CA13 B8AC B917  E0F6 D938 EC0D 0386 51BD
# uid           [ unknown] https://packagecloud.io/slacktechnologies/slack (https://packagecloud.io/docs#gpg_signing) <support@packagecloud.io>
# sub   rsa4096 2016-02-18 [SEA]
"
1078,d75df0bfd6cb477d2f6dc377ff197336112fdc89,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libX11-xcb.so.1: cannot open shared object file: No such file or directory
"
1079,d75df0bfd6cb477d2f6dc377ff197336112fdc89,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libasound.so.2: cannot open shared object file: No such file or directory
"
1080,d75df0bfd6cb477d2f6dc377ff197336112fdc89,/slack/Dockerfile,"# 3.3.3: slack: error while loading shared libraries: libgtk-3.so.0: cannot open shared object file: No such file or directory
"
1081,d75df0bfd6cb477d2f6dc377ff197336112fdc89,/slack/Dockerfile,"# 4.4.0: Error: libxkbfile.so.1: cannot open shared object file: No such file or directory
"
1082,d75df0bfd6cb477d2f6dc377ff197336112fdc89,/slack/Dockerfile,"# 4.4.0: libGL error: failed to load driver: (i915_dri.so, i194, i965, swrast_dir.so, swrast)
"
1083,3cf2725c67d088f5ad9adbbd456caccfbbcda788,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1084,adc62864de6ed28b17de771256a31d9daaaa19dc,/containerd/Dockerfile,"# runtime deps
"
1085,adc62864de6ed28b17de771256a31d9daaaa19dc,/containerd/Dockerfile,"# https://github.com/opencontainers/runc/releases
"
1086,adc62864de6ed28b17de771256a31d9daaaa19dc,/containerd/Dockerfile,"# TODO .asc / .sha256sum
"
1087,adc62864de6ed28b17de771256a31d9daaaa19dc,/containerd/Dockerfile,"# https://github.com/containerd/containerd/releases
"
1088,b15c177e700872c32f30476774ef08243f76800d,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1089,b15c177e700872c32f30476774ef08243f76800d,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1090,b15c177e700872c32f30476774ef08243f76800d,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1091,b15c177e700872c32f30476774ef08243f76800d,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1092,b15c177e700872c32f30476774ef08243f76800d,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1093,2915648e3c1e16ef2a8ffe45283d6fda065a2a66,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1094,2915648e3c1e16ef2a8ffe45283d6fda065a2a66,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1095,2915648e3c1e16ef2a8ffe45283d6fda065a2a66,/jenkins/Dockerfile,"# workaround ""apt-key adv --recv-keys"" hanging in stretch and above
"
1096,e2b0fbbbf43c6c8dd471af0ceea7fe4eb896eddc,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1097,e2b0fbbbf43c6c8dd471af0ceea7fe4eb896eddc,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1098,e2b0fbbbf43c6c8dd471af0ceea7fe4eb896eddc,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1099,e2b0fbbbf43c6c8dd471af0ceea7fe4eb896eddc,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1100,e2b0fbbbf43c6c8dd471af0ceea7fe4eb896eddc,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1101,e6a6f77621a8dbcddf1f92afeb7443868cd672eb,/exim4/Dockerfile,"# grab tini for signal processing and zombie killing
"
1102,e6a6f77621a8dbcddf1f92afeb7443868cd672eb,/exim4/Dockerfile,"# https://blog.dhampir.no/content/exim4-line-length-in-debian-stretch-mail-delivery-failed-returning-message-to-sender
# https://serverfault.com/a/881197
# https://bugs.debian.org/828801
"
1103,43ecd12ca97a7c92651ad3d706f86903416f171a,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1104,8d44357da5bada3ef357e019789d1391cb87f7c9,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1105,8d44357da5bada3ef357e019789d1391cb87f7c9,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1106,8d44357da5bada3ef357e019789d1391cb87f7c9,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1107,8d44357da5bada3ef357e019789d1391cb87f7c9,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1108,8d44357da5bada3ef357e019789d1391cb87f7c9,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1109,7d3175bc7646a8f1bb69b6e76956e154306ff20f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1110,7d3175bc7646a8f1bb69b6e76956e154306ff20f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1111,7d3175bc7646a8f1bb69b6e76956e154306ff20f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1112,7d3175bc7646a8f1bb69b6e76956e154306ff20f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1113,7d3175bc7646a8f1bb69b6e76956e154306ff20f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1114,73551160638ba0d8ca120fa8888489b4cefd12d0,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1115,47583c4bb2e8db0a42f3f23f3fe54666a2d8606b,/sbin-init/ubuntu/12.10/Dockerfile,"# much of this was gleaned from https://github.com/lxc/lxc/blob/lxc-0.8.0/templates/lxc-ubuntu.in

# we're going to want this bad boy installed so we can connect :)
"
1116,47583c4bb2e8db0a42f3f23f3fe54666a2d8606b,/sbin-init/ubuntu/12.10/Dockerfile,"# undo some leet hax of the base image
"
1117,47583c4bb2e8db0a42f3f23f3fe54666a2d8606b,/sbin-init/ubuntu/12.10/Dockerfile,"# generate a nice UTF-8 locale for our use
"
1118,47583c4bb2e8db0a42f3f23f3fe54666a2d8606b,/sbin-init/ubuntu/12.10/Dockerfile,"# remove some pointless services
"
1119,47583c4bb2e8db0a42f3f23f3fe54666a2d8606b,/sbin-init/ubuntu/12.10/Dockerfile,"# /lib/init/fstab: cleared out for bare-bones lxc' > /lib/init/fstab

# small fix for SSH in 13.10 (that's harmless everywhere else)
"
1120,47583c4bb2e8db0a42f3f23f3fe54666a2d8606b,/sbin-init/ubuntu/12.10/Dockerfile,"# set a cheap, simple password for great convenience
"
1121,47583c4bb2e8db0a42f3f23f3fe54666a2d8606b,/sbin-init/ubuntu/12.10/Dockerfile,"# we can has SSH
"
1122,47583c4bb2e8db0a42f3f23f3fe54666a2d8606b,/sbin-init/ubuntu/12.10/Dockerfile,"# pepare for takeoff
"
1123,5ef0739094fdb8b187e986e95f4372111a14342e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1124,5ef0739094fdb8b187e986e95f4372111a14342e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1125,5ef0739094fdb8b187e986e95f4372111a14342e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1126,5ef0739094fdb8b187e986e95f4372111a14342e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1127,5ef0739094fdb8b187e986e95f4372111a14342e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1128,f59da3c6f16c375dd39da3ebffc2669a56f3ca31,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1129,f59da3c6f16c375dd39da3ebffc2669a56f3ca31,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1130,f59da3c6f16c375dd39da3ebffc2669a56f3ca31,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1131,f59da3c6f16c375dd39da3ebffc2669a56f3ca31,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1132,f59da3c6f16c375dd39da3ebffc2669a56f3ca31,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1133,02958d7a5900fb54979ac0c0c194aa14fc56634c,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1134,02958d7a5900fb54979ac0c0c194aa14fc56634c,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1135,02958d7a5900fb54979ac0c0c194aa14fc56634c,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
1136,02958d7a5900fb54979ac0c0c194aa14fc56634c,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
1137,02958d7a5900fb54979ac0c0c194aa14fc56634c,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
1138,383626c5467eeb936f308227003a52ef739e182f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1139,383626c5467eeb936f308227003a52ef739e182f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1140,383626c5467eeb936f308227003a52ef739e182f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1141,383626c5467eeb936f308227003a52ef739e182f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1142,383626c5467eeb936f308227003a52ef739e182f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1143,907b9be1c28770094959f33721d36f5680ef3fa4,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1144,2b941404e3a1d2e2bf127342b9eaaa5ec91017d2,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1145,1d8cca0719a888ae7145519c1388b4f432cc569a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1146,1d8cca0719a888ae7145519c1388b4f432cc569a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1147,1d8cca0719a888ae7145519c1388b4f432cc569a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1148,1d8cca0719a888ae7145519c1388b4f432cc569a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1149,1d8cca0719a888ae7145519c1388b4f432cc569a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1150,c7aec2ee4cb1b8bb4fa6f7ba53cc9928bf13edd4,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1151,c7aec2ee4cb1b8bb4fa6f7ba53cc9928bf13edd4,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1152,c7aec2ee4cb1b8bb4fa6f7ba53cc9928bf13edd4,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1153,c7aec2ee4cb1b8bb4fa6f7ba53cc9928bf13edd4,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1154,c7aec2ee4cb1b8bb4fa6f7ba53cc9928bf13edd4,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1155,7d2c0ed3f348c98317a14fe2ef0b9e0b8b1c96f9,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1156,7d2c0ed3f348c98317a14fe2ef0b9e0b8b1c96f9,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1157,7d2c0ed3f348c98317a14fe2ef0b9e0b8b1c96f9,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1158,7d2c0ed3f348c98317a14fe2ef0b9e0b8b1c96f9,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1159,7d2c0ed3f348c98317a14fe2ef0b9e0b8b1c96f9,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1160,1ea2cf86eab3fc5057819a61f4f243d89069519c,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1161,1ea2cf86eab3fc5057819a61f4f243d89069519c,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1162,1ea2cf86eab3fc5057819a61f4f243d89069519c,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1163,1ea2cf86eab3fc5057819a61f4f243d89069519c,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1164,1ea2cf86eab3fc5057819a61f4f243d89069519c,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1165,694d3630318c96745bd5d6c365a2e7d5596976cf,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1166,694d3630318c96745bd5d6c365a2e7d5596976cf,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1167,694d3630318c96745bd5d6c365a2e7d5596976cf,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
1168,694d3630318c96745bd5d6c365a2e7d5596976cf,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
1169,694d3630318c96745bd5d6c365a2e7d5596976cf,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
1170,d2b815ddbc32a2f5eeaee5fe117e587eebd5c01d,/tinygo/Dockerfile,"# the .deb (as of 0.6.0) installs to /usr/local/tinygo but doesn't add ""tinygo"" to PATH
"
1171,d2b815ddbc32a2f5eeaee5fe117e587eebd5c01d,/tinygo/Dockerfile,"# https://tinygo.org/getting-started/linux/

# https://github.com/tinygo-org/tinygo/releases
"
1172,1e39d3269b792ca41c266b138de9477ef9d80b2f,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1173,1e39d3269b792ca41c266b138de9477ef9d80b2f,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1174,1e39d3269b792ca41c266b138de9477ef9d80b2f,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
1175,1e39d3269b792ca41c266b138de9477ef9d80b2f,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
1176,1e39d3269b792ca41c266b138de9477ef9d80b2f,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
1177,4ae2b85f07236a0597a4b1d6992a11e9e2f8f7be,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1178,4ae2b85f07236a0597a4b1d6992a11e9e2f8f7be,/docker-master/Dockerfile,"# why we use ""curl"" instead of ""wget"":
# + wget -O docker.tgz https://download.docker.com/linux/static/stable/x86_64/docker-17.03.1-ce.tgz
# Connecting to download.docker.com (54.230.87.253:443)
# wget: error getting response: Connection reset by peer
"
1179,135a6f734100ef0e8cf72db165c52752cbb839a6,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1180,135a6f734100ef0e8cf72db165c52752cbb839a6,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1181,135a6f734100ef0e8cf72db165c52752cbb839a6,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1182,135a6f734100ef0e8cf72db165c52752cbb839a6,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1183,135a6f734100ef0e8cf72db165c52752cbb839a6,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1184,771406013df09dd993e7c3ce06ac68d06a3fa7d1,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1185,c9154ec982d83ccbee52c868a7e4973d9cde6eaf,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1186,4dc5facc64298b07ebc219de209b8800d0b665fe,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1187,4dc5facc64298b07ebc219de209b8800d0b665fe,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1188,4dc5facc64298b07ebc219de209b8800d0b665fe,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
1189,4dc5facc64298b07ebc219de209b8800d0b665fe,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
1190,4dc5facc64298b07ebc219de209b8800d0b665fe,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
1191,927f0421afcb3bf985ba30b4efebcf6bba0eabd0,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1192,927f0421afcb3bf985ba30b4efebcf6bba0eabd0,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1193,927f0421afcb3bf985ba30b4efebcf6bba0eabd0,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1194,927f0421afcb3bf985ba30b4efebcf6bba0eabd0,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1195,927f0421afcb3bf985ba30b4efebcf6bba0eabd0,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1196,04e804473c7835e37ca1de5d4f5bee922f2b007a,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1197,04e804473c7835e37ca1de5d4f5bee922f2b007a,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1198,04e804473c7835e37ca1de5d4f5bee922f2b007a,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
1199,04e804473c7835e37ca1de5d4f5bee922f2b007a,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
1200,04e804473c7835e37ca1de5d4f5bee922f2b007a,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
1201,545a7dda246933112c4e9a0fdf07392b1dfdf482,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1202,545a7dda246933112c4e9a0fdf07392b1dfdf482,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1203,545a7dda246933112c4e9a0fdf07392b1dfdf482,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1204,545a7dda246933112c4e9a0fdf07392b1dfdf482,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1205,545a7dda246933112c4e9a0fdf07392b1dfdf482,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1206,1acb64ca1cc3242011ef40ce6c7601f8cc41e4eb,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1207,1acb64ca1cc3242011ef40ce6c7601f8cc41e4eb,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1208,1acb64ca1cc3242011ef40ce6c7601f8cc41e4eb,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1209,1acb64ca1cc3242011ef40ce6c7601f8cc41e4eb,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1210,1acb64ca1cc3242011ef40ce6c7601f8cc41e4eb,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1211,fbebc70834b1da31435c2075122f5d9a125ee426,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1212,fbebc70834b1da31435c2075122f5d9a125ee426,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1213,fbebc70834b1da31435c2075122f5d9a125ee426,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
1214,fbebc70834b1da31435c2075122f5d9a125ee426,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
1215,fbebc70834b1da31435c2075122f5d9a125ee426,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
1216,0ae58c0bc42fe621eb5923049d0fe2dc6622a7a2,/exim4/Dockerfile,"# grab tini for signal processing and zombie killing
"
1217,0ae58c0bc42fe621eb5923049d0fe2dc6622a7a2,/exim4/Dockerfile,"# https://blog.dhampir.no/content/exim4-line-length-in-debian-stretch-mail-delivery-failed-returning-message-to-sender
# https://serverfault.com/a/881197
# https://bugs.debian.org/828801
"
1218,21d9e0127c27f731367ec2815063209d1ebb36b2,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1219,21d9e0127c27f731367ec2815063209d1ebb36b2,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1220,21d9e0127c27f731367ec2815063209d1ebb36b2,/jenkins/Dockerfile,"# workaround ""apt-key adv --recv-keys"" hanging in stretch and above
"
1221,3209786f6c1c80f4e436d87eaa265057bd815e08,/nylas/sync-engine/Dockerfile,"# tell pynacl to use system libsodium
"
1222,3209786f6c1c80f4e436d87eaa265057bd815e08,/nylas/sync-engine/Dockerfile,"#ENV SYNC_VERSION v0.3.0 # 2014 :'(
"
1223,3209786f6c1c80f4e436d87eaa265057bd815e08,/nylas/sync-engine/Dockerfile,"# ugh, NameError: name 'PROTOCOL_SSLv3' is not defined
"
1224,3209786f6c1c80f4e436d87eaa265057bd815e08,/nylas/sync-engine/Dockerfile," # TODO inbox-api or inbox-start
"
1225,460af37763386c5a58b05b966067680786562795,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1226,460af37763386c5a58b05b966067680786562795,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1227,460af37763386c5a58b05b966067680786562795,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
1228,b50eda1a72c3d657562060609b419325649d7b4b,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1229,b50eda1a72c3d657562060609b419325649d7b4b,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1230,b50eda1a72c3d657562060609b419325649d7b4b,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1231,b50eda1a72c3d657562060609b419325649d7b4b,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1232,b50eda1a72c3d657562060609b419325649d7b4b,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1233,26feb42a08094a92bff944ab5a97e83d0477df55,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1234,26feb42a08094a92bff944ab5a97e83d0477df55,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1235,26feb42a08094a92bff944ab5a97e83d0477df55,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1236,26feb42a08094a92bff944ab5a97e83d0477df55,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1237,26feb42a08094a92bff944ab5a97e83d0477df55,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1238,b7d0f064f21c268f1830ee8c8b10fe2eed775f6f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1239,b7d0f064f21c268f1830ee8c8b10fe2eed775f6f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1240,b7d0f064f21c268f1830ee8c8b10fe2eed775f6f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1241,b7d0f064f21c268f1830ee8c8b10fe2eed775f6f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1242,b7d0f064f21c268f1830ee8c8b10fe2eed775f6f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1243,533c45987753f2369f9931c7ba374f5f4aee8adf,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1244,533c45987753f2369f9931c7ba374f5f4aee8adf,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1245,533c45987753f2369f9931c7ba374f5f4aee8adf,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
1246,533c45987753f2369f9931c7ba374f5f4aee8adf,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
1247,533c45987753f2369f9931c7ba374f5f4aee8adf,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
1248,e59f230f0a9caad3a51d2d33515a2243e1e5950c,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1249,e59f230f0a9caad3a51d2d33515a2243e1e5950c,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1250,e59f230f0a9caad3a51d2d33515a2243e1e5950c,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1251,e59f230f0a9caad3a51d2d33515a2243e1e5950c,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1252,e59f230f0a9caad3a51d2d33515a2243e1e5950c,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1253,7fdc462c03eeceb1b4b4d4cdc640b4438e204350,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1254,2e4c8a877314acc96cef07d3ed6831e5b71bdb69,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1255,daf20a6c5732b10017a7a67e547603f9c7950dba,/phpmyadmin/Dockerfile,"# https://docs.phpmyadmin.net/en/latest/setup.html#verifying-phpmyadmin-releases
"
1256,daf20a6c5732b10017a7a67e547603f9c7950dba,/phpmyadmin/Dockerfile,"# Since July 2015 all phpMyAdmin releases are cryptographically signed by the releasing developer, who through January 2016 was Marc Delisle.
"
1257,daf20a6c5732b10017a7a67e547603f9c7950dba,/phpmyadmin/Dockerfile,"# Beginning in January 2016, the release manager is Isaac Bennetch.
"
1258,daf20a6c5732b10017a7a67e547603f9c7950dba,/phpmyadmin/Dockerfile,"# Some additional downloads (for example themes) might be signed by Michal Čihař.
"
1259,aea58d5f193f02f75beb2a0ca2b7f934e3397c44,/containerd/Dockerfile,"# runtime deps
"
1260,aea58d5f193f02f75beb2a0ca2b7f934e3397c44,/containerd/Dockerfile,"# https://github.com/opencontainers/runc/releases
"
1261,aea58d5f193f02f75beb2a0ca2b7f934e3397c44,/containerd/Dockerfile,"# TODO .asc / .sha256sum
"
1262,aea58d5f193f02f75beb2a0ca2b7f934e3397c44,/containerd/Dockerfile,"# https://github.com/containerd/containerd/releases
"
1263,9c1e3d4e7ab3b49eb3e8eb72229afc79d161516b,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1264,9c1e3d4e7ab3b49eb3e8eb72229afc79d161516b,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1265,42a53e147555fff902a22e6e24e469d6f0097998,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1266,42a53e147555fff902a22e6e24e469d6f0097998,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1267,42a53e147555fff902a22e6e24e469d6f0097998,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
1268,3aa865838959051f4bbf420a6108597f7e4be6e0,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1269,fe13b63492a15bd80d0aab7be305d896993f9fab,/makemkv/Dockerfile,"# FPL_MainFeature detection only seemed to work with OpenJDK 9 (8 was insufficient)
"
1270,fe13b63492a15bd80d0aab7be305d896993f9fab,/makemkv/Dockerfile,"# This disc requires Java runtime (JRE), but none was found. Certain functions will fail, please install Java. See http://www.makemkv.com/bdjava/ for details.
"
1271,fe13b63492a15bd80d0aab7be305d896993f9fab,/makemkv/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
1272,fe13b63492a15bd80d0aab7be305d896993f9fab,/makemkv/Dockerfile,"# http://www.makemkv.com/forum2/viewtopic.php?f=3&t=224
"
1273,fe13b63492a15bd80d0aab7be305d896993f9fab,/makemkv/Dockerfile,"# beta code: http://www.makemkv.com/forum2/viewtopic.php?f=5&t=1053
"
1274,fe13b63492a15bd80d0aab7be305d896993f9fab,/makemkv/Dockerfile,"# pub   dsa2048 2017-05-26 [SC]
#       2ECF 2330 5F1F C0B3 2001  6733 94E3 083A 1804 2697
# uid           [ unknown] MakeMKV (signature) <support@makemkv.com>
"
1275,a0e90cb2024a3863ea20fa3c1fb2d4b41e4a6f2d,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1276,2ada9bce6eca0c3e649811bb35238d00b3be78fa,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1277,2ada9bce6eca0c3e649811bb35238d00b3be78fa,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1278,2ada9bce6eca0c3e649811bb35238d00b3be78fa,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1279,2ada9bce6eca0c3e649811bb35238d00b3be78fa,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1280,2ada9bce6eca0c3e649811bb35238d00b3be78fa,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1281,2c9167edfde623e126dd7b78862732599d2b3cd0,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1282,2c9167edfde623e126dd7b78862732599d2b3cd0,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1283,2c9167edfde623e126dd7b78862732599d2b3cd0,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1284,2c9167edfde623e126dd7b78862732599d2b3cd0,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1285,2c9167edfde623e126dd7b78862732599d2b3cd0,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1286,12398918340f8fbace506e274be89fa50775592e,/lutris/Dockerfile,"# install Wine
#   https://github.com/lutris/docs/blob/f2bf5ca14f280e3c58d2306581294d57650c0cc2/WineDependencies.md
#   https://wiki.winehq.org/Ubuntu
"
1287,12398918340f8fbace506e274be89fa50775592e,/lutris/Dockerfile,"# https://dl.winehq.org/wine-builds/ubuntu/dists/focal/main/binary-amd64/?C=N;O=D
# https://www.winehq.org/news/
"
1288,12398918340f8fbace506e274be89fa50775592e,/lutris/Dockerfile,"# ""Add SDL2 Backports PPA (for Faudio package):""
"
1289,12398918340f8fbace506e274be89fa50775592e,/lutris/Dockerfile,"# ""For compatibility reasons, install these additional libraries:""
"
1290,12398918340f8fbace506e274be89fa50775592e,/lutris/Dockerfile,"# https://github.com/Winetricks/winetricks/releases
"
1291,12398918340f8fbace506e274be89fa50775592e,/lutris/Dockerfile,"# https://launchpad.net/~lutris-team/+archive/ubuntu/lutris?field.series_filter=focal
"
1292,12398918340f8fbace506e274be89fa50775592e,/lutris/Dockerfile,"# https://github.com/lutris/docs/blob/f2bf5ca14f280e3c58d2306581294d57650c0cc2/InstallingDrivers.md
"
1293,12398918340f8fbace506e274be89fa50775592e,/lutris/Dockerfile,"# gi.repository.GLib.Error: g-exec-error-quark: Failed to execute child process “dbus-launch” (No such file or directory) (8)
"
1294,12398918340f8fbace506e274be89fa50775592e,/lutris/Dockerfile,"# /lutris-home/games/battle.net/state-cache-merge/state-cache-update.sh: line 8: zenity: command not found
"
1295,a8b4e7c6af7aa16cda7e6e0dfb4bfc713ef4f534,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1296,a8b4e7c6af7aa16cda7e6e0dfb4bfc713ef4f534,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1297,a8b4e7c6af7aa16cda7e6e0dfb4bfc713ef4f534,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1298,a8b4e7c6af7aa16cda7e6e0dfb4bfc713ef4f534,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1299,a8b4e7c6af7aa16cda7e6e0dfb4bfc713ef4f534,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1300,26468c8cd5ecdc81baa889e3c54dd730ebc23f2e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1301,26468c8cd5ecdc81baa889e3c54dd730ebc23f2e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1302,26468c8cd5ecdc81baa889e3c54dd730ebc23f2e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1303,26468c8cd5ecdc81baa889e3c54dd730ebc23f2e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1304,26468c8cd5ecdc81baa889e3c54dd730ebc23f2e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1305,c905955f5b28f5c6face69f9035aa574a21b6b1b,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1306,c905955f5b28f5c6face69f9035aa574a21b6b1b,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1307,c905955f5b28f5c6face69f9035aa574a21b6b1b,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1308,c905955f5b28f5c6face69f9035aa574a21b6b1b,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1309,c905955f5b28f5c6face69f9035aa574a21b6b1b,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1310,f6125d69953bed3fd320fa49bcdff317b6e95fab,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1311,f6125d69953bed3fd320fa49bcdff317b6e95fab,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1312,f6125d69953bed3fd320fa49bcdff317b6e95fab,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
1313,f6125d69953bed3fd320fa49bcdff317b6e95fab,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
1314,f6125d69953bed3fd320fa49bcdff317b6e95fab,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
1315,4efcdd348d5127f3fbd5b1461178e0c30350ffb4,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1316,4efcdd348d5127f3fbd5b1461178e0c30350ffb4,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1317,4efcdd348d5127f3fbd5b1461178e0c30350ffb4,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
1318,4efcdd348d5127f3fbd5b1461178e0c30350ffb4,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
1319,4efcdd348d5127f3fbd5b1461178e0c30350ffb4,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
1320,934eba02391de1625776fc018e3f3594785b5338,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1321,934eba02391de1625776fc018e3f3594785b5338,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1322,934eba02391de1625776fc018e3f3594785b5338,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1323,934eba02391de1625776fc018e3f3594785b5338,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1324,934eba02391de1625776fc018e3f3594785b5338,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1325,a75cfd6bed935abfd4d32dba0411232dfca0edef,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1326,a75cfd6bed935abfd4d32dba0411232dfca0edef,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1327,a75cfd6bed935abfd4d32dba0411232dfca0edef,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1328,a75cfd6bed935abfd4d32dba0411232dfca0edef,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1329,a75cfd6bed935abfd4d32dba0411232dfca0edef,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1330,4d9c517ec39841881fc78f8f6f48ac7fe02110c0,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1331,4d9c517ec39841881fc78f8f6f48ac7fe02110c0,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1332,4d9c517ec39841881fc78f8f6f48ac7fe02110c0,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1333,4d9c517ec39841881fc78f8f6f48ac7fe02110c0,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1334,4d9c517ec39841881fc78f8f6f48ac7fe02110c0,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1335,e9ec0040550199abc96d2c200fa5a7de10da5ccd,/certbot/Dockerfile,"# Executable not found: can't find the executable for the dialog-like program
"
1336,e9ec0040550199abc96d2c200fa5a7de10da5ccd,/certbot/Dockerfile,"#VOLUME /etc/letsencrypt
"
1337,2bd92f887cdb18127e10c59127a79c6e3b9220d3,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1338,2bd92f887cdb18127e10c59127a79c6e3b9220d3,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1339,2bd92f887cdb18127e10c59127a79c6e3b9220d3,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1340,2bd92f887cdb18127e10c59127a79c6e3b9220d3,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1341,2bd92f887cdb18127e10c59127a79c6e3b9220d3,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1342,74d2a9551210730a9ff917eeb21b13a6135908a0,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1343,74d2a9551210730a9ff917eeb21b13a6135908a0,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1344,74d2a9551210730a9ff917eeb21b13a6135908a0,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
1345,74d2a9551210730a9ff917eeb21b13a6135908a0,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
1346,74d2a9551210730a9ff917eeb21b13a6135908a0,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
1347,a1b247701b449dd1b59db02e777c885544ee211f,/snapcraft/Dockerfile,"# based initially on https://hub.docker.com/r/didrocks/snapcraft/
"
1348,a1b247701b449dd1b59db02e777c885544ee211f,/snapcraft/Dockerfile,"# enable multiverse as snapcraft cleanbuild does
#RUN sed -i 's/ universe$/ universe multiverse/' /etc/apt/sources.list

# pin specific version so we can update with a natural cache bust
"
1349,f23ffcea2301eee73535559bd72eae9446e421cc,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1350,e565985d05f56f7d2485b540f8402d956f02b189,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1351,e565985d05f56f7d2485b540f8402d956f02b189,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1352,e565985d05f56f7d2485b540f8402d956f02b189,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
1353,e565985d05f56f7d2485b540f8402d956f02b189,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
1354,e565985d05f56f7d2485b540f8402d956f02b189,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
1355,aac36c16a42c5863e1e8b3a860eeffad7d2c2415,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1356,aac36c16a42c5863e1e8b3a860eeffad7d2c2415,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1357,aac36c16a42c5863e1e8b3a860eeffad7d2c2415,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1358,aac36c16a42c5863e1e8b3a860eeffad7d2c2415,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1359,aac36c16a42c5863e1e8b3a860eeffad7d2c2415,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1360,3e079d8e3b067246a6e249396d445cb33b5b76b1,/docker-tianon/Dockerfile,"# https://github.com/docker-library/docker/pull/166
#   dockerd-entrypoint.sh uses DOCKER_TLS_CERTDIR for auto-generating TLS certificates
#   docker-entrypoint.sh uses DOCKER_TLS_CERTDIR for auto-setting DOCKER_TLS_VERIFY and DOCKER_CERT_PATH
# (For this to work, at least the ""client"" subdirectory of this path needs to be shared between the client and server containers via a volume, ""docker cp"", or other means of data sharing.)
"
1361,3e079d8e3b067246a6e249396d445cb33b5b76b1,/docker-tianon/Dockerfile,"# also, ensure the directory pre-exists and has wide enough permissions for ""dockerd-entrypoint.sh"" to create subdirectories, even when run in ""rootless"" mode
"
1362,3e079d8e3b067246a6e249396d445cb33b5b76b1,/docker-tianon/Dockerfile,"# (doing both /certs and /certs/client so that if Docker does a ""copy-up"" into a volume defined on /certs/client, it will ""do the right thing"" by default in a way that still works for rootless users)

"
1363,3e079d8e3b067246a6e249396d445cb33b5b76b1,/docker-tianon/Dockerfile,"# dind

"
1364,3e079d8e3b067246a6e249396d445cb33b5b76b1,/docker-tianon/Dockerfile,"# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
"
1365,f948ed7b4378b3ea38fb2e0991b894ece6049a04,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1366,f948ed7b4378b3ea38fb2e0991b894ece6049a04,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1367,f948ed7b4378b3ea38fb2e0991b894ece6049a04,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1368,f948ed7b4378b3ea38fb2e0991b894ece6049a04,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1369,f948ed7b4378b3ea38fb2e0991b894ece6049a04,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1370,253f194b6d02e9bc1f4e2fb5d0eba667b31298ef,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1371,253f194b6d02e9bc1f4e2fb5d0eba667b31298ef,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1372,253f194b6d02e9bc1f4e2fb5d0eba667b31298ef,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
1373,253f194b6d02e9bc1f4e2fb5d0eba667b31298ef,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
1374,253f194b6d02e9bc1f4e2fb5d0eba667b31298ef,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
1375,677237d42725c5322e550e62c3bb1aa30567e596,/moosefs/Dockerfile,"# mfscli (and cgi) are Python-based
"
1376,677237d42725c5322e550e62c3bb1aa30567e596,/moosefs/Dockerfile,"# mfsmount needs ""fusermount""
"
1377,677237d42725c5322e550e62c3bb1aa30567e596,/moosefs/Dockerfile,"# allow running mfsmount as non-root
"
1378,677237d42725c5322e550e62c3bb1aa30567e596,/moosefs/Dockerfile,"#user_allow_other$/user_allow_other/' /etc/fuse.conf

"
1379,677237d42725c5322e550e62c3bb1aa30567e596,/moosefs/Dockerfile,"# https://github.com/moosefs/moosefs/releases
"
1380,677237d42725c5322e550e62c3bb1aa30567e596,/moosefs/Dockerfile,"# prep the default configuration so things generally work Out-of-the-Box
"
1381,677237d42725c5322e550e62c3bb1aa30567e596,/moosefs/Dockerfile,"# allow us to run as an arbitrary user but still modify configuration
"
1382,677237d42725c5322e550e62c3bb1aa30567e596,/moosefs/Dockerfile,"# prep a scratch space with appropriate permissions to be able to do quick prototyping Out-of-the-Box
"
1383,677237d42725c5322e550e62c3bb1aa30567e596,/moosefs/Dockerfile,"# without this, the Python-based mfscli ""-f"" flag refuses to use UTF-8 box-drawing characters
"
1384,d6ecc0ea0d171c1dd0ac795934d44adbd753af29,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1385,d6ecc0ea0d171c1dd0ac795934d44adbd753af29,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1386,d6ecc0ea0d171c1dd0ac795934d44adbd753af29,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1387,d6ecc0ea0d171c1dd0ac795934d44adbd753af29,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1388,d6ecc0ea0d171c1dd0ac795934d44adbd753af29,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1389,60685f6f59f8fe1302dc6b1e57a1260ba515cb25,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1390,60685f6f59f8fe1302dc6b1e57a1260ba515cb25,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1391,60685f6f59f8fe1302dc6b1e57a1260ba515cb25,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1392,60685f6f59f8fe1302dc6b1e57a1260ba515cb25,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1393,60685f6f59f8fe1302dc6b1e57a1260ba515cb25,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1394,2d73ca022b8eca61f70bf15fb489cb87edaed870,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1395,a91f66d7c0e5748dbb3b509c063e05abc192a89a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1396,a91f66d7c0e5748dbb3b509c063e05abc192a89a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1397,a91f66d7c0e5748dbb3b509c063e05abc192a89a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1398,a91f66d7c0e5748dbb3b509c063e05abc192a89a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1399,a91f66d7c0e5748dbb3b509c063e05abc192a89a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1400,735baed35ae870a803c62646e45e226d04592458,/skype/Dockerfile,"# see https://repo.skype.com

"
1401,735baed35ae870a803c62646e45e226d04592458,/skype/Dockerfile,"# wget is invoked by skypeforlinux for crash reports
"
1402,735baed35ae870a803c62646e45e226d04592458,/skype/Dockerfile,"# https://repo.skype.com/data/SKYPE-GPG-KEY
"
1403,735baed35ae870a803c62646e45e226d04592458,/skype/Dockerfile,"# pub   2048R/DF7587C3 2016-06-22 [expires: 2021-06-21]
#       Key fingerprint = D404 0146 BE39 7250 9FD5  7FC7 1F30 45A5 DF75 87C3
# uid                  Skype Linux Client Repository <se-um@microsoft.com>
# sub   2048R/A4EBB320 2016-06-22 [expires: 2021-06-21]
"
1404,da51a724f76485b9128248a54a71cd0a697fe945,/skype/Dockerfile,"# see https://repo.skype.com

"
1405,da51a724f76485b9128248a54a71cd0a697fe945,/skype/Dockerfile,"# https://repo.skype.com/data/SKYPE-GPG-KEY
"
1406,da51a724f76485b9128248a54a71cd0a697fe945,/skype/Dockerfile,"# pub   2048R/DF7587C3 2016-06-22 [expires: 2021-06-21]
#       Key fingerprint = D404 0146 BE39 7250 9FD5  7FC7 1F30 45A5 DF75 87C3
# uid                  Skype Linux Client Repository <se-um@microsoft.com>
# sub   2048R/A4EBB320 2016-06-22 [expires: 2021-06-21]
"
1407,c1610b96ffcea268495de6bc01aa9d72c59f9392,/pmbootstrap/Dockerfile,"# verify there are no errors/warnings
"
1408,c1610b96ffcea268495de6bc01aa9d72c59f9392,/pmbootstrap/Dockerfile,"# https://pypi.org/project/pmbootstrap/
"
1409,c1610b96ffcea268495de6bc01aa9d72c59f9392,/pmbootstrap/Dockerfile,"# workaround issues with transparent QEMU / binfmt detection (""fix binary"" -- qemu binaries not necessary inside chroots/namespaces)
"
1410,ca07519e374554a701ef3125d631ad146533453d,/tinygo/Dockerfile,"# the .deb (as of 0.6.0) installs to /usr/local/tinygo but doesn't add ""tinygo"" to PATH
"
1411,ca07519e374554a701ef3125d631ad146533453d,/tinygo/Dockerfile,"# https://tinygo.org/getting-started/linux/

# https://github.com/tinygo-org/tinygo/releases
"
1412,a3c058b8e920bd51565dedc5f70c95c1c3486589,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1413,a3c058b8e920bd51565dedc5f70c95c1c3486589,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1414,a3c058b8e920bd51565dedc5f70c95c1c3486589,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1415,a3c058b8e920bd51565dedc5f70c95c1c3486589,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1416,a3c058b8e920bd51565dedc5f70c95c1c3486589,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1417,4ae23bbe3303733453a4fb86777680e3c8242ae3,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1418,4ae23bbe3303733453a4fb86777680e3c8242ae3,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1419,4ae23bbe3303733453a4fb86777680e3c8242ae3,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1420,4ae23bbe3303733453a4fb86777680e3c8242ae3,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1421,4ae23bbe3303733453a4fb86777680e3c8242ae3,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1422,749122a0e9c07b6c93f42d7311b91fe08362818c,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1423,749122a0e9c07b6c93f42d7311b91fe08362818c,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1424,749122a0e9c07b6c93f42d7311b91fe08362818c,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1425,749122a0e9c07b6c93f42d7311b91fe08362818c,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1426,749122a0e9c07b6c93f42d7311b91fe08362818c,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1427,d9f3e1845bf001fe693bf22a9110e105857587bc,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1428,d9f3e1845bf001fe693bf22a9110e105857587bc,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1429,d9f3e1845bf001fe693bf22a9110e105857587bc,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1430,d9f3e1845bf001fe693bf22a9110e105857587bc,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1431,d9f3e1845bf001fe693bf22a9110e105857587bc,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1432,9890b1c255d4173b5f8f28a38d27ca2e8d1d317f,/nginx/Dockerfile,"# log to stderr
"
1433,9890b1c255d4173b5f8f28a38d27ca2e8d1d317f,/nginx/Dockerfile,"# prevent backgrounding (for Docker)\ndaemon off;' >> /etc/nginx/nginx.conf

"
1434,e74c8ea1009da8370b712995d3bab71a46b2d4c9,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1435,9cb7b2d4bbb6424c9c6b750539ad2a5206102fe5,/sbuild/Dockerfile,"# run with ""--cap-add SYS_ADMIN"" so that sbuild can ""mount"" in the chroots it creates

"
1436,9cb7b2d4bbb6424c9c6b750539ad2a5206102fe5,/sbuild/Dockerfile,"# usage: download-debuerreotype-tarball.sh suite [arch]
#    ie: download-debuerreotype-tarball.sh stretch
#        download-debuerreotype-tarball.sh sid i386
"
1437,1b951842deb6f544bb524f1f7fc63e84df27bef8,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1438,1b951842deb6f544bb524f1f7fc63e84df27bef8,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1439,1b951842deb6f544bb524f1f7fc63e84df27bef8,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1440,1b951842deb6f544bb524f1f7fc63e84df27bef8,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1441,1b951842deb6f544bb524f1f7fc63e84df27bef8,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1442,f3c6ec20fc57c797e01e014fc60346ad93f92ebf,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1443,f3c6ec20fc57c797e01e014fc60346ad93f92ebf,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1444,f3c6ec20fc57c797e01e014fc60346ad93f92ebf,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1445,f3c6ec20fc57c797e01e014fc60346ad93f92ebf,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1446,f3c6ec20fc57c797e01e014fc60346ad93f92ebf,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1447,3a6dbe6cca83ceb1a83a034644808c6a83397620,/xen-orchestra/Dockerfile,"# see https://xen-orchestra.com/docs/from_the_sources.html

"
1448,3a6dbe6cca83ceb1a83a034644808c6a83397620,/xen-orchestra/Dockerfile,"# https://github.com/nodejs/node-gyp/releases
"
1449,3a6dbe6cca83ceb1a83a034644808c6a83397620,/xen-orchestra/Dockerfile,"# https://github.com/vatesfr/xen-orchestra/releases
"
1450,3a6dbe6cca83ceb1a83a034644808c6a83397620,/xen-orchestra/Dockerfile,"#		-e ""s!#'/' = '/path/to/xo-web/dist/'!'/' = '../xo-web/dist/'!"" \
"
1451,3a6dbe6cca83ceb1a83a034644808c6a83397620,/xen-orchestra/Dockerfile,"#uri = 'redis://.*'!uri = 'redis://redis:6379'!"" \
"
1452,3a6dbe6cca83ceb1a83a034644808c6a83397620,/xen-orchestra/Dockerfile,"#' config.toml | grep '../xo-web/dist'; \
"
1453,dbf9c84e433a47065f96a477fc3c604cf0249edc,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1454,4ea7b3c829c9c80d63c8c119f2c07db5ed39f08f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1455,4ea7b3c829c9c80d63c8c119f2c07db5ed39f08f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1456,4ea7b3c829c9c80d63c8c119f2c07db5ed39f08f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1457,4ea7b3c829c9c80d63c8c119f2c07db5ed39f08f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1458,4ea7b3c829c9c80d63c8c119f2c07db5ed39f08f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1459,87472281c026a0a385ef20deb3f17a85b7d3a5b2,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1460,87472281c026a0a385ef20deb3f17a85b7d3a5b2,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1461,87472281c026a0a385ef20deb3f17a85b7d3a5b2,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1462,87472281c026a0a385ef20deb3f17a85b7d3a5b2,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1463,87472281c026a0a385ef20deb3f17a85b7d3a5b2,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1464,caacf34ed8debf3f064e1689376bb0969cc244f1,/debian/devel/Dockerfile,"# normal build deps
"
1465,caacf34ed8debf3f064e1689376bb0969cc244f1,/debian/devel/Dockerfile,"# need deb-src for compiling packages
"
1466,caacf34ed8debf3f064e1689376bb0969cc244f1,/debian/devel/Dockerfile,"# let's make apt list package versions, since those are handy during devel
"
1467,caacf34ed8debf3f064e1689376bb0969cc244f1,/debian/devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
1468,caacf34ed8debf3f064e1689376bb0969cc244f1,/debian/devel/Dockerfile,"# for ssh to debian hosts, let's make sure we know their fingerprints <3
"
1469,caacf34ed8debf3f064e1689376bb0969cc244f1,/debian/devel/Dockerfile,"# make sure things are pretty
"
1470,caacf34ed8debf3f064e1689376bb0969cc244f1,/debian/devel/Dockerfile,"#(force_color_prompt=yes)/\1/' ~/.bashrc

# quilt is much amaze: https://wiki.debian.org/UsingQuilt#Using_quilt_with_Debian_source_packages
"
1471,d20a2432d437ac12c3b2b17751389cd105b50630,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1472,9d198d06feba57cd6e67b7af4133601319291a0e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1473,9d198d06feba57cd6e67b7af4133601319291a0e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1474,9d198d06feba57cd6e67b7af4133601319291a0e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1475,9d198d06feba57cd6e67b7af4133601319291a0e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1476,9d198d06feba57cd6e67b7af4133601319291a0e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1477,77eeadedef24a4b73ea38c4a02474e4c053dfc45,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1478,77eeadedef24a4b73ea38c4a02474e4c053dfc45,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1479,77eeadedef24a4b73ea38c4a02474e4c053dfc45,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
1480,77eeadedef24a4b73ea38c4a02474e4c053dfc45,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
1481,77eeadedef24a4b73ea38c4a02474e4c053dfc45,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
1482,9e1e2bd1a1a53f67faa5004d25ced54c0bc570bf,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1483,9e1e2bd1a1a53f67faa5004d25ced54c0bc570bf,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1484,9e1e2bd1a1a53f67faa5004d25ced54c0bc570bf,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1485,9e1e2bd1a1a53f67faa5004d25ced54c0bc570bf,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1486,9e1e2bd1a1a53f67faa5004d25ced54c0bc570bf,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1487,0deb99e165bf1782e0c867d82bb4f63edf36f88b,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1488,0deb99e165bf1782e0c867d82bb4f63edf36f88b,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1489,0deb99e165bf1782e0c867d82bb4f63edf36f88b,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
1490,8cfd903d3f1ffc976206ff75dab4dbfcd5274ca4,/makemkv/Dockerfile,"# TODO find some way to include ccextractor (currently buster-only)

# FPL_MainFeature detection only seemed to work with OpenJDK 9 (8 was insufficient)
"
1491,8cfd903d3f1ffc976206ff75dab4dbfcd5274ca4,/makemkv/Dockerfile,"# This disc requires Java runtime (JRE), but none was found. Certain functions will fail, please install Java. See http://www.makemkv.com/bdjava/ for details.
"
1492,8cfd903d3f1ffc976206ff75dab4dbfcd5274ca4,/makemkv/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
1493,8cfd903d3f1ffc976206ff75dab4dbfcd5274ca4,/makemkv/Dockerfile,"# http://www.makemkv.com/forum2/viewtopic.php?f=3&t=224
"
1494,8cfd903d3f1ffc976206ff75dab4dbfcd5274ca4,/makemkv/Dockerfile,"# beta code: http://www.makemkv.com/forum2/viewtopic.php?f=5&t=1053
"
1495,8cfd903d3f1ffc976206ff75dab4dbfcd5274ca4,/makemkv/Dockerfile,"# pub   dsa2048 2017-05-26 [SC]
#       2ECF 2330 5F1F C0B3 2001  6733 94E3 083A 1804 2697
# uid           [ unknown] MakeMKV (signature) <support@makemkv.com>
"
1496,b19a350107d3f3ef78e8d27eef275120cda75ae0,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1497,b19a350107d3f3ef78e8d27eef275120cda75ae0,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1498,b19a350107d3f3ef78e8d27eef275120cda75ae0,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1499,b19a350107d3f3ef78e8d27eef275120cda75ae0,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1500,b19a350107d3f3ef78e8d27eef275120cda75ae0,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1501,272d594b8604170cc1d41f88fe6bf146f897054c,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1502,12828d1d6414926c328e6f0179b997092414b289,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1503,12828d1d6414926c328e6f0179b997092414b289,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1504,12828d1d6414926c328e6f0179b997092414b289,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1505,12828d1d6414926c328e6f0179b997092414b289,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1506,12828d1d6414926c328e6f0179b997092414b289,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1507,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/Dockerfile.template,"# much of this was gleaned from https://github.com/lxc/lxc/blob/lxc-0.8.0/templates/lxc-ubuntu.in

# we're going to want this bad boy installed so we can connect :)
"
1508,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/Dockerfile.template,"# undo some leet hax of the base image
"
1509,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/Dockerfile.template,"# generate a nice UTF-8 locale for our use
"
1510,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/Dockerfile.template,"# remove some pointless services
"
1511,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/Dockerfile.template,"# /lib/init/fstab: cleared out for bare-bones lxc' > /lib/init/fstab

# small fix for SSH in 13.10 (that's harmless everywhere else)
"
1512,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/Dockerfile.template,"# set a cheap, simple password for great convenience
"
1513,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/Dockerfile.template,"# we can has SSH
"
1514,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/Dockerfile.template,"# pepare for takeoff
"
1515,59fcb9b16ae36cda52fad94fed5b1bbdd586c6bc,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1516,41fba5a095a778acf05150e538b08246b9354f8f,/zoom/Dockerfile,"# ""sh: 1: pactl: not found""
"
1517,41fba5a095a778acf05150e538b08246b9354f8f,/zoom/Dockerfile,"# ""sh: 1: ps: not found""
"
1518,41fba5a095a778acf05150e538b08246b9354f8f,/zoom/Dockerfile,"# https://zoom.us/download#client_4meeting (""Debian"", ""64 bit"", ""8.0+"", ""Version X.Y.ZZZ.ZZZ"")
"
1519,41fba5a095a778acf05150e538b08246b9354f8f,/zoom/Dockerfile,"# curl -fsS --head 'https://zoom.us/client/latest/zoom_amd64.deb' | grep '^location: '

"
1520,41fba5a095a778acf05150e538b08246b9354f8f,/zoom/Dockerfile,"# ""zoom --version"", ""zoom --help"", etc don't seem to do anything useful
"
1521,41fba5a095a778acf05150e538b08246b9354f8f,/zoom/Dockerfile,"# TODO copy/steal ""browser.sh"" stuff from slack

"
1522,d56d574b705cbbb580621753c94d4039eb15dcef,/moosefs/Dockerfile,"# mfscli (and cgi) are Python-based
"
1523,d56d574b705cbbb580621753c94d4039eb15dcef,/moosefs/Dockerfile,"# mfsmount needs ""fusermount""
"
1524,d56d574b705cbbb580621753c94d4039eb15dcef,/moosefs/Dockerfile,"# allow running mfsmount as non-root
"
1525,d56d574b705cbbb580621753c94d4039eb15dcef,/moosefs/Dockerfile,"#user_allow_other$/user_allow_other/' /etc/fuse.conf

"
1526,d56d574b705cbbb580621753c94d4039eb15dcef,/moosefs/Dockerfile,"# https://github.com/moosefs/moosefs/releases
"
1527,d56d574b705cbbb580621753c94d4039eb15dcef,/moosefs/Dockerfile,"# prep the default configuration so things generally work Out-of-the-Box
"
1528,d56d574b705cbbb580621753c94d4039eb15dcef,/moosefs/Dockerfile,"# allow us to run as an arbitrary user but still modify configuration
"
1529,d56d574b705cbbb580621753c94d4039eb15dcef,/moosefs/Dockerfile,"# prep a scratch space with appropriate permissions to be able to do quick prototyping Out-of-the-Box
"
1530,d56d574b705cbbb580621753c94d4039eb15dcef,/moosefs/Dockerfile,"# without this, the Python-based mfscli ""-f"" flag refuses to use UTF-8 box-drawing characters
"
1531,eec8f53582d1f1a71d3f56ed4788398653d8d6de,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1532,eec8f53582d1f1a71d3f56ed4788398653d8d6de,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1533,eec8f53582d1f1a71d3f56ed4788398653d8d6de,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
1534,eec8f53582d1f1a71d3f56ed4788398653d8d6de,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
1535,eec8f53582d1f1a71d3f56ed4788398653d8d6de,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
1536,e2628dcb25d55b09d95d370757c4d29cdd9df1ed,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
1537,e2628dcb25d55b09d95d370757c4d29cdd9df1ed,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
1538,e2628dcb25d55b09d95d370757c4d29cdd9df1ed,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
1539,3e2f8ba0f33c19774fd149d5e63ec07236962394,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1540,3e2f8ba0f33c19774fd149d5e63ec07236962394,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1541,3e2f8ba0f33c19774fd149d5e63ec07236962394,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
1542,3e2f8ba0f33c19774fd149d5e63ec07236962394,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
1543,3e2f8ba0f33c19774fd149d5e63ec07236962394,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
1544,e920c897b549a956e573ec9c5015b07ee75925af,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1545,e920c897b549a956e573ec9c5015b07ee75925af,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1546,e920c897b549a956e573ec9c5015b07ee75925af,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
1547,51dac88bc99de9e5b58a5f5bc06b3dfba7e366ee,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
1548,51dac88bc99de9e5b58a5f5bc06b3dfba7e366ee,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
1549,51dac88bc99de9e5b58a5f5bc06b3dfba7e366ee,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
1550,76a9c408c02fc3bd472a09012dfe0d0412cc1966,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1551,24de6b95d63b5321830cf9e5fd8ea91d3bcd3647,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1552,24de6b95d63b5321830cf9e5fd8ea91d3bcd3647,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1553,24de6b95d63b5321830cf9e5fd8ea91d3bcd3647,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1554,24de6b95d63b5321830cf9e5fd8ea91d3bcd3647,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1555,24de6b95d63b5321830cf9e5fd8ea91d3bcd3647,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1556,52808176d508ba2566bb6874a006b77e61130e4f,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1557,bf4448d17e2db5e49f792fc89a720555ed9e1963,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1558,bf4448d17e2db5e49f792fc89a720555ed9e1963,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1559,bf4448d17e2db5e49f792fc89a720555ed9e1963,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1560,bf4448d17e2db5e49f792fc89a720555ed9e1963,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1561,bf4448d17e2db5e49f792fc89a720555ed9e1963,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1562,6cc033b181d3d3491e7fae1244c8dfd38c3f01eb,/debian/devel/Dockerfile,"# normal build deps
"
1563,6cc033b181d3d3491e7fae1244c8dfd38c3f01eb,/debian/devel/Dockerfile,"# need an editor for ""dch -i""
"
1564,6cc033b181d3d3491e7fae1244c8dfd38c3f01eb,/debian/devel/Dockerfile,"# a few extra little useful things
"
1565,6cc033b181d3d3491e7fae1244c8dfd38c3f01eb,/debian/devel/Dockerfile,"# need deb-src for compiling packages
"
1566,6cc033b181d3d3491e7fae1244c8dfd38c3f01eb,/debian/devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
1567,6cc033b181d3d3491e7fae1244c8dfd38c3f01eb,/debian/devel/Dockerfile,"# for ssh to debian hosts, let's make sure we know their fingerprints <3
"
1568,6cc033b181d3d3491e7fae1244c8dfd38c3f01eb,/debian/devel/Dockerfile,"# make sure things are pretty
"
1569,6cc033b181d3d3491e7fae1244c8dfd38c3f01eb,/debian/devel/Dockerfile,"#(force_color_prompt=yes)/\1/' /root/.bashrc

# quilt is much amaze: https://wiki.debian.org/UsingQuilt#Using_quilt_with_Debian_source_packages
"
1570,7bb7b72637a7c79aefe7e93ba98bb3f1fdeeaeeb,/slack/Dockerfile,"# the .deb file linked at https://slack.com/downloads/instructions/debian includes ""/etc/cron.daily/slack"" which sets up an APT repo entry as in the following installation

# pub   rsa4096 2016-02-18 [SCEA]
#       DB08 5A08 CA13 B8AC B917  E0F6 D938 EC0D 0386 51BD
# uid           [ unknown] https://packagecloud.io/slacktechnologies/slack (https://packagecloud.io/docs#gpg_signing) <support@packagecloud.io>
# sub   rsa4096 2016-02-18 [SEA]
"
1571,7bb7b72637a7c79aefe7e93ba98bb3f1fdeeaeeb,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libX11-xcb.so.1: cannot open shared object file: No such file or directory
"
1572,7bb7b72637a7c79aefe7e93ba98bb3f1fdeeaeeb,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libasound.so.2: cannot open shared object file: No such file or directory
"
1573,7bb7b72637a7c79aefe7e93ba98bb3f1fdeeaeeb,/slack/Dockerfile,"# 3.3.3: slack: error while loading shared libraries: libgtk-3.so.0: cannot open shared object file: No such file or directory
"
1574,2703dbc14dc0e66d08cb5ab8add7c2ca148d0d67,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1575,05c7e428dc8fcba8fe41596b27f3e8c6fb9a2d38,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1576,05c7e428dc8fcba8fe41596b27f3e8c6fb9a2d38,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1577,05c7e428dc8fcba8fe41596b27f3e8c6fb9a2d38,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1578,05c7e428dc8fcba8fe41596b27f3e8c6fb9a2d38,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1579,05c7e428dc8fcba8fe41596b27f3e8c6fb9a2d38,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1580,5b3517ce2c96d889e7dff7459b4c687d87134a41,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1581,5b3517ce2c96d889e7dff7459b4c687d87134a41,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1582,5b3517ce2c96d889e7dff7459b4c687d87134a41,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1583,5b3517ce2c96d889e7dff7459b4c687d87134a41,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1584,5b3517ce2c96d889e7dff7459b4c687d87134a41,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1585,b75f19d02df461f58160fc11827bfc4615e4f347,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1586,b75f19d02df461f58160fc11827bfc4615e4f347,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1587,b75f19d02df461f58160fc11827bfc4615e4f347,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1588,b75f19d02df461f58160fc11827bfc4615e4f347,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1589,b75f19d02df461f58160fc11827bfc4615e4f347,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1590,13546197ee3addc341ecbd8e26b3f9eb32a4af74,/ymlfmt/Dockerfile,"# https://pypi.org/project/ruamel.yaml/
"
1591,ae401714a4566dc52493ea14474ac60b49890cb2,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1592,ae401714a4566dc52493ea14474ac60b49890cb2,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1593,ae401714a4566dc52493ea14474ac60b49890cb2,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
1594,0cbcd9ce34cce9552175eebdbc7677222aec7fe7,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1595,0cbcd9ce34cce9552175eebdbc7677222aec7fe7,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1596,0cbcd9ce34cce9552175eebdbc7677222aec7fe7,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1597,0cbcd9ce34cce9552175eebdbc7677222aec7fe7,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1598,0cbcd9ce34cce9552175eebdbc7677222aec7fe7,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1599,695ec019b67c54d02cd500c426633db5997c8343,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1600,695ec019b67c54d02cd500c426633db5997c8343,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1601,695ec019b67c54d02cd500c426633db5997c8343,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1602,695ec019b67c54d02cd500c426633db5997c8343,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1603,695ec019b67c54d02cd500c426633db5997c8343,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1604,e360c927749a484748c5a7927b6be8a283fb882c,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1605,e360c927749a484748c5a7927b6be8a283fb882c,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1606,e360c927749a484748c5a7927b6be8a283fb882c,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1607,e360c927749a484748c5a7927b6be8a283fb882c,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1608,e360c927749a484748c5a7927b6be8a283fb882c,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1609,5aff70d0cb645e8789824d804c01758720afbb6d,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1610,5aff70d0cb645e8789824d804c01758720afbb6d,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1611,5aff70d0cb645e8789824d804c01758720afbb6d,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1612,5aff70d0cb645e8789824d804c01758720afbb6d,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1613,5aff70d0cb645e8789824d804c01758720afbb6d,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1614,41c19b7694d0dad143c4100d92f2a0828dd6d8bf,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1615,41c19b7694d0dad143c4100d92f2a0828dd6d8bf,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1616,41c19b7694d0dad143c4100d92f2a0828dd6d8bf,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1617,41c19b7694d0dad143c4100d92f2a0828dd6d8bf,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1618,41c19b7694d0dad143c4100d92f2a0828dd6d8bf,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1619,c7b6a988419f4c5ea507a81d550422a43e0bdc90,/golang/Dockerfile,"# necessary for building Go
"
1620,c7b6a988419f4c5ea507a81d550422a43e0bdc90,/golang/Dockerfile,"# these are useful for ""go get""
"
1621,c7b6a988419f4c5ea507a81d550422a43e0bdc90,/golang/Dockerfile,"# (set an explicit GOARM of 5 for maximum ARM compatibility)
"
1622,c7b6a988419f4c5ea507a81d550422a43e0bdc90,/golang/Dockerfile,"##*/} \
"
1623,c7b6a988419f4c5ea507a81d550422a43e0bdc90,/golang/Dockerfile,"/*} \
			GOARCH=${platform##*/"
1624,b17ad0ffbbbff617457eb65f76ef413d43f1020a,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1625,24c5c9e585ff82e43227c4b79c8b04d144f3dc70,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
#RUN ln -s /bin/true /usr/local/bin/start

"
1626,24c5c9e585ff82e43227c4b79c8b04d144f3dc70,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
1627,24c5c9e585ff82e43227c4b79c8b04d144f3dc70,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
1628,37b6c7cc715b3f1eaa519942c5f0492c905ba73f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1629,37b6c7cc715b3f1eaa519942c5f0492c905ba73f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1630,37b6c7cc715b3f1eaa519942c5f0492c905ba73f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1631,37b6c7cc715b3f1eaa519942c5f0492c905ba73f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1632,37b6c7cc715b3f1eaa519942c5f0492c905ba73f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1633,2b77e43bace95c060b625a4dd6fea2f442f97491,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
1634,2b77e43bace95c060b625a4dd6fea2f442f97491,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
1635,2b77e43bace95c060b625a4dd6fea2f442f97491,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
1636,261ccf39cb46bde9e637ea256b11a88ca3f1acc7,/golang/Dockerfile,"# (set an explicit GOARM of 5 for maximum ARM compatibility)
"
1637,261ccf39cb46bde9e637ea256b11a88ca3f1acc7,/golang/Dockerfile,"##*/} \
"
1638,261ccf39cb46bde9e637ea256b11a88ca3f1acc7,/golang/Dockerfile,"/*} \
			GOARCH=${platform##*/"
1639,6b766e7bb42df288668b2d7e4ac13d5bcf04edff,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1640,6b766e7bb42df288668b2d7e4ac13d5bcf04edff,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1641,6b766e7bb42df288668b2d7e4ac13d5bcf04edff,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1642,6b766e7bb42df288668b2d7e4ac13d5bcf04edff,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1643,6b766e7bb42df288668b2d7e4ac13d5bcf04edff,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1644,992fa69529a254e29d155046c5f9c7f96edff2ed,/sbuild/Dockerfile,"# run with ""--cap-add SYS_ADMIN"" so that sbuild can ""mount"" in the chroots it creates

"
1645,992fa69529a254e29d155046c5f9c7f96edff2ed,/sbuild/Dockerfile,"# https://gist.github.com/tianon/a0080cbca558e4b907fe
# (useful sbuild-related scripts)
"
1646,992fa69529a254e29d155046c5f9c7f96edff2ed,/sbuild/Dockerfile,"# usage: download-debuerreotype-tarball.sh suite [arch]
#    ie: download-debuerreotype-tarball.sh stretch
#        download-debuerreotype-tarball.sh sid i386
"
1647,be4c125ca28e5689238656baf77b1cbedca94fdf,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1648,be4c125ca28e5689238656baf77b1cbedca94fdf,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1649,be4c125ca28e5689238656baf77b1cbedca94fdf,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
1650,be4c125ca28e5689238656baf77b1cbedca94fdf,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
1651,be4c125ca28e5689238656baf77b1cbedca94fdf,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
1652,1909a8cf238ac70d1200c5866d3668b94cae65f3,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1653,1909a8cf238ac70d1200c5866d3668b94cae65f3,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1654,1909a8cf238ac70d1200c5866d3668b94cae65f3,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
1655,1909a8cf238ac70d1200c5866d3668b94cae65f3,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
1656,1909a8cf238ac70d1200c5866d3668b94cae65f3,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
1657,0ad2e9c84f9e1bdee76acb14e70a3a9aa737469e,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1658,b1a7a4e73b6f68e78b0ec696679ac22a91266914,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1659,b1a7a4e73b6f68e78b0ec696679ac22a91266914,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1660,b1a7a4e73b6f68e78b0ec696679ac22a91266914,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1661,b1a7a4e73b6f68e78b0ec696679ac22a91266914,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1662,b1a7a4e73b6f68e78b0ec696679ac22a91266914,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1663,1bb5397f1e3898f13778646ca2dcf3ada2e2e998,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1664,1bb5397f1e3898f13778646ca2dcf3ada2e2e998,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1665,1bb5397f1e3898f13778646ca2dcf3ada2e2e998,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1666,1bb5397f1e3898f13778646ca2dcf3ada2e2e998,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1667,1bb5397f1e3898f13778646ca2dcf3ada2e2e998,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1668,ef70405d700537227c3c2cf0f9176b49a1e461bd,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1669,ef70405d700537227c3c2cf0f9176b49a1e461bd,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1670,ef70405d700537227c3c2cf0f9176b49a1e461bd,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1671,ef70405d700537227c3c2cf0f9176b49a1e461bd,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1672,ef70405d700537227c3c2cf0f9176b49a1e461bd,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1673,5d185b3d49bacb65687cfd6c1dee8876c969ee65,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1674,5d185b3d49bacb65687cfd6c1dee8876c969ee65,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1675,5d185b3d49bacb65687cfd6c1dee8876c969ee65,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
1676,31979a9190b03db5f3dfda253606bed5bc72112d,/network-toolbox/debian/Dockerfile,"# dangit, wireshark-common!  *shakes fist*
"
1677,a17ee588759f9e4b1f8d5ae3738bdc4e727c034f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1678,a17ee588759f9e4b1f8d5ae3738bdc4e727c034f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1679,a17ee588759f9e4b1f8d5ae3738bdc4e727c034f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1680,a17ee588759f9e4b1f8d5ae3738bdc4e727c034f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1681,a17ee588759f9e4b1f8d5ae3738bdc4e727c034f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1682,81e671f8fa6a91e8307e85986c671eea4eaa5526,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1683,925a58ac6c87d8dd3563de2ca3e1c18766138aa8,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1684,2c000404ff4a156dd605e7f181bf29ede4497e97,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1685,a70ede264ffc4669ed9b6e98cbafbd1e03632724,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1686,886e49df722252ac90b5f93d088572c8883496d3,/diffoscope/Dockerfile,"# xxd (xxd not available in path. Falling back to Python hexlify.)
"
1687,886e49df722252ac90b5f93d088572c8883496d3,/diffoscope/Dockerfile,"# readelf ('readelf' not available in path. Falling back to binary comparison.)
"
1688,886e49df722252ac90b5f93d088572c8883496d3,/diffoscope/Dockerfile,"# for ""diffoscope --progress""
"
1689,82cf7f2e8c91078e8753a001f4a9070477c553e0,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1690,82cf7f2e8c91078e8753a001f4a9070477c553e0,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1691,82cf7f2e8c91078e8753a001f4a9070477c553e0,/jenkins/Dockerfile,"# https://groups.google.com/d/msg/jenkins-infra/c7m_72vUTXE/37zw9GXhAQAJ
"
1692,82cf7f2e8c91078e8753a001f4a9070477c553e0,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
1693,2a5315e918969728fd1ef37045ce0843b7851442,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1694,2a5315e918969728fd1ef37045ce0843b7851442,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1695,f17df5b0831ff3153514a07a6a580280517c7f9b,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1696,f17df5b0831ff3153514a07a6a580280517c7f9b,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1697,f17df5b0831ff3153514a07a6a580280517c7f9b,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
1698,f17df5b0831ff3153514a07a6a580280517c7f9b,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
1699,f17df5b0831ff3153514a07a6a580280517c7f9b,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
1700,f6e3e2b833e6ba59cb9b6a94be1732efba9cebf4,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1701,f6e3e2b833e6ba59cb9b6a94be1732efba9cebf4,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1702,f6e3e2b833e6ba59cb9b6a94be1732efba9cebf4,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1703,f6e3e2b833e6ba59cb9b6a94be1732efba9cebf4,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1704,f6e3e2b833e6ba59cb9b6a94be1732efba9cebf4,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1705,d2fd33831e7a2d1c2fc968a57e46627da5b151a7,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1706,c1610b96ffcea268495de6bc01aa9d72c59f9392,/github-pages/Dockerfile,"# https://pages.github.com/versions/
"
1707,01d88c0867048d6304bd672abc2ed5c066c1eda7,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1708,01d88c0867048d6304bd672abc2ed5c066c1eda7,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1709,01d88c0867048d6304bd672abc2ed5c066c1eda7,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1710,01d88c0867048d6304bd672abc2ed5c066c1eda7,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1711,01d88c0867048d6304bd672abc2ed5c066c1eda7,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1712,b3ec7b06a7cc501e975eb8ceaced2c7e45c59175,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1713,b3ec7b06a7cc501e975eb8ceaced2c7e45c59175,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1714,b3ec7b06a7cc501e975eb8ceaced2c7e45c59175,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1715,b3ec7b06a7cc501e975eb8ceaced2c7e45c59175,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1716,b3ec7b06a7cc501e975eb8ceaced2c7e45c59175,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1717,34d85fed6573d27093ce9279d341ced4b892fb0f,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
1718,1358d42b71f0c41a2e0b54f7db4261edb5ba87b7,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1719,5cbbf847fe07a7d9aa80d912ad59311920ec89fd,/qemu/Dockerfile,"#		qemu-system \
#		qemu-utils \
"
1720,5cbbf847fe07a7d9aa80d912ad59311920ec89fd,/qemu/Dockerfile,"# https://www.qemu.org/download/#source
"
1721,5cbbf847fe07a7d9aa80d912ad59311920ec89fd,/qemu/Dockerfile,"# TODO verify signature
"
1722,5cbbf847fe07a7d9aa80d912ad59311920ec89fd,/qemu/Dockerfile,"# system targets
# (https://sources.debian.org/src/qemu/stretch/debian/rules/#L57-L61, slimmed)
"
1723,5cbbf847fe07a7d9aa80d912ad59311920ec89fd,/qemu/Dockerfile,"# user targets
# (https://sources.debian.org/src/qemu/stretch/debian/rules/#L81-L86, slimmed)
"
1724,5cbbf847fe07a7d9aa80d912ad59311920ec89fd,/qemu/Dockerfile,"#		--enable-rbd \
#		--enable-vde \
"
1725,ae401714a4566dc52493ea14474ac60b49890cb2,/moosefs/Dockerfile,"# mfscli (and cgi) are Python-based
"
1726,ae401714a4566dc52493ea14474ac60b49890cb2,/moosefs/Dockerfile,"# mfsmount needs ""fusermount""
"
1727,ae401714a4566dc52493ea14474ac60b49890cb2,/moosefs/Dockerfile,"# allow running mfsmount as non-root
"
1728,ae401714a4566dc52493ea14474ac60b49890cb2,/moosefs/Dockerfile,"#user_allow_other$/user_allow_other/' /etc/fuse.conf

"
1729,ae401714a4566dc52493ea14474ac60b49890cb2,/moosefs/Dockerfile,"# https://github.com/moosefs/moosefs/releases
"
1730,ae401714a4566dc52493ea14474ac60b49890cb2,/moosefs/Dockerfile,"# prep the default configuration so things generally work Out-of-the-Box
"
1731,ae401714a4566dc52493ea14474ac60b49890cb2,/moosefs/Dockerfile,"# allow us to run as an arbitrary user but still modify configuration
"
1732,ae401714a4566dc52493ea14474ac60b49890cb2,/moosefs/Dockerfile,"# prep a scratch space with appropriate permissions to be able to do quick prototyping Out-of-the-Box
"
1733,ae401714a4566dc52493ea14474ac60b49890cb2,/moosefs/Dockerfile,"# without this, the Python-based mfscli ""-f"" flag refuses to use UTF-8 box-drawing characters
"
1734,07205529ddc5b277a08493ee635816d44510aa55,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1735,07205529ddc5b277a08493ee635816d44510aa55,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1736,07205529ddc5b277a08493ee635816d44510aa55,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1737,07205529ddc5b277a08493ee635816d44510aa55,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1738,07205529ddc5b277a08493ee635816d44510aa55,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1739,bf73c530da22ad7985bbf9ade5d23be68a903fbb,/nginx/Dockerfile,"# log to stderr
"
1740,bf73c530da22ad7985bbf9ade5d23be68a903fbb,/nginx/Dockerfile,"# prevent backgrounding (for Docker)\ndaemon off;' >> /etc/nginx/nginx.conf

"
1741,804e2037e0ee901cd7b02d88534cbd57c96f6467,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1742,804e2037e0ee901cd7b02d88534cbd57c96f6467,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1743,804e2037e0ee901cd7b02d88534cbd57c96f6467,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1744,804e2037e0ee901cd7b02d88534cbd57c96f6467,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1745,804e2037e0ee901cd7b02d88534cbd57c96f6467,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1746,b53061db9705867cb331fbef691fd3f3b04b0e87,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1747,78a0d3bd7e4171bc6ce4c89820f1ce2004721e46,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1748,78a0d3bd7e4171bc6ce4c89820f1ce2004721e46,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1749,78a0d3bd7e4171bc6ce4c89820f1ce2004721e46,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1750,78a0d3bd7e4171bc6ce4c89820f1ce2004721e46,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1751,78a0d3bd7e4171bc6ce4c89820f1ce2004721e46,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1752,87b99df183f09b842b49ea7009ba7b6e2c1894f2,/xen-orchestra/Dockerfile,"# see https://github.com/vatesfr/xo/blob/master/installation.md

"
1753,87b99df183f09b842b49ea7009ba7b6e2c1894f2,/xen-orchestra/Dockerfile,"#RUN cd /xo/xo-server/public/http && for e in ../../../xo-web/public/*; do ln -s ""$e""; done

# TODO use links to get a redis server/database instead (since that's where configuration actually goes)
"
1754,87b99df183f09b842b49ea7009ba7b6e2c1894f2,/xen-orchestra/Dockerfile,"# TODO see note above about redis
"
1755,a921bed6fb812af75af4e3c5880e144bb8b7e3e9,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1756,a921bed6fb812af75af4e3c5880e144bb8b7e3e9,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1757,a921bed6fb812af75af4e3c5880e144bb8b7e3e9,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1758,a921bed6fb812af75af4e3c5880e144bb8b7e3e9,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1759,a921bed6fb812af75af4e3c5880e144bb8b7e3e9,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1760,2da87b48edc80e48f4809074078cf5efd8f96574,/exim4/Dockerfile,"# grab tini for signal processing and zombie killing
"
1761,7db83497c9fa5b74c2feab34b8c6acd36ed1b985,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1762,7db83497c9fa5b74c2feab34b8c6acd36ed1b985,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1763,7db83497c9fa5b74c2feab34b8c6acd36ed1b985,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1764,7db83497c9fa5b74c2feab34b8c6acd36ed1b985,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1765,7db83497c9fa5b74c2feab34b8c6acd36ed1b985,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1766,252f46333b555df80a9e07e9594d02e797765ef0,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1767,252f46333b555df80a9e07e9594d02e797765ef0,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1768,252f46333b555df80a9e07e9594d02e797765ef0,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
1769,252f46333b555df80a9e07e9594d02e797765ef0,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
1770,252f46333b555df80a9e07e9594d02e797765ef0,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
1771,1de8967ec5c45b7c9476538a965096b44fe12648,/snapcraft/Dockerfile,"# based initially on https://hub.docker.com/r/didrocks/snapcraft/
"
1772,1de8967ec5c45b7c9476538a965096b44fe12648,/snapcraft/Dockerfile,"# enable multiverse as snapcraft cleanbuild does
"
1773,1de8967ec5c45b7c9476538a965096b44fe12648,/snapcraft/Dockerfile,"# pin specific version so we can update with a natural cache bust
"
1774,4ca4da293c9e22c191bfc7b7aad8f95f65f4878a,/makemkv/Dockerfile,"# This disc requires Java runtime (JRE), but none was found. Certain functions will fail, please install Java. See http://www.makemkv.com/bdjava/ for details.
"
1775,4ca4da293c9e22c191bfc7b7aad8f95f65f4878a,/makemkv/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
1776,4ca4da293c9e22c191bfc7b7aad8f95f65f4878a,/makemkv/Dockerfile,"# http://www.makemkv.com/forum2/viewtopic.php?f=3&t=224
"
1777,4ca4da293c9e22c191bfc7b7aad8f95f65f4878a,/makemkv/Dockerfile,"# beta code: http://www.makemkv.com/forum2/viewtopic.php?f=5&t=1053
"
1778,4ca4da293c9e22c191bfc7b7aad8f95f65f4878a,/makemkv/Dockerfile,"# pub   dsa2048 2017-05-26 [SC]
#       2ECF 2330 5F1F C0B3 2001  6733 94E3 083A 1804 2697
# uid           [ unknown] MakeMKV (signature) <support@makemkv.com>
"
1779,07d936bb28499e01849651d60792c4f7e20d9218,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1780,07d936bb28499e01849651d60792c4f7e20d9218,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1781,07d936bb28499e01849651d60792c4f7e20d9218,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1782,07d936bb28499e01849651d60792c4f7e20d9218,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1783,07d936bb28499e01849651d60792c4f7e20d9218,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1784,09313983bde2851d9fcab6b9f9dd5868cb64658d,/robomongo/Dockerfile,"# install dependencies...
"
1785,54e911533738466549c02f164118ba5ad063a20a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1786,54e911533738466549c02f164118ba5ad063a20a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1787,54e911533738466549c02f164118ba5ad063a20a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1788,54e911533738466549c02f164118ba5ad063a20a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1789,54e911533738466549c02f164118ba5ad063a20a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1790,2117bb81c9756041a68935346ed679d3741cfe98,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1791,2117bb81c9756041a68935346ed679d3741cfe98,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1792,2117bb81c9756041a68935346ed679d3741cfe98,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1793,2117bb81c9756041a68935346ed679d3741cfe98,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1794,2117bb81c9756041a68935346ed679d3741cfe98,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1795,dc2aac00c92b56ff4e00eb832260daca8ac80161,/docker-master/dind/Dockerfile,"# https://github.com/docker/docker/blob/master/project/PACKAGERS.md#runtime-dependencies
"
1796,dc2aac00c92b56ff4e00eb832260daca8ac80161,/docker-master/dind/Dockerfile,"# pigz: https://github.com/moby/moby/pull/35697 (faster gzip implementation)
"
1797,dc2aac00c92b56ff4e00eb832260daca8ac80161,/docker-master/dind/Dockerfile,"# only install zfs if it's available for the current architecture
# https://git.alpinelinux.org/cgit/aports/tree/main/zfs/APKBUILD?h=3.6-stable#n9 (""all !armhf !ppc64le"" as of 2017-11-01)
# ""apk info XYZ"" exits with a zero exit code but no output when the package exists but not for this arch
"
1798,dc2aac00c92b56ff4e00eb832260daca8ac80161,/docker-master/dind/Dockerfile,"# TODO aufs-tools

# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
"
1799,dc2aac00c92b56ff4e00eb832260daca8ac80161,/docker-master/dind/Dockerfile,"# https://github.com/docker/docker/tree/master/hack/dind
"
1800,33ab463fbc95c2cec0f8201be8d05003f88ce408,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1801,33ab463fbc95c2cec0f8201be8d05003f88ce408,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1802,33ab463fbc95c2cec0f8201be8d05003f88ce408,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1803,33ab463fbc95c2cec0f8201be8d05003f88ce408,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1804,33ab463fbc95c2cec0f8201be8d05003f88ce408,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1805,99bdc8b0f1c1fdb7b71e4554ac7fa8de6d79fc50,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1806,cb1718ea9769ae69a41d6cad797adae015bea041,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1807,53df9636d04fdd3ff5b42da27bd65706f4e2b8a8,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1808,53df9636d04fdd3ff5b42da27bd65706f4e2b8a8,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1809,53df9636d04fdd3ff5b42da27bd65706f4e2b8a8,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
1810,53df9636d04fdd3ff5b42da27bd65706f4e2b8a8,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
1811,53df9636d04fdd3ff5b42da27bd65706f4e2b8a8,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
1812,015622ad7a4ce3c51e1073da428394233cf4552a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1813,015622ad7a4ce3c51e1073da428394233cf4552a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1814,015622ad7a4ce3c51e1073da428394233cf4552a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1815,015622ad7a4ce3c51e1073da428394233cf4552a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1816,015622ad7a4ce3c51e1073da428394233cf4552a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1817,e79b8173749dada58032eacc3b25fb0d4a0681ca,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1818,e79b8173749dada58032eacc3b25fb0d4a0681ca,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1819,e79b8173749dada58032eacc3b25fb0d4a0681ca,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1820,e79b8173749dada58032eacc3b25fb0d4a0681ca,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1821,e79b8173749dada58032eacc3b25fb0d4a0681ca,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1822,d4691a03a87a6e2da4208816e138b62fb24bd7c0,/github-pages/Dockerfile,"# https://pages.github.com/versions/
"
1823,b2ba2cfca15c161981afdb758ca24ca43fc5dfb6,/debian/devel/Dockerfile,"# normal build deps
"
1824,b2ba2cfca15c161981afdb758ca24ca43fc5dfb6,/debian/devel/Dockerfile,"# need deb-src for compiling packages
"
1825,b2ba2cfca15c161981afdb758ca24ca43fc5dfb6,/debian/devel/Dockerfile,"# let's make apt list package versions, since those are handy during devel
"
1826,b2ba2cfca15c161981afdb758ca24ca43fc5dfb6,/debian/devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
1827,b2ba2cfca15c161981afdb758ca24ca43fc5dfb6,/debian/devel/Dockerfile,"# for ssh to debian hosts, let's make sure we know their fingerprints <3
"
1828,b2ba2cfca15c161981afdb758ca24ca43fc5dfb6,/debian/devel/Dockerfile,"# make sure things are pretty
"
1829,b2ba2cfca15c161981afdb758ca24ca43fc5dfb6,/debian/devel/Dockerfile,"#(force_color_prompt=yes)/\1/' ~/.bashrc

# quilt is much amaze: https://wiki.debian.org/UsingQuilt#Using_quilt_with_Debian_source_packages
"
1830,6b263a77c9af9f0d70369efabed9b62b669201a9,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1831,6b263a77c9af9f0d70369efabed9b62b669201a9,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1832,6b263a77c9af9f0d70369efabed9b62b669201a9,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1833,6b263a77c9af9f0d70369efabed9b62b669201a9,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1834,6b263a77c9af9f0d70369efabed9b62b669201a9,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1835,88ab2843f0e264a2610f2324b3bce8519df3f4e3,/tinygo/Dockerfile,"# the .deb (as of 0.6.0) installs to /usr/local/tinygo but doesn't add ""tinygo"" to PATH
"
1836,88ab2843f0e264a2610f2324b3bce8519df3f4e3,/tinygo/Dockerfile,"# https://tinygo.org/getting-started/linux/

# https://github.com/tinygo-org/tinygo/releases
"
1837,713a90532f8348d9503a2232fede63d376f3c9c9,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1838,713a90532f8348d9503a2232fede63d376f3c9c9,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1839,713a90532f8348d9503a2232fede63d376f3c9c9,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1840,713a90532f8348d9503a2232fede63d376f3c9c9,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1841,713a90532f8348d9503a2232fede63d376f3c9c9,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1842,1d881cd4ab8c8e81502d0ffa15e37de3258f9e19,/kafka/Dockerfile,"# https://kafka.apache.org/downloads.html
"
1843,c903e0d934f6ec445c7f0448adfe03a1626a6098,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1844,c903e0d934f6ec445c7f0448adfe03a1626a6098,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1845,c903e0d934f6ec445c7f0448adfe03a1626a6098,/jenkins/Dockerfile,"# https://groups.google.com/d/msg/jenkins-infra/c7m_72vUTXE/37zw9GXhAQAJ
"
1846,c903e0d934f6ec445c7f0448adfe03a1626a6098,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
1847,32476ba6961eed4e26c6b23bc09bf738436870eb,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1848,78a0d3bd7e4171bc6ce4c89820f1ce2004721e46,/github-pages/Dockerfile,"# https://pages.github.com/versions/
"
1849,09f05951889ac6ebe3870fa880fa285b7e0bd65d,/moosefs/Dockerfile,"# mfscli (and cgi) are Python-based
"
1850,09f05951889ac6ebe3870fa880fa285b7e0bd65d,/moosefs/Dockerfile,"# mfsmount needs ""fusermount""
"
1851,09f05951889ac6ebe3870fa880fa285b7e0bd65d,/moosefs/Dockerfile,"# allow running mfsmount as non-root
"
1852,09f05951889ac6ebe3870fa880fa285b7e0bd65d,/moosefs/Dockerfile,"#user_allow_other$/user_allow_other/' /etc/fuse.conf

"
1853,09f05951889ac6ebe3870fa880fa285b7e0bd65d,/moosefs/Dockerfile,"# https://github.com/moosefs/moosefs/releases
"
1854,09f05951889ac6ebe3870fa880fa285b7e0bd65d,/moosefs/Dockerfile,"# prep the default configuration so things generally work Out-of-the-Box
"
1855,09f05951889ac6ebe3870fa880fa285b7e0bd65d,/moosefs/Dockerfile,"# allow us to run as an arbitrary user but still modify configuration
"
1856,09f05951889ac6ebe3870fa880fa285b7e0bd65d,/moosefs/Dockerfile,"# prep a scratch space with appropriate permissions to be able to do quick prototyping Out-of-the-Box
"
1857,578df39b6ed257053c66c840b762ec07c2b6869c,/lutris/Dockerfile,"# install Wine
#   https://github.com/lutris/docs/blob/f2bf5ca14f280e3c58d2306581294d57650c0cc2/WineDependencies.md
#   https://wiki.winehq.org/Ubuntu
"
1858,578df39b6ed257053c66c840b762ec07c2b6869c,/lutris/Dockerfile,"# https://dl.winehq.org/wine-builds/ubuntu/dists/focal/main/binary-amd64/?C=N;O=D
# https://www.winehq.org/news/
"
1859,578df39b6ed257053c66c840b762ec07c2b6869c,/lutris/Dockerfile,"# ""Add SDL2 Backports PPA (for Faudio package):""
"
1860,578df39b6ed257053c66c840b762ec07c2b6869c,/lutris/Dockerfile,"# ""For compatibility reasons, install these additional libraries:""
"
1861,578df39b6ed257053c66c840b762ec07c2b6869c,/lutris/Dockerfile,"# https://github.com/Winetricks/winetricks/releases
"
1862,578df39b6ed257053c66c840b762ec07c2b6869c,/lutris/Dockerfile,"# https://launchpad.net/~lutris-team/+archive/ubuntu/lutris?field.series_filter=focal
"
1863,578df39b6ed257053c66c840b762ec07c2b6869c,/lutris/Dockerfile,"# https://github.com/lutris/docs/blob/f2bf5ca14f280e3c58d2306581294d57650c0cc2/InstallingDrivers.md
"
1864,578df39b6ed257053c66c840b762ec07c2b6869c,/lutris/Dockerfile,"# gi.repository.GLib.Error: g-exec-error-quark: Failed to execute child process “dbus-launch” (No such file or directory) (8)
"
1865,578df39b6ed257053c66c840b762ec07c2b6869c,/lutris/Dockerfile,"# /lutris-home/games/battle.net/state-cache-merge/state-cache-update.sh: line 8: zenity: command not found
"
1866,40f8a78007180d9db95e77df97c59c6027862f80,/vultr-cli/Dockerfile,"# https://github.com/vultr/vultr-cli/releases
"
1867,cec26a4e098adca112bf5b2e19d739b1c749ca15,/snapcraft/Dockerfile,"# based initially on https://hub.docker.com/r/didrocks/snapcraft/
"
1868,cec26a4e098adca112bf5b2e19d739b1c749ca15,/snapcraft/Dockerfile,"# enable multiverse as snapcraft cleanbuild does
#RUN sed -i 's/ universe$/ universe multiverse/' /etc/apt/sources.list

# pin specific version so we can update with a natural cache bust
"
1869,3b394726a2b2dffcd76115c1d8a1410eaad3d78e,/docker-tianon/Dockerfile,"# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
"
1870,4c31382218d786d782fc71c5d8b526ae301101f6,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1871,b937cb570df97dc2e9c644337ce1cadec1d7c012,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1872,b342ee74189a50f9b0ec3aab8da1f6e506f97b7a,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1873,c25a2d3641a8e9d52ac1d2cfee06b4540def62f2,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1874,c25a2d3641a8e9d52ac1d2cfee06b4540def62f2,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1875,c25a2d3641a8e9d52ac1d2cfee06b4540def62f2,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1876,c25a2d3641a8e9d52ac1d2cfee06b4540def62f2,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1877,c25a2d3641a8e9d52ac1d2cfee06b4540def62f2,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1878,32cc2b83922de29d1c626661dd9fcc26aaf587cf,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1879,32cc2b83922de29d1c626661dd9fcc26aaf587cf,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1880,32cc2b83922de29d1c626661dd9fcc26aaf587cf,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1881,32cc2b83922de29d1c626661dd9fcc26aaf587cf,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1882,32cc2b83922de29d1c626661dd9fcc26aaf587cf,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1883,5611ddf36001ca35d63e65b5b35d061ab4518c29,/google-musicmanager/Dockerfile,"# https://www.google.com/linuxrepositories/
"
1884,5611ddf36001ca35d63e65b5b35d061ab4518c29,/google-musicmanager/Dockerfile,"# pub   rsa4096 2016-04-12 [SC]
#       EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796
# uid           [ unknown] Google Inc. (Linux Packages Signing Authority) <linux-packages-keymaster@google.com>
# sub   rsa4096 2016-04-12 [S] [expires: 2019-04-12]
"
1885,5611ddf36001ca35d63e65b5b35d061ab4518c29,/google-musicmanager/Dockerfile,"# pub   dsa1024 2007-03-08 [SC]
#       4CCA 1EAF 950C EE4A B839  76DC A040 830F 7FAC 5991
# uid           [ unknown] Google, Inc. Linux Package Signing Key <linux-packages-keymaster@google.com>
# sub   elg2048 2007-03-08 [E]
#		4CCA1EAF950CEE4AB83976DCA040830F7FAC5991

"
1886,5611ddf36001ca35d63e65b5b35d061ab4518c29,/google-musicmanager/Dockerfile,"# only stretch+ supports --armor in trusted.gpg.asc
#	gpg --export --armor $GPG_KEYS | tee /etc/apt/trusted.gpg.d/google.gpg.asc; \
"
1887,16f3f99c0bb85c546eac60b0bede1cd08dbc1e1d,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
1888,f363a3df4c398632c301615a110b2ccc6bd31c35,/ymlfmt/Dockerfile,"# https://pypi.org/project/ruamel.yaml/
"
1889,0e2e5db6af3d4fb0463219b6de0cc5de00dea8a8,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1890,b31d9d271da95bd04bb24a9510aa5fcc8716a942,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1891,b31d9d271da95bd04bb24a9510aa5fcc8716a942,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1892,b31d9d271da95bd04bb24a9510aa5fcc8716a942,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1893,b31d9d271da95bd04bb24a9510aa5fcc8716a942,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1894,b31d9d271da95bd04bb24a9510aa5fcc8716a942,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1895,97231147aece5cc7cdd3f6222eb90b433003bca6,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1896,97231147aece5cc7cdd3f6222eb90b433003bca6,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1897,97231147aece5cc7cdd3f6222eb90b433003bca6,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1898,97231147aece5cc7cdd3f6222eb90b433003bca6,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1899,97231147aece5cc7cdd3f6222eb90b433003bca6,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1900,cc23e131e75f89453e0e4559b99cf9b0919524c0,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1901,cc23e131e75f89453e0e4559b99cf9b0919524c0,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1902,cc23e131e75f89453e0e4559b99cf9b0919524c0,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1903,cc23e131e75f89453e0e4559b99cf9b0919524c0,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1904,cc23e131e75f89453e0e4559b99cf9b0919524c0,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1905,542cbe6c71aae21a1936cc3fcf45b59ef197921f,/xen-orchestra/Dockerfile,"# see https://xen-orchestra.com/docs/from_the_sources.html

"
1906,542cbe6c71aae21a1936cc3fcf45b59ef197921f,/xen-orchestra/Dockerfile,"# https://github.com/vatesfr/xo-server/releases
"
1907,542cbe6c71aae21a1936cc3fcf45b59ef197921f,/xen-orchestra/Dockerfile,"# https://github.com/vatesfr/xo-web/releases
"
1908,542cbe6c71aae21a1936cc3fcf45b59ef197921f,/xen-orchestra/Dockerfile,"# tone down the NPM log level (default from image is ""info"")
"
1909,542cbe6c71aae21a1936cc3fcf45b59ef197921f,/xen-orchestra/Dockerfile,"# https://docs.npmjs.com/misc/config#loglevel

"
1910,542cbe6c71aae21a1936cc3fcf45b59ef197921f,/xen-orchestra/Dockerfile,"#'/': '/path/to/xo-web/dist/'!'/': '../web/dist/'!"" \
"
1911,542cbe6c71aae21a1936cc3fcf45b59ef197921f,/xen-orchestra/Dockerfile,"#uri: redis://.*!uri: 'redis://redis:6379'!"" \
"
1912,84e385a76ce93507e108d1ae8396f77548e82880,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1913,84e385a76ce93507e108d1ae8396f77548e82880,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1914,84e385a76ce93507e108d1ae8396f77548e82880,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1915,84e385a76ce93507e108d1ae8396f77548e82880,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1916,84e385a76ce93507e108d1ae8396f77548e82880,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1917,5419b9295b70ecf0e1fcebc6e3ba25e07e55076c,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1918,5419b9295b70ecf0e1fcebc6e3ba25e07e55076c,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1919,5419b9295b70ecf0e1fcebc6e3ba25e07e55076c,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1920,5419b9295b70ecf0e1fcebc6e3ba25e07e55076c,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1921,5419b9295b70ecf0e1fcebc6e3ba25e07e55076c,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1922,aecfc6e366f21609c1f87c9c49c009ee46f170cf,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1923,aecfc6e366f21609c1f87c9c49c009ee46f170cf,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1924,aecfc6e366f21609c1f87c9c49c009ee46f170cf,/jenkins/Dockerfile,"# https://groups.google.com/d/msg/jenkins-infra/c7m_72vUTXE/37zw9GXhAQAJ
"
1925,aecfc6e366f21609c1f87c9c49c009ee46f170cf,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
1926,e3872662187caddf9bf72536532a2e197df12b51,/slack/Dockerfile,"# the .deb file linked at https://slack.com/downloads/instructions/debian includes ""/etc/cron.daily/slack"" which sets up an APT repo entry as in the following installation

# pub   rsa4096 2016-02-18 [SCEA]
#       DB08 5A08 CA13 B8AC B917  E0F6 D938 EC0D 0386 51BD
# uid           [ unknown] https://packagecloud.io/slacktechnologies/slack (https://packagecloud.io/docs#gpg_signing) <support@packagecloud.io>
# sub   rsa4096 2016-02-18 [SEA]
"
1927,e3872662187caddf9bf72536532a2e197df12b51,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libX11-xcb.so.1: cannot open shared object file: No such file or directory
"
1928,e3872662187caddf9bf72536532a2e197df12b51,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libasound.so.2: cannot open shared object file: No such file or directory
"
1929,e3872662187caddf9bf72536532a2e197df12b51,/slack/Dockerfile,"# 3.3.3: slack: error while loading shared libraries: libgtk-3.so.0: cannot open shared object file: No such file or directory
"
1930,5d185b3d49bacb65687cfd6c1dee8876c969ee65,/moosefs/Dockerfile,"# mfscli (and cgi) are Python-based
"
1931,5d185b3d49bacb65687cfd6c1dee8876c969ee65,/moosefs/Dockerfile,"# mfsmount needs ""fusermount""
"
1932,5d185b3d49bacb65687cfd6c1dee8876c969ee65,/moosefs/Dockerfile,"# allow running mfsmount as non-root
"
1933,5d185b3d49bacb65687cfd6c1dee8876c969ee65,/moosefs/Dockerfile,"#user_allow_other$/user_allow_other/' /etc/fuse.conf

"
1934,5d185b3d49bacb65687cfd6c1dee8876c969ee65,/moosefs/Dockerfile,"# https://github.com/moosefs/moosefs/releases
"
1935,5d185b3d49bacb65687cfd6c1dee8876c969ee65,/moosefs/Dockerfile,"# prep the default configuration so things generally work Out-of-the-Box
"
1936,5d185b3d49bacb65687cfd6c1dee8876c969ee65,/moosefs/Dockerfile,"# allow us to run as an arbitrary user but still modify configuration
"
1937,5d185b3d49bacb65687cfd6c1dee8876c969ee65,/moosefs/Dockerfile,"# prep a scratch space with appropriate permissions to be able to do quick prototyping Out-of-the-Box
"
1938,5d185b3d49bacb65687cfd6c1dee8876c969ee65,/moosefs/Dockerfile,"# without this, the Python-based mfscli ""-f"" flag refuses to use UTF-8 box-drawing characters
"
1939,b09752397d170fa90d308e08b9cf387fff2c5523,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1940,b09752397d170fa90d308e08b9cf387fff2c5523,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1941,b09752397d170fa90d308e08b9cf387fff2c5523,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1942,b09752397d170fa90d308e08b9cf387fff2c5523,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1943,b09752397d170fa90d308e08b9cf387fff2c5523,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1944,7cf75ffa42ec4b27840737f49c216753974c9d12,/wine/Dockerfile,"# https://wiki.winehq.org/Debian

"
1945,7cf75ffa42ec4b27840737f49c216753974c9d12,/wine/Dockerfile,"# https://dl.winehq.org/wine-builds/debian/dists/buster/main/binary-amd64/?C=N;O=D
# https://www.winehq.org/news/
"
1946,e550a1ccfce9c6967aa92b1dc79258768166a3c3,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1947,e550a1ccfce9c6967aa92b1dc79258768166a3c3,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1948,e550a1ccfce9c6967aa92b1dc79258768166a3c3,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1949,e550a1ccfce9c6967aa92b1dc79258768166a3c3,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1950,e550a1ccfce9c6967aa92b1dc79258768166a3c3,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1951,968d6ab3e87045113fdae3bfd4f6c64883ed9e5e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1952,968d6ab3e87045113fdae3bfd4f6c64883ed9e5e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1953,968d6ab3e87045113fdae3bfd4f6c64883ed9e5e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1954,968d6ab3e87045113fdae3bfd4f6c64883ed9e5e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1955,968d6ab3e87045113fdae3bfd4f6c64883ed9e5e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1956,5dae70a4b0082472b19f36c68e6b3ce5e7a86907,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1957,5dae70a4b0082472b19f36c68e6b3ce5e7a86907,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1958,5dae70a4b0082472b19f36c68e6b3ce5e7a86907,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1959,5dae70a4b0082472b19f36c68e6b3ce5e7a86907,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1960,5dae70a4b0082472b19f36c68e6b3ce5e7a86907,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1961,67a08a2381761089ac8440a2205058bba13451f1,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1962,a366f540ae21ad2e37b57ea5c09f99cb905b2781,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1963,cf7a10d5d124f13854af7452d7a3a3df3b376c4a,/exim4/Dockerfile,"# grab tini for signal processing and zombie killing
"
1964,cf7a10d5d124f13854af7452d7a3a3df3b376c4a,/exim4/Dockerfile,"# https://blog.dhampir.no/content/exim4-line-length-in-debian-stretch-mail-delivery-failed-returning-message-to-sender
# https://serverfault.com/a/881197
# https://bugs.debian.org/828801
"
1965,695ec019b67c54d02cd500c426633db5997c8343,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1966,3d8e8f2a799c5337d9dd9272506151039572ec2b,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1967,3d8e8f2a799c5337d9dd9272506151039572ec2b,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1968,3d8e8f2a799c5337d9dd9272506151039572ec2b,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1969,3d8e8f2a799c5337d9dd9272506151039572ec2b,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1970,3d8e8f2a799c5337d9dd9272506151039572ec2b,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1971,471075cdf7dcdcd2cd2ca4007096f5ef74d393e3,/xen-orchestra/Dockerfile,"# see https://xen-orchestra.com/docs/from_the_sources.html

"
1972,471075cdf7dcdcd2cd2ca4007096f5ef74d393e3,/xen-orchestra/Dockerfile,"# https://github.com/vatesfr/xo-server/releases
"
1973,471075cdf7dcdcd2cd2ca4007096f5ef74d393e3,/xen-orchestra/Dockerfile,"# https://github.com/vatesfr/xo-web/releases
"
1974,471075cdf7dcdcd2cd2ca4007096f5ef74d393e3,/xen-orchestra/Dockerfile,"# tone down the NPM log level (default from image is ""info"")
"
1975,471075cdf7dcdcd2cd2ca4007096f5ef74d393e3,/xen-orchestra/Dockerfile,"# https://docs.npmjs.com/misc/config#loglevel

"
1976,471075cdf7dcdcd2cd2ca4007096f5ef74d393e3,/xen-orchestra/Dockerfile,"# workaround: Error: Cannot find module 'jquery' from '/usr/src/xo/web/node_modules/chartist-plugin-tooltip'
"
1977,471075cdf7dcdcd2cd2ca4007096f5ef74d393e3,/xen-orchestra/Dockerfile,"#'/': '/path/to/xo-web/dist/'!'/': '../web/dist/'!"" \
"
1978,471075cdf7dcdcd2cd2ca4007096f5ef74d393e3,/xen-orchestra/Dockerfile,"#uri: redis://.*!uri: 'redis://redis:6379'!"" \
"
1979,a3fadf82f097cdcbf688659b304032af447b5c00,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1980,a3fadf82f097cdcbf688659b304032af447b5c00,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1981,a3fadf82f097cdcbf688659b304032af447b5c00,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1982,a3fadf82f097cdcbf688659b304032af447b5c00,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1983,a3fadf82f097cdcbf688659b304032af447b5c00,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1984,2271cd01d6127347c7bceb737981d3d0997f6514,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1985,ead5980fe73e87d360e347c545595896c4b6a4a7,/certbot/Dockerfile,"# Executable not found: can't find the executable for the dialog-like program
"
1986,ead5980fe73e87d360e347c545595896c4b6a4a7,/certbot/Dockerfile,"#VOLUME /etc/letsencrypt
"
1987,ead5980fe73e87d360e347c545595896c4b6a4a7,/certbot/Dockerfile,"#VOLUME /var/log/letsencrypt

"
1988,c85f450b7141f6cde818e0be45eaf8bd2c5efd9a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1989,c85f450b7141f6cde818e0be45eaf8bd2c5efd9a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1990,c85f450b7141f6cde818e0be45eaf8bd2c5efd9a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1991,c85f450b7141f6cde818e0be45eaf8bd2c5efd9a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1992,c85f450b7141f6cde818e0be45eaf8bd2c5efd9a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1993,7dcc6de00d47ad0d99fab76ae8433314019080c0,/docker-tianon/Dockerfile,"# DOCKER_HOST=ssh://... -- https://github.com/docker/cli/pull/1014
"
1994,7dcc6de00d47ad0d99fab76ae8433314019080c0,/docker-tianon/Dockerfile,"# https://doi-janky.infosiftr.net/job/tianon/job/docker-deb/job/repo/lastSuccessfulBuild/artifact/pool/buster/main/amd64/
"
1995,7dcc6de00d47ad0d99fab76ae8433314019080c0,/docker-tianon/Dockerfile,"# https://github.com/docker-library/docker/pull/166
#   dockerd-entrypoint.sh uses DOCKER_TLS_CERTDIR for auto-generating TLS certificates
#   docker-entrypoint.sh uses DOCKER_TLS_CERTDIR for auto-setting DOCKER_TLS_VERIFY and DOCKER_CERT_PATH
# (For this to work, at least the ""client"" subdirectory of this path needs to be shared between the client and server containers via a volume, ""docker cp"", or other means of data sharing.)
"
1996,7dcc6de00d47ad0d99fab76ae8433314019080c0,/docker-tianon/Dockerfile,"# also, ensure the directory pre-exists and has wide enough permissions for ""dockerd-entrypoint.sh"" to create subdirectories, even when run in ""rootless"" mode
"
1997,7dcc6de00d47ad0d99fab76ae8433314019080c0,/docker-tianon/Dockerfile,"# (doing both /certs and /certs/client so that if Docker does a ""copy-up"" into a volume defined on /certs/client, it will ""do the right thing"" by default in a way that still works for rootless users)

# dind

"
1998,7dcc6de00d47ad0d99fab76ae8433314019080c0,/docker-tianon/Dockerfile,"# pigz: https://github.com/moby/moby/pull/35697 (faster gzip implementation)
"
1999,7dcc6de00d47ad0d99fab76ae8433314019080c0,/docker-tianon/Dockerfile,"# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
"
2000,7dcc6de00d47ad0d99fab76ae8433314019080c0,/docker-tianon/Dockerfile,"# https://github.com/docker/docker/tree/master/hack/dind
#ENV DIND_COMMIT 130b0bc6032cc675d064e1cc62626cacc9c07a57

#RUN set -eux; \
#	wget -O /usr/local/bin/dind ""https://raw.githubusercontent.com/docker/docker/${DIND_COMMIT}/hack/dind""; \
#	chmod +x /usr/local/bin/dind

"
2001,ffb1cf908222b1d7465e2ba9575b4160bcdefe02,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2002,ffb1cf908222b1d7465e2ba9575b4160bcdefe02,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2003,ffb1cf908222b1d7465e2ba9575b4160bcdefe02,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2004,ffb1cf908222b1d7465e2ba9575b4160bcdefe02,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2005,ffb1cf908222b1d7465e2ba9575b4160bcdefe02,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2006,32b6c2c68a7f1dbf18b996d7177932157e2e9226,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2007,32b6c2c68a7f1dbf18b996d7177932157e2e9226,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
2008,5df27c1fe67fc12fc9bec4e7aa1888a4690af1a4,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2009,5df27c1fe67fc12fc9bec4e7aa1888a4690af1a4,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2010,5df27c1fe67fc12fc9bec4e7aa1888a4690af1a4,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2011,5df27c1fe67fc12fc9bec4e7aa1888a4690af1a4,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2012,5df27c1fe67fc12fc9bec4e7aa1888a4690af1a4,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2013,f6f840b8a685e4bdf9d9ea57fefda98be1f8572e,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
2014,f6f840b8a685e4bdf9d9ea57fefda98be1f8572e,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
2015,f6f840b8a685e4bdf9d9ea57fefda98be1f8572e,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
2016,c69328b8eb8778a7f9daf60e1b110af1a49b6131,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2017,c69328b8eb8778a7f9daf60e1b110af1a49b6131,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2018,c69328b8eb8778a7f9daf60e1b110af1a49b6131,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2019,c69328b8eb8778a7f9daf60e1b110af1a49b6131,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2020,c69328b8eb8778a7f9daf60e1b110af1a49b6131,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2021,157ece9c58624264582db0257e694ac9016b6ddb,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2022,157ece9c58624264582db0257e694ac9016b6ddb,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2023,157ece9c58624264582db0257e694ac9016b6ddb,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2024,157ece9c58624264582db0257e694ac9016b6ddb,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2025,157ece9c58624264582db0257e694ac9016b6ddb,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2026,e0d09b4ad4450af1110189b58b57bcb467f0270a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2027,e0d09b4ad4450af1110189b58b57bcb467f0270a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2028,e0d09b4ad4450af1110189b58b57bcb467f0270a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2029,e0d09b4ad4450af1110189b58b57bcb467f0270a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2030,e0d09b4ad4450af1110189b58b57bcb467f0270a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2031,be495bca4c0263500efc85d1d21af356df34178f,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
2032,d8a700e96a7cae0de1aee60c099f0e73f91bcd20,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2033,d8a700e96a7cae0de1aee60c099f0e73f91bcd20,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2034,d8a700e96a7cae0de1aee60c099f0e73f91bcd20,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2035,d8a700e96a7cae0de1aee60c099f0e73f91bcd20,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2036,d8a700e96a7cae0de1aee60c099f0e73f91bcd20,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2037,08ef289f856e234e2c6eb308bd2905e1e119dadf,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2038,08ef289f856e234e2c6eb308bd2905e1e119dadf,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2039,08ef289f856e234e2c6eb308bd2905e1e119dadf,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2040,08ef289f856e234e2c6eb308bd2905e1e119dadf,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2041,08ef289f856e234e2c6eb308bd2905e1e119dadf,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2042,5fd170481cdf8376588c185d6ee360c69ec8b1c4,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2043,5fd170481cdf8376588c185d6ee360c69ec8b1c4,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2044,5fd170481cdf8376588c185d6ee360c69ec8b1c4,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2045,5fd170481cdf8376588c185d6ee360c69ec8b1c4,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2046,5fd170481cdf8376588c185d6ee360c69ec8b1c4,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2047,b98ee7e7b4fa98fcfa3d4f2c2435e70bd660a3db,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2048,b98ee7e7b4fa98fcfa3d4f2c2435e70bd660a3db,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2049,b98ee7e7b4fa98fcfa3d4f2c2435e70bd660a3db,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2050,b98ee7e7b4fa98fcfa3d4f2c2435e70bd660a3db,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2051,b98ee7e7b4fa98fcfa3d4f2c2435e70bd660a3db,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2052,1aefd98b8c46edf85d62431fdcca86a6967272da,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2053,1aefd98b8c46edf85d62431fdcca86a6967272da,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2054,1aefd98b8c46edf85d62431fdcca86a6967272da,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2055,1aefd98b8c46edf85d62431fdcca86a6967272da,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2056,1aefd98b8c46edf85d62431fdcca86a6967272da,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2057,1d50b7585ebc4fb9ff802e04d46f2c574fc14552,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2058,1d50b7585ebc4fb9ff802e04d46f2c574fc14552,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2059,1d50b7585ebc4fb9ff802e04d46f2c574fc14552,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2060,1d50b7585ebc4fb9ff802e04d46f2c574fc14552,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2061,1d50b7585ebc4fb9ff802e04d46f2c574fc14552,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2062,8e04383f41ebb0b47d50a9e8cdeba93110dd0706,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2063,8e04383f41ebb0b47d50a9e8cdeba93110dd0706,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2064,8e04383f41ebb0b47d50a9e8cdeba93110dd0706,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2065,8e04383f41ebb0b47d50a9e8cdeba93110dd0706,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2066,8e04383f41ebb0b47d50a9e8cdeba93110dd0706,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2067,aeb543e72e4688c8ec9a55e418102b70bb5ba5b3,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2068,aeb543e72e4688c8ec9a55e418102b70bb5ba5b3,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2069,aeb543e72e4688c8ec9a55e418102b70bb5ba5b3,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2070,aeb543e72e4688c8ec9a55e418102b70bb5ba5b3,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2071,aeb543e72e4688c8ec9a55e418102b70bb5ba5b3,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2072,1c475365b021930c9df12f1bf82ee1cddafc995d,/bash/4.0/Dockerfile,"# gpg: key 64EA74AB: public key ""Chet Ramey <chet@cwru.edu>"" imported
"
2073,1c475365b021930c9df12f1bf82ee1cddafc995d,/bash/4.0/Dockerfile,"# https://ftp.gnu.org/gnu/bash/?C=M;O=D
"
2074,1c475365b021930c9df12f1bf82ee1cddafc995d,/bash/4.0/Dockerfile,"# https://ftp.gnu.org/gnu/bash/bash-4.0-patches/?C=M;O=D
"
2075,1c475365b021930c9df12f1bf82ee1cddafc995d,/bash/4.0/Dockerfile,"# prefixed with ""_"" since ""$BASH..."" have meaning in Bash parlance

"
2076,1c475365b021930c9df12f1bf82ee1cddafc995d,/bash/4.0/Dockerfile,"# parallel jobs workaround borrowed from Alpine :)
"
2077,1c475365b021930c9df12f1bf82ee1cddafc995d,/bash/4.0/Dockerfile,"# delete a few installed bits for smaller image size
"
2078,2d18464e9228c620606495607aab92eac3bea044,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
2079,528dc06ff406eb25f8ec1e0bb2c0cdef976e0461,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2080,528dc06ff406eb25f8ec1e0bb2c0cdef976e0461,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2081,528dc06ff406eb25f8ec1e0bb2c0cdef976e0461,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2082,528dc06ff406eb25f8ec1e0bb2c0cdef976e0461,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2083,528dc06ff406eb25f8ec1e0bb2c0cdef976e0461,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2084,b2ab6405be02a06e6832cdfe214e43c90dec48d7,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2085,43c1bc11c7839ce8647855794c2a46936871824f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2086,43c1bc11c7839ce8647855794c2a46936871824f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2087,43c1bc11c7839ce8647855794c2a46936871824f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2088,43c1bc11c7839ce8647855794c2a46936871824f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2089,43c1bc11c7839ce8647855794c2a46936871824f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2090,316dc3c8461829d20869ef127b3edfad5be578d9,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2091,316dc3c8461829d20869ef127b3edfad5be578d9,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2092,316dc3c8461829d20869ef127b3edfad5be578d9,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2093,316dc3c8461829d20869ef127b3edfad5be578d9,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2094,316dc3c8461829d20869ef127b3edfad5be578d9,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2095,0abdccfff7cc95ca63cdd5feb75fa626bee21f03,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2096,9fe32791ab9148067b9b7d84110ceee7ee79c372,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2097,9fe32791ab9148067b9b7d84110ceee7ee79c372,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
2098,9fe32791ab9148067b9b7d84110ceee7ee79c372,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
2099,511a28fcef7557c6b9c80031bf07613b38612948,/dind/Dockerfile,"#RUN curl -sLS https://get.docker.io | sh

# let's grab the lastest ""master"" version of the install.sh script >:)
"
2100,ce8468703b3223fa0f789cac9bed787f1adeb5ca,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2101,96511e80f6be0a9007ca3867151ece0e413b7172,/dell-netextender/Dockerfile,"# https://sslvpn.demo.sonicwall.com
#   u: demo    p: password

"
2102,96511e80f6be0a9007ca3867151ece0e413b7172,/dell-netextender/Dockerfile,"# NetExtender connected successfully. Type ""Ctrl-c"" to disconnect...
"
2103,df9ce3dd72fc29409456b9c8091ba2e9f5d5f269,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2104,df9ce3dd72fc29409456b9c8091ba2e9f5d5f269,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2105,df9ce3dd72fc29409456b9c8091ba2e9f5d5f269,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2106,df9ce3dd72fc29409456b9c8091ba2e9f5d5f269,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2107,df9ce3dd72fc29409456b9c8091ba2e9f5d5f269,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2108,d4941542d13281e3ac2b698c5dceed0ce1c23113,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2109,e3ea4a5e1e27906c735fca54838f9c11c7857be5,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2110,e3ea4a5e1e27906c735fca54838f9c11c7857be5,/docker-master/Dockerfile,"# (no SHA file artifacts on download.docker.com yet as of 2017-06-07)

"
2111,e3ea4a5e1e27906c735fca54838f9c11c7857be5,/docker-master/Dockerfile,"# https://github.com/docker-library/docker/pull/166
#   dockerd-entrypoint.sh uses DOCKER_TLS_CERTDIR for auto-generating TLS certificates
#   docker-entrypoint.sh uses DOCKER_TLS_CERTDIR for auto-setting DOCKER_TLS_VERIFY and DOCKER_CERT_PATH
# (For this to work, at least the ""client"" subdirectory of this path needs to be shared between the client and server containers via a volume, ""docker cp"", or other means of data sharing.)
"
2112,e3ea4a5e1e27906c735fca54838f9c11c7857be5,/docker-master/Dockerfile,"# also, ensure the directory pre-exists and has wide enough permissions for ""dockerd-entrypoint.sh"" to create subdirectories, even when run in ""rootless"" mode
"
2113,e3ea4a5e1e27906c735fca54838f9c11c7857be5,/docker-master/Dockerfile,"# (doing both /certs and /certs/client so that if Docker does a ""copy-up"" into a volume defined on /certs/client, it will ""do the right thing"" by default in a way that still works for rootless users)

"
2114,8ddcb2d9d1def0ceb2ebf365dd3c54b215c6f01a,/skype/Dockerfile,"# see https://repo.skype.com

"
2115,8ddcb2d9d1def0ceb2ebf365dd3c54b215c6f01a,/skype/Dockerfile,"# wget is invoked by skypeforlinux for crash reports
"
2116,8ddcb2d9d1def0ceb2ebf365dd3c54b215c6f01a,/skype/Dockerfile,"# https://repo.skype.com/data/SKYPE-GPG-KEY
"
2117,8ddcb2d9d1def0ceb2ebf365dd3c54b215c6f01a,/skype/Dockerfile,"# pub   2048R/DF7587C3 2016-06-22 [expires: 2021-06-21]
#       Key fingerprint = D404 0146 BE39 7250 9FD5  7FC7 1F30 45A5 DF75 87C3
# uid                  Skype Linux Client Repository <se-um@microsoft.com>
# sub   2048R/A4EBB320 2016-06-22 [expires: 2021-06-21]
"
2118,925a58ac6c87d8dd3563de2ca3e1c18766138aa8,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2119,925a58ac6c87d8dd3563de2ca3e1c18766138aa8,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2120,925a58ac6c87d8dd3563de2ca3e1c18766138aa8,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2121,925a58ac6c87d8dd3563de2ca3e1c18766138aa8,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2122,925a58ac6c87d8dd3563de2ca3e1c18766138aa8,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2123,e1156d9dcf57c1f0aa09f118d3f78d68f0e41581,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2124,b12db5306938484e757965961525a56fcc6f0b75,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2125,072ec6ab392aec4c4f20f2387b6d78360aec4d09,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2126,efdba9b7182f658ca0d9fca98c5cb061dc8a2dcc,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2127,efdba9b7182f658ca0d9fca98c5cb061dc8a2dcc,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2128,efdba9b7182f658ca0d9fca98c5cb061dc8a2dcc,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2129,efdba9b7182f658ca0d9fca98c5cb061dc8a2dcc,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2130,efdba9b7182f658ca0d9fca98c5cb061dc8a2dcc,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2131,91def800cbf247a8b5b5d5561a33563c826365cd,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2132,91def800cbf247a8b5b5d5561a33563c826365cd,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2133,91def800cbf247a8b5b5d5561a33563c826365cd,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2134,91def800cbf247a8b5b5d5561a33563c826365cd,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2135,91def800cbf247a8b5b5d5561a33563c826365cd,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2136,81e671f8fa6a91e8307e85986c671eea4eaa5526,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2137,81e671f8fa6a91e8307e85986c671eea4eaa5526,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2138,81e671f8fa6a91e8307e85986c671eea4eaa5526,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2139,81e671f8fa6a91e8307e85986c671eea4eaa5526,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2140,81e671f8fa6a91e8307e85986c671eea4eaa5526,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2141,2a6981d496b0420d976fb5c182b58d0975862b7a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2142,2a6981d496b0420d976fb5c182b58d0975862b7a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2143,2a6981d496b0420d976fb5c182b58d0975862b7a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2144,2a6981d496b0420d976fb5c182b58d0975862b7a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2145,2a6981d496b0420d976fb5c182b58d0975862b7a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2146,5307950f21343e91bf776f741c2ccc7479bbecae,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2147,5307950f21343e91bf776f741c2ccc7479bbecae,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
2148,5307950f21343e91bf776f741c2ccc7479bbecae,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
2149,5307950f21343e91bf776f741c2ccc7479bbecae,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
2150,5307950f21343e91bf776f741c2ccc7479bbecae,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
2151,5ac2a37556e8c1fdef979dd0a80caabae2cf69e5,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2152,5ac2a37556e8c1fdef979dd0a80caabae2cf69e5,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
2153,5ac2a37556e8c1fdef979dd0a80caabae2cf69e5,/jenkins/Dockerfile,"# workaround ""apt-key adv --recv-keys"" hanging in stretch and above
"
2154,9319738945350572804b4ed4c604539baebf4d9c,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2155,9319738945350572804b4ed4c604539baebf4d9c,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
2156,9319738945350572804b4ed4c604539baebf4d9c,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
2157,9319738945350572804b4ed4c604539baebf4d9c,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
2158,9319738945350572804b4ed4c604539baebf4d9c,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
2159,d3e3894e470107d9691d2d2b11f4c86d98dead36,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2160,1ea6a1454e28301462cfc5173dbe6e63a840bdd2,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2161,1ea6a1454e28301462cfc5173dbe6e63a840bdd2,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2162,1ea6a1454e28301462cfc5173dbe6e63a840bdd2,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2163,1ea6a1454e28301462cfc5173dbe6e63a840bdd2,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2164,1ea6a1454e28301462cfc5173dbe6e63a840bdd2,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2165,45e8814f4d4111cb23b27a40d15f60b2a28b95e0,/perl/Dockerfile,"# secure by default ♥ (thanks to sri!)
"
2166,45e8814f4d4111cb23b27a40d15f60b2a28b95e0,/perl/Dockerfile,"# reinstall cpanm itself, for good measure
"
2167,f2d96ee85b46eecd5fe6b2d47138b806d18a2381,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2168,f2d96ee85b46eecd5fe6b2d47138b806d18a2381,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2169,f2d96ee85b46eecd5fe6b2d47138b806d18a2381,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2170,f2d96ee85b46eecd5fe6b2d47138b806d18a2381,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2171,f2d96ee85b46eecd5fe6b2d47138b806d18a2381,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2172,9ad781145dfe6d3c3987c59d0343942a27bbb4ef,/mojo/Dockerfile,"# the tests for IO::Socket::SSL like to hang... :(
"
2173,28afbdb0ad6fb3936d83096b6e76217f9f1e0cea,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2174,28afbdb0ad6fb3936d83096b6e76217f9f1e0cea,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
2175,28afbdb0ad6fb3936d83096b6e76217f9f1e0cea,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
2176,28afbdb0ad6fb3936d83096b6e76217f9f1e0cea,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
2177,28afbdb0ad6fb3936d83096b6e76217f9f1e0cea,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
2178,8e0d023c5caa4901566c59a4a5079c7f646d609b,/docker-master/dind/Dockerfile,"# https://github.com/docker/docker/blob/master/project/PACKAGERS.md#runtime-dependencies
"
2179,8e0d023c5caa4901566c59a4a5079c7f646d609b,/docker-master/dind/Dockerfile,"# pigz: https://github.com/moby/moby/pull/35697 (faster gzip implementation)
"
2180,8e0d023c5caa4901566c59a4a5079c7f646d609b,/docker-master/dind/Dockerfile,"# only install zfs if it's available for the current architecture
# https://git.alpinelinux.org/cgit/aports/tree/main/zfs/APKBUILD?h=3.6-stable#n9 (""all !armhf !ppc64le"" as of 2017-11-01)
# ""apk info XYZ"" exits with a zero exit code but no output when the package exists but not for this arch
"
2181,8e0d023c5caa4901566c59a4a5079c7f646d609b,/docker-master/dind/Dockerfile,"# TODO aufs-tools

# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
"
2182,8e0d023c5caa4901566c59a4a5079c7f646d609b,/docker-master/dind/Dockerfile,"# https://github.com/docker/docker/tree/master/hack/dind
"
2183,b09752397d170fa90d308e08b9cf387fff2c5523,/gmvault/Dockerfile,"# for Python 2
"
2184,02bb99c481fe69ce3835b7ccce9076a9e7e2d5d2,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2185,02bb99c481fe69ce3835b7ccce9076a9e7e2d5d2,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2186,02bb99c481fe69ce3835b7ccce9076a9e7e2d5d2,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2187,02bb99c481fe69ce3835b7ccce9076a9e7e2d5d2,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2188,02bb99c481fe69ce3835b7ccce9076a9e7e2d5d2,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2189,a468e79529bc0fb3d91eefd58a768aa190689295,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2190,a468e79529bc0fb3d91eefd58a768aa190689295,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2191,a468e79529bc0fb3d91eefd58a768aa190689295,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2192,a468e79529bc0fb3d91eefd58a768aa190689295,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2193,a468e79529bc0fb3d91eefd58a768aa190689295,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2194,d1c12c9736d87e088900bad33a32845d2eec1df7,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2195,0f1f3b4b9023b15d6b7246081b830380974a3fab,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2196,0f1f3b4b9023b15d6b7246081b830380974a3fab,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2197,0f1f3b4b9023b15d6b7246081b830380974a3fab,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2198,0f1f3b4b9023b15d6b7246081b830380974a3fab,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2199,0f1f3b4b9023b15d6b7246081b830380974a3fab,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2200,d341bc5fdd1563206627d70bdc549c8759c89e1c,/debian/devel/Dockerfile,"# normal build deps
"
2201,d341bc5fdd1563206627d70bdc549c8759c89e1c,/debian/devel/Dockerfile,"# need an editor for ""dch -i""
"
2202,d341bc5fdd1563206627d70bdc549c8759c89e1c,/debian/devel/Dockerfile,"# a few extra little useful things
"
2203,d341bc5fdd1563206627d70bdc549c8759c89e1c,/debian/devel/Dockerfile,"# need deb-src for compiling packages
"
2204,d341bc5fdd1563206627d70bdc549c8759c89e1c,/debian/devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
2205,47b21a10e0b89ffa0586759b87b9ebf054569eec,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2206,47b21a10e0b89ffa0586759b87b9ebf054569eec,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2207,47b21a10e0b89ffa0586759b87b9ebf054569eec,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2208,47b21a10e0b89ffa0586759b87b9ebf054569eec,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2209,47b21a10e0b89ffa0586759b87b9ebf054569eec,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2210,8b4a24f4aa131f73c031b04abeb64042aa921c64,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2211,de7a5ed2f7c54f5271e431b4b32785faa883b5bb,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2212,de7a5ed2f7c54f5271e431b4b32785faa883b5bb,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
2213,de7a5ed2f7c54f5271e431b4b32785faa883b5bb,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
2214,4750d65a73a67adcdd5949fea6878c625e1fd038,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2215,4750d65a73a67adcdd5949fea6878c625e1fd038,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
2216,4750d65a73a67adcdd5949fea6878c625e1fd038,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
2217,4750d65a73a67adcdd5949fea6878c625e1fd038,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
2218,4750d65a73a67adcdd5949fea6878c625e1fd038,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
2219,22cc246a41b05ce1b8eed06f285aa64241a94496,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
2220,22cc246a41b05ce1b8eed06f285aa64241a94496,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
"
2221,74e1cdd856e87e2c1edf904c359944f1696b78f6,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2222,74e1cdd856e87e2c1edf904c359944f1696b78f6,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
2223,74e1cdd856e87e2c1edf904c359944f1696b78f6,/jenkins/Dockerfile,"# https://groups.google.com/d/msg/jenkins-infra/c7m_72vUTXE/37zw9GXhAQAJ
"
2224,74e1cdd856e87e2c1edf904c359944f1696b78f6,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
2225,b208efd1c4c9b9fa0258ff937b03e3e15d401e8b,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2226,b208efd1c4c9b9fa0258ff937b03e3e15d401e8b,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2227,b208efd1c4c9b9fa0258ff937b03e3e15d401e8b,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2228,b208efd1c4c9b9fa0258ff937b03e3e15d401e8b,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2229,b208efd1c4c9b9fa0258ff937b03e3e15d401e8b,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2230,277a6c9db8301713bf30afa54baff18635fef604,/network-toolbox/alpine/Dockerfile,"# TODO add ""nbtscan"" when we get to Alpine 3.9 (if it makes it out of edge for 3.9)

"
2231,4347d61abe09578dd559d836358e59a918def5f9,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2232,eb47f6abe916995c302f73a267414413b91c15d1,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
2233,eb47f6abe916995c302f73a267414413b91c15d1,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
"
2234,7bcd610fdb2be64a9d6bafbab4eaba606c647747,/containerd/Dockerfile,"# runtime deps
"
2235,7bcd610fdb2be64a9d6bafbab4eaba606c647747,/containerd/Dockerfile,"# https://github.com/opencontainers/runc/releases
"
2236,7bcd610fdb2be64a9d6bafbab4eaba606c647747,/containerd/Dockerfile,"# TODO .asc / .sha256sum
"
2237,7bcd610fdb2be64a9d6bafbab4eaba606c647747,/containerd/Dockerfile,"# https://github.com/containerd/containerd/releases
"
2238,46a24d80db1e6a6ac27e9dc2d83f8439fe667463,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2239,1f8219898c2e01499f0fc3d274893ad416e05e4f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2240,1f8219898c2e01499f0fc3d274893ad416e05e4f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2241,1f8219898c2e01499f0fc3d274893ad416e05e4f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2242,1f8219898c2e01499f0fc3d274893ad416e05e4f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2243,1f8219898c2e01499f0fc3d274893ad416e05e4f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2244,25829de1b65ef142b1e6ea3f2ed2a1ee457a0603,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2245,e8dd111ae037d54e207ce129fbff13dbf4806d1f,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2246,82927c8c63dbe81dcc2a44ad6263b0287a5b915c,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2247,82927c8c63dbe81dcc2a44ad6263b0287a5b915c,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2248,82927c8c63dbe81dcc2a44ad6263b0287a5b915c,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2249,82927c8c63dbe81dcc2a44ad6263b0287a5b915c,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2250,82927c8c63dbe81dcc2a44ad6263b0287a5b915c,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2251,5fd170481cdf8376588c185d6ee360c69ec8b1c4,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2252,3addce19fc9312835f8cdbe51a20f0b22fa696b4,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2253,3addce19fc9312835f8cdbe51a20f0b22fa696b4,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2254,3addce19fc9312835f8cdbe51a20f0b22fa696b4,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2255,3addce19fc9312835f8cdbe51a20f0b22fa696b4,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2256,3addce19fc9312835f8cdbe51a20f0b22fa696b4,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2257,d6c621cb9d541196519aabd52e4fa7edbf338c23,/exim4/Dockerfile,"# grab tini for signal processing and zombie killing
"
2258,6394c33ad4369c812080a04ea2f14041576cfaa9,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2259,6394c33ad4369c812080a04ea2f14041576cfaa9,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2260,6394c33ad4369c812080a04ea2f14041576cfaa9,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2261,6394c33ad4369c812080a04ea2f14041576cfaa9,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2262,6394c33ad4369c812080a04ea2f14041576cfaa9,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2263,4343d43150e4b8253b75d7c0debc6900fde1c936,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2264,4343d43150e4b8253b75d7c0debc6900fde1c936,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2265,4343d43150e4b8253b75d7c0debc6900fde1c936,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2266,4343d43150e4b8253b75d7c0debc6900fde1c936,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2267,4343d43150e4b8253b75d7c0debc6900fde1c936,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2268,ef9cf9438d12236072488bc6768c0504d53636ba,/certbot/Dockerfile,"# Executable not found: can't find the executable for the dialog-like program
"
2269,ef9cf9438d12236072488bc6768c0504d53636ba,/certbot/Dockerfile,"#VOLUME /etc/letsencrypt
"
2270,ef9cf9438d12236072488bc6768c0504d53636ba,/certbot/Dockerfile,"#VOLUME /var/log/letsencrypt

"
2271,6582ea71fc3a71a5b639dbe78de98d73a82e449c,/ymlfmt/Dockerfile,"# https://pypi.org/project/ruamel.yaml/
"
2272,d08f869902317e0a44b83f38c928776194fd7cd4,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2273,810ca26d864d66f788e369ca5e1ec0184f1e99c3,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2274,810ca26d864d66f788e369ca5e1ec0184f1e99c3,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2275,810ca26d864d66f788e369ca5e1ec0184f1e99c3,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2276,810ca26d864d66f788e369ca5e1ec0184f1e99c3,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2277,810ca26d864d66f788e369ca5e1ec0184f1e99c3,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2278,129bdab7ce06be9c42dd7358bb11126a30b8ae8b,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2279,de7f1e9a07750b47345b2a1b6136bcd86a0667bd,/qemu/Dockerfile,"#		qemu-system \
#		qemu-utils \
"
2280,de7f1e9a07750b47345b2a1b6136bcd86a0667bd,/qemu/Dockerfile,"# https://www.qemu.org/download/#source
"
2281,de7f1e9a07750b47345b2a1b6136bcd86a0667bd,/qemu/Dockerfile,"# TODO verify signature
"
2282,de7f1e9a07750b47345b2a1b6136bcd86a0667bd,/qemu/Dockerfile,"# system targets
# (https://sources.debian.org/src/qemu/stretch/debian/rules/#L57-L61, slimmed)
"
2283,de7f1e9a07750b47345b2a1b6136bcd86a0667bd,/qemu/Dockerfile,"# user targets
# (https://sources.debian.org/src/qemu/stretch/debian/rules/#L81-L86, slimmed)
"
2284,de7f1e9a07750b47345b2a1b6136bcd86a0667bd,/qemu/Dockerfile,"#		--enable-rbd \
#		--enable-vde \
"
2285,2c535eef6602a3c5ea4fb0764c2fd86326acb5da,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2286,2c535eef6602a3c5ea4fb0764c2fd86326acb5da,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
2287,2c535eef6602a3c5ea4fb0764c2fd86326acb5da,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
2288,05baf2e0890f69a5492e8d2f42eda3d05d2d1d2d,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2289,05baf2e0890f69a5492e8d2f42eda3d05d2d1d2d,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2290,05baf2e0890f69a5492e8d2f42eda3d05d2d1d2d,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2291,05baf2e0890f69a5492e8d2f42eda3d05d2d1d2d,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2292,05baf2e0890f69a5492e8d2f42eda3d05d2d1d2d,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2293,3b4deeb730e27138c3b51cf4023cc6d08292f61e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2294,3b4deeb730e27138c3b51cf4023cc6d08292f61e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2295,3b4deeb730e27138c3b51cf4023cc6d08292f61e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2296,3b4deeb730e27138c3b51cf4023cc6d08292f61e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2297,3b4deeb730e27138c3b51cf4023cc6d08292f61e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2298,03074e5bfac7decc092b466e793b35a3f8dfd5ab,/wine/Dockerfile,"# https://wiki.winehq.org/Debian

"
2299,a70eac50e7a243d7a39fc86c91dea2bcfbb182a4,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2300,a70eac50e7a243d7a39fc86c91dea2bcfbb182a4,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2301,a70eac50e7a243d7a39fc86c91dea2bcfbb182a4,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2302,a70eac50e7a243d7a39fc86c91dea2bcfbb182a4,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2303,a70eac50e7a243d7a39fc86c91dea2bcfbb182a4,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2304,086fe7886aa24a3693817cb807c3e4d25bd631d7,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2305,e121e80261a6048c8498ebe5df509788ec4c85d6,/syncthing/Dockerfile,"# gpg: key BCE524C7: public key ""Jakob Borg (calmh) <jakob@nym.se>"" imported
"
2306,32f6a5fe1f03d923a5e94f71a430159484d55490,/docker/experimental/dind/Dockerfile,"# https://github.com/docker/docker/blob/master/project/PACKAGERS.md#runtime-dependencies
"
2307,32f6a5fe1f03d923a5e94f71a430159484d55490,/docker/experimental/dind/Dockerfile,"# TODO aufs-tools

"
2308,2252328e127c6b95d84c49b9269afc84ab02ca24,/github-pages/Dockerfile,"# https://pages.github.com/versions/
"
2309,517e05bdc79d0df82761cbfb94b36c70d4bf03cc,/steam/Dockerfile,"# let's head off a few of the things steam will want to install immediately
"
2310,517e05bdc79d0df82761cbfb94b36c70d4bf03cc,/steam/Dockerfile,"# steam itself needs to be able to install things, and it uses ""sudo"" for that
"
2311,f948ed7b4378b3ea38fb2e0991b894ece6049a04,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2312,6b4af4117791ac1de3e1f2665ef7e1b4ab30e68a,/xen-orchestra/Dockerfile,"# see https://github.com/vatesfr/xo/blob/a269af702992616f67b7bcf066eac0a1124ac8bf/doc/installation/manual_installation.md

#RUN apt-get update && apt-get install -y ruby-compass

"
2313,6b4af4117791ac1de3e1f2665ef7e1b4ab30e68a,/xen-orchestra/Dockerfile,"#'/': '/path/to/xo-web/dist/'!'/': '../web/dist/'!; \
"
2314,6b4af4117791ac1de3e1f2665ef7e1b4ab30e68a,/xen-orchestra/Dockerfile,"#uri: ''!uri: 'redis://redis:6379'!; \
"
2315,6eb258e58b9bb1bbffcda3391737eb149364c6dd,/apt-cacher-ng/Dockerfile,"# grab tini for signal processing and zombie killing
"
2316,b183f0910c95154a9ffc5b28795db5b829809c01,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2317,258646ccfc4061a4b1fbc14912dfebb114306e7a,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2318,a74688cceb4844a474c03ee69ac23728c92f88f5,/jenkins/weekly/Dockerfile,"# grab gosu for easy step-down from root
"
2319,a74688cceb4844a474c03ee69ac23728c92f88f5,/jenkins/weekly/Dockerfile,"# grab tini for signal processing and zombie killing
"
2320,a74688cceb4844a474c03ee69ac23728c92f88f5,/jenkins/weekly/Dockerfile,"# https://groups.google.com/d/msg/jenkins-infra/c7m_72vUTXE/37zw9GXhAQAJ
"
2321,a74688cceb4844a474c03ee69ac23728c92f88f5,/jenkins/weekly/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
2322,771406013df09dd993e7c3ce06ac68d06a3fa7d1,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2323,771406013df09dd993e7c3ce06ac68d06a3fa7d1,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2324,771406013df09dd993e7c3ce06ac68d06a3fa7d1,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2325,771406013df09dd993e7c3ce06ac68d06a3fa7d1,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2326,771406013df09dd993e7c3ce06ac68d06a3fa7d1,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2327,20d156a6af8eef85582bca9649560583b967be14,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2328,f7f2e69b531a6eb8f675e310c5702d7d0a22d998,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2329,f7f2e69b531a6eb8f675e310c5702d7d0a22d998,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
2330,f7f2e69b531a6eb8f675e310c5702d7d0a22d998,/jenkins/Dockerfile,"# https://groups.google.com/d/msg/jenkins-infra/c7m_72vUTXE/37zw9GXhAQAJ
"
2331,f7f2e69b531a6eb8f675e310c5702d7d0a22d998,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
2332,ed744df645272aa5d7e55d11a7f2da1245fe1b48,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2333,ed744df645272aa5d7e55d11a7f2da1245fe1b48,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2334,ed744df645272aa5d7e55d11a7f2da1245fe1b48,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2335,ed744df645272aa5d7e55d11a7f2da1245fe1b48,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2336,ed744df645272aa5d7e55d11a7f2da1245fe1b48,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2337,ad9c4ebd1c0dd5e60a2be23a8d427c396a769e2b,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2338,ad9c4ebd1c0dd5e60a2be23a8d427c396a769e2b,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2339,ad9c4ebd1c0dd5e60a2be23a8d427c396a769e2b,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2340,ad9c4ebd1c0dd5e60a2be23a8d427c396a769e2b,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2341,ad9c4ebd1c0dd5e60a2be23a8d427c396a769e2b,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2342,d7176578ddd33f0072da11e2fdb044f35a02ce58,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
2343,d7176578ddd33f0072da11e2fdb044f35a02ce58,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
"
2344,41c19b7694d0dad143c4100d92f2a0828dd6d8bf,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2345,b09752397d170fa90d308e08b9cf387fff2c5523,/google-cloud-print-connector/Dockerfile,"# fetch dependencies
# format: import-path=strip-components=tarball-url
"
2346,b09752397d170fa90d308e08b9cf387fff2c5523,/google-cloud-print-connector/Dockerfile,"# https://github.com/coreos/go-systemd/releases
"
2347,b09752397d170fa90d308e08b9cf387fff2c5523,/google-cloud-print-connector/Dockerfile,"# https://github.com/satori/go.uuid/releases
# (https://github.com/satori/go.uuid/commit/0ef6afb2f6cdd6cdaeee3885a95099c63f18fc8c -- hopefully we'll get a newer release than v1.2.0 soonish)
"
2348,b09752397d170fa90d308e08b9cf387fff2c5523,/google-cloud-print-connector/Dockerfile,"# https://github.com/urfave/cli/releases
"
2349,b09752397d170fa90d308e08b9cf387fff2c5523,/google-cloud-print-connector/Dockerfile,"# https://github.com/golang/net/commits/master
"
2350,b09752397d170fa90d308e08b9cf387fff2c5523,/google-cloud-print-connector/Dockerfile,"# https://github.com/golang/oauth2/commits/master
"
2351,b09752397d170fa90d308e08b9cf387fff2c5523,/google-cloud-print-connector/Dockerfile,"# https://bazaar.launchpad.net/~chipaca/go-xdg/v0/files (""view revision"")
# https://bazaar.launchpad.net/~chipaca/go-xdg/v0/revision/10?start_revid=10 (""download tarball"")
"
2352,b09752397d170fa90d308e08b9cf387fff2c5523,/google-cloud-print-connector/Dockerfile,"#*=}""; dep=""${dep%=$strip}""; \
"
2353,b09752397d170fa90d308e08b9cf387fff2c5523,/google-cloud-print-connector/Dockerfile,"#*=}""; strip=""${strip%=$tarball}""; \
"
2354,b09752397d170fa90d308e08b9cf387fff2c5523,/google-cloud-print-connector/Dockerfile,"# https://github.com/google/cloud-print-connector/releases
"
2355,5e43f74eed3d0a438c54af579cdc9767a8d34bac,/steam/Dockerfile,"# add the sources.list stuff that steam will at first start
"
2356,5e43f74eed3d0a438c54af579cdc9767a8d34bac,/steam/Dockerfile,"# let's head off a few of the things steam will want to install immediately
"
2357,5e43f74eed3d0a438c54af579cdc9767a8d34bac,/steam/Dockerfile,"# steam itself needs to be able to install things, and it uses ""sudo"" for that
"
2358,c557a6e5d8e2baa6360fb77f9f2bd0a6326d92a9,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2359,c557a6e5d8e2baa6360fb77f9f2bd0a6326d92a9,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2360,c557a6e5d8e2baa6360fb77f9f2bd0a6326d92a9,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2361,c557a6e5d8e2baa6360fb77f9f2bd0a6326d92a9,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2362,c557a6e5d8e2baa6360fb77f9f2bd0a6326d92a9,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2363,2a0e348c0df1ea1ea0d73cc67d014dc782c723b1,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2364,2a0e348c0df1ea1ea0d73cc67d014dc782c723b1,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
2365,2a0e348c0df1ea1ea0d73cc67d014dc782c723b1,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
2366,f8cd4c54a62ad54b82364171c6a13708ac08c384,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2367,47264e39f6c934379ee29521f0b919416c066e4a,/duplicity/Dockerfile,"# https://bugs.launchpad.net/bugs/1440372 (python3)
"
2368,47264e39f6c934379ee29521f0b919416c066e4a,/duplicity/Dockerfile,"# https://pypi.org/project/b2/
"
2369,47264e39f6c934379ee29521f0b919416c066e4a,/duplicity/Dockerfile,"# duplicity doesn't publish a ""supported b2 modules versions"" list, so I've tried to match the b2 module version to the latest that was available at the time of the current duplicity release
# duplicity 0.7.18.1 is ~27-Aug-2018, b2 1.3.6 is ~21-Aug-2018

"
2370,47264e39f6c934379ee29521f0b919416c066e4a,/duplicity/Dockerfile,"# http://duplicity.nongnu.org/
# https://download.savannah.gnu.org/releases/duplicity/?C=S&O=D
"
2371,47264e39f6c934379ee29521f0b919416c066e4a,/duplicity/Dockerfile,"# https://bazaar.launchpad.net/~duplicity-team/duplicity/0.7-series/view/head:/CHANGELOG

"
2372,da0a68cf460c6b2f8ba4172e4c9e32e4c85ca8b7,/debian/devel/Dockerfile,"# normal build deps
"
2373,da0a68cf460c6b2f8ba4172e4c9e32e4c85ca8b7,/debian/devel/Dockerfile,"# need an editor for ""dch -i""
"
2374,da0a68cf460c6b2f8ba4172e4c9e32e4c85ca8b7,/debian/devel/Dockerfile,"# a few extra little useful things
"
2375,da0a68cf460c6b2f8ba4172e4c9e32e4c85ca8b7,/debian/devel/Dockerfile,"# need deb-src for compiling packages
"
2376,da0a68cf460c6b2f8ba4172e4c9e32e4c85ca8b7,/debian/devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
2377,da0a68cf460c6b2f8ba4172e4c9e32e4c85ca8b7,/debian/devel/Dockerfile,"# for ssh to debian hosts, let's make sure we know their fingerprints <3
"
2378,da0a68cf460c6b2f8ba4172e4c9e32e4c85ca8b7,/debian/devel/Dockerfile,"# make sure things are pretty
"
2379,da0a68cf460c6b2f8ba4172e4c9e32e4c85ca8b7,/debian/devel/Dockerfile,"#(force_color_prompt=yes)/\1/' /root/.bashrc

"
2380,0fe0793b78d3c12711794f50bfa08848ecf4509a,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2381,28a0c426de765f75b4d4c306ba01855d50fb407d,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2382,3930572f8dc8121ae6197edf892ec5ee1d4d10ff,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2383,bdfe12f137b0dc5adb5b3afeb837cfa158d0d218,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2384,bdfe12f137b0dc5adb5b3afeb837cfa158d0d218,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2385,bdfe12f137b0dc5adb5b3afeb837cfa158d0d218,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2386,bdfe12f137b0dc5adb5b3afeb837cfa158d0d218,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2387,bdfe12f137b0dc5adb5b3afeb837cfa158d0d218,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2388,ab9f49e4731ab2c00e86f73e955389dc736f0970,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2389,ab9f49e4731ab2c00e86f73e955389dc736f0970,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2390,ab9f49e4731ab2c00e86f73e955389dc736f0970,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2391,ab9f49e4731ab2c00e86f73e955389dc736f0970,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2392,ab9f49e4731ab2c00e86f73e955389dc736f0970,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2393,7f60ec2716b80a8aa0cbf3d98aade217b9a7e297,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2394,66c68f9df3736a915019032a0db4bc73db28e97e,/moosefs/Dockerfile,"# mfscli (and cgi) are Python-based
"
2395,66c68f9df3736a915019032a0db4bc73db28e97e,/moosefs/Dockerfile,"# mfsmount needs ""fusermount""
"
2396,66c68f9df3736a915019032a0db4bc73db28e97e,/moosefs/Dockerfile,"# allow running mfsmount as non-root
"
2397,66c68f9df3736a915019032a0db4bc73db28e97e,/moosefs/Dockerfile,"#user_allow_other$/user_allow_other/' /etc/fuse.conf

"
2398,66c68f9df3736a915019032a0db4bc73db28e97e,/moosefs/Dockerfile,"# https://github.com/moosefs/moosefs/releases
"
2399,66c68f9df3736a915019032a0db4bc73db28e97e,/moosefs/Dockerfile,"# prep the default configuration so things generally work Out-of-the-Box
"
2400,66c68f9df3736a915019032a0db4bc73db28e97e,/moosefs/Dockerfile,"# allow us to run as an arbitrary user but still modify configuration
"
2401,66c68f9df3736a915019032a0db4bc73db28e97e,/moosefs/Dockerfile,"# prep a scratch space with appropriate permissions to be able to do quick prototyping Out-of-the-Box
"
2402,66c68f9df3736a915019032a0db4bc73db28e97e,/moosefs/Dockerfile,"# without this, the Python-based mfscli ""-f"" flag refuses to use UTF-8 box-drawing characters
"
2403,9d0c717f2edeab3c3709e6c5aa4188035659d679,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2404,9d0c717f2edeab3c3709e6c5aa4188035659d679,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2405,9d0c717f2edeab3c3709e6c5aa4188035659d679,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2406,9d0c717f2edeab3c3709e6c5aa4188035659d679,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2407,9d0c717f2edeab3c3709e6c5aa4188035659d679,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2408,a7550d749adb7208dfe7e17a981db5009f39c174,/diffoscope/Dockerfile,"# xxd (xxd not available in path. Falling back to Python hexlify.)
"
2409,a7550d749adb7208dfe7e17a981db5009f39c174,/diffoscope/Dockerfile,"# readelf ('readelf' not available in path. Falling back to binary comparison.)
"
2410,a7550d749adb7208dfe7e17a981db5009f39c174,/diffoscope/Dockerfile,"# for ""diffoscope --progress""
"
2411,a83ee6864d7757d3bf7d7fe8fb3c93ff2dc7ebf7,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
2412,a83ee6864d7757d3bf7d7fe8fb3c93ff2dc7ebf7,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
2413,a83ee6864d7757d3bf7d7fe8fb3c93ff2dc7ebf7,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
2414,b56b26a8ae918af2c7730fa4d51733026d5ce9f6,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2415,b56b26a8ae918af2c7730fa4d51733026d5ce9f6,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
2416,b56b26a8ae918af2c7730fa4d51733026d5ce9f6,/jenkins/Dockerfile,"# workaround ""apt-key adv --recv-keys"" hanging in stretch and above
"
2417,9465d9816fd36d6332a413dc067a9c5278565e07,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2418,9465d9816fd36d6332a413dc067a9c5278565e07,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
2419,8c5c3d21a39e4abae5c75376cce3efb8de564925,/prometheus/Dockerfile,"# https://github.com/prometheus/prometheus/releases
"
2420,f858a76073c915dfb6c6cf73c4802ffe48c67829,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2421,f858a76073c915dfb6c6cf73c4802ffe48c67829,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2422,f858a76073c915dfb6c6cf73c4802ffe48c67829,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2423,f858a76073c915dfb6c6cf73c4802ffe48c67829,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2424,f858a76073c915dfb6c6cf73c4802ffe48c67829,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2425,7d78ec48009add4023f1fbdce4d71f57e057de59,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2426,7d78ec48009add4023f1fbdce4d71f57e057de59,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
2427,7d78ec48009add4023f1fbdce4d71f57e057de59,/jenkins/Dockerfile,"# https://groups.google.com/d/msg/jenkins-infra/c7m_72vUTXE/37zw9GXhAQAJ
"
2428,7d78ec48009add4023f1fbdce4d71f57e057de59,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
2429,0de707b70e31dee9be4ffc38c1d9cf4697142ac8,/debian/devel/Dockerfile,"# normal build deps
"
2430,0de707b70e31dee9be4ffc38c1d9cf4697142ac8,/debian/devel/Dockerfile,"# need an editor for ""dch -i""
"
2431,0de707b70e31dee9be4ffc38c1d9cf4697142ac8,/debian/devel/Dockerfile,"# a few extra little useful things
"
2432,0de707b70e31dee9be4ffc38c1d9cf4697142ac8,/debian/devel/Dockerfile,"# need deb-src for compiling packages
"
2433,0de707b70e31dee9be4ffc38c1d9cf4697142ac8,/debian/devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
2434,096353d456ad53d8136fe9ac5a7fbd8c1ba9d7c2,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2435,096353d456ad53d8136fe9ac5a7fbd8c1ba9d7c2,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2436,096353d456ad53d8136fe9ac5a7fbd8c1ba9d7c2,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2437,096353d456ad53d8136fe9ac5a7fbd8c1ba9d7c2,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2438,096353d456ad53d8136fe9ac5a7fbd8c1ba9d7c2,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2439,e28e490b3246671cc5bfa93daebbedcc045b6f96,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2440,8f9550871db1330e682362252d9c953b44296db8,/docker-tianon/Dockerfile,"# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
"
2441,269d7d947a24cf610263ee79c91f1d166789da6c,/slack/Dockerfile,"# the .deb file linked at https://slack.com/downloads/instructions/debian includes ""/etc/cron.daily/slack"" which sets up an APT repo entry as in the following installation

# pub   rsa4096 2016-02-18 [SCEA]
#       DB08 5A08 CA13 B8AC B917  E0F6 D938 EC0D 0386 51BD
# uid           [ unknown] https://packagecloud.io/slacktechnologies/slack (https://packagecloud.io/docs#gpg_signing) <support@packagecloud.io>
# sub   rsa4096 2016-02-18 [SEA]
"
2442,269d7d947a24cf610263ee79c91f1d166789da6c,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libX11-xcb.so.1: cannot open shared object file: No such file or directory
"
2443,269d7d947a24cf610263ee79c91f1d166789da6c,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libasound.so.2: cannot open shared object file: No such file or directory
"
2444,3eb65a851f7179f12b34b61182657e59c0700cdd,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2445,3eb65a851f7179f12b34b61182657e59c0700cdd,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2446,3eb65a851f7179f12b34b61182657e59c0700cdd,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2447,3eb65a851f7179f12b34b61182657e59c0700cdd,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2448,3eb65a851f7179f12b34b61182657e59c0700cdd,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2449,4ef5020908bd4026c94be09af3ddf7466fecd702,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2450,4ef5020908bd4026c94be09af3ddf7466fecd702,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2451,4ef5020908bd4026c94be09af3ddf7466fecd702,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2452,4ef5020908bd4026c94be09af3ddf7466fecd702,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2453,4ef5020908bd4026c94be09af3ddf7466fecd702,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2454,391441ad7bf28c2ef1664141ef0079cf3f972529,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2455,391441ad7bf28c2ef1664141ef0079cf3f972529,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2456,391441ad7bf28c2ef1664141ef0079cf3f972529,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2457,391441ad7bf28c2ef1664141ef0079cf3f972529,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2458,391441ad7bf28c2ef1664141ef0079cf3f972529,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2459,97d95dbe5f2d86b9d622ca61fd09ea5b6621817a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2460,97d95dbe5f2d86b9d622ca61fd09ea5b6621817a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2461,97d95dbe5f2d86b9d622ca61fd09ea5b6621817a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2462,97d95dbe5f2d86b9d622ca61fd09ea5b6621817a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2463,97d95dbe5f2d86b9d622ca61fd09ea5b6621817a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2464,6a82e46ec6b44c18883327fb3306e7f66788a7ea,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2465,6a82e46ec6b44c18883327fb3306e7f66788a7ea,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
2466,6a82e46ec6b44c18883327fb3306e7f66788a7ea,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
2467,f1faa5ff7e266c9f683b52494ada25a2970fb475,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2468,f1faa5ff7e266c9f683b52494ada25a2970fb475,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2469,f1faa5ff7e266c9f683b52494ada25a2970fb475,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2470,f1faa5ff7e266c9f683b52494ada25a2970fb475,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2471,f1faa5ff7e266c9f683b52494ada25a2970fb475,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2472,49b491ba2a549cfefb72f56a2e281caf47ffd2ef,/jenkins/slave/debian/Dockerfile,"#?PermitRootLogin[[:space:]].*$/PermitRootLogin yes/g' /etc/ssh/sshd_config

"
2473,49b491ba2a549cfefb72f56a2e281caf47ffd2ef,/jenkins/slave/debian/Dockerfile,"# let's make /root a volume so ~/.ssh/authorized_keys is easier to save
"
2474,0459e55dafaec66e18d15fedee8d68b36a5f4d38,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2475,8ea02ce9bf5774fb8e9e235bf9395c3dae184b27,/wine/Dockerfile,"# https://wiki.winehq.org/Debian

"
2476,8ea02ce9bf5774fb8e9e235bf9395c3dae184b27,/wine/Dockerfile,"# https://dl.winehq.org/wine-builds/debian/dists/buster/main/binary-amd64/?C=N;O=D
# https://www.winehq.org/news/
"
2477,c9466d7a8124e4aac0c05a4ea577418fa1fd13a9,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2478,c9466d7a8124e4aac0c05a4ea577418fa1fd13a9,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
2479,c9466d7a8124e4aac0c05a4ea577418fa1fd13a9,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
2480,355305ddb022155da5469cd2017dda9884dcb15b,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2481,1f13886bfee0eb32b5d8094ee015ef3f793ef7b2,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2482,3a7ff895bcb32535513b5130b0fb1daa510a38bc,/vultr-cli/Dockerfile,"# https://github.com/vultr/vultr-cli/releases
"
2483,3acd11aa49f9fa0999e9a39e7cf882f511c829d4,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2484,88f64e871d3ce0239b23d6200968ffffb0b3577e,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2485,8c3e5b8a4877d8d7a32abd0e24f7ce1ae59205bb,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2486,8c3e5b8a4877d8d7a32abd0e24f7ce1ae59205bb,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2487,8c3e5b8a4877d8d7a32abd0e24f7ce1ae59205bb,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2488,8c3e5b8a4877d8d7a32abd0e24f7ce1ae59205bb,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2489,8c3e5b8a4877d8d7a32abd0e24f7ce1ae59205bb,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2490,ce9ec67b7728293c90211095c85d39fceb2fac9e,/xen-orchestra/Dockerfile,"# see https://xen-orchestra.com/docs/from_the_sources.html

"
2491,ce9ec67b7728293c90211095c85d39fceb2fac9e,/xen-orchestra/Dockerfile,"# https://github.com/vatesfr/xo-server/releases
"
2492,ce9ec67b7728293c90211095c85d39fceb2fac9e,/xen-orchestra/Dockerfile,"# https://github.com/vatesfr/xo-web/releases
"
2493,ce9ec67b7728293c90211095c85d39fceb2fac9e,/xen-orchestra/Dockerfile,"# tone down the NPM log level (default from image is ""info"")
"
2494,ce9ec67b7728293c90211095c85d39fceb2fac9e,/xen-orchestra/Dockerfile,"# https://docs.npmjs.com/misc/config#loglevel

"
2495,ce9ec67b7728293c90211095c85d39fceb2fac9e,/xen-orchestra/Dockerfile,"# workaround: Error: Cannot find module 'jquery' from '/usr/src/xo/web/node_modules/chartist-plugin-tooltip'
"
2496,ce9ec67b7728293c90211095c85d39fceb2fac9e,/xen-orchestra/Dockerfile,"#'/': '/path/to/xo-web/dist/'!'/': '../web/dist/'!"" \
"
2497,ce9ec67b7728293c90211095c85d39fceb2fac9e,/xen-orchestra/Dockerfile,"#uri: redis://.*!uri: 'redis://redis:6379'!"" \
"
2498,054cb14d4825fbe7dbfd30605a3cdf214ab07cfb,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2499,054cb14d4825fbe7dbfd30605a3cdf214ab07cfb,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2500,054cb14d4825fbe7dbfd30605a3cdf214ab07cfb,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2501,054cb14d4825fbe7dbfd30605a3cdf214ab07cfb,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2502,054cb14d4825fbe7dbfd30605a3cdf214ab07cfb,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2503,4651c8e65b80e0acc3d2f7df2de980ee28a03c7a,/familysearch-indexing/Dockerfile,"# TODO add a very lightweight browser for opening help and/or registration
"
2504,0155428d799bc7d60830a1f90b84e2c4fd747b3b,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2505,0155428d799bc7d60830a1f90b84e2c4fd747b3b,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2506,0155428d799bc7d60830a1f90b84e2c4fd747b3b,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2507,0155428d799bc7d60830a1f90b84e2c4fd747b3b,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2508,0155428d799bc7d60830a1f90b84e2c4fd747b3b,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2509,e31dc95f37b5abf08b92e660c7ab27b161b819ea,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2510,e31dc95f37b5abf08b92e660c7ab27b161b819ea,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
2511,e31dc95f37b5abf08b92e660c7ab27b161b819ea,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
2512,fdb030d2f9691e55eb51cc612681d2a152bc547d,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2513,fdb030d2f9691e55eb51cc612681d2a152bc547d,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2514,fdb030d2f9691e55eb51cc612681d2a152bc547d,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2515,fdb030d2f9691e55eb51cc612681d2a152bc547d,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2516,fdb030d2f9691e55eb51cc612681d2a152bc547d,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2517,924d3bc607044dfac90dff7f52fc0f17c770adcd,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2518,8f53c52c8ae91a5cdd82f4914560218b40fc52ae,/apt-cacher-ng/Dockerfile,"# grab tini for signal processing and zombie killing
"
2519,138ec833ba57d5d1909cdf2628417fb8f6f13a8d,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2520,138ec833ba57d5d1909cdf2628417fb8f6f13a8d,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2521,138ec833ba57d5d1909cdf2628417fb8f6f13a8d,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2522,138ec833ba57d5d1909cdf2628417fb8f6f13a8d,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2523,138ec833ba57d5d1909cdf2628417fb8f6f13a8d,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2524,fc87bade551fcc37c5c536a34af8eea25e5880cc,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2525,3dba5f08085312d65aa7c9f7d2d81193368a63ca,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2526,3dba5f08085312d65aa7c9f7d2d81193368a63ca,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2527,3dba5f08085312d65aa7c9f7d2d81193368a63ca,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2528,3dba5f08085312d65aa7c9f7d2d81193368a63ca,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2529,3dba5f08085312d65aa7c9f7d2d81193368a63ca,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2530,5a693e5d28ecce9a94e1f65e0bef941d7b029c7d,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2531,5a693e5d28ecce9a94e1f65e0bef941d7b029c7d,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2532,5a693e5d28ecce9a94e1f65e0bef941d7b029c7d,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2533,5a693e5d28ecce9a94e1f65e0bef941d7b029c7d,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2534,5a693e5d28ecce9a94e1f65e0bef941d7b029c7d,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2535,adb5a60e1b771934bedc98a10c3ff467b500ae9a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2536,adb5a60e1b771934bedc98a10c3ff467b500ae9a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2537,adb5a60e1b771934bedc98a10c3ff467b500ae9a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2538,adb5a60e1b771934bedc98a10c3ff467b500ae9a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2539,adb5a60e1b771934bedc98a10c3ff467b500ae9a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2540,128b57961e2b4280ba422b0056ce2a0c8f101929,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2541,128b57961e2b4280ba422b0056ce2a0c8f101929,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
2542,128b57961e2b4280ba422b0056ce2a0c8f101929,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
2543,128b57961e2b4280ba422b0056ce2a0c8f101929,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
2544,128b57961e2b4280ba422b0056ce2a0c8f101929,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
2545,16410572c11e3784bc81805f8f0c1482988b4b6b,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2546,16410572c11e3784bc81805f8f0c1482988b4b6b,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
2547,16410572c11e3784bc81805f8f0c1482988b4b6b,/jenkins/Dockerfile,"# workaround ""apt-key adv --recv-keys"" hanging in stretch and above
"
2548,c1610b96ffcea268495de6bc01aa9d72c59f9392,/docker-master/dind/Dockerfile,"# https://github.com/docker/docker/blob/master/project/PACKAGERS.md#runtime-dependencies
"
2549,c1610b96ffcea268495de6bc01aa9d72c59f9392,/docker-master/dind/Dockerfile,"# pigz: https://github.com/moby/moby/pull/35697 (faster gzip implementation)
"
2550,c1610b96ffcea268495de6bc01aa9d72c59f9392,/docker-master/dind/Dockerfile,"# only install zfs if it's available for the current architecture
# https://git.alpinelinux.org/aports/tree/main/zfs/APKBUILD?h=3.12-stable#n8 (""all !armhf !armv7"" as of 2020-06-10)
# ""apk info XYZ"" exits with a zero exit code but no output when the package exists but not for this arch
"
2551,c1610b96ffcea268495de6bc01aa9d72c59f9392,/docker-master/dind/Dockerfile,"# TODO aufs-tools

# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
"
2552,c1610b96ffcea268495de6bc01aa9d72c59f9392,/docker-master/dind/Dockerfile,"# https://github.com/docker/docker/tree/master/hack/dind
"
2553,e43383053de8553101f87e8755ecb4ed8fa39c09,/debian/devel/Dockerfile,"# normal build deps
"
2554,e43383053de8553101f87e8755ecb4ed8fa39c09,/debian/devel/Dockerfile,"# need deb-src for compiling packages
"
2555,e43383053de8553101f87e8755ecb4ed8fa39c09,/debian/devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
2556,e43383053de8553101f87e8755ecb4ed8fa39c09,/debian/devel/Dockerfile,"# for ssh to debian hosts, let's make sure we know their fingerprints <3
"
2557,e43383053de8553101f87e8755ecb4ed8fa39c09,/debian/devel/Dockerfile,"# make sure things are pretty
"
2558,e43383053de8553101f87e8755ecb4ed8fa39c09,/debian/devel/Dockerfile,"#(force_color_prompt=yes)/\1/' ~/.bashrc

# quilt is much amaze: https://wiki.debian.org/UsingQuilt#Using_quilt_with_Debian_source_packages
"
2559,fc7c18ee823a09e0ba4e802703a2b3605ab631f6,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2560,fc7c18ee823a09e0ba4e802703a2b3605ab631f6,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2561,fc7c18ee823a09e0ba4e802703a2b3605ab631f6,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2562,fc7c18ee823a09e0ba4e802703a2b3605ab631f6,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2563,fc7c18ee823a09e0ba4e802703a2b3605ab631f6,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2564,df966bd85ec8ee2d918eef64d6a93eeee3cf4930,/docker/master/dind/Dockerfile,"# https://github.com/docker/docker/blob/master/project/PACKAGERS.md#runtime-dependencies
"
2565,df966bd85ec8ee2d918eef64d6a93eeee3cf4930,/docker/master/dind/Dockerfile,"# TODO aufs-tools

"
2566,d2de823a76f253e279d536d038ff22196405f3ec,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2567,d2de823a76f253e279d536d038ff22196405f3ec,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2568,d2de823a76f253e279d536d038ff22196405f3ec,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2569,d2de823a76f253e279d536d038ff22196405f3ec,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2570,d2de823a76f253e279d536d038ff22196405f3ec,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2571,c1610b96ffcea268495de6bc01aa9d72c59f9392,/speedtest/Dockerfile,"# https://www.speedtest.net/apps/cli#download
"
2572,c1610b96ffcea268495de6bc01aa9d72c59f9392,/speedtest/Dockerfile,"# TODO verify that ookla's ""armhf"" really is armv6
"
2573,c1610b96ffcea268495de6bc01aa9d72c59f9392,/speedtest/Dockerfile,"# TODO figure out what ookla means by their bare ""arm"" arch
"
2574,c1610b96ffcea268495de6bc01aa9d72c59f9392,/speedtest/Dockerfile,"#download)""; exit 1 ;; \
"
2575,69ca2840ccf7ada6dbb2b7a945a0702f72f3fe0d,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2576,69ca2840ccf7ada6dbb2b7a945a0702f72f3fe0d,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2577,69ca2840ccf7ada6dbb2b7a945a0702f72f3fe0d,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2578,69ca2840ccf7ada6dbb2b7a945a0702f72f3fe0d,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2579,69ca2840ccf7ada6dbb2b7a945a0702f72f3fe0d,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2580,a28355d960f6fd0e14ba0d68f7ec5428129558f9,/grafana/Dockerfile,"# https://github.com/grafana/grafana/releases
"
2581,a28355d960f6fd0e14ba0d68f7ec5428129558f9,/grafana/Dockerfile,"# https://github.com/grafana/grafana/blob/master/packaging/docker/Dockerfile

"
2582,a28355d960f6fd0e14ba0d68f7ec5428129558f9,/grafana/Dockerfile,"# https://grafana.com/grafana/download/5.3.4?platform=linux
# https://grafana.com/grafana/download/5.3.4?platform=arm
"
2583,a28355d960f6fd0e14ba0d68f7ec5428129558f9,/grafana/Dockerfile,"# TODO verify sha256 values! (add "".sha256"" to the end of this URL)
"
2584,426b8d085f19ed6665832fa648f7023780c85d4d,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2585,426b8d085f19ed6665832fa648f7023780c85d4d,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
2586,426b8d085f19ed6665832fa648f7023780c85d4d,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
2587,61005d09c4ecb1f7919233f930b4af7886b0743f,/phpmyadmin/Dockerfile,"# https://docs.phpmyadmin.net/en/latest/setup.html#verifying-phpmyadmin-releases
"
2588,61005d09c4ecb1f7919233f930b4af7886b0743f,/phpmyadmin/Dockerfile,"# Since July 2015 all phpMyAdmin releases are cryptographically signed by the releasing developer, who through January 2016 was Marc Delisle.
"
2589,61005d09c4ecb1f7919233f930b4af7886b0743f,/phpmyadmin/Dockerfile,"# Beginning in January 2016, the release manager is Isaac Bennetch.
"
2590,61005d09c4ecb1f7919233f930b4af7886b0743f,/phpmyadmin/Dockerfile,"# Some additional downloads (for example themes) might be signed by Michal Čihař.
"
2591,baccd923580c491edbd65ee5fd689a4ccd3cbfb6,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2592,baccd923580c491edbd65ee5fd689a4ccd3cbfb6,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2593,baccd923580c491edbd65ee5fd689a4ccd3cbfb6,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2594,baccd923580c491edbd65ee5fd689a4ccd3cbfb6,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2595,baccd923580c491edbd65ee5fd689a4ccd3cbfb6,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2596,93ffdac93390afcbbae9e38c3266b1d3b5b2a986,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2597,1306d934a37cb298aa089953e595e0208f1e4c91,/sbuild/Dockerfile,"# run with ""--cap-add SYS_ADMIN"" so that sbuild can ""mount"" in the chroots it creates

"
2598,1306d934a37cb298aa089953e595e0208f1e4c91,/sbuild/Dockerfile,"# https://gist.github.com/tianon/a0080cbca558e4b907fe
# (useful sbuild-related scripts)
"
2599,1306d934a37cb298aa089953e595e0208f1e4c91,/sbuild/Dockerfile,"# usage: download-debuerreotype-tarball.sh suite [arch]
#    ie: download-debuerreotype-tarball.sh stretch
#        download-debuerreotype-tarball.sh sid i386
"
2600,17d2dbffa9d9052e7069471850903f4564b9fac6,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2601,17d2dbffa9d9052e7069471850903f4564b9fac6,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2602,17d2dbffa9d9052e7069471850903f4564b9fac6,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2603,17d2dbffa9d9052e7069471850903f4564b9fac6,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2604,17d2dbffa9d9052e7069471850903f4564b9fac6,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2605,398ec0b67805bdf30b2044efb1a47b59fd33d750,/sbuild/Dockerfile,"# run with ""--cap-add SYS_ADMIN"" so that sbuild can ""mount"" in the chroots it creates

"
2606,398ec0b67805bdf30b2044efb1a47b59fd33d750,/sbuild/Dockerfile,"# https://gist.github.com/tianon/a0080cbca558e4b907fe
# (useful sbuild-related scripts)
"
2607,398ec0b67805bdf30b2044efb1a47b59fd33d750,/sbuild/Dockerfile,"# usage: download-debuerreotype-tarball.sh suite [arch]
#    ie: download-debuerreotype-tarball.sh stretch
#        download-debuerreotype-tarball.sh sid i386
"
2608,73efe80da61fcf2c8502070a7b5e562f26ddbf38,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2609,bb56a63b58d48c42fcadfb17eb0ec8b26c41c870,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2610,3acd11aa49f9fa0999e9a39e7cf882f511c829d4,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2611,3acd11aa49f9fa0999e9a39e7cf882f511c829d4,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2612,3acd11aa49f9fa0999e9a39e7cf882f511c829d4,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2613,3acd11aa49f9fa0999e9a39e7cf882f511c829d4,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2614,3acd11aa49f9fa0999e9a39e7cf882f511c829d4,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2615,46db13345e202626e4400d72ce309ed513579805,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2616,46db13345e202626e4400d72ce309ed513579805,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2617,46db13345e202626e4400d72ce309ed513579805,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2618,46db13345e202626e4400d72ce309ed513579805,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2619,46db13345e202626e4400d72ce309ed513579805,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2620,72b00bdd32a9d84da7ccc21fc4c048bd5626fdb9,/debian/ubuntu-devel/Dockerfile,"# let's make apt list package versions, since those are handy during devel
"
2621,72b00bdd32a9d84da7ccc21fc4c048bd5626fdb9,/debian/ubuntu-devel/Dockerfile,"# normal build deps
"
2622,72b00bdd32a9d84da7ccc21fc4c048bd5626fdb9,/debian/ubuntu-devel/Dockerfile,"# if ""tzdata"" is installed with the later set of packages, it uses the ""Readline"" method of prompting for ""debconf"" input, which hangs
"
2623,72b00bdd32a9d84da7ccc21fc4c048bd5626fdb9,/debian/ubuntu-devel/Dockerfile,"# (so we just install it before whatever gets installed that makes debconf think it can/should use Readline)
"
2624,72b00bdd32a9d84da7ccc21fc4c048bd5626fdb9,/debian/ubuntu-devel/Dockerfile,"# get dh-make-golang from Git since it's so rapidly changing
"
2625,72b00bdd32a9d84da7ccc21fc4c048bd5626fdb9,/debian/ubuntu-devel/Dockerfile,"# need deb-src for compiling packages
"
2626,72b00bdd32a9d84da7ccc21fc4c048bd5626fdb9,/debian/ubuntu-devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
2627,72b00bdd32a9d84da7ccc21fc4c048bd5626fdb9,/debian/ubuntu-devel/Dockerfile,"# for ssh to debian hosts, let's make sure we know their fingerprints <3
"
2628,72b00bdd32a9d84da7ccc21fc4c048bd5626fdb9,/debian/ubuntu-devel/Dockerfile,"# make sure things are pretty
"
2629,72b00bdd32a9d84da7ccc21fc4c048bd5626fdb9,/debian/ubuntu-devel/Dockerfile,"#(force_color_prompt=yes)/\1/' ~/.bashrc

# quilt is much amaze: https://wiki.debian.org/UsingQuilt#Using_quilt_with_Debian_source_packages
"
2630,72b00bdd32a9d84da7ccc21fc4c048bd5626fdb9,/debian/ubuntu-devel/Dockerfile,"# make sure pbuilder-dist uses a sane default mirror
"
2631,ac650ad27d85c379a1efed4d912b366dbc47b159,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2632,ac650ad27d85c379a1efed4d912b366dbc47b159,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
2633,ac650ad27d85c379a1efed4d912b366dbc47b159,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
2634,f735e064f9a4547f6df409f366a35ad1053f1cf2,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2635,f735e064f9a4547f6df409f366a35ad1053f1cf2,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2636,f735e064f9a4547f6df409f366a35ad1053f1cf2,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2637,f735e064f9a4547f6df409f366a35ad1053f1cf2,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2638,f735e064f9a4547f6df409f366a35ad1053f1cf2,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2639,ee9f313c3ccbaa7832f9fee07b720175c73d3347,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
2640,e0e0b64006b4937eb90513c06ae0be988385577e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2641,e0e0b64006b4937eb90513c06ae0be988385577e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2642,e0e0b64006b4937eb90513c06ae0be988385577e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2643,e0e0b64006b4937eb90513c06ae0be988385577e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2644,e0e0b64006b4937eb90513c06ae0be988385577e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2645,8c2557f0f265563d87068eb6d4d4c9399803afc4,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2646,8c2557f0f265563d87068eb6d4d4c9399803afc4,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
2647,8c2557f0f265563d87068eb6d4d4c9399803afc4,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
2648,8c2557f0f265563d87068eb6d4d4c9399803afc4,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
2649,8c2557f0f265563d87068eb6d4d4c9399803afc4,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
2650,017e4736a3ce701f20eb2c21868ee0ce113944bc,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2651,017e4736a3ce701f20eb2c21868ee0ce113944bc,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2652,017e4736a3ce701f20eb2c21868ee0ce113944bc,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2653,017e4736a3ce701f20eb2c21868ee0ce113944bc,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2654,017e4736a3ce701f20eb2c21868ee0ce113944bc,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2655,c191b18efcb958ba8923b0a3f87374040ef1abb1,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2656,c191b18efcb958ba8923b0a3f87374040ef1abb1,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2657,c191b18efcb958ba8923b0a3f87374040ef1abb1,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2658,c191b18efcb958ba8923b0a3f87374040ef1abb1,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2659,c191b18efcb958ba8923b0a3f87374040ef1abb1,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2660,c92520f4ef27e3c3b7433e13ff0203bc0c403e99,/google-cloud-print-connector/Dockerfile,"# fetch dependencies
# format: import-path=strip-components=tarball-url
"
2661,c92520f4ef27e3c3b7433e13ff0203bc0c403e99,/google-cloud-print-connector/Dockerfile,"# https://github.com/coreos/go-systemd/releases
"
2662,c92520f4ef27e3c3b7433e13ff0203bc0c403e99,/google-cloud-print-connector/Dockerfile,"# https://github.com/satori/go.uuid/releases
"
2663,c92520f4ef27e3c3b7433e13ff0203bc0c403e99,/google-cloud-print-connector/Dockerfile,"# https://github.com/urfave/cli/releases
"
2664,c92520f4ef27e3c3b7433e13ff0203bc0c403e99,/google-cloud-print-connector/Dockerfile,"# https://github.com/golang/net/commits/master
"
2665,c92520f4ef27e3c3b7433e13ff0203bc0c403e99,/google-cloud-print-connector/Dockerfile,"# https://github.com/golang/oauth2/commits/master
"
2666,c92520f4ef27e3c3b7433e13ff0203bc0c403e99,/google-cloud-print-connector/Dockerfile,"# https://bazaar.launchpad.net/~chipaca/go-xdg/v0/files (""view revision"")
# https://bazaar.launchpad.net/~chipaca/go-xdg/v0/revision/10?start_revid=10 (""download tarball"")
"
2667,c92520f4ef27e3c3b7433e13ff0203bc0c403e99,/google-cloud-print-connector/Dockerfile,"#*=}""; dep=""${dep%=$strip}""; \
"
2668,c92520f4ef27e3c3b7433e13ff0203bc0c403e99,/google-cloud-print-connector/Dockerfile,"#*=}""; strip=""${strip%=$tarball}""; \
"
2669,c92520f4ef27e3c3b7433e13ff0203bc0c403e99,/google-cloud-print-connector/Dockerfile,"# https://github.com/google/cloud-print-connector/releases
#ENV GCPC_VERSION 2016.01.02
"
2670,c92520f4ef27e3c3b7433e13ff0203bc0c403e99,/google-cloud-print-connector/Dockerfile,"# https://github.com/google/cloud-print-connector/commit/d353d01
"
2671,d7a6696162e3dba91128e29293985ded0a3586a9,/makemkv/Dockerfile,"# FPL_MainFeature detection only seemed to work with OpenJDK 9 (8 was insufficient)
"
2672,d7a6696162e3dba91128e29293985ded0a3586a9,/makemkv/Dockerfile,"# This disc requires Java runtime (JRE), but none was found. Certain functions will fail, please install Java. See http://www.makemkv.com/bdjava/ for details.
"
2673,d7a6696162e3dba91128e29293985ded0a3586a9,/makemkv/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
2674,d7a6696162e3dba91128e29293985ded0a3586a9,/makemkv/Dockerfile,"# http://www.makemkv.com/forum2/viewtopic.php?f=3&t=224
"
2675,d7a6696162e3dba91128e29293985ded0a3586a9,/makemkv/Dockerfile,"# beta code: http://www.makemkv.com/forum2/viewtopic.php?f=5&t=1053
"
2676,d7a6696162e3dba91128e29293985ded0a3586a9,/makemkv/Dockerfile,"# pub   dsa2048 2017-05-26 [SC]
#       2ECF 2330 5F1F C0B3 2001  6733 94E3 083A 1804 2697
# uid           [ unknown] MakeMKV (signature) <support@makemkv.com>
"
2677,935dff4705d7ff486f5e065f0c96c8e8788f7ba4,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2678,76c0c42505cbf4bd27f5cab05f6e582ed17683ba,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2679,76c0c42505cbf4bd27f5cab05f6e582ed17683ba,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
2680,76c0c42505cbf4bd27f5cab05f6e582ed17683ba,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
2681,76c0c42505cbf4bd27f5cab05f6e582ed17683ba,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
2682,76c0c42505cbf4bd27f5cab05f6e582ed17683ba,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
2683,3a6dbe6cca83ceb1a83a034644808c6a83397620,/vultr-cli/Dockerfile,"# https://github.com/vultr/vultr-cli/releases
"
2684,a2a8bc28d1f999c38465698b8364c632e7b44760,/debian/ubuntu-devel/Dockerfile,"# normal build deps
"
2685,a2a8bc28d1f999c38465698b8364c632e7b44760,/debian/ubuntu-devel/Dockerfile,"# need deb-src for compiling packages
"
2686,a2a8bc28d1f999c38465698b8364c632e7b44760,/debian/ubuntu-devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
2687,a2a8bc28d1f999c38465698b8364c632e7b44760,/debian/ubuntu-devel/Dockerfile,"# for ssh to debian hosts, let's make sure we know their fingerprints <3
"
2688,a2a8bc28d1f999c38465698b8364c632e7b44760,/debian/ubuntu-devel/Dockerfile,"# make sure things are pretty
"
2689,a2a8bc28d1f999c38465698b8364c632e7b44760,/debian/ubuntu-devel/Dockerfile,"#(force_color_prompt=yes)/\1/' ~/.bashrc

# quilt is much amaze: https://wiki.debian.org/UsingQuilt#Using_quilt_with_Debian_source_packages
"
2690,51e4f7ea5ee821ac208d1f35ca9020f340239a4c,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2691,51e4f7ea5ee821ac208d1f35ca9020f340239a4c,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2692,51e4f7ea5ee821ac208d1f35ca9020f340239a4c,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2693,51e4f7ea5ee821ac208d1f35ca9020f340239a4c,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2694,51e4f7ea5ee821ac208d1f35ca9020f340239a4c,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2695,457708d5019166d98353ac0790107b78a6f52ce1,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2696,457708d5019166d98353ac0790107b78a6f52ce1,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2697,457708d5019166d98353ac0790107b78a6f52ce1,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2698,457708d5019166d98353ac0790107b78a6f52ce1,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2699,457708d5019166d98353ac0790107b78a6f52ce1,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2700,ab4e3950e801ab0b2ae0e0d83abce68fd8a91c2d,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2701,ab4e3950e801ab0b2ae0e0d83abce68fd8a91c2d,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2702,ab4e3950e801ab0b2ae0e0d83abce68fd8a91c2d,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2703,ab4e3950e801ab0b2ae0e0d83abce68fd8a91c2d,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2704,ab4e3950e801ab0b2ae0e0d83abce68fd8a91c2d,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2705,2fcd81f4b98894f2809f7cc8669e9c48f7913d90,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2706,26719a104ed4e4526357603571df6f7a783092a7,/dind/Dockerfile,"#RUN curl -sL https://get.docker.io | sh

# let's grab the lastest ""master"" version of the install.sh script >:)
"
2707,81e708624e4b473d46047358d9efe9d7e3c9397e,/certbot/Dockerfile,"# Executable not found: can't find the executable for the dialog-like program
"
2708,81e708624e4b473d46047358d9efe9d7e3c9397e,/certbot/Dockerfile,"#VOLUME /etc/letsencrypt
"
2709,81e708624e4b473d46047358d9efe9d7e3c9397e,/certbot/Dockerfile,"#VOLUME /var/log/letsencrypt

"
2710,34a0d85720f3848ca2dce67c7421281cf2bd8691,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2711,34a0d85720f3848ca2dce67c7421281cf2bd8691,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2712,34a0d85720f3848ca2dce67c7421281cf2bd8691,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2713,34a0d85720f3848ca2dce67c7421281cf2bd8691,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2714,34a0d85720f3848ca2dce67c7421281cf2bd8691,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2715,92c45713bfcf85d55d6eef4ef46695f91ff9253d,/jenkins/slave/debian/Dockerfile,"#?PermitRootLogin[[:space:]].*$/PermitRootLogin yes/g' /etc/ssh/sshd_config

"
2716,92c45713bfcf85d55d6eef4ef46695f91ff9253d,/jenkins/slave/debian/Dockerfile,"# let's make /root a volume so ~/.ssh/authorized_keys is easier to save
"
2717,5cade3c9608046ca166b92dd4250af57ae4c8204,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2718,5cade3c9608046ca166b92dd4250af57ae4c8204,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2719,5cade3c9608046ca166b92dd4250af57ae4c8204,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2720,5cade3c9608046ca166b92dd4250af57ae4c8204,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2721,5cade3c9608046ca166b92dd4250af57ae4c8204,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2722,65df275755af21849562e320ae2f69edd6437e2e,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2723,65df275755af21849562e320ae2f69edd6437e2e,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
2724,65df275755af21849562e320ae2f69edd6437e2e,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
2725,65df275755af21849562e320ae2f69edd6437e2e,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
2726,65df275755af21849562e320ae2f69edd6437e2e,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
2727,2538d487294a072781e72cd57bc165415d68a6fc,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2728,2538d487294a072781e72cd57bc165415d68a6fc,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2729,2538d487294a072781e72cd57bc165415d68a6fc,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2730,2538d487294a072781e72cd57bc165415d68a6fc,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2731,2538d487294a072781e72cd57bc165415d68a6fc,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2732,b2ab6405be02a06e6832cdfe214e43c90dec48d7,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2733,b2ab6405be02a06e6832cdfe214e43c90dec48d7,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2734,b2ab6405be02a06e6832cdfe214e43c90dec48d7,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2735,b2ab6405be02a06e6832cdfe214e43c90dec48d7,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2736,b2ab6405be02a06e6832cdfe214e43c90dec48d7,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2737,db1b81231b0742a9dca5561572d8f0213d663102,/makemkv/Dockerfile,"# This disc requires Java runtime (JRE), but none was found. Certain functions will fail, please install Java. See http://www.makemkv.com/bdjava/ for details.
"
2738,db1b81231b0742a9dca5561572d8f0213d663102,/makemkv/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
2739,db1b81231b0742a9dca5561572d8f0213d663102,/makemkv/Dockerfile,"# FPL_MainFeature detection only seemed to work with OpenJDK 9 (8 was insufficient)
"
2740,db1b81231b0742a9dca5561572d8f0213d663102,/makemkv/Dockerfile,"# Unable to execute external program 'ccextractor' as its path is not set in preferences
# Failed to execute external program 'ccextractor' from location '/usr/local/bin/mmccextr'
# (but it doesn't exist in the perferences dialog...)
"
2741,db1b81231b0742a9dca5561572d8f0213d663102,/makemkv/Dockerfile,"# http://www.makemkv.com/forum2/viewtopic.php?f=3&t=224
"
2742,db1b81231b0742a9dca5561572d8f0213d663102,/makemkv/Dockerfile,"# beta code: http://www.makemkv.com/forum2/viewtopic.php?f=5&t=1053
"
2743,db1b81231b0742a9dca5561572d8f0213d663102,/makemkv/Dockerfile,"# pub   dsa2048 2017-05-26 [SC]
#       2ECF 2330 5F1F C0B3 2001  6733 94E3 083A 1804 2697
# uid           [ unknown] MakeMKV (signature) <support@makemkv.com>
"
2744,e0704457007309c8a1684ea0906367b4bcb7ad6f,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2745,172c57c7622b0901e904459dac8924ea035a045e,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2746,172c57c7622b0901e904459dac8924ea035a045e,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
2747,172c57c7622b0901e904459dac8924ea035a045e,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
2748,172c57c7622b0901e904459dac8924ea035a045e,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
2749,172c57c7622b0901e904459dac8924ea035a045e,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
2750,0c081246ffed760471a7d8c067f53101eb47dada,/nylas-n1/Dockerfile,"# hijack the browser in the worst way possible
"
2751,0c081246ffed760471a7d8c067f53101eb47dada,/nylas-n1/Dockerfile,"#!/bin/bash'; \
"
2752,babbe8e59860265db6cc27b93c10422aeac9e8ef,/moosefs/Dockerfile,"# mfscli (and cgi) are Python-based
"
2753,babbe8e59860265db6cc27b93c10422aeac9e8ef,/moosefs/Dockerfile,"# mfsmount needs ""fusermount""
"
2754,babbe8e59860265db6cc27b93c10422aeac9e8ef,/moosefs/Dockerfile,"# allow running mfsmount as non-root
"
2755,babbe8e59860265db6cc27b93c10422aeac9e8ef,/moosefs/Dockerfile,"#user_allow_other$/user_allow_other/' /etc/fuse.conf

"
2756,babbe8e59860265db6cc27b93c10422aeac9e8ef,/moosefs/Dockerfile,"# https://github.com/moosefs/moosefs/releases
"
2757,babbe8e59860265db6cc27b93c10422aeac9e8ef,/moosefs/Dockerfile,"# prep the default configuration so things generally work Out-of-the-Box
"
2758,babbe8e59860265db6cc27b93c10422aeac9e8ef,/moosefs/Dockerfile,"# allow us to run as an arbitrary user but still modify configuration
"
2759,babbe8e59860265db6cc27b93c10422aeac9e8ef,/moosefs/Dockerfile,"# prep a scratch space with appropriate permissions to be able to do quick prototyping Out-of-the-Box
"
2760,babbe8e59860265db6cc27b93c10422aeac9e8ef,/moosefs/Dockerfile,"# without this, the Python-based mfscli ""-f"" flag refuses to use UTF-8 box-drawing characters
"
2761,63890b31c522a60ee2b027ffdb3af12c8b268a72,/moosefs/Dockerfile,"# mfscli (and cgi) are Python-based
"
2762,63890b31c522a60ee2b027ffdb3af12c8b268a72,/moosefs/Dockerfile,"# mfsmount needs ""fusermount""
"
2763,63890b31c522a60ee2b027ffdb3af12c8b268a72,/moosefs/Dockerfile,"# https://github.com/moosefs/moosefs/releases
"
2764,63890b31c522a60ee2b027ffdb3af12c8b268a72,/moosefs/Dockerfile,"# prep the default configuration so things generally work Out-of-the-Box
"
2765,63890b31c522a60ee2b027ffdb3af12c8b268a72,/moosefs/Dockerfile,"# allow us to run as an arbitrary user but still modify configuration
"
2766,63890b31c522a60ee2b027ffdb3af12c8b268a72,/moosefs/Dockerfile,"# prep a scratch space with appropriate permissions to be able to do quick prototyping Out-of-the-Box
"
2767,c1610b96ffcea268495de6bc01aa9d72c59f9392,/vultr-cli/Dockerfile,"# https://github.com/vultr/vultr-cli/releases
"
2768,59fcb9b16ae36cda52fad94fed5b1bbdd586c6bc,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2769,59fcb9b16ae36cda52fad94fed5b1bbdd586c6bc,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2770,59fcb9b16ae36cda52fad94fed5b1bbdd586c6bc,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2771,59fcb9b16ae36cda52fad94fed5b1bbdd586c6bc,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2772,59fcb9b16ae36cda52fad94fed5b1bbdd586c6bc,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2773,ca1f5a9c9baec1fd5a611a92b9b81dc15d75dedf,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2774,ca1f5a9c9baec1fd5a611a92b9b81dc15d75dedf,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
2775,ca1f5a9c9baec1fd5a611a92b9b81dc15d75dedf,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
2776,ad001d447cded94b7095d86a54d1bacd7bfa01b4,/ymlfmt/Dockerfile,"# https://pypi.org/project/ruamel.yaml/
"
2777,366a3004f85b9cce5d1bdeafe414c32e1620f646,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2778,366a3004f85b9cce5d1bdeafe414c32e1620f646,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2779,366a3004f85b9cce5d1bdeafe414c32e1620f646,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2780,366a3004f85b9cce5d1bdeafe414c32e1620f646,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2781,366a3004f85b9cce5d1bdeafe414c32e1620f646,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2782,37d2220272ed0a1401d148a3e2e7b77fa79748ec,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2783,37d2220272ed0a1401d148a3e2e7b77fa79748ec,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
2784,37d2220272ed0a1401d148a3e2e7b77fa79748ec,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
2785,37d2220272ed0a1401d148a3e2e7b77fa79748ec,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
2786,37d2220272ed0a1401d148a3e2e7b77fa79748ec,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
2787,248b8c2824eb7e06b0061d2e2e3128fa366e8f31,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2788,a7893ff62f7951e2040665565bcf34fce213cde5,/dell-netextender/Dockerfile,"# https://sslvpn.demo.sonicwall.com
#   u: demo    p: password

"
2789,a7893ff62f7951e2040665565bcf34fce213cde5,/dell-netextender/Dockerfile,"# NetExtender connected successfully. Type ""Ctrl-c"" to disconnect...
"
2790,d2b48a997d4d7460a656c90073673ff34717fe05,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2791,d2b48a997d4d7460a656c90073673ff34717fe05,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2792,d2b48a997d4d7460a656c90073673ff34717fe05,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2793,d2b48a997d4d7460a656c90073673ff34717fe05,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2794,d2b48a997d4d7460a656c90073673ff34717fe05,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2795,0d049a0ae884fc277708605c48fdd000a423ea3a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2796,0d049a0ae884fc277708605c48fdd000a423ea3a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2797,0d049a0ae884fc277708605c48fdd000a423ea3a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2798,0d049a0ae884fc277708605c48fdd000a423ea3a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2799,0d049a0ae884fc277708605c48fdd000a423ea3a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2800,9c425803eaa1fffb5a7d60ecd9113c17e792aaa6,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2801,9c425803eaa1fffb5a7d60ecd9113c17e792aaa6,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2802,9c425803eaa1fffb5a7d60ecd9113c17e792aaa6,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2803,9c425803eaa1fffb5a7d60ecd9113c17e792aaa6,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2804,9c425803eaa1fffb5a7d60ecd9113c17e792aaa6,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2805,344626334570ff9cfc2c10e918490a5118d61082,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2806,344626334570ff9cfc2c10e918490a5118d61082,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2807,344626334570ff9cfc2c10e918490a5118d61082,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2808,344626334570ff9cfc2c10e918490a5118d61082,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2809,344626334570ff9cfc2c10e918490a5118d61082,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2810,c9e98dbeceabcc079642964d5fa63fe3f7132ac1,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2811,92223b00bd53418df36f9900c78054bafa47c673,/network-toolbox/debian/Dockerfile,"# dangit, wireshark-common!  *shakes fist*
"
2812,0365d8d6b1804521c4d3976722b9dc41162054cd,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2813,0365d8d6b1804521c4d3976722b9dc41162054cd,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2814,0365d8d6b1804521c4d3976722b9dc41162054cd,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2815,0365d8d6b1804521c4d3976722b9dc41162054cd,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2816,0365d8d6b1804521c4d3976722b9dc41162054cd,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2817,72917865f8340036af478934e57192e8f79f56f3,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2818,72917865f8340036af478934e57192e8f79f56f3,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2819,72917865f8340036af478934e57192e8f79f56f3,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2820,72917865f8340036af478934e57192e8f79f56f3,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2821,72917865f8340036af478934e57192e8f79f56f3,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2822,40aaf810b550d7e529d0e268d93fb204e1d485e3,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2823,40aaf810b550d7e529d0e268d93fb204e1d485e3,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2824,40aaf810b550d7e529d0e268d93fb204e1d485e3,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2825,40aaf810b550d7e529d0e268d93fb204e1d485e3,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2826,40aaf810b550d7e529d0e268d93fb204e1d485e3,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2827,c7e314083217d7a57077e3d5206e33a4d038cdf6,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2828,c7e314083217d7a57077e3d5206e33a4d038cdf6,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2829,c7e314083217d7a57077e3d5206e33a4d038cdf6,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2830,c7e314083217d7a57077e3d5206e33a4d038cdf6,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2831,c7e314083217d7a57077e3d5206e33a4d038cdf6,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2832,d7228f9cc76020e375c8c933538d6ca008df5b01,/slack/Dockerfile,"# the .deb file linked at https://slack.com/downloads/instructions/debian includes ""/etc/cron.daily/slack"" which sets up an APT repo entry as in the following installation

# pub   rsa4096 2016-02-18 [SCEA]
#       DB08 5A08 CA13 B8AC B917  E0F6 D938 EC0D 0386 51BD
# uid           [ unknown] https://packagecloud.io/slacktechnologies/slack (https://packagecloud.io/docs#gpg_signing) <support@packagecloud.io>
# sub   rsa4096 2016-02-18 [SEA]
"
2833,d7228f9cc76020e375c8c933538d6ca008df5b01,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libX11-xcb.so.1: cannot open shared object file: No such file or directory
"
2834,d7228f9cc76020e375c8c933538d6ca008df5b01,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libasound.so.2: cannot open shared object file: No such file or directory
"
2835,7bb7b72637a7c79aefe7e93ba98bb3f1fdeeaeeb,/makemkv/Dockerfile,"# FPL_MainFeature detection only seemed to work with OpenJDK 9 (8 was insufficient)
"
2836,7bb7b72637a7c79aefe7e93ba98bb3f1fdeeaeeb,/makemkv/Dockerfile,"# This disc requires Java runtime (JRE), but none was found. Certain functions will fail, please install Java. See http://www.makemkv.com/bdjava/ for details.
"
2837,7bb7b72637a7c79aefe7e93ba98bb3f1fdeeaeeb,/makemkv/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
2838,7bb7b72637a7c79aefe7e93ba98bb3f1fdeeaeeb,/makemkv/Dockerfile,"# http://www.makemkv.com/forum2/viewtopic.php?f=3&t=224
"
2839,7bb7b72637a7c79aefe7e93ba98bb3f1fdeeaeeb,/makemkv/Dockerfile,"# beta code: http://www.makemkv.com/forum2/viewtopic.php?f=5&t=1053
"
2840,7bb7b72637a7c79aefe7e93ba98bb3f1fdeeaeeb,/makemkv/Dockerfile,"# pub   dsa2048 2017-05-26 [SC]
#       2ECF 2330 5F1F C0B3 2001  6733 94E3 083A 1804 2697
# uid           [ unknown] MakeMKV (signature) <support@makemkv.com>
"
2841,13276e7f7db6987293c50a577366c06ab8a31426,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2842,893f0de110037acd89e26339478ad0606cf1d870,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2843,4d0e823edf49df40f5645ad435f3c59858d8b348,/mutt-gmail/Dockerfile,"# a browser is necessary!
"
2844,4d0e823edf49df40f5645ad435f3c59858d8b348,/mutt-gmail/Dockerfile,"# my preferred editor :) (see also muttrc)
"
2845,5dd4032771cdabfa70c571865e2e509361cdb7cd,/docker/master/dind/Dockerfile,"# https://github.com/docker/docker/blob/master/project/PACKAGERS.md#runtime-dependencies
"
2846,5dd4032771cdabfa70c571865e2e509361cdb7cd,/docker/master/dind/Dockerfile,"# TODO aufs-tools

"
2847,2692bacca1472d4e541d868a081010cd52a5d9c2,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2848,2692bacca1472d4e541d868a081010cd52a5d9c2,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2849,2692bacca1472d4e541d868a081010cd52a5d9c2,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2850,2692bacca1472d4e541d868a081010cd52a5d9c2,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2851,2692bacca1472d4e541d868a081010cd52a5d9c2,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2852,aa3781660488d18f80dc62d06c3a89f9ca5a1983,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2853,aa3781660488d18f80dc62d06c3a89f9ca5a1983,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2854,aa3781660488d18f80dc62d06c3a89f9ca5a1983,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2855,aa3781660488d18f80dc62d06c3a89f9ca5a1983,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2856,aa3781660488d18f80dc62d06c3a89f9ca5a1983,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2857,270da768cfa905e7eea007f4a1680ff88ef1053a,/debian/devel/Dockerfile,"# normal build deps
"
2858,270da768cfa905e7eea007f4a1680ff88ef1053a,/debian/devel/Dockerfile,"# need an editor for ""dch -i""
"
2859,270da768cfa905e7eea007f4a1680ff88ef1053a,/debian/devel/Dockerfile,"# a few extra little useful things
"
2860,270da768cfa905e7eea007f4a1680ff88ef1053a,/debian/devel/Dockerfile,"# need deb-src for compiling packages
"
2861,270da768cfa905e7eea007f4a1680ff88ef1053a,/debian/devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
2862,270da768cfa905e7eea007f4a1680ff88ef1053a,/debian/devel/Dockerfile,"# for ssh to debian hosts, let's make sure we know their fingerprints <3
"
2863,270da768cfa905e7eea007f4a1680ff88ef1053a,/debian/devel/Dockerfile,"# make sure things are pretty
"
2864,270da768cfa905e7eea007f4a1680ff88ef1053a,/debian/devel/Dockerfile,"#(force_color_prompt=yes)/\1/' /root/.bashrc

"
2865,665b1d58050970c36889d2da50e2850cf968c411,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
2866,78a0d3bd7e4171bc6ce4c89820f1ce2004721e46,/prometheus/Dockerfile,"# https://github.com/prometheus/prometheus/releases
"
2867,8586d97039307c3458571c0010b5a193163177b2,/mongodb-mms/Dockerfile,"# see https://mms.mongodb.com/settings/monitoring-agent
# click on ""Ubuntu 12.04+""
"
2868,8586d97039307c3458571c0010b5a193163177b2,/mongodb-mms/Dockerfile,"# missing dep in mms.deb
"
2869,425a56e2b7521951c9ce078b03c3b2acfeafd232,/prometheus/Dockerfile,"# https://github.com/prometheus/prometheus/releases
"
2870,cb80e133eb81e481c2e84a301f53c5d1a79711a1,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2871,cb80e133eb81e481c2e84a301f53c5d1a79711a1,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2872,cb80e133eb81e481c2e84a301f53c5d1a79711a1,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2873,cb80e133eb81e481c2e84a301f53c5d1a79711a1,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2874,cb80e133eb81e481c2e84a301f53c5d1a79711a1,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2875,f6a827ea67a070853eedc8572187646b4198f736,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2876,3469a82bad8889891a879efaa876e4b69c1f8773,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2877,5b9d246a0fedf5d0e1e1c476ecf852c68886db1e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2878,5b9d246a0fedf5d0e1e1c476ecf852c68886db1e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2879,5b9d246a0fedf5d0e1e1c476ecf852c68886db1e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2880,5b9d246a0fedf5d0e1e1c476ecf852c68886db1e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2881,5b9d246a0fedf5d0e1e1c476ecf852c68886db1e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2882,b96997b7dc27b55b3ce2f4a15b7ccd8596d5801b,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2883,b96997b7dc27b55b3ce2f4a15b7ccd8596d5801b,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
2884,b96997b7dc27b55b3ce2f4a15b7ccd8596d5801b,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
2885,b96997b7dc27b55b3ce2f4a15b7ccd8596d5801b,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
2886,b96997b7dc27b55b3ce2f4a15b7ccd8596d5801b,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
2887,0cd2aa7e1444671568523b0ae65ba8fbdf2132eb,/xen-orchestra/Dockerfile,"# see https://xen-orchestra.com/docs/from_the_sources.html

"
2888,0cd2aa7e1444671568523b0ae65ba8fbdf2132eb,/xen-orchestra/Dockerfile,"# https://github.com/nodejs/node-gyp/releases
"
2889,0cd2aa7e1444671568523b0ae65ba8fbdf2132eb,/xen-orchestra/Dockerfile,"# https://github.com/vatesfr/xen-orchestra/releases
"
2890,0cd2aa7e1444671568523b0ae65ba8fbdf2132eb,/xen-orchestra/Dockerfile,"#		-e ""s!#'/' = '/path/to/xo-web/dist/'!'/' = '../xo-web/dist/'!"" \
"
2891,0cd2aa7e1444671568523b0ae65ba8fbdf2132eb,/xen-orchestra/Dockerfile,"#uri = 'redis://.*'!uri = 'redis://redis:6379'!"" \
"
2892,0cd2aa7e1444671568523b0ae65ba8fbdf2132eb,/xen-orchestra/Dockerfile,"#' config.toml | grep '../xo-web/dist'; \
"
2893,a05651ccb4fc5a4f1168c3b9c3506bdd631b42b8,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2894,a05651ccb4fc5a4f1168c3b9c3506bdd631b42b8,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2895,a05651ccb4fc5a4f1168c3b9c3506bdd631b42b8,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2896,a05651ccb4fc5a4f1168c3b9c3506bdd631b42b8,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2897,a05651ccb4fc5a4f1168c3b9c3506bdd631b42b8,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2898,53584982fc2064909657bf4c5ec814f7579812af,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2899,9bc9748dbf8b17bf3134b8cf9e7db1f917a1b0da,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2900,9bc9748dbf8b17bf3134b8cf9e7db1f917a1b0da,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
2901,9bc9748dbf8b17bf3134b8cf9e7db1f917a1b0da,/jenkins/Dockerfile,"# workaround ""apt-key adv --recv-keys"" hanging in stretch and above
"
2902,44687d606463463587a7e817118a969fa455f0fe,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2903,44687d606463463587a7e817118a969fa455f0fe,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2904,44687d606463463587a7e817118a969fa455f0fe,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2905,44687d606463463587a7e817118a969fa455f0fe,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2906,44687d606463463587a7e817118a969fa455f0fe,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2907,8be6909e51a43ab60512cdfbff2e9f5b94c07faa,/phpmyadmin/Dockerfile,"# https://www.phpmyadmin.net/downloads/
"
2908,8be6909e51a43ab60512cdfbff2e9f5b94c07faa,/phpmyadmin/Dockerfile,"# https://docs.phpmyadmin.net/en/latest/setup.html#verifying-phpmyadmin-releases
"
2909,8be6909e51a43ab60512cdfbff2e9f5b94c07faa,/phpmyadmin/Dockerfile,"# Since July 2015 all phpMyAdmin releases are cryptographically signed by the releasing developer, who through January 2016 was Marc Delisle.
"
2910,8be6909e51a43ab60512cdfbff2e9f5b94c07faa,/phpmyadmin/Dockerfile,"# Beginning in January 2016, the release manager is Isaac Bennetch.
"
2911,8be6909e51a43ab60512cdfbff2e9f5b94c07faa,/phpmyadmin/Dockerfile,"# Some additional downloads (for example themes) might be signed by Michal Čihař.
"
2912,42e5cbeac65f52d4b14d92abba0676e0fd7f7060,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2913,42e5cbeac65f52d4b14d92abba0676e0fd7f7060,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2914,42e5cbeac65f52d4b14d92abba0676e0fd7f7060,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2915,42e5cbeac65f52d4b14d92abba0676e0fd7f7060,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2916,42e5cbeac65f52d4b14d92abba0676e0fd7f7060,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2917,a15ea30768d23dee45b4077d2734995483223de3,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2918,a15ea30768d23dee45b4077d2734995483223de3,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2919,a15ea30768d23dee45b4077d2734995483223de3,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2920,a15ea30768d23dee45b4077d2734995483223de3,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2921,a15ea30768d23dee45b4077d2734995483223de3,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2922,986d99d1ce8369673d44432ca7174ab09bc649b8,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2923,986d99d1ce8369673d44432ca7174ab09bc649b8,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2924,986d99d1ce8369673d44432ca7174ab09bc649b8,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2925,986d99d1ce8369673d44432ca7174ab09bc649b8,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2926,986d99d1ce8369673d44432ca7174ab09bc649b8,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2927,cc0cae5285d3e7cb914751c0a7dd0a7e8b6281ed,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2928,cc0cae5285d3e7cb914751c0a7dd0a7e8b6281ed,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2929,cc0cae5285d3e7cb914751c0a7dd0a7e8b6281ed,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2930,cc0cae5285d3e7cb914751c0a7dd0a7e8b6281ed,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2931,cc0cae5285d3e7cb914751c0a7dd0a7e8b6281ed,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2932,409d3657ab971168dfbfbb674a44770dcfe6a9df,/google-cloud-print-connector/Dockerfile,"# fetch dependencies
# format: import-path=strip-components=tarball-url
"
2933,409d3657ab971168dfbfbb674a44770dcfe6a9df,/google-cloud-print-connector/Dockerfile,"# https://github.com/coreos/go-systemd/releases
"
2934,409d3657ab971168dfbfbb674a44770dcfe6a9df,/google-cloud-print-connector/Dockerfile,"# https://github.com/satori/go.uuid/releases
# (https://github.com/satori/go.uuid/commit/0ef6afb2f6cdd6cdaeee3885a95099c63f18fc8c -- hopefully we'll get a newer release than v1.2.0 soonish)
"
2935,409d3657ab971168dfbfbb674a44770dcfe6a9df,/google-cloud-print-connector/Dockerfile,"# https://github.com/urfave/cli/releases
"
2936,409d3657ab971168dfbfbb674a44770dcfe6a9df,/google-cloud-print-connector/Dockerfile,"# https://github.com/golang/net/commits/master
"
2937,409d3657ab971168dfbfbb674a44770dcfe6a9df,/google-cloud-print-connector/Dockerfile,"# https://github.com/golang/oauth2/commits/master
"
2938,409d3657ab971168dfbfbb674a44770dcfe6a9df,/google-cloud-print-connector/Dockerfile,"# https://bazaar.launchpad.net/~chipaca/go-xdg/v0/files (""view revision"")
# https://bazaar.launchpad.net/~chipaca/go-xdg/v0/revision/10?start_revid=10 (""download tarball"")
"
2939,409d3657ab971168dfbfbb674a44770dcfe6a9df,/google-cloud-print-connector/Dockerfile,"#*=}""; dep=""${dep%=$strip}""; \
"
2940,409d3657ab971168dfbfbb674a44770dcfe6a9df,/google-cloud-print-connector/Dockerfile,"#*=}""; strip=""${strip%=$tarball}""; \
"
2941,409d3657ab971168dfbfbb674a44770dcfe6a9df,/google-cloud-print-connector/Dockerfile,"# https://github.com/google/cloud-print-connector/releases
"
2942,d8d99c1b533f3a28754fcb2a077ecb7412a1a3f6,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2943,d8d99c1b533f3a28754fcb2a077ecb7412a1a3f6,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
2944,d8d99c1b533f3a28754fcb2a077ecb7412a1a3f6,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
2945,d8d99c1b533f3a28754fcb2a077ecb7412a1a3f6,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
2946,d8d99c1b533f3a28754fcb2a077ecb7412a1a3f6,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
2947,c5adce384762580e375bf9bfa926c0e97b7a8049,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2948,c5adce384762580e375bf9bfa926c0e97b7a8049,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2949,c5adce384762580e375bf9bfa926c0e97b7a8049,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2950,c5adce384762580e375bf9bfa926c0e97b7a8049,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2951,c5adce384762580e375bf9bfa926c0e97b7a8049,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2952,3b1a89cb7aba7e26f858655104219027daaf03eb,/mongodb-mms/Dockerfile,"# see https://mms.mongodb.com/settings/monitoring-agent
# click on ""Ubuntu 12.04+""
"
2953,beba7e816615182c99fcb2ad952c7307994275d1,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2954,beba7e816615182c99fcb2ad952c7307994275d1,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2955,beba7e816615182c99fcb2ad952c7307994275d1,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2956,beba7e816615182c99fcb2ad952c7307994275d1,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2957,beba7e816615182c99fcb2ad952c7307994275d1,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2958,a7587d199c84393313504278ea6091815968cf8e,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2959,ffdbf1c1c08068890a46565907c160be7b06d86f,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2960,c850c4e79e7a661bf983685b04c9c00d4a20700c,/docker/master/dind/Dockerfile,"# https://github.com/docker/docker/blob/master/project/PACKAGERS.md#runtime-dependencies
"
2961,c850c4e79e7a661bf983685b04c9c00d4a20700c,/docker/master/dind/Dockerfile,"# TODO aufs-tools

# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
"
2962,18d81c87b3147eaead94bd97ad5435a314038d94,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2963,18d81c87b3147eaead94bd97ad5435a314038d94,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2964,18d81c87b3147eaead94bd97ad5435a314038d94,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2965,18d81c87b3147eaead94bd97ad5435a314038d94,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2966,18d81c87b3147eaead94bd97ad5435a314038d94,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2967,d00266fb3098b8082e1b563fdf43494861f775d0,/golang/tip/Dockerfile,"# gcc for cgo
"
2968,e7c87c2f8c28a0063cba924bc47b5f817cd0cc66,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2969,e7c87c2f8c28a0063cba924bc47b5f817cd0cc66,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
2970,e7c87c2f8c28a0063cba924bc47b5f817cd0cc66,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
2971,c92df2c46d5b77849e097d618bb3b14329b9e68f,/apt-cacher-ng/Dockerfile,"# grab tini for signal processing and zombie killing
"
2972,fdddbc5aaaef5bb1d642859ea4c61661ac8fd50d,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2973,fdddbc5aaaef5bb1d642859ea4c61661ac8fd50d,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2974,fdddbc5aaaef5bb1d642859ea4c61661ac8fd50d,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2975,fdddbc5aaaef5bb1d642859ea4c61661ac8fd50d,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2976,fdddbc5aaaef5bb1d642859ea4c61661ac8fd50d,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2977,6e28b826d2ce33a30a17361eca7a106465f0d55c,/diffoscope/Dockerfile,"# xxd (xxd not available in path. Falling back to Python hexlify.)
"
2978,6e28b826d2ce33a30a17361eca7a106465f0d55c,/diffoscope/Dockerfile,"# readelf ('readelf' not available in path. Falling back to binary comparison.)
"
2979,6e28b826d2ce33a30a17361eca7a106465f0d55c,/diffoscope/Dockerfile,"# for ""diffoscope --progress""
"
2980,f4999a30055dfbf9acb1ae8d38000ee26e3384dc,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
2981,f4999a30055dfbf9acb1ae8d38000ee26e3384dc,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
2982,af115d6930843fa13870717865595f7337cf2723,/docker/master/dind/Dockerfile,"# https://github.com/docker/docker/blob/master/project/PACKAGERS.md#runtime-dependencies
"
2983,af115d6930843fa13870717865595f7337cf2723,/docker/master/dind/Dockerfile,"# TODO aufs-tools

"
2984,e3872662187caddf9bf72536532a2e197df12b51,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2985,e3872662187caddf9bf72536532a2e197df12b51,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
2986,e3872662187caddf9bf72536532a2e197df12b51,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
2987,e3872662187caddf9bf72536532a2e197df12b51,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
2988,e3872662187caddf9bf72536532a2e197df12b51,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
2989,12be212ad2942a0a6885f607bddfad0690cec078,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2990,b1f253c879c8a0a3e2d12621afd95338dd738fa8,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2991,b1f253c879c8a0a3e2d12621afd95338dd738fa8,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2992,b1f253c879c8a0a3e2d12621afd95338dd738fa8,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2993,b1f253c879c8a0a3e2d12621afd95338dd738fa8,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2994,b1f253c879c8a0a3e2d12621afd95338dd738fa8,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2995,a1195511b1e879027969e2ea111b72156209bc96,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2996,a1195511b1e879027969e2ea111b72156209bc96,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2997,a1195511b1e879027969e2ea111b72156209bc96,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2998,a1195511b1e879027969e2ea111b72156209bc96,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2999,a1195511b1e879027969e2ea111b72156209bc96,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3000,129bdab7ce06be9c42dd7358bb11126a30b8ae8b,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3001,129bdab7ce06be9c42dd7358bb11126a30b8ae8b,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3002,129bdab7ce06be9c42dd7358bb11126a30b8ae8b,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3003,129bdab7ce06be9c42dd7358bb11126a30b8ae8b,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3004,129bdab7ce06be9c42dd7358bb11126a30b8ae8b,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3005,11134dfaceb7babe51a0af335312fc790c9df1a9,/debian/devel/Dockerfile,"# normal build deps
"
3006,11134dfaceb7babe51a0af335312fc790c9df1a9,/debian/devel/Dockerfile,"# need an editor for ""dch -i""
"
3007,11134dfaceb7babe51a0af335312fc790c9df1a9,/debian/devel/Dockerfile,"# a few extra little useful things
"
3008,11134dfaceb7babe51a0af335312fc790c9df1a9,/debian/devel/Dockerfile,"# need deb-src for compiling packages
"
3009,11134dfaceb7babe51a0af335312fc790c9df1a9,/debian/devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
3010,b0439f03e5d80a0ce35b2cec5d03337075a8176e,/skype/Dockerfile,"# see https://repo.skype.com

"
3011,b0439f03e5d80a0ce35b2cec5d03337075a8176e,/skype/Dockerfile,"# wget is invoked by skypeforlinux for crash reports
"
3012,b0439f03e5d80a0ce35b2cec5d03337075a8176e,/skype/Dockerfile,"# https://repo.skype.com/data/SKYPE-GPG-KEY
"
3013,b0439f03e5d80a0ce35b2cec5d03337075a8176e,/skype/Dockerfile,"# pub   2048R/DF7587C3 2016-06-22 [expires: 2021-06-21]
#       Key fingerprint = D404 0146 BE39 7250 9FD5  7FC7 1F30 45A5 DF75 87C3
# uid                  Skype Linux Client Repository <se-um@microsoft.com>
# sub   2048R/A4EBB320 2016-06-22 [expires: 2021-06-21]
"
3014,2fa5b282789d3750876aefbca4b59af53e342109,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3015,fc922fb7ab517175ce5543424942a5a626b548ac,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3016,fc922fb7ab517175ce5543424942a5a626b548ac,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3017,fc922fb7ab517175ce5543424942a5a626b548ac,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3018,fc922fb7ab517175ce5543424942a5a626b548ac,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3019,fc922fb7ab517175ce5543424942a5a626b548ac,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3020,07d936bb28499e01849651d60792c4f7e20d9218,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3021,13401c118206836eed641a76e3f055e48d2644c1,/makemkv/Dockerfile,"# This disc requires Java runtime (JRE), but none was found. Certain functions will fail, please install Java. See http://www.makemkv.com/bdjava/ for details.
"
3022,13401c118206836eed641a76e3f055e48d2644c1,/makemkv/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
3023,13401c118206836eed641a76e3f055e48d2644c1,/makemkv/Dockerfile,"# FPL_MainFeature detection only seemed to work with OpenJDK 9 (8 was insufficient)
"
3024,13401c118206836eed641a76e3f055e48d2644c1,/makemkv/Dockerfile,"# Unable to execute external program 'ccextractor' as its path is not set in preferences
# Failed to execute external program 'ccextractor' from location '/usr/local/bin/mmccextr'
# (but it doesn't exist in the perferences dialog...)
"
3025,13401c118206836eed641a76e3f055e48d2644c1,/makemkv/Dockerfile,"# http://www.makemkv.com/forum2/viewtopic.php?f=3&t=224
"
3026,13401c118206836eed641a76e3f055e48d2644c1,/makemkv/Dockerfile,"# beta code: http://www.makemkv.com/forum2/viewtopic.php?f=5&t=1053
"
3027,13401c118206836eed641a76e3f055e48d2644c1,/makemkv/Dockerfile,"# pub   dsa2048 2017-05-26 [SC]
#       2ECF 2330 5F1F C0B3 2001  6733 94E3 083A 1804 2697
# uid           [ unknown] MakeMKV (signature) <support@makemkv.com>
"
3028,5f053bb00f6af3fad9a1a742cfbd689818160c2c,/caff/Dockerfile,"# TODO move this down when COPY adheres to USER (and remove chown)
"
3029,94b1e6513a9a61a9d3433942124f1ffbff052808,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
3030,94b1e6513a9a61a9d3433942124f1ffbff052808,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
3031,94b1e6513a9a61a9d3433942124f1ffbff052808,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
3032,df69bcaf2b2d06c4d134fcde9fac7f565a6692f1,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
3033,df69bcaf2b2d06c4d134fcde9fac7f565a6692f1,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
3034,df69bcaf2b2d06c4d134fcde9fac7f565a6692f1,/jenkins/Dockerfile,"# workaround ""apt-key adv --recv-keys"" hanging in stretch and above
"
3035,a4d60e208e10707d12aa72b1408b758a1253a0c0,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
3036,a4d60e208e10707d12aa72b1408b758a1253a0c0,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
3037,a4d60e208e10707d12aa72b1408b758a1253a0c0,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
3038,59b7cb4b0b92ee19fec10ea7bb4ef6c1dca11626,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3039,6c47b25e682f68b2010252d0c5e1b1fcae03238a,/tinygo/Dockerfile,"# the .deb (as of 0.6.0) installs to /usr/local/tinygo but doesn't add ""tinygo"" to PATH
"
3040,6c47b25e682f68b2010252d0c5e1b1fcae03238a,/tinygo/Dockerfile,"# https://tinygo.org/getting-started/linux/

# https://github.com/tinygo-org/tinygo/releases
"
3041,127f4a75b80eeed24dac67b048395fd5049f2211,/docker-tianon/Dockerfile,"# https://doi-janky.infosiftr.net/job/tianon/job/docker-deb/job/repo/lastSuccessfulBuild/artifact/pool/stretch/main/amd64/
"
3042,127f4a75b80eeed24dac67b048395fd5049f2211,/docker-tianon/Dockerfile,"# https://github.com/docker-library/docker/pull/166
#   dockerd-entrypoint.sh uses DOCKER_TLS_CERTDIR for auto-generating TLS certificates
#   docker-entrypoint.sh uses DOCKER_TLS_CERTDIR for auto-setting DOCKER_TLS_VERIFY and DOCKER_CERT_PATH
# (For this to work, at least the ""client"" subdirectory of this path needs to be shared between the client and server containers via a volume, ""docker cp"", or other means of data sharing.)
"
3043,127f4a75b80eeed24dac67b048395fd5049f2211,/docker-tianon/Dockerfile,"# also, ensure the directory pre-exists and has wide enough permissions for ""dockerd-entrypoint.sh"" to create subdirectories, even when run in ""rootless"" mode
"
3044,127f4a75b80eeed24dac67b048395fd5049f2211,/docker-tianon/Dockerfile,"# (doing both /certs and /certs/client so that if Docker does a ""copy-up"" into a volume defined on /certs/client, it will ""do the right thing"" by default in a way that still works for rootless users)

"
3045,127f4a75b80eeed24dac67b048395fd5049f2211,/docker-tianon/Dockerfile,"# dind

"
3046,127f4a75b80eeed24dac67b048395fd5049f2211,/docker-tianon/Dockerfile,"# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
"
3047,4bffe177d0335d3e0e337bc7987635fc14b3fa27,/sbuild/Dockerfile,"# run with ""--cap-add SYS_ADMIN"" so that sbuild can ""mount"" in the chroots it creates

"
3048,4bffe177d0335d3e0e337bc7987635fc14b3fa27,/sbuild/Dockerfile,"# usage: download-debuerreotype-tarball.sh suite [arch]
#    ie: download-debuerreotype-tarball.sh stretch
#        download-debuerreotype-tarball.sh sid i386
"
3049,d108f55b9c2c6b2636128a2a17655bfd9784fe84,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3050,114edd6676fbe3b53536eaa04725c67b6d5fe499,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3051,114edd6676fbe3b53536eaa04725c67b6d5fe499,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3052,114edd6676fbe3b53536eaa04725c67b6d5fe499,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3053,114edd6676fbe3b53536eaa04725c67b6d5fe499,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3054,114edd6676fbe3b53536eaa04725c67b6d5fe499,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3055,afc93ab93e8dbb63c2afaf9941ad5eab9d615ae8,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3056,afc93ab93e8dbb63c2afaf9941ad5eab9d615ae8,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3057,afc93ab93e8dbb63c2afaf9941ad5eab9d615ae8,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3058,afc93ab93e8dbb63c2afaf9941ad5eab9d615ae8,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3059,afc93ab93e8dbb63c2afaf9941ad5eab9d615ae8,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3060,67ae20e42928df97969e9e415062f6ad4b33b93b,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
3061,67ae20e42928df97969e9e415062f6ad4b33b93b,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
3062,67ae20e42928df97969e9e415062f6ad4b33b93b,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
3063,cb404fae4dd64deb512cf58b2d5d471b7800e930,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3064,cb404fae4dd64deb512cf58b2d5d471b7800e930,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3065,cb404fae4dd64deb512cf58b2d5d471b7800e930,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3066,cb404fae4dd64deb512cf58b2d5d471b7800e930,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3067,cb404fae4dd64deb512cf58b2d5d471b7800e930,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3068,86156e43037c8e9b68de567c9133d07e158c4159,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
3069,57d61884ee8ea9898cad13c77b4292e26de2079f,/ymlfmt/Dockerfile,"# https://pypi.org/project/ruamel.yaml/
"
3070,20b80a2837c2d379d4742aaa1b31fa36a8f24b98,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3071,20b80a2837c2d379d4742aaa1b31fa36a8f24b98,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3072,20b80a2837c2d379d4742aaa1b31fa36a8f24b98,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3073,20b80a2837c2d379d4742aaa1b31fa36a8f24b98,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3074,20b80a2837c2d379d4742aaa1b31fa36a8f24b98,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3075,558d4b8ae4e1dc7bf6bdc7e91f82915f8f0e78ec,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3076,558d4b8ae4e1dc7bf6bdc7e91f82915f8f0e78ec,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3077,558d4b8ae4e1dc7bf6bdc7e91f82915f8f0e78ec,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3078,558d4b8ae4e1dc7bf6bdc7e91f82915f8f0e78ec,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3079,558d4b8ae4e1dc7bf6bdc7e91f82915f8f0e78ec,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3080,f764e6cbe90075a31bda1b3f14a2c15f14e94e39,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
3081,a4c22ebfb7cb11c42c930c930badc401a04a0308,/phpmyadmin/Dockerfile,"# https://docs.phpmyadmin.net/en/latest/setup.html#verifying-phpmyadmin-releases
"
3082,a4c22ebfb7cb11c42c930c930badc401a04a0308,/phpmyadmin/Dockerfile,"# Since July 2015 all phpMyAdmin releases are cryptographically signed by the releasing developer, who through January 2016 was Marc Delisle.
"
3083,a4c22ebfb7cb11c42c930c930badc401a04a0308,/phpmyadmin/Dockerfile,"# Beginning in January 2016, the release manager is Isaac Bennetch.
"
3084,a4c22ebfb7cb11c42c930c930badc401a04a0308,/phpmyadmin/Dockerfile,"# Some additional downloads (for example themes) might be signed by Michal Čihař.
"
3085,76d803ceaf58d1cf25f4fb6fcd77c5eef604ef8f,/google-cloud-print-connector/Dockerfile,"# fetch dependencies
# format: import-path=strip-components=tarball-url
"
3086,76d803ceaf58d1cf25f4fb6fcd77c5eef604ef8f,/google-cloud-print-connector/Dockerfile,"# https://github.com/coreos/go-systemd/releases
"
3087,76d803ceaf58d1cf25f4fb6fcd77c5eef604ef8f,/google-cloud-print-connector/Dockerfile,"# https://github.com/satori/go.uuid/releases
# (https://github.com/satori/go.uuid/commit/0ef6afb2f6cdd6cdaeee3885a95099c63f18fc8c -- hopefully we'll get a newer release than v1.2.0 soonish)
"
3088,76d803ceaf58d1cf25f4fb6fcd77c5eef604ef8f,/google-cloud-print-connector/Dockerfile,"# https://github.com/urfave/cli/releases
"
3089,76d803ceaf58d1cf25f4fb6fcd77c5eef604ef8f,/google-cloud-print-connector/Dockerfile,"# https://github.com/golang/net/commits/master
"
3090,76d803ceaf58d1cf25f4fb6fcd77c5eef604ef8f,/google-cloud-print-connector/Dockerfile,"# https://github.com/golang/oauth2/commits/master
"
3091,76d803ceaf58d1cf25f4fb6fcd77c5eef604ef8f,/google-cloud-print-connector/Dockerfile,"# https://bazaar.launchpad.net/~chipaca/go-xdg/v0/files (""view revision"")
# https://bazaar.launchpad.net/~chipaca/go-xdg/v0/revision/10?start_revid=10 (""download tarball"")
"
3092,76d803ceaf58d1cf25f4fb6fcd77c5eef604ef8f,/google-cloud-print-connector/Dockerfile,"#*=}""; dep=""${dep%=$strip}""; \
"
3093,76d803ceaf58d1cf25f4fb6fcd77c5eef604ef8f,/google-cloud-print-connector/Dockerfile,"#*=}""; strip=""${strip%=$tarball}""; \
"
3094,76d803ceaf58d1cf25f4fb6fcd77c5eef604ef8f,/google-cloud-print-connector/Dockerfile,"# https://github.com/google/cloud-print-connector/releases
"
3095,a59a26b8c680a26a55b8d88210ebeae6ac8f6722,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3096,22cc11d160e942586c92885371883c23bfbb4b3e,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3097,ef9cf9438d12236072488bc6768c0504d53636ba,/ymlfmt/Dockerfile,"# https://pypi.org/project/ruamel.yaml/
"
3098,617d08af2c05172a385220a749bfc156f3c90f1f,/snapcraft/Dockerfile,"# based initially on https://hub.docker.com/r/didrocks/snapcraft/
"
3099,617d08af2c05172a385220a749bfc156f3c90f1f,/snapcraft/Dockerfile,"# enable multiverse as snapcraft cleanbuild does
"
3100,617d08af2c05172a385220a749bfc156f3c90f1f,/snapcraft/Dockerfile,"# pin specific version so we can update with a natural cache bust
"
3101,c1610b96ffcea268495de6bc01aa9d72c59f9392,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3102,c1610b96ffcea268495de6bc01aa9d72c59f9392,/docker-master/Dockerfile,"# (no SHA file artifacts on download.docker.com yet as of 2017-06-07)

"
3103,c1610b96ffcea268495de6bc01aa9d72c59f9392,/docker-master/Dockerfile,"# https://github.com/docker-library/docker/pull/166
#   dockerd-entrypoint.sh uses DOCKER_TLS_CERTDIR for auto-generating TLS certificates
#   docker-entrypoint.sh uses DOCKER_TLS_CERTDIR for auto-setting DOCKER_TLS_VERIFY and DOCKER_CERT_PATH
# (For this to work, at least the ""client"" subdirectory of this path needs to be shared between the client and server containers via a volume, ""docker cp"", or other means of data sharing.)
"
3104,c1610b96ffcea268495de6bc01aa9d72c59f9392,/docker-master/Dockerfile,"# also, ensure the directory pre-exists and has wide enough permissions for ""dockerd-entrypoint.sh"" to create subdirectories, even when run in ""rootless"" mode
"
3105,c1610b96ffcea268495de6bc01aa9d72c59f9392,/docker-master/Dockerfile,"# (doing both /certs and /certs/client so that if Docker does a ""copy-up"" into a volume defined on /certs/client, it will ""do the right thing"" by default in a way that still works for rootless users)

"
3106,b6144573262026530b06e311ac1b62e3081e4ecb,/ymlfmt/Dockerfile,"# https://pypi.org/project/ruamel.yaml/
"
3107,f9f97a1981d42d20191ebc3203d2a24686aa9234,/mongodb-server/Dockerfile,"# we need stdout logging and binding on 0.0.0.0
"
3108,f9f97a1981d42d20191ebc3203d2a24686aa9234,/mongodb-server/Dockerfile,"#logpath/g; \
"
3109,7fc9067e0099fb67237dfb7dae38127b68018a41,/docker/master/dind/Dockerfile,"# https://github.com/docker/docker/blob/master/project/PACKAGERS.md#runtime-dependencies
"
3110,7fc9067e0099fb67237dfb7dae38127b68018a41,/docker/master/dind/Dockerfile,"# TODO aufs-tools

"
3111,c621e1ce3500963ce2b1937b3a74db2bcf4ebdfb,/bash/4.4/Dockerfile,"# gpg: key 64EA74AB: public key ""Chet Ramey <chet@cwru.edu>"" imported
"
3112,c621e1ce3500963ce2b1937b3a74db2bcf4ebdfb,/bash/4.4/Dockerfile,"# https://ftp.gnu.org/gnu/bash/?C=M;O=D
"
3113,c621e1ce3500963ce2b1937b3a74db2bcf4ebdfb,/bash/4.4/Dockerfile,"# https://ftp.gnu.org/gnu/bash/bash-4.4-patches/?C=M;O=D
"
3114,c621e1ce3500963ce2b1937b3a74db2bcf4ebdfb,/bash/4.4/Dockerfile,"# prefixed with ""_"" since ""$BASH..."" have meaning in Bash parlance

"
3115,c621e1ce3500963ce2b1937b3a74db2bcf4ebdfb,/bash/4.4/Dockerfile,"# delete a few installed bits for smaller image size
"
3116,aadd653ef6bed40c2bb0d6c4aa6d5bf76a835892,/xen-orchestra/Dockerfile,"# see https://xen-orchestra.com/docs/from_the_sources.html

"
3117,aadd653ef6bed40c2bb0d6c4aa6d5bf76a835892,/xen-orchestra/Dockerfile,"# https://github.com/nodejs/node-gyp/releases
"
3118,aadd653ef6bed40c2bb0d6c4aa6d5bf76a835892,/xen-orchestra/Dockerfile,"# https://github.com/vatesfr/xen-orchestra/releases
"
3119,aadd653ef6bed40c2bb0d6c4aa6d5bf76a835892,/xen-orchestra/Dockerfile,"#		-e ""s!#'/' = '/path/to/xo-web/dist/'!'/' = '../xo-web/dist/'!"" \
"
3120,aadd653ef6bed40c2bb0d6c4aa6d5bf76a835892,/xen-orchestra/Dockerfile,"#uri = 'redis://.*'!uri = 'redis://redis:6379'!"" \
"
3121,aadd653ef6bed40c2bb0d6c4aa6d5bf76a835892,/xen-orchestra/Dockerfile,"#' config.toml | grep '../xo-web/dist'; \
"
3122,89ad84e63c7cb068686b389726d983e5d9e7231a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3123,89ad84e63c7cb068686b389726d983e5d9e7231a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3124,89ad84e63c7cb068686b389726d983e5d9e7231a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3125,89ad84e63c7cb068686b389726d983e5d9e7231a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3126,89ad84e63c7cb068686b389726d983e5d9e7231a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3127,636ccdedc04da1d27e426265236828764078038d,/sbuild/Dockerfile,"# run with ""--cap-add SYS_ADMIN"" so that sbuild can ""mount"" in the chroots it creates

"
3128,636ccdedc04da1d27e426265236828764078038d,/sbuild/Dockerfile,"# https://gist.github.com/tianon/a0080cbca558e4b907fe
# (useful sbuild-related scripts)
"
3129,636ccdedc04da1d27e426265236828764078038d,/sbuild/Dockerfile,"# usage: download-debuerreotype-tarball.sh suite [arch]
#    ie: download-debuerreotype-tarball.sh stretch
#        download-debuerreotype-tarball.sh sid i386
"
3130,bb0cbb72ce58ddad9ed974f098bdb33f6211d489,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3131,bb0cbb72ce58ddad9ed974f098bdb33f6211d489,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3132,bb0cbb72ce58ddad9ed974f098bdb33f6211d489,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3133,bb0cbb72ce58ddad9ed974f098bdb33f6211d489,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3134,bb0cbb72ce58ddad9ed974f098bdb33f6211d489,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3135,6cfbf3381c0b49517c4d9f9904f68535385d062a,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
3136,6cfbf3381c0b49517c4d9f9904f68535385d062a,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
3137,856533909864088438f197bab10e7bc6a835be22,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3138,ab4e3950e801ab0b2ae0e0d83abce68fd8a91c2d,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3139,b1213c29aaa991ecc5ef734c5c2650c1d31e91f9,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3140,babbe8e59860265db6cc27b93c10422aeac9e8ef,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
3141,babbe8e59860265db6cc27b93c10422aeac9e8ef,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
3142,babbe8e59860265db6cc27b93c10422aeac9e8ef,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
3143,b85c649209f3b0d75c32e36b8ce35fb882d66d96,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
3144,b85c649209f3b0d75c32e36b8ce35fb882d66d96,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
3145,b85c649209f3b0d75c32e36b8ce35fb882d66d96,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
3146,64f1451ef4219d5ce48891f72b6ea09facb91369,/diffoscope/Dockerfile,"# xxd (xxd not available in path. Falling back to Python hexlify.)
"
3147,64f1451ef4219d5ce48891f72b6ea09facb91369,/diffoscope/Dockerfile,"# readelf ('readelf' not available in path. Falling back to binary comparison.)
"
3148,64f1451ef4219d5ce48891f72b6ea09facb91369,/diffoscope/Dockerfile,"# for ""diffoscope --progress""
"
3149,5db94ab3c92df67acf1e5e61e61dccf44d051630,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3150,5db94ab3c92df67acf1e5e61e61dccf44d051630,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3151,5db94ab3c92df67acf1e5e61e61dccf44d051630,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3152,5db94ab3c92df67acf1e5e61e61dccf44d051630,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3153,5db94ab3c92df67acf1e5e61e61dccf44d051630,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3154,608b794bc114c0cb1afe84d923a638e65df595f2,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3155,608b794bc114c0cb1afe84d923a638e65df595f2,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3156,608b794bc114c0cb1afe84d923a638e65df595f2,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3157,608b794bc114c0cb1afe84d923a638e65df595f2,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3158,608b794bc114c0cb1afe84d923a638e65df595f2,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3159,83485896ad837985ad1c511493c54804814100c9,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
3160,83485896ad837985ad1c511493c54804814100c9,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
3161,83485896ad837985ad1c511493c54804814100c9,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
3162,49f2b3d98a72eb075f0a66749d80e1922a253961,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3163,49f2b3d98a72eb075f0a66749d80e1922a253961,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3164,49f2b3d98a72eb075f0a66749d80e1922a253961,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3165,49f2b3d98a72eb075f0a66749d80e1922a253961,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3166,49f2b3d98a72eb075f0a66749d80e1922a253961,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3167,5a958eb1e153b3d7915d484dfed4bc8d61da6f2a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3168,5a958eb1e153b3d7915d484dfed4bc8d61da6f2a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3169,5a958eb1e153b3d7915d484dfed4bc8d61da6f2a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3170,5a958eb1e153b3d7915d484dfed4bc8d61da6f2a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3171,5a958eb1e153b3d7915d484dfed4bc8d61da6f2a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3172,987f9b40f8d66e9a17636f0290788baa55a36882,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3173,987f9b40f8d66e9a17636f0290788baa55a36882,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3174,987f9b40f8d66e9a17636f0290788baa55a36882,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3175,987f9b40f8d66e9a17636f0290788baa55a36882,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3176,987f9b40f8d66e9a17636f0290788baa55a36882,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3177,7e3c4e7e26a99acf1f46c8a8acb181448f75d1e9,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3178,7e3c4e7e26a99acf1f46c8a8acb181448f75d1e9,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3179,7e3c4e7e26a99acf1f46c8a8acb181448f75d1e9,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3180,7e3c4e7e26a99acf1f46c8a8acb181448f75d1e9,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3181,7e3c4e7e26a99acf1f46c8a8acb181448f75d1e9,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3182,f2d70252d03060ee62ea393767e992616a097d64,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3183,f2d70252d03060ee62ea393767e992616a097d64,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3184,f2d70252d03060ee62ea393767e992616a097d64,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3185,f2d70252d03060ee62ea393767e992616a097d64,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3186,f2d70252d03060ee62ea393767e992616a097d64,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3187,a1d44a86d5ab2bd5bc4933f497dc313a240d776a,/jenkins/weekly/Dockerfile,"# grab gosu for easy step-down from root
"
3188,a1d44a86d5ab2bd5bc4933f497dc313a240d776a,/jenkins/weekly/Dockerfile,"# grab tini for signal processing and zombie killing
"
3189,a1d44a86d5ab2bd5bc4933f497dc313a240d776a,/jenkins/weekly/Dockerfile,"# https://groups.google.com/d/msg/jenkins-infra/c7m_72vUTXE/37zw9GXhAQAJ
"
3190,a1d44a86d5ab2bd5bc4933f497dc313a240d776a,/jenkins/weekly/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
3191,adb5a60e1b771934bedc98a10c3ff467b500ae9a,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3192,ba7b52adf87b306a81320d4e87ff6eb79eb08677,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3193,ba7b52adf87b306a81320d4e87ff6eb79eb08677,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3194,ba7b52adf87b306a81320d4e87ff6eb79eb08677,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3195,ba7b52adf87b306a81320d4e87ff6eb79eb08677,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3196,ba7b52adf87b306a81320d4e87ff6eb79eb08677,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3197,6666ffa248507695f6abf99dbc4fe705ba0a304c,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3198,6666ffa248507695f6abf99dbc4fe705ba0a304c,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3199,6666ffa248507695f6abf99dbc4fe705ba0a304c,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3200,6666ffa248507695f6abf99dbc4fe705ba0a304c,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3201,6666ffa248507695f6abf99dbc4fe705ba0a304c,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3202,05c7e428dc8fcba8fe41596b27f3e8c6fb9a2d38,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3203,81f9a75789e2a7c8ea314226523cc9c38193b344,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3204,d2b48a997d4d7460a656c90073673ff34717fe05,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3205,4aa10c2fc075f99a4fac65790cf6a7977096be79,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3206,4aa10c2fc075f99a4fac65790cf6a7977096be79,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3207,4aa10c2fc075f99a4fac65790cf6a7977096be79,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3208,4aa10c2fc075f99a4fac65790cf6a7977096be79,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3209,4aa10c2fc075f99a4fac65790cf6a7977096be79,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3210,18ca4e378b1258f08022b48836c3d149ac10adbe,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3211,18ca4e378b1258f08022b48836c3d149ac10adbe,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3212,18ca4e378b1258f08022b48836c3d149ac10adbe,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3213,18ca4e378b1258f08022b48836c3d149ac10adbe,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3214,18ca4e378b1258f08022b48836c3d149ac10adbe,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3215,ae08e990445d8d00f82122a0245b5f1030e85754,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3216,ae08e990445d8d00f82122a0245b5f1030e85754,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3217,ae08e990445d8d00f82122a0245b5f1030e85754,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3218,ae08e990445d8d00f82122a0245b5f1030e85754,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3219,ae08e990445d8d00f82122a0245b5f1030e85754,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3220,82927c8c63dbe81dcc2a44ad6263b0287a5b915c,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3221,383b35d39449038aed33809abb31ff906e7e10b9,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3222,383b35d39449038aed33809abb31ff906e7e10b9,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3223,383b35d39449038aed33809abb31ff906e7e10b9,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3224,383b35d39449038aed33809abb31ff906e7e10b9,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3225,383b35d39449038aed33809abb31ff906e7e10b9,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3226,614dcde54106df3d90a77e50a0ce21f1a34c24fe,/vultr-cli/Dockerfile,"# https://github.com/vultr/vultr-cli/releases
"
3227,8a1557b40c8e5b43a1a744bd4dc44099dd714675,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3228,8a1557b40c8e5b43a1a744bd4dc44099dd714675,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3229,8a1557b40c8e5b43a1a744bd4dc44099dd714675,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3230,8a1557b40c8e5b43a1a744bd4dc44099dd714675,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3231,8a1557b40c8e5b43a1a744bd4dc44099dd714675,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3232,b96d6ddb2f8813be3a4d032442be02a393f0a5db,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3233,99e34d3e4eb1331ab4c00efd9cd3edf844bb9161,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
3234,2488e5d100d73adabdf62ab53de8a8b109efade8,/steam/Dockerfile,"# add the sources.list stuff that steam will at first start
"
3235,2488e5d100d73adabdf62ab53de8a8b109efade8,/steam/Dockerfile,"# let's head off a few of the things steam will want to install immediately
"
3236,2488e5d100d73adabdf62ab53de8a8b109efade8,/steam/Dockerfile,"# steam itself needs to be able to install things, and it uses ""sudo"" for that
"
3237,5ff7918fc515d7e624fb2422f7d65f7139868931,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3238,5ff7918fc515d7e624fb2422f7d65f7139868931,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3239,5ff7918fc515d7e624fb2422f7d65f7139868931,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3240,5ff7918fc515d7e624fb2422f7d65f7139868931,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3241,5ff7918fc515d7e624fb2422f7d65f7139868931,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3242,f070e6beb9d04d9a58f517485db08dde93ff32c1,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3243,80ff4a8190d78feb83ca94b907e266cadbab8da2,/bash/4.2/Dockerfile,"# gpg: key 64EA74AB: public key ""Chet Ramey <chet@cwru.edu>"" imported
"
3244,80ff4a8190d78feb83ca94b907e266cadbab8da2,/bash/4.2/Dockerfile,"# https://ftp.gnu.org/gnu/bash/?C=M;O=D
"
3245,80ff4a8190d78feb83ca94b907e266cadbab8da2,/bash/4.2/Dockerfile,"# https://ftp.gnu.org/gnu/bash/bash-4.2-patches/?C=M;O=D
"
3246,80ff4a8190d78feb83ca94b907e266cadbab8da2,/bash/4.2/Dockerfile,"# prefixed with ""_"" since ""$BASH..."" have meaning in Bash parlance

"
3247,80ff4a8190d78feb83ca94b907e266cadbab8da2,/bash/4.2/Dockerfile,"# delete a few installed bits for smaller image size
"
3248,1d02b3e7e8f9bf212a85221537ce6021591af14c,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3249,2117bb81c9756041a68935346ed679d3741cfe98,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3250,2486226e6976e142dc942c38459d3d5b42b6ed71,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3251,2486226e6976e142dc942c38459d3d5b42b6ed71,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3252,2486226e6976e142dc942c38459d3d5b42b6ed71,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3253,2486226e6976e142dc942c38459d3d5b42b6ed71,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3254,2486226e6976e142dc942c38459d3d5b42b6ed71,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3255,44fa5bb0b8ff4c55bf59625248693754a8d516e2,/jenkins/slave/Dockerfile,"# let's make /root a volume so ~/.ssh/authorized_keys is easier to save
"
3256,69853a82b26b672edac1125b589f8fce32d253b2,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3257,69853a82b26b672edac1125b589f8fce32d253b2,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3258,69853a82b26b672edac1125b589f8fce32d253b2,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3259,69853a82b26b672edac1125b589f8fce32d253b2,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3260,69853a82b26b672edac1125b589f8fce32d253b2,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3261,0bff268b4aeac80fff2ca0c209f42bc4c2fab383,/xen-orchestra/Dockerfile,"# see https://github.com/vatesfr/xo/blob/master/installation.md

"
3262,0bff268b4aeac80fff2ca0c209f42bc4c2fab383,/xen-orchestra/Dockerfile,"# TODO use links to get a redis server/database instead (since that's where configuration actually goes)
"
3263,0bff268b4aeac80fff2ca0c209f42bc4c2fab383,/xen-orchestra/Dockerfile,"# TODO see note above about redis
"
3264,95ddd97cea14dbcb863c46e020cb66f2fe7bb81f,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3265,20b6f91e08a103bbb124f90cf428e2d54ea013a5,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3266,20b6f91e08a103bbb124f90cf428e2d54ea013a5,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3267,20b6f91e08a103bbb124f90cf428e2d54ea013a5,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3268,20b6f91e08a103bbb124f90cf428e2d54ea013a5,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3269,20b6f91e08a103bbb124f90cf428e2d54ea013a5,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3270,f9488d2e5444759c9e5a566a02e85a055d95220b,/jenkins/slave/debian/Dockerfile,"#?PermitRootLogin[[:space:]].*$/PermitRootLogin yes/g' /etc/ssh/sshd_config

"
3271,f9488d2e5444759c9e5a566a02e85a055d95220b,/jenkins/slave/debian/Dockerfile,"# let's make /root a volume so ~/.ssh/authorized_keys is easier to save
"
3272,f92e3e7572294775a7943f9e2bffa899da9aef22,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
3273,e446f979a74c09765b5c880d103a44dd7758f3fe,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3274,e446f979a74c09765b5c880d103a44dd7758f3fe,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3275,e446f979a74c09765b5c880d103a44dd7758f3fe,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3276,e446f979a74c09765b5c880d103a44dd7758f3fe,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3277,e446f979a74c09765b5c880d103a44dd7758f3fe,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3278,b0c35dc0df75464ed22117316639bb4c9405b076,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3279,fb791c2c19d45dce36486ef851505a53afc5e109,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3280,fb791c2c19d45dce36486ef851505a53afc5e109,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3281,fb791c2c19d45dce36486ef851505a53afc5e109,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3282,fb791c2c19d45dce36486ef851505a53afc5e109,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3283,fb791c2c19d45dce36486ef851505a53afc5e109,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3284,cff2fb4223243c83e7950d475cfe9ce8c473af89,/jenkins/lts/Dockerfile,"# grab gosu for easy step-down from root
"
3285,cff2fb4223243c83e7950d475cfe9ce8c473af89,/jenkins/lts/Dockerfile,"# grab tini for signal processing and zombie killing
"
3286,cff2fb4223243c83e7950d475cfe9ce8c473af89,/jenkins/lts/Dockerfile,"# https://groups.google.com/d/msg/jenkins-infra/c7m_72vUTXE/37zw9GXhAQAJ
"
3287,cff2fb4223243c83e7950d475cfe9ce8c473af89,/jenkins/lts/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
3288,745b91b7a95066392e6d85fc0a986b6919fa724e,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3289,90b64dfd9214ccb2971cee6c5a11aca2139ecbf4,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3290,90b64dfd9214ccb2971cee6c5a11aca2139ecbf4,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3291,90b64dfd9214ccb2971cee6c5a11aca2139ecbf4,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3292,90b64dfd9214ccb2971cee6c5a11aca2139ecbf4,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3293,90b64dfd9214ccb2971cee6c5a11aca2139ecbf4,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3294,ef37f15cb29feedfd2eab2d695cd25cdf8a312c2,/makemkv/Dockerfile,"# TODO find some way to include ccextractor (currently buster-only)

# FPL_MainFeature detection only seemed to work with OpenJDK 9 (8 was insufficient)
"
3295,ef37f15cb29feedfd2eab2d695cd25cdf8a312c2,/makemkv/Dockerfile,"# This disc requires Java runtime (JRE), but none was found. Certain functions will fail, please install Java. See http://www.makemkv.com/bdjava/ for details.
"
3296,ef37f15cb29feedfd2eab2d695cd25cdf8a312c2,/makemkv/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
3297,ef37f15cb29feedfd2eab2d695cd25cdf8a312c2,/makemkv/Dockerfile,"# http://www.makemkv.com/forum2/viewtopic.php?f=3&t=224
"
3298,ef37f15cb29feedfd2eab2d695cd25cdf8a312c2,/makemkv/Dockerfile,"# beta code: http://www.makemkv.com/forum2/viewtopic.php?f=5&t=1053
"
3299,ef37f15cb29feedfd2eab2d695cd25cdf8a312c2,/makemkv/Dockerfile,"# pub   dsa2048 2017-05-26 [SC]
#       2ECF 2330 5F1F C0B3 2001  6733 94E3 083A 1804 2697
# uid           [ unknown] MakeMKV (signature) <support@makemkv.com>
"
3300,f8cd4c54a62ad54b82364171c6a13708ac08c384,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3301,f8cd4c54a62ad54b82364171c6a13708ac08c384,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3302,f8cd4c54a62ad54b82364171c6a13708ac08c384,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3303,f8cd4c54a62ad54b82364171c6a13708ac08c384,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3304,f8cd4c54a62ad54b82364171c6a13708ac08c384,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3305,d28db90bc395b6b3f94d5f57e5f64b5083dcc9a9,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3306,d28db90bc395b6b3f94d5f57e5f64b5083dcc9a9,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3307,d28db90bc395b6b3f94d5f57e5f64b5083dcc9a9,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3308,d28db90bc395b6b3f94d5f57e5f64b5083dcc9a9,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3309,d28db90bc395b6b3f94d5f57e5f64b5083dcc9a9,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3310,bc05018f192843f391067af5f4dab60494b75223,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3311,bc05018f192843f391067af5f4dab60494b75223,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3312,bc05018f192843f391067af5f4dab60494b75223,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3313,bc05018f192843f391067af5f4dab60494b75223,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3314,bc05018f192843f391067af5f4dab60494b75223,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3315,ad9c4ebd1c0dd5e60a2be23a8d427c396a769e2b,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3316,916962c5e0095c1185e5ed45ac1b5fe2e88953ad,/diffoscope/Dockerfile,"# xxd (xxd not available in path. Falling back to Python hexlify.)
"
3317,916962c5e0095c1185e5ed45ac1b5fe2e88953ad,/diffoscope/Dockerfile,"# readelf ('readelf' not available in path. Falling back to binary comparison.)
"
3318,916962c5e0095c1185e5ed45ac1b5fe2e88953ad,/diffoscope/Dockerfile,"# for ""diffoscope --progress""
"
3319,aca1b091dec45329497b77963f3b4fee43607974,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3320,5c610234e2b40e0bd4dc16c24136b9159f3c5aa3,/pmbootstrap/Dockerfile,"# https://gitlab.alpinelinux.org/alpine/aports/issues/11122
"
3321,5c610234e2b40e0bd4dc16c24136b9159f3c5aa3,/pmbootstrap/Dockerfile,"# verify there are no errors/warnings
"
3322,5c610234e2b40e0bd4dc16c24136b9159f3c5aa3,/pmbootstrap/Dockerfile,"# https://pypi.org/project/pmbootstrap/
"
3323,5c610234e2b40e0bd4dc16c24136b9159f3c5aa3,/pmbootstrap/Dockerfile,"# workaround issues with transparent QEMU / binfmt detection (""fix binary"" -- qemu binaries not necessary inside chroots/namespaces)
"
3324,35a9afd90059c7c2701b719f680db9bb084f9912,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
3325,35a9afd90059c7c2701b719f680db9bb084f9912,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
3326,35a9afd90059c7c2701b719f680db9bb084f9912,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
3327,eef0c45b9456a7114047b50a3b0be1736a517f00,/makemkv/Dockerfile,"# http://www.makemkv.com/forum2/viewtopic.php?f=3&t=224
"
3328,eef0c45b9456a7114047b50a3b0be1736a517f00,/makemkv/Dockerfile,"# beta code: http://www.makemkv.com/forum2/viewtopic.php?f=5&t=1053
"
3329,16243404892133d40b6276ccdd902762e1e115be,/google-musicmanager/Dockerfile,"# https://www.google.com/linuxrepositories/
"
3330,16243404892133d40b6276ccdd902762e1e115be,/google-musicmanager/Dockerfile,"# pub   rsa4096 2016-04-12 [SC]
#       EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796
# uid           [ unknown] Google Inc. (Linux Packages Signing Authority) <linux-packages-keymaster@google.com>
# sub   rsa4096 2016-04-12 [S] [expires: 2019-04-12]
"
3331,16243404892133d40b6276ccdd902762e1e115be,/google-musicmanager/Dockerfile,"# pub   dsa1024 2007-03-08 [SC]
#       4CCA 1EAF 950C EE4A B839  76DC A040 830F 7FAC 5991
# uid           [ unknown] Google, Inc. Linux Package Signing Key <linux-packages-keymaster@google.com>
# sub   elg2048 2007-03-08 [E]
#		4CCA1EAF950CEE4AB83976DCA040830F7FAC5991

"
3332,16243404892133d40b6276ccdd902762e1e115be,/google-musicmanager/Dockerfile,"# only stretch+ supports --armor in trusted.gpg.asc
#	gpg --export --armor $GPG_KEYS | tee /etc/apt/trusted.gpg.d/google.gpg.asc; \
"
3333,d820f28e7cb6a4cda266f768008e224d745d8be3,/skype/Dockerfile,"# see https://repo.skype.com

"
3334,d820f28e7cb6a4cda266f768008e224d745d8be3,/skype/Dockerfile,"# https://repo.skype.com/data/SKYPE-GPG-KEY
"
3335,d820f28e7cb6a4cda266f768008e224d745d8be3,/skype/Dockerfile,"# pub   2048R/DF7587C3 2016-06-22 [expires: 2021-06-21]
#       Key fingerprint = D404 0146 BE39 7250 9FD5  7FC7 1F30 45A5 DF75 87C3
# uid                  Skype Linux Client Repository <se-um@microsoft.com>
# sub   2048R/A4EBB320 2016-06-22 [expires: 2021-06-21]
"
3336,39d9c00580a8d18aa9130024fc157ec9920a4979,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3337,39d9c00580a8d18aa9130024fc157ec9920a4979,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3338,39d9c00580a8d18aa9130024fc157ec9920a4979,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3339,39d9c00580a8d18aa9130024fc157ec9920a4979,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3340,39d9c00580a8d18aa9130024fc157ec9920a4979,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3341,c9154ec982d83ccbee52c868a7e4973d9cde6eaf,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3342,c9154ec982d83ccbee52c868a7e4973d9cde6eaf,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3343,c9154ec982d83ccbee52c868a7e4973d9cde6eaf,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3344,c9154ec982d83ccbee52c868a7e4973d9cde6eaf,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3345,c9154ec982d83ccbee52c868a7e4973d9cde6eaf,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3346,babbe8e59860265db6cc27b93c10422aeac9e8ef,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3347,babbe8e59860265db6cc27b93c10422aeac9e8ef,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3348,babbe8e59860265db6cc27b93c10422aeac9e8ef,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3349,babbe8e59860265db6cc27b93c10422aeac9e8ef,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3350,babbe8e59860265db6cc27b93c10422aeac9e8ef,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3351,c02d127773f4357c879ef6a25c8a3134239aade5,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
3352,881a0600171d3978236dd5022bc44ac042a39060,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
3353,b3cd62774f182cdd09fbc2c89fbe464e119b7666,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3354,b3cd62774f182cdd09fbc2c89fbe464e119b7666,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3355,b3cd62774f182cdd09fbc2c89fbe464e119b7666,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3356,b3cd62774f182cdd09fbc2c89fbe464e119b7666,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3357,b3cd62774f182cdd09fbc2c89fbe464e119b7666,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3358,f3631419f0c8e84893f673467ff8c16fd509ff87,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3359,f3631419f0c8e84893f673467ff8c16fd509ff87,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3360,f3631419f0c8e84893f673467ff8c16fd509ff87,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3361,f3631419f0c8e84893f673467ff8c16fd509ff87,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3362,f3631419f0c8e84893f673467ff8c16fd509ff87,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3363,c3984d97e17b233ebdf2f18fa5de57cc5dc41d02,/lutris/Dockerfile,"# install Wine
#   https://github.com/lutris/docs/blob/f2bf5ca14f280e3c58d2306581294d57650c0cc2/WineDependencies.md
#   https://wiki.winehq.org/Ubuntu
"
3364,c3984d97e17b233ebdf2f18fa5de57cc5dc41d02,/lutris/Dockerfile,"# https://dl.winehq.org/wine-builds/ubuntu/dists/focal/main/binary-amd64/?C=N;O=D
# https://www.winehq.org/news/
"
3365,c3984d97e17b233ebdf2f18fa5de57cc5dc41d02,/lutris/Dockerfile,"# ""Add SDL2 Backports PPA (for Faudio package):""
"
3366,c3984d97e17b233ebdf2f18fa5de57cc5dc41d02,/lutris/Dockerfile,"# ""For compatibility reasons, install these additional libraries:""
"
3367,c3984d97e17b233ebdf2f18fa5de57cc5dc41d02,/lutris/Dockerfile,"# https://github.com/Winetricks/winetricks/releases
"
3368,c3984d97e17b233ebdf2f18fa5de57cc5dc41d02,/lutris/Dockerfile,"# https://launchpad.net/~lutris-team/+archive/ubuntu/lutris?field.series_filter=focal
"
3369,c3984d97e17b233ebdf2f18fa5de57cc5dc41d02,/lutris/Dockerfile,"# https://github.com/lutris/docs/blob/f2bf5ca14f280e3c58d2306581294d57650c0cc2/InstallingDrivers.md
"
3370,c3984d97e17b233ebdf2f18fa5de57cc5dc41d02,/lutris/Dockerfile,"# gi.repository.GLib.Error: g-exec-error-quark: Failed to execute child process “dbus-launch” (No such file or directory) (8)
"
3371,c3984d97e17b233ebdf2f18fa5de57cc5dc41d02,/lutris/Dockerfile,"# /lutris-home/games/battle.net/state-cache-merge/state-cache-update.sh: line 8: zenity: command not found
"
3372,f03b035580615403b02f8b51df729b5a29a7ea74,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
3373,c1610b96ffcea268495de6bc01aa9d72c59f9392,/ymlfmt/Dockerfile,"# https://pypi.org/project/ruamel.yaml/
"
3374,08deba029429557f9bb72ef0280056db73392ea5,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3375,08deba029429557f9bb72ef0280056db73392ea5,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3376,08deba029429557f9bb72ef0280056db73392ea5,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3377,08deba029429557f9bb72ef0280056db73392ea5,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3378,08deba029429557f9bb72ef0280056db73392ea5,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3379,6ede48640e1f4fafed2765720ab57255947a58d1,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3380,6ede48640e1f4fafed2765720ab57255947a58d1,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3381,6ede48640e1f4fafed2765720ab57255947a58d1,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3382,6ede48640e1f4fafed2765720ab57255947a58d1,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3383,6ede48640e1f4fafed2765720ab57255947a58d1,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3384,c8f844aeb4a54088bba409badd17ba83698f459b,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3385,c8f844aeb4a54088bba409badd17ba83698f459b,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3386,c8f844aeb4a54088bba409badd17ba83698f459b,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3387,c8f844aeb4a54088bba409badd17ba83698f459b,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3388,c8f844aeb4a54088bba409badd17ba83698f459b,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3389,6571572bac955e4e86d5661664a5c1da72c8e1eb,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
3390,6571572bac955e4e86d5661664a5c1da72c8e1eb,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
3391,68a67c86f1147ce262e243bc934055090f73adfc,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3392,68a67c86f1147ce262e243bc934055090f73adfc,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3393,68a67c86f1147ce262e243bc934055090f73adfc,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3394,68a67c86f1147ce262e243bc934055090f73adfc,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3395,68a67c86f1147ce262e243bc934055090f73adfc,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3396,66819f2bbd08224c8e3e6bd4736d98eb206930b4,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3397,66819f2bbd08224c8e3e6bd4736d98eb206930b4,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3398,66819f2bbd08224c8e3e6bd4736d98eb206930b4,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3399,66819f2bbd08224c8e3e6bd4736d98eb206930b4,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3400,66819f2bbd08224c8e3e6bd4736d98eb206930b4,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3401,dd8ec0022f35acc9d5e1af4095af907719643186,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3402,dd8ec0022f35acc9d5e1af4095af907719643186,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3403,dd8ec0022f35acc9d5e1af4095af907719643186,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3404,dd8ec0022f35acc9d5e1af4095af907719643186,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3405,dd8ec0022f35acc9d5e1af4095af907719643186,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3406,ae401714a4566dc52493ea14474ac60b49890cb2,/certbot/Dockerfile,"# Executable not found: can't find the executable for the dialog-like program
"
3407,ae401714a4566dc52493ea14474ac60b49890cb2,/certbot/Dockerfile,"#VOLUME /etc/letsencrypt
"
3408,ae401714a4566dc52493ea14474ac60b49890cb2,/certbot/Dockerfile,"#VOLUME /var/log/letsencrypt

"
3409,dc483562ee9dd6eed3438e302daae603a5ff9207,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3410,86c5da9607757f961de4785d5c62a27e0259fc78,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3411,86c5da9607757f961de4785d5c62a27e0259fc78,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3412,86c5da9607757f961de4785d5c62a27e0259fc78,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3413,86c5da9607757f961de4785d5c62a27e0259fc78,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3414,86c5da9607757f961de4785d5c62a27e0259fc78,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3415,e819ac85bdc605d79d55c89f3ff3063aa959bca1,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
3416,6616aa306deb7a51684719cffe775e479ff0ef5e,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
3417,6616aa306deb7a51684719cffe775e479ff0ef5e,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
3418,6616aa306deb7a51684719cffe775e479ff0ef5e,/jenkins/Dockerfile,"# workaround ""apt-key adv --recv-keys"" hanging in stretch and above
"
3419,7ab16829510457b5557b2d9b7d78ff3eb7430e63,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3420,f78f5de47f663500bc95533cbe2cf534de9899fc,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3421,f78f5de47f663500bc95533cbe2cf534de9899fc,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3422,f78f5de47f663500bc95533cbe2cf534de9899fc,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3423,f78f5de47f663500bc95533cbe2cf534de9899fc,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3424,f78f5de47f663500bc95533cbe2cf534de9899fc,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3425,04c8eb2f94d4694b4f330b178eb959225b1f9e2b,/phpmyadmin/Dockerfile,"# https://docs.phpmyadmin.net/en/latest/setup.html#verifying-phpmyadmin-releases
"
3426,04c8eb2f94d4694b4f330b178eb959225b1f9e2b,/phpmyadmin/Dockerfile,"# Since July 2015 all phpMyAdmin releases are cryptographically signed by the releasing developer, who through January 2016 was Marc Delisle.
"
3427,04c8eb2f94d4694b4f330b178eb959225b1f9e2b,/phpmyadmin/Dockerfile,"# Beginning in January 2016, the release manager is Isaac Bennetch.
"
3428,04c8eb2f94d4694b4f330b178eb959225b1f9e2b,/phpmyadmin/Dockerfile,"# Some additional downloads (for example themes) might be signed by Michal Čihař.
"
3429,fc60abf47387b43b0b9b8b021ec12d3322d6e9e6,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3430,b98ee7e7b4fa98fcfa3d4f2c2435e70bd660a3db,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3431,d6d435479900274e105bdfdf2792c26c989f05f6,/ruby-passenger/Dockerfile,"# throw errors if Gemfile has been modified since Gemfile.lock
"
3432,1c8615545aeb05ad39e722784e733b644eef66a9,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3433,1c8615545aeb05ad39e722784e733b644eef66a9,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3434,1c8615545aeb05ad39e722784e733b644eef66a9,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3435,1c8615545aeb05ad39e722784e733b644eef66a9,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3436,1c8615545aeb05ad39e722784e733b644eef66a9,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3437,aadd653ef6bed40c2bb0d6c4aa6d5bf76a835892,/ymlfmt/Dockerfile,"# https://pypi.org/project/ruamel.yaml/
"
3438,5d185b3d49bacb65687cfd6c1dee8876c969ee65,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3439,5d185b3d49bacb65687cfd6c1dee8876c969ee65,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3440,5d185b3d49bacb65687cfd6c1dee8876c969ee65,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3441,5d185b3d49bacb65687cfd6c1dee8876c969ee65,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3442,5d185b3d49bacb65687cfd6c1dee8876c969ee65,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3443,d72088d48cd11cdc7b8d6f079d399dcd3e0fdc58,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3444,a983d46e644408bffc7e8a3da4315ea92d4e09c0,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3445,a983d46e644408bffc7e8a3da4315ea92d4e09c0,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3446,a983d46e644408bffc7e8a3da4315ea92d4e09c0,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3447,a983d46e644408bffc7e8a3da4315ea92d4e09c0,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3448,a983d46e644408bffc7e8a3da4315ea92d4e09c0,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3449,846caa9595aecbc8ce71925b3ced7dc523d74848,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3450,bd14b3258ed77dcb562616ad83a09b6d3e693243,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3451,bd14b3258ed77dcb562616ad83a09b6d3e693243,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3452,bd14b3258ed77dcb562616ad83a09b6d3e693243,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3453,bd14b3258ed77dcb562616ad83a09b6d3e693243,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3454,bd14b3258ed77dcb562616ad83a09b6d3e693243,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3455,57251d28f5130ab75ede30caa4532170edb8c2d5,/dell-netextender/Dockerfile,"# https://sslvpn.demo.sonicwall.com
#   u: demo    p: password

"
3456,57251d28f5130ab75ede30caa4532170edb8c2d5,/dell-netextender/Dockerfile,"# NetExtender connected successfully. Type ""Ctrl-c"" to disconnect...
"
3457,b19a350107d3f3ef78e8d27eef275120cda75ae0,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3458,c77d78ba6ce5f37deb24bc26dd4c1a9425c17b95,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
3459,c77d78ba6ce5f37deb24bc26dd4c1a9425c17b95,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
3460,c77d78ba6ce5f37deb24bc26dd4c1a9425c17b95,/jenkins/Dockerfile,"# workaround ""apt-key adv --recv-keys"" hanging in stretch and above
"
3461,465b6b941f619f81803bc54407ff953bd45b6255,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3462,76510720ebc0af4001ba586811a421711552e6f1,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
3463,76510720ebc0af4001ba586811a421711552e6f1,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
3464,b7ee89698d417bc99e38cef5711c5f2fb4c9708b,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
3465,b7ee89698d417bc99e38cef5711c5f2fb4c9708b,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
3466,b7ee89698d417bc99e38cef5711c5f2fb4c9708b,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
3467,b7ee89698d417bc99e38cef5711c5f2fb4c9708b,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
3468,b7ee89698d417bc99e38cef5711c5f2fb4c9708b,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
3469,f188057ed9be2a6bd14b82868f438ecd1c7c94bc,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3470,3166d1645ea3e35bb3f877ee797256ffc1732e22,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3471,3166d1645ea3e35bb3f877ee797256ffc1732e22,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3472,3166d1645ea3e35bb3f877ee797256ffc1732e22,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3473,3166d1645ea3e35bb3f877ee797256ffc1732e22,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3474,3166d1645ea3e35bb3f877ee797256ffc1732e22,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3475,2aaf3fcaf59bc6d98b04c85bf01bc574c5d818a1,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3476,2aaf3fcaf59bc6d98b04c85bf01bc574c5d818a1,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3477,2aaf3fcaf59bc6d98b04c85bf01bc574c5d818a1,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3478,2aaf3fcaf59bc6d98b04c85bf01bc574c5d818a1,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3479,2aaf3fcaf59bc6d98b04c85bf01bc574c5d818a1,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3480,70803d771804a99c645d280208bea269b26bc7dd,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
3481,4d24a12b54b75b3e0904d8a285900d88d3326361,/sbin-init/ubuntu/upstart/14.10/Dockerfile,"# much of this was gleaned from https://github.com/lxc/lxc/blob/lxc-0.8.0/templates/lxc-ubuntu.in
# and then heavily modified and hacked like crazy

# we're going to want this bad boy installed so we can connect :)
"
3482,4d24a12b54b75b3e0904d8a285900d88d3326361,/sbin-init/ubuntu/upstart/14.10/Dockerfile,"# undo some leet hax of the base image
"
3483,4d24a12b54b75b3e0904d8a285900d88d3326361,/sbin-init/ubuntu/upstart/14.10/Dockerfile,"# generate a nice UTF-8 locale for our use
"
3484,4d24a12b54b75b3e0904d8a285900d88d3326361,/sbin-init/ubuntu/upstart/14.10/Dockerfile,"# remove some pointless services
"
3485,4d24a12b54b75b3e0904d8a285900d88d3326361,/sbin-init/ubuntu/upstart/14.10/Dockerfile,"# /lib/init/fstab: cleared out for bare-bones Docker' > /lib/init/fstab

# small fix for SSH in 13.10 (that's harmless everywhere else)
"
3486,4d24a12b54b75b3e0904d8a285900d88d3326361,/sbin-init/ubuntu/upstart/14.10/Dockerfile,"# let Upstart know it's in a container
"
3487,4d24a12b54b75b3e0904d8a285900d88d3326361,/sbin-init/ubuntu/upstart/14.10/Dockerfile,"# set a cheap, simple password for great convenience
"
3488,4d24a12b54b75b3e0904d8a285900d88d3326361,/sbin-init/ubuntu/upstart/14.10/Dockerfile,"# we can has SSH
"
3489,4d24a12b54b75b3e0904d8a285900d88d3326361,/sbin-init/ubuntu/upstart/14.10/Dockerfile,"# pepare for takeoff
"
3490,14d465c724daf1886e286a6bb3a6707af4534f4f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3491,14d465c724daf1886e286a6bb3a6707af4534f4f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3492,14d465c724daf1886e286a6bb3a6707af4534f4f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3493,14d465c724daf1886e286a6bb3a6707af4534f4f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3494,14d465c724daf1886e286a6bb3a6707af4534f4f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3495,aca1b091dec45329497b77963f3b4fee43607974,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3496,aca1b091dec45329497b77963f3b4fee43607974,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3497,aca1b091dec45329497b77963f3b4fee43607974,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3498,aca1b091dec45329497b77963f3b4fee43607974,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3499,aca1b091dec45329497b77963f3b4fee43607974,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3500,48a97250c07689e9069c26441258482025004154,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3501,cf7a10d5d124f13854af7452d7a3a3df3b376c4a,/handbrake/Dockerfile,"# https://handbrake.fr/downloads.php
# https://launchpad.net/~stebbins/+archive/ubuntu/handbrake-releases
"
3502,865943a02a7bf30b86b68a08b42cbf10d112a255,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3503,865943a02a7bf30b86b68a08b42cbf10d112a255,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3504,865943a02a7bf30b86b68a08b42cbf10d112a255,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3505,865943a02a7bf30b86b68a08b42cbf10d112a255,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3506,865943a02a7bf30b86b68a08b42cbf10d112a255,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3507,7132dbd2f33cb99f8ec844b6cb76bd069daf6f31,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3508,7132dbd2f33cb99f8ec844b6cb76bd069daf6f31,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3509,7132dbd2f33cb99f8ec844b6cb76bd069daf6f31,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3510,7132dbd2f33cb99f8ec844b6cb76bd069daf6f31,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3511,7132dbd2f33cb99f8ec844b6cb76bd069daf6f31,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3512,9ba61a9b293a0d2e49677ba57892187a4c0da3ea,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
3513,9ba61a9b293a0d2e49677ba57892187a4c0da3ea,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
3514,9ba61a9b293a0d2e49677ba57892187a4c0da3ea,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
3515,9ba61a9b293a0d2e49677ba57892187a4c0da3ea,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
3516,9ba61a9b293a0d2e49677ba57892187a4c0da3ea,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
3517,18f92d3ba7bf21d5425e6c7840d85d342a7e800c,/skype/Dockerfile,"# see https://repo.skype.com

"
3518,18f92d3ba7bf21d5425e6c7840d85d342a7e800c,/skype/Dockerfile,"# wget is invoked by skypeforlinux for crash reports
"
3519,18f92d3ba7bf21d5425e6c7840d85d342a7e800c,/skype/Dockerfile,"# https://repo.skype.com/data/SKYPE-GPG-KEY
"
3520,18f92d3ba7bf21d5425e6c7840d85d342a7e800c,/skype/Dockerfile,"# pub   2048R/DF7587C3 2016-06-22 [expires: 2021-06-21]
#       Key fingerprint = D404 0146 BE39 7250 9FD5  7FC7 1F30 45A5 DF75 87C3
# uid                  Skype Linux Client Repository <se-um@microsoft.com>
# sub   2048R/A4EBB320 2016-06-22 [expires: 2021-06-21]
"
3521,5fa27a1090ea6b2278ff5609431b01f00ad0e8a4,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3522,5fa27a1090ea6b2278ff5609431b01f00ad0e8a4,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3523,5fa27a1090ea6b2278ff5609431b01f00ad0e8a4,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3524,5fa27a1090ea6b2278ff5609431b01f00ad0e8a4,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3525,5fa27a1090ea6b2278ff5609431b01f00ad0e8a4,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3526,bbcfca9a7588b8dcc820569686a5fc4dc7218bd7,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3527,bbcfca9a7588b8dcc820569686a5fc4dc7218bd7,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3528,bbcfca9a7588b8dcc820569686a5fc4dc7218bd7,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3529,bbcfca9a7588b8dcc820569686a5fc4dc7218bd7,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3530,bbcfca9a7588b8dcc820569686a5fc4dc7218bd7,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3531,3b2f48f351cf6720536508eb835591eb537cf316,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
3532,3b2f48f351cf6720536508eb835591eb537cf316,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
3533,3b2f48f351cf6720536508eb835591eb537cf316,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
3534,3b2f48f351cf6720536508eb835591eb537cf316,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
3535,3b2f48f351cf6720536508eb835591eb537cf316,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
3536,93361e25cfad2de2d01e226da4ab477899f5e28e,/nginx/Dockerfile,"# log to stderr
"
3537,93361e25cfad2de2d01e226da4ab477899f5e28e,/nginx/Dockerfile,"# prevent backgrounding (for Docker)\ndaemon off;' >> /etc/nginx/nginx.conf

"
3538,c9b0e1b39f6a7c7b0e4d92aea97d8252c8679ea5,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3539,1962188baba2441402b693551e5e6e57b6c0fdc7,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3540,1962188baba2441402b693551e5e6e57b6c0fdc7,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3541,1962188baba2441402b693551e5e6e57b6c0fdc7,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3542,1962188baba2441402b693551e5e6e57b6c0fdc7,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3543,1962188baba2441402b693551e5e6e57b6c0fdc7,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3544,4b88b56aab8867e65cd22f15cb158f231a6c935d,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3545,4b88b56aab8867e65cd22f15cb158f231a6c935d,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3546,4b88b56aab8867e65cd22f15cb158f231a6c935d,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3547,4b88b56aab8867e65cd22f15cb158f231a6c935d,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3548,4b88b56aab8867e65cd22f15cb158f231a6c935d,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3549,54e0a1c5c249fb543e6a364a04cc75c1be706cb3,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
3550,54e0a1c5c249fb543e6a364a04cc75c1be706cb3,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
3551,54e0a1c5c249fb543e6a364a04cc75c1be706cb3,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
3552,9c3d4b357a9d7591abc7ec0b64c4d125c6c10a09,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3553,9c3d4b357a9d7591abc7ec0b64c4d125c6c10a09,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3554,9c3d4b357a9d7591abc7ec0b64c4d125c6c10a09,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3555,9c3d4b357a9d7591abc7ec0b64c4d125c6c10a09,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3556,9c3d4b357a9d7591abc7ec0b64c4d125c6c10a09,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3557,602861dba99ee17545eff5f7197333b5e161c6f6,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3558,602861dba99ee17545eff5f7197333b5e161c6f6,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3559,602861dba99ee17545eff5f7197333b5e161c6f6,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3560,602861dba99ee17545eff5f7197333b5e161c6f6,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3561,602861dba99ee17545eff5f7197333b5e161c6f6,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3562,a4e8152f6afbe8ccbf65871882ff425a850921db,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3563,d60c581e2a4c767cd17c5e01f460e3dcae384df5,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
3564,d60c581e2a4c767cd17c5e01f460e3dcae384df5,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
3565,d60c581e2a4c767cd17c5e01f460e3dcae384df5,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
3566,642132a20eef29ef02e7e6d8d7bc179e72af4e21,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3567,642132a20eef29ef02e7e6d8d7bc179e72af4e21,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3568,642132a20eef29ef02e7e6d8d7bc179e72af4e21,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3569,642132a20eef29ef02e7e6d8d7bc179e72af4e21,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3570,642132a20eef29ef02e7e6d8d7bc179e72af4e21,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3571,059c6b0cd0cc7fc08e6ab09b8d4023b426770dc5,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3572,0b2218878950b68f9cb698bde85ff894870b8cfc,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3573,0b2218878950b68f9cb698bde85ff894870b8cfc,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3574,0b2218878950b68f9cb698bde85ff894870b8cfc,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3575,0b2218878950b68f9cb698bde85ff894870b8cfc,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3576,0b2218878950b68f9cb698bde85ff894870b8cfc,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3577,ef9cf9438d12236072488bc6768c0504d53636ba,/prometheus/Dockerfile,"# https://github.com/prometheus/prometheus/releases
"
3578,7ccdbe125933f966e534c36227b2eacd1419847f,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3579,89d4666655c39e665e68c4c7533dbc367076780d,/ehour/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
3580,89d4666655c39e665e68c4c7533dbc367076780d,/ehour/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

# https://ehour.nl/download/downloadfile.php?get=ehour-latest-standalone-unix.sh
# https://ehour.nl/download/downloadfile.php?get=ehour-1.4.3-standalone-unix.sh
"
3581,c8a386322edde1605088c900a6c693dcb1a24634,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3582,4b7bf1ed53df97026904263689905b207816a6bb,/diffoscope/Dockerfile,"# xxd (xxd not available in path. Falling back to Python hexlify.)
"
3583,4b7bf1ed53df97026904263689905b207816a6bb,/diffoscope/Dockerfile,"# readelf ('readelf' not available in path. Falling back to binary comparison.)
"
3584,4b7bf1ed53df97026904263689905b207816a6bb,/diffoscope/Dockerfile,"# for ""diffoscope --progress""
"
3585,3d1d58b033ab69b9290c43b0d9fb220d96f10787,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
3586,3d1d58b033ab69b9290c43b0d9fb220d96f10787,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
3587,3d1d58b033ab69b9290c43b0d9fb220d96f10787,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
3588,7bb7b72637a7c79aefe7e93ba98bb3f1fdeeaeeb,/skype/Dockerfile,"# see https://repo.skype.com

"
3589,7bb7b72637a7c79aefe7e93ba98bb3f1fdeeaeeb,/skype/Dockerfile,"# wget is invoked by skypeforlinux for crash reports
"
3590,7bb7b72637a7c79aefe7e93ba98bb3f1fdeeaeeb,/skype/Dockerfile,"# https://repo.skype.com/data/SKYPE-GPG-KEY
"
3591,7bb7b72637a7c79aefe7e93ba98bb3f1fdeeaeeb,/skype/Dockerfile,"# pub   2048R/DF7587C3 2016-06-22 [expires: 2021-06-21]
#       Key fingerprint = D404 0146 BE39 7250 9FD5  7FC7 1F30 45A5 DF75 87C3
# uid                  Skype Linux Client Repository <se-um@microsoft.com>
# sub   2048R/A4EBB320 2016-06-22 [expires: 2021-06-21]
"
3592,3cfeeae34a569bec87e0ec9926b940eba2f25c7b,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
3593,3cfeeae34a569bec87e0ec9926b940eba2f25c7b,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
3594,3cfeeae34a569bec87e0ec9926b940eba2f25c7b,/jenkins/Dockerfile,"# workaround ""apt-key adv --recv-keys"" hanging in stretch and above
"
3595,b09752397d170fa90d308e08b9cf387fff2c5523,/github-pages/Dockerfile,"# https://pages.github.com/versions/
"
3596,f1b3c65b6537505d26d5c68fba1436cee3b6093d,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3597,f1b3c65b6537505d26d5c68fba1436cee3b6093d,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3598,f1b3c65b6537505d26d5c68fba1436cee3b6093d,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3599,f1b3c65b6537505d26d5c68fba1436cee3b6093d,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3600,f1b3c65b6537505d26d5c68fba1436cee3b6093d,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3601,ced125432f9451154d4058ec5664ea85ce626c21,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3602,521c8606d91ac2dddcae4d8876abf4791c077f85,/bitwarden/cli/Dockerfile,"# https://www.npmjs.com/package/@bitwarden/cli?activeTab=versions
"
3603,604d07a2d8d4d5b750c7ca629526abd383ce8a14,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3604,ac158e710ebec223929f54c873114b80878678b7,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3605,78ed78c30487c28a76d9eedfee895292a705015a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3606,78ed78c30487c28a76d9eedfee895292a705015a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3607,78ed78c30487c28a76d9eedfee895292a705015a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3608,78ed78c30487c28a76d9eedfee895292a705015a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3609,78ed78c30487c28a76d9eedfee895292a705015a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3610,c8c0f6c841b0eb4d72a2dd7d6303df7f72bc5519,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3611,c8c0f6c841b0eb4d72a2dd7d6303df7f72bc5519,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3612,c8c0f6c841b0eb4d72a2dd7d6303df7f72bc5519,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3613,c8c0f6c841b0eb4d72a2dd7d6303df7f72bc5519,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3614,c8c0f6c841b0eb4d72a2dd7d6303df7f72bc5519,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3615,76ae522204897266ce21c19aa9c2a765ecf3622e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3616,76ae522204897266ce21c19aa9c2a765ecf3622e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3617,76ae522204897266ce21c19aa9c2a765ecf3622e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3618,76ae522204897266ce21c19aa9c2a765ecf3622e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3619,76ae522204897266ce21c19aa9c2a765ecf3622e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3620,255eedc7cf90254ad661bda14a3428eb47748cc0,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3621,255eedc7cf90254ad661bda14a3428eb47748cc0,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3622,255eedc7cf90254ad661bda14a3428eb47748cc0,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3623,255eedc7cf90254ad661bda14a3428eb47748cc0,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3624,255eedc7cf90254ad661bda14a3428eb47748cc0,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3625,1d1d42a412b2bd7ec51a40cbc10fba0039faa2e3,/golang/Dockerfile,"# (set an explicit GOARM of 5 for maximum ARM compatibility)
"
3626,1d1d42a412b2bd7ec51a40cbc10fba0039faa2e3,/golang/Dockerfile,"##*/} \
"
3627,1d1d42a412b2bd7ec51a40cbc10fba0039faa2e3,/golang/Dockerfile,"# these are useful for ""go get""
"
3628,1d1d42a412b2bd7ec51a40cbc10fba0039faa2e3,/golang/Dockerfile,"/*} \
			GOARCH=${platform##*/"
3629,0ae58c0bc42fe621eb5923049d0fe2dc6622a7a2,/certbot/Dockerfile,"# Executable not found: can't find the executable for the dialog-like program
"
3630,0ae58c0bc42fe621eb5923049d0fe2dc6622a7a2,/certbot/Dockerfile,"#VOLUME /etc/letsencrypt
"
3631,0ae58c0bc42fe621eb5923049d0fe2dc6622a7a2,/certbot/Dockerfile,"#VOLUME /var/log/letsencrypt

"
3632,b80a5dbe8b26d841b3048a3e01ff40c49f8f3690,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3633,b80a5dbe8b26d841b3048a3e01ff40c49f8f3690,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3634,b80a5dbe8b26d841b3048a3e01ff40c49f8f3690,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3635,b80a5dbe8b26d841b3048a3e01ff40c49f8f3690,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3636,b80a5dbe8b26d841b3048a3e01ff40c49f8f3690,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3637,38a3c66e1604bcb54b017edbc149d9e3be27250a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3638,38a3c66e1604bcb54b017edbc149d9e3be27250a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3639,38a3c66e1604bcb54b017edbc149d9e3be27250a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3640,38a3c66e1604bcb54b017edbc149d9e3be27250a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3641,38a3c66e1604bcb54b017edbc149d9e3be27250a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3642,d1cbfedbde2d11ba6130f6690bffb29273dccdc6,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3643,6f8513f251e4dcf547ca1679f9fd49f9355c6335,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3644,6f8513f251e4dcf547ca1679f9fd49f9355c6335,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3645,6f8513f251e4dcf547ca1679f9fd49f9355c6335,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3646,6f8513f251e4dcf547ca1679f9fd49f9355c6335,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3647,6f8513f251e4dcf547ca1679f9fd49f9355c6335,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3648,e0a124e73d488bf71e33de6699a381c4db2edc17,/mutt-gmail/Dockerfile,"# a browser is necessary!
"
3649,e0a124e73d488bf71e33de6699a381c4db2edc17,/mutt-gmail/Dockerfile,"# my preferred editor :) (see also muttrc)
"
3650,3a6dbe6cca83ceb1a83a034644808c6a83397620,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
3651,3a6dbe6cca83ceb1a83a034644808c6a83397620,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
3652,3a6dbe6cca83ceb1a83a034644808c6a83397620,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
3653,8c2bd28c1954de3f68916fb4e7d277f131a8794a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3654,8c2bd28c1954de3f68916fb4e7d277f131a8794a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3655,8c2bd28c1954de3f68916fb4e7d277f131a8794a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3656,8c2bd28c1954de3f68916fb4e7d277f131a8794a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3657,8c2bd28c1954de3f68916fb4e7d277f131a8794a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3658,2ee7413e774f24c71c8d3d4080c9643e1f88aa42,/docker-master/dind/Dockerfile,"# https://github.com/docker/docker/blob/master/project/PACKAGERS.md#runtime-dependencies
"
3659,2ee7413e774f24c71c8d3d4080c9643e1f88aa42,/docker-master/dind/Dockerfile,"# TODO aufs-tools

# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
"
3660,c24328449c6dbc7f495c0ea7cbfe649c9d1346fb,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3661,c24328449c6dbc7f495c0ea7cbfe649c9d1346fb,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3662,c24328449c6dbc7f495c0ea7cbfe649c9d1346fb,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3663,c24328449c6dbc7f495c0ea7cbfe649c9d1346fb,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3664,c24328449c6dbc7f495c0ea7cbfe649c9d1346fb,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3665,b4fbd6fab14723ae770fb05df3ea4536520b0db2,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
3666,b4fbd6fab14723ae770fb05df3ea4536520b0db2,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
3667,b4fbd6fab14723ae770fb05df3ea4536520b0db2,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
3668,b4fbd6fab14723ae770fb05df3ea4536520b0db2,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
3669,b4fbd6fab14723ae770fb05df3ea4536520b0db2,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
3670,f070efad56994ff1884ba84259515832da8e1f5e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3671,f070efad56994ff1884ba84259515832da8e1f5e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3672,f070efad56994ff1884ba84259515832da8e1f5e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3673,f070efad56994ff1884ba84259515832da8e1f5e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3674,f070efad56994ff1884ba84259515832da8e1f5e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3675,91def800cbf247a8b5b5d5561a33563c826365cd,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3676,ea6c8df371ee9314ee94fea3034225c70cea1442,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3677,ea6c8df371ee9314ee94fea3034225c70cea1442,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3678,ea6c8df371ee9314ee94fea3034225c70cea1442,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3679,ea6c8df371ee9314ee94fea3034225c70cea1442,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3680,ea6c8df371ee9314ee94fea3034225c70cea1442,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3681,bf73c530da22ad7985bbf9ade5d23be68a903fbb,/robomongo/Dockerfile,"# install dependencies...
"
3682,4d436186d842808a7f9ef938ede54f4eeae0c9c2,/xen-orchestra/Dockerfile,"# see https://github.com/vatesfr/xo/blob/a269af702992616f67b7bcf066eac0a1124ac8bf/doc/installation/manual_installation.md

#RUN apt-get update && apt-get install -y ruby-compass

"
3683,4d436186d842808a7f9ef938ede54f4eeae0c9c2,/xen-orchestra/Dockerfile,"#'/': '/path/to/xo-web/dist/'!'/': '../web/dist/'!; \
"
3684,4d436186d842808a7f9ef938ede54f4eeae0c9c2,/xen-orchestra/Dockerfile,"#uri: ''!uri: 'tcp://redis:6379'!; \
"
3685,f35287efd367f6742000547c297f24122cee8816,/debian/devel/Dockerfile,"# let's make apt list package versions, since those are handy during devel
"
3686,f35287efd367f6742000547c297f24122cee8816,/debian/devel/Dockerfile,"# normal build deps
"
3687,f35287efd367f6742000547c297f24122cee8816,/debian/devel/Dockerfile,"# get dh-make-golang from Git since it's so rapidly changing
"
3688,f35287efd367f6742000547c297f24122cee8816,/debian/devel/Dockerfile,"# need deb-src for compiling packages
"
3689,f35287efd367f6742000547c297f24122cee8816,/debian/devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
3690,f35287efd367f6742000547c297f24122cee8816,/debian/devel/Dockerfile,"# for ssh to debian hosts, let's make sure we know their fingerprints <3
"
3691,f35287efd367f6742000547c297f24122cee8816,/debian/devel/Dockerfile,"# make sure things are pretty
"
3692,f35287efd367f6742000547c297f24122cee8816,/debian/devel/Dockerfile,"#(force_color_prompt=yes)/\1/' ~/.bashrc

# quilt is much amaze: https://wiki.debian.org/UsingQuilt#Using_quilt_with_Debian_source_packages
"
3693,f35287efd367f6742000547c297f24122cee8816,/debian/devel/Dockerfile,"# make sure pbuilder-dist uses a sane default mirror
"
3694,93d0a4ba1ab1da7e968e835617b388e6d99c1dc7,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3695,93d0a4ba1ab1da7e968e835617b388e6d99c1dc7,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3696,93d0a4ba1ab1da7e968e835617b388e6d99c1dc7,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3697,93d0a4ba1ab1da7e968e835617b388e6d99c1dc7,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3698,93d0a4ba1ab1da7e968e835617b388e6d99c1dc7,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3699,7865ab4e57bc88335a70bd096ef3243c8689cecb,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
3700,2fcd81f4b98894f2809f7cc8669e9c48f7913d90,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3701,2fcd81f4b98894f2809f7cc8669e9c48f7913d90,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3702,2fcd81f4b98894f2809f7cc8669e9c48f7913d90,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3703,2fcd81f4b98894f2809f7cc8669e9c48f7913d90,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3704,2fcd81f4b98894f2809f7cc8669e9c48f7913d90,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3705,c8f844aeb4a54088bba409badd17ba83698f459b,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3706,26b05718b07b66a4eb6626033039798ab9cbce44,/docker/experimental/dind/Dockerfile,"# https://github.com/docker/docker/blob/master/project/PACKAGERS.md#runtime-dependencies
"
3707,26b05718b07b66a4eb6626033039798ab9cbce44,/docker/experimental/dind/Dockerfile,"# TODO aufs-tools

"
3708,3b080999b5e5dd549bce680a3fc05de5fe2a9657,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
3709,3b080999b5e5dd549bce680a3fc05de5fe2a9657,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
3710,3b080999b5e5dd549bce680a3fc05de5fe2a9657,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
3711,3b080999b5e5dd549bce680a3fc05de5fe2a9657,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
3712,3b080999b5e5dd549bce680a3fc05de5fe2a9657,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
3713,26684dfabbdd67fd4eda014b9c9be700bc9d59c9,/diffoscope/Dockerfile,"# xxd (xxd not available in path. Falling back to Python hexlify.)
"
3714,26684dfabbdd67fd4eda014b9c9be700bc9d59c9,/diffoscope/Dockerfile,"# readelf ('readelf' not available in path. Falling back to binary comparison.)
"
3715,26684dfabbdd67fd4eda014b9c9be700bc9d59c9,/diffoscope/Dockerfile,"# for ""diffoscope --progress""
"
3716,d3e3894e470107d9691d2d2b11f4c86d98dead36,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3717,d3e3894e470107d9691d2d2b11f4c86d98dead36,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3718,d3e3894e470107d9691d2d2b11f4c86d98dead36,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3719,d3e3894e470107d9691d2d2b11f4c86d98dead36,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3720,d3e3894e470107d9691d2d2b11f4c86d98dead36,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3721,7b2041966b79136b10993a269df711e25319f38a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3722,7b2041966b79136b10993a269df711e25319f38a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3723,7b2041966b79136b10993a269df711e25319f38a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3724,7b2041966b79136b10993a269df711e25319f38a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3725,7b2041966b79136b10993a269df711e25319f38a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3726,3f14c71e938c5786fde7c341fc1401dd9f6a8ea8,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3727,3f14c71e938c5786fde7c341fc1401dd9f6a8ea8,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3728,3f14c71e938c5786fde7c341fc1401dd9f6a8ea8,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3729,3f14c71e938c5786fde7c341fc1401dd9f6a8ea8,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3730,3f14c71e938c5786fde7c341fc1401dd9f6a8ea8,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3731,9e5d4f626d14ee4e9d679845f71405cb00c6a41f,/pmbootstrap/Dockerfile,"# https://gitlab.alpinelinux.org/alpine/aports/issues/11122
"
3732,9e5d4f626d14ee4e9d679845f71405cb00c6a41f,/pmbootstrap/Dockerfile,"# verify there are no errors/warnings
"
3733,9e5d4f626d14ee4e9d679845f71405cb00c6a41f,/pmbootstrap/Dockerfile,"# https://pypi.org/project/pmbootstrap/
"
3734,9e5d4f626d14ee4e9d679845f71405cb00c6a41f,/pmbootstrap/Dockerfile,"# workaround issues with transparent QEMU / binfmt detection (""fix binary"" -- qemu binaries not necessary inside chroots/namespaces)
"
3735,b190fcb861019bbe991a3ca5a3f21a1e1cdb426d,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3736,b190fcb861019bbe991a3ca5a3f21a1e1cdb426d,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3737,b190fcb861019bbe991a3ca5a3f21a1e1cdb426d,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3738,b190fcb861019bbe991a3ca5a3f21a1e1cdb426d,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3739,b190fcb861019bbe991a3ca5a3f21a1e1cdb426d,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3740,cd3035784f0018648b9f3ac1dd11dc2084b5c5dc,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3741,2b139005df57c03e6a7f891deff824030538378e,/vultr-cli/Dockerfile,"# https://github.com/vultr/vultr-cli/releases
"
3742,6024d76aca5006700623aba30d4a2ee242c733ec,/slack/Dockerfile,"# the .deb file linked at https://slack.com/downloads/instructions/debian includes ""/etc/cron.daily/slack"" which sets up an APT repo entry as in the following installation

# pub   rsa4096 2016-02-18 [SCEA]
#       DB08 5A08 CA13 B8AC B917  E0F6 D938 EC0D 0386 51BD
# uid           [ unknown] https://packagecloud.io/slacktechnologies/slack (https://packagecloud.io/docs#gpg_signing) <support@packagecloud.io>
# sub   rsa4096 2016-02-18 [SEA]
"
3743,6024d76aca5006700623aba30d4a2ee242c733ec,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libX11-xcb.so.1: cannot open shared object file: No such file or directory
"
3744,6024d76aca5006700623aba30d4a2ee242c733ec,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libasound.so.2: cannot open shared object file: No such file or directory
"
3745,d4866f484e15a0899685e4a0748404f3675fbb78,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
3746,d4866f484e15a0899685e4a0748404f3675fbb78,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
3747,d4866f484e15a0899685e4a0748404f3675fbb78,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
3748,d2fd33831e7a2d1c2fc968a57e46627da5b151a7,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3749,d2fd33831e7a2d1c2fc968a57e46627da5b151a7,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3750,d2fd33831e7a2d1c2fc968a57e46627da5b151a7,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3751,d2fd33831e7a2d1c2fc968a57e46627da5b151a7,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3752,d2fd33831e7a2d1c2fc968a57e46627da5b151a7,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3753,67c8b5dadbc1610e6799f495501d38bf87af95c8,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3754,67c8b5dadbc1610e6799f495501d38bf87af95c8,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3755,67c8b5dadbc1610e6799f495501d38bf87af95c8,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3756,67c8b5dadbc1610e6799f495501d38bf87af95c8,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3757,67c8b5dadbc1610e6799f495501d38bf87af95c8,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3758,795a3d6949b79dd327970179e27006419594056b,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
3759,795a3d6949b79dd327970179e27006419594056b,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
3760,795a3d6949b79dd327970179e27006419594056b,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
3761,795a3d6949b79dd327970179e27006419594056b,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
3762,795a3d6949b79dd327970179e27006419594056b,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
3763,2eea5b392681dba6859e64906c355bae4d48c08b,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3764,2eea5b392681dba6859e64906c355bae4d48c08b,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3765,2eea5b392681dba6859e64906c355bae4d48c08b,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3766,2eea5b392681dba6859e64906c355bae4d48c08b,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3767,2eea5b392681dba6859e64906c355bae4d48c08b,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3768,b25d4949af0eb0f1d35ce81fc880fe224adfb064,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3769,b25d4949af0eb0f1d35ce81fc880fe224adfb064,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3770,b25d4949af0eb0f1d35ce81fc880fe224adfb064,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3771,b25d4949af0eb0f1d35ce81fc880fe224adfb064,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3772,b25d4949af0eb0f1d35ce81fc880fe224adfb064,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3773,f9e1ef067753e0833bb1448f802fa62f73c81732,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3774,f9e1ef067753e0833bb1448f802fa62f73c81732,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3775,f9e1ef067753e0833bb1448f802fa62f73c81732,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3776,f9e1ef067753e0833bb1448f802fa62f73c81732,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3777,f9e1ef067753e0833bb1448f802fa62f73c81732,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3778,684ab7c1cebbe48cac330e9b011c91bf216bcd45,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3779,684ab7c1cebbe48cac330e9b011c91bf216bcd45,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3780,684ab7c1cebbe48cac330e9b011c91bf216bcd45,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3781,684ab7c1cebbe48cac330e9b011c91bf216bcd45,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3782,684ab7c1cebbe48cac330e9b011c91bf216bcd45,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3783,e6a3343fbca49365f1a64cca88574b1299293ed7,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3784,e6a3343fbca49365f1a64cca88574b1299293ed7,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3785,e6a3343fbca49365f1a64cca88574b1299293ed7,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3786,e6a3343fbca49365f1a64cca88574b1299293ed7,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3787,e6a3343fbca49365f1a64cca88574b1299293ed7,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3788,9e4af95943440c6d164596a83d8b9b784932f7f6,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
3789,9e4af95943440c6d164596a83d8b9b784932f7f6,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
3790,9e4af95943440c6d164596a83d8b9b784932f7f6,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
"
3791,1d881cd4ab8c8e81502d0ffa15e37de3258f9e19,/ehour/Dockerfile,"# https://ehour.nl/download/downloadfile.php?get=ehour-latest-standalone-unix.sh
# https://ehour.nl/download/downloadfile.php?get=ehour-1.4.3-standalone-unix.sh
"
3792,ae10b33c34066f45a94e35acac1b2e3b302a828a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3793,ae10b33c34066f45a94e35acac1b2e3b302a828a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3794,ae10b33c34066f45a94e35acac1b2e3b302a828a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3795,ae10b33c34066f45a94e35acac1b2e3b302a828a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3796,ae10b33c34066f45a94e35acac1b2e3b302a828a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3797,2bd92f887cdb18127e10c59127a79c6e3b9220d3,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3798,7c281de015ea36cfeaa60ba3f5ea6db80ec470a7,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3799,7c281de015ea36cfeaa60ba3f5ea6db80ec470a7,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3800,7c281de015ea36cfeaa60ba3f5ea6db80ec470a7,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3801,7c281de015ea36cfeaa60ba3f5ea6db80ec470a7,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3802,7c281de015ea36cfeaa60ba3f5ea6db80ec470a7,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3803,d3c2d2a87a3a5678cc992895b4ac4d6d92523bc2,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3804,d3c2d2a87a3a5678cc992895b4ac4d6d92523bc2,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3805,d3c2d2a87a3a5678cc992895b4ac4d6d92523bc2,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3806,d3c2d2a87a3a5678cc992895b4ac4d6d92523bc2,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3807,d3c2d2a87a3a5678cc992895b4ac4d6d92523bc2,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3808,4d38458ffce7137dd3388dd7cbca6348465153d1,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3809,4d38458ffce7137dd3388dd7cbca6348465153d1,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3810,4d38458ffce7137dd3388dd7cbca6348465153d1,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3811,4d38458ffce7137dd3388dd7cbca6348465153d1,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3812,4d38458ffce7137dd3388dd7cbca6348465153d1,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3813,c9b0e1b39f6a7c7b0e4d92aea97d8252c8679ea5,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3814,c9b0e1b39f6a7c7b0e4d92aea97d8252c8679ea5,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3815,c9b0e1b39f6a7c7b0e4d92aea97d8252c8679ea5,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3816,c9b0e1b39f6a7c7b0e4d92aea97d8252c8679ea5,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3817,c9b0e1b39f6a7c7b0e4d92aea97d8252c8679ea5,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3818,b09752397d170fa90d308e08b9cf387fff2c5523,/docker-master/dind/Dockerfile,"# https://github.com/docker/docker/blob/master/project/PACKAGERS.md#runtime-dependencies
"
3819,b09752397d170fa90d308e08b9cf387fff2c5523,/docker-master/dind/Dockerfile,"# pigz: https://github.com/moby/moby/pull/35697 (faster gzip implementation)
"
3820,b09752397d170fa90d308e08b9cf387fff2c5523,/docker-master/dind/Dockerfile,"# only install zfs if it's available for the current architecture
# https://git.alpinelinux.org/aports/tree/main/zfs/APKBUILD?h=3.12-stable#n8 (""all !armhf !armv7"" as of 2020-06-10)
# ""apk info XYZ"" exits with a zero exit code but no output when the package exists but not for this arch
"
3821,b09752397d170fa90d308e08b9cf387fff2c5523,/docker-master/dind/Dockerfile,"# TODO aufs-tools

# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
"
3822,b09752397d170fa90d308e08b9cf387fff2c5523,/docker-master/dind/Dockerfile,"# https://github.com/docker/docker/tree/master/hack/dind
"
3823,244dfd76776ed37689e24c39ea0897b3419dc4fb,/debian/devel/Dockerfile,"# normal build deps
"
3824,244dfd76776ed37689e24c39ea0897b3419dc4fb,/debian/devel/Dockerfile,"# need deb-src for compiling packages
"
3825,244dfd76776ed37689e24c39ea0897b3419dc4fb,/debian/devel/Dockerfile,"# let's make apt list package versions, since those are handy during devel
"
3826,244dfd76776ed37689e24c39ea0897b3419dc4fb,/debian/devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
3827,244dfd76776ed37689e24c39ea0897b3419dc4fb,/debian/devel/Dockerfile,"# for ssh to debian hosts, let's make sure we know their fingerprints <3
"
3828,244dfd76776ed37689e24c39ea0897b3419dc4fb,/debian/devel/Dockerfile,"# make sure things are pretty
"
3829,244dfd76776ed37689e24c39ea0897b3419dc4fb,/debian/devel/Dockerfile,"#(force_color_prompt=yes)/\1/' ~/.bashrc

# quilt is much amaze: https://wiki.debian.org/UsingQuilt#Using_quilt_with_Debian_source_packages
"
3830,96d9d9580d17315da15e5dd24599eecba0e027ea,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
3831,ce75adeca09ad222beab1e933b44535ac60440b6,/diffoscope/Dockerfile,"# xxd (xxd not available in path. Falling back to Python hexlify.)
"
3832,ce75adeca09ad222beab1e933b44535ac60440b6,/diffoscope/Dockerfile,"# readelf ('readelf' not available in path. Falling back to binary comparison.)
"
3833,ce75adeca09ad222beab1e933b44535ac60440b6,/diffoscope/Dockerfile,"# for ""diffoscope --progress""
"
3834,e554572e1f743f049890dfa3c96d5408e4ccb4b1,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3835,c866f7b66070f5c17d1de7cda922c55dbea5b5ca,/xen-orchestra/Dockerfile,"# see https://github.com/vatesfr/xo/blob/master/installation.md

"
3836,c866f7b66070f5c17d1de7cda922c55dbea5b5ca,/xen-orchestra/Dockerfile,"# TODO use links to get a redis server/database instead (since that's where configuration actually goes)
"
3837,c866f7b66070f5c17d1de7cda922c55dbea5b5ca,/xen-orchestra/Dockerfile,"# TODO see note above about redis
"
3838,acbbb8e062aee8a754dec5c98d2bb0b83fa89e75,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3839,acbbb8e062aee8a754dec5c98d2bb0b83fa89e75,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3840,acbbb8e062aee8a754dec5c98d2bb0b83fa89e75,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3841,acbbb8e062aee8a754dec5c98d2bb0b83fa89e75,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3842,acbbb8e062aee8a754dec5c98d2bb0b83fa89e75,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3843,8757b79b6ab500d26c9441848d2dd53e279bc02d,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3844,8c5c3d21a39e4abae5c75376cce3efb8de564925,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3845,b8801c5c8848314f9e35978648bb12c064bc8945,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
3846,b8801c5c8848314f9e35978648bb12c064bc8945,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
3847,b8801c5c8848314f9e35978648bb12c064bc8945,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
3848,a2909c3ebc8efd8233ad2dca052ec7fdbc44d6bd,/jenkins/weekly/Dockerfile,"# grab gosu for easy step-down from root
"
3849,a2909c3ebc8efd8233ad2dca052ec7fdbc44d6bd,/jenkins/weekly/Dockerfile,"# grab tini for signal processing and zombie killing
"
3850,a2909c3ebc8efd8233ad2dca052ec7fdbc44d6bd,/jenkins/weekly/Dockerfile,"# https://groups.google.com/d/msg/jenkins-infra/c7m_72vUTXE/37zw9GXhAQAJ
"
3851,a2909c3ebc8efd8233ad2dca052ec7fdbc44d6bd,/jenkins/weekly/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
3852,b930fd42ea7c28bc110857fb74d35b198e4d1d5b,/bash/3.1/Dockerfile,"# gpg: key 64EA74AB: public key ""Chet Ramey <chet@cwru.edu>"" imported
"
3853,b930fd42ea7c28bc110857fb74d35b198e4d1d5b,/bash/3.1/Dockerfile,"# https://ftp.gnu.org/gnu/bash/?C=M;O=D
"
3854,b930fd42ea7c28bc110857fb74d35b198e4d1d5b,/bash/3.1/Dockerfile,"# https://ftp.gnu.org/gnu/bash/bash-3.1-patches/?C=M;O=D
"
3855,b930fd42ea7c28bc110857fb74d35b198e4d1d5b,/bash/3.1/Dockerfile,"# prefixed with ""_"" since ""$BASH..."" have meaning in Bash parlance

"
3856,b930fd42ea7c28bc110857fb74d35b198e4d1d5b,/bash/3.1/Dockerfile,"# parallel jobs workaround borrowed from Alpine :)
"
3857,b930fd42ea7c28bc110857fb74d35b198e4d1d5b,/bash/3.1/Dockerfile,"# delete a few installed bits for smaller image size
"
3858,7a5effd185cfed1f692a406f72b3d7cb5bf3b990,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3859,7a5effd185cfed1f692a406f72b3d7cb5bf3b990,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3860,7a5effd185cfed1f692a406f72b3d7cb5bf3b990,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3861,7a5effd185cfed1f692a406f72b3d7cb5bf3b990,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3862,7a5effd185cfed1f692a406f72b3d7cb5bf3b990,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3863,7ccf86e12f860d377da5e8b74322a91bdf210107,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3864,7ccf86e12f860d377da5e8b74322a91bdf210107,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3865,7ccf86e12f860d377da5e8b74322a91bdf210107,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3866,7ccf86e12f860d377da5e8b74322a91bdf210107,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3867,7ccf86e12f860d377da5e8b74322a91bdf210107,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3868,64aa587b605320f031f0523c87874c23a37b1adc,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3869,64aa587b605320f031f0523c87874c23a37b1adc,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3870,64aa587b605320f031f0523c87874c23a37b1adc,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3871,64aa587b605320f031f0523c87874c23a37b1adc,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3872,64aa587b605320f031f0523c87874c23a37b1adc,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3873,9f6f4d2de420c33fc1f4883e3ccfe71fac753d64,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3874,9f6f4d2de420c33fc1f4883e3ccfe71fac753d64,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3875,9f6f4d2de420c33fc1f4883e3ccfe71fac753d64,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3876,9f6f4d2de420c33fc1f4883e3ccfe71fac753d64,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3877,9f6f4d2de420c33fc1f4883e3ccfe71fac753d64,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3878,80e9f4e127c13ca9e8def9479575bdb73ffb84f5,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3879,578df39b6ed257053c66c840b762ec07c2b6869c,/wine/Dockerfile,"# https://wiki.winehq.org/Debian

"
3880,578df39b6ed257053c66c840b762ec07c2b6869c,/wine/Dockerfile,"# https://dl.winehq.org/wine-builds/debian/dists/buster/main/binary-amd64/?C=N;O=D
# https://www.winehq.org/news/
"
3881,7be277bd1424cd9d934acbc5dac5a5a0fbe8fbb4,/moosefs/Dockerfile,"# mfscli (and cgi) are Python-based
"
3882,7be277bd1424cd9d934acbc5dac5a5a0fbe8fbb4,/moosefs/Dockerfile,"# mfsmount needs ""fusermount""
"
3883,7be277bd1424cd9d934acbc5dac5a5a0fbe8fbb4,/moosefs/Dockerfile,"# allow running mfsmount as non-root
"
3884,7be277bd1424cd9d934acbc5dac5a5a0fbe8fbb4,/moosefs/Dockerfile,"#user_allow_other$/user_allow_other/' /etc/fuse.conf

"
3885,7be277bd1424cd9d934acbc5dac5a5a0fbe8fbb4,/moosefs/Dockerfile,"# https://github.com/moosefs/moosefs/releases
"
3886,7be277bd1424cd9d934acbc5dac5a5a0fbe8fbb4,/moosefs/Dockerfile,"# prep the default configuration so things generally work Out-of-the-Box
"
3887,7be277bd1424cd9d934acbc5dac5a5a0fbe8fbb4,/moosefs/Dockerfile,"# allow us to run as an arbitrary user but still modify configuration
"
3888,7be277bd1424cd9d934acbc5dac5a5a0fbe8fbb4,/moosefs/Dockerfile,"# prep a scratch space with appropriate permissions to be able to do quick prototyping Out-of-the-Box
"
3889,7be277bd1424cd9d934acbc5dac5a5a0fbe8fbb4,/moosefs/Dockerfile,"# without this, the Python-based mfscli ""-f"" flag refuses to use UTF-8 box-drawing characters
"
3890,4be9922d455ddb29dc6d55eb4c9bd8a036e95954,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
3891,7a49655724a0f175b11e368d7f38878fba4eafcb,/slack/Dockerfile,"# used as a fake browser so clicked URLs (and internal Slack behavior that wants to open a browser) pop up with a URL + clipboard instead of silently doing nothing
"
3892,7a49655724a0f175b11e368d7f38878fba4eafcb,/slack/Dockerfile,"# the .deb file linked at https://slack.com/downloads/instructions/debian includes ""/etc/cron.daily/slack"" which sets up an APT repo entry as in the following installation

# pub   rsa4096 2016-02-18 [SCEA]
#       DB08 5A08 CA13 B8AC B917  E0F6 D938 EC0D 0386 51BD
# uid           [ unknown] https://packagecloud.io/slacktechnologies/slack (https://packagecloud.io/docs#gpg_signing) <support@packagecloud.io>
# sub   rsa4096 2016-02-18 [SEA]
"
3893,7a49655724a0f175b11e368d7f38878fba4eafcb,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libX11-xcb.so.1: cannot open shared object file: No such file or directory
"
3894,7a49655724a0f175b11e368d7f38878fba4eafcb,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libasound.so.2: cannot open shared object file: No such file or directory
"
3895,7a49655724a0f175b11e368d7f38878fba4eafcb,/slack/Dockerfile,"# 3.3.3: slack: error while loading shared libraries: libgtk-3.so.0: cannot open shared object file: No such file or directory
"
3896,7a49655724a0f175b11e368d7f38878fba4eafcb,/slack/Dockerfile,"# 4.4.0: Error: libxkbfile.so.1: cannot open shared object file: No such file or directory
"
3897,7a49655724a0f175b11e368d7f38878fba4eafcb,/slack/Dockerfile,"# 4.4.0: libGL error: failed to load driver: (i915_dri.so, i194, i965, swrast_dir.so, swrast)
"
3898,6cc7d320b54151f624074c90442636b5758ca3b6,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3899,6cc7d320b54151f624074c90442636b5758ca3b6,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3900,6cc7d320b54151f624074c90442636b5758ca3b6,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3901,6cc7d320b54151f624074c90442636b5758ca3b6,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3902,6cc7d320b54151f624074c90442636b5758ca3b6,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3903,1ae08bb36f065c5d64ffd21d0f94b818583618fc,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3904,1ae08bb36f065c5d64ffd21d0f94b818583618fc,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3905,1ae08bb36f065c5d64ffd21d0f94b818583618fc,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3906,1ae08bb36f065c5d64ffd21d0f94b818583618fc,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3907,1ae08bb36f065c5d64ffd21d0f94b818583618fc,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3908,26e7709d4d607ba5d75d653ce30357f2777bb81a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3909,26e7709d4d607ba5d75d653ce30357f2777bb81a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3910,26e7709d4d607ba5d75d653ce30357f2777bb81a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3911,26e7709d4d607ba5d75d653ce30357f2777bb81a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3912,26e7709d4d607ba5d75d653ce30357f2777bb81a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3913,3f89675df522b9e0e0063c89b9fe4cd2c5d555cb,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3914,3f89675df522b9e0e0063c89b9fe4cd2c5d555cb,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3915,3f89675df522b9e0e0063c89b9fe4cd2c5d555cb,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3916,3f89675df522b9e0e0063c89b9fe4cd2c5d555cb,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3917,3f89675df522b9e0e0063c89b9fe4cd2c5d555cb,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3918,af115d6930843fa13870717865595f7337cf2723,/docker/experimental/dind/Dockerfile,"# https://github.com/docker/docker/blob/master/project/PACKAGERS.md#runtime-dependencies
"
3919,af115d6930843fa13870717865595f7337cf2723,/docker/experimental/dind/Dockerfile,"# TODO aufs-tools

"
3920,cbb0c56020a6002bdc4ef96249b027d0a7d22116,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3921,cbb0c56020a6002bdc4ef96249b027d0a7d22116,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3922,cbb0c56020a6002bdc4ef96249b027d0a7d22116,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3923,cbb0c56020a6002bdc4ef96249b027d0a7d22116,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3924,cbb0c56020a6002bdc4ef96249b027d0a7d22116,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3925,c873428f4283ceb6e0a45a1f44067d8a7a1ab4e9,/golang/Dockerfile,"# (set an explicit GOARM of 5 for maximum ARM compatibility)
"
3926,c873428f4283ceb6e0a45a1f44067d8a7a1ab4e9,/golang/Dockerfile,"##*/} \
"
3927,c873428f4283ceb6e0a45a1f44067d8a7a1ab4e9,/golang/Dockerfile,"/*} \
			GOARCH=${platform##*/"
3928,8ecdb4439c03ba1641ce4efd5d0fd80a44dd96f8,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3929,8ecdb4439c03ba1641ce4efd5d0fd80a44dd96f8,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3930,8ecdb4439c03ba1641ce4efd5d0fd80a44dd96f8,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3931,8ecdb4439c03ba1641ce4efd5d0fd80a44dd96f8,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3932,8ecdb4439c03ba1641ce4efd5d0fd80a44dd96f8,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3933,0730449d5a13f92aeecadc2686f27dc2e446082d,/network-toolbox/alpine/Dockerfile,"# TODO add ""nbtscan"" when we get to Alpine 3.10 (if it makes it out of edge for 3.10)

"
3934,b1f253c879c8a0a3e2d12621afd95338dd738fa8,/diffoscope/Dockerfile,"# xxd (xxd not available in path. Falling back to Python hexlify.)
"
3935,b1f253c879c8a0a3e2d12621afd95338dd738fa8,/diffoscope/Dockerfile,"# readelf ('readelf' not available in path. Falling back to binary comparison.)
"
3936,b1f253c879c8a0a3e2d12621afd95338dd738fa8,/diffoscope/Dockerfile,"# for ""diffoscope --progress""
"
3937,86db398cc5b1328ac6cf34b576e025b67131d4f2,/debian/devel/Dockerfile,"# normal build deps
"
3938,86db398cc5b1328ac6cf34b576e025b67131d4f2,/debian/devel/Dockerfile,"# need deb-src for compiling packages
"
3939,86db398cc5b1328ac6cf34b576e025b67131d4f2,/debian/devel/Dockerfile,"# let's make apt list package versions, since those are handy during devel
"
3940,86db398cc5b1328ac6cf34b576e025b67131d4f2,/debian/devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
3941,86db398cc5b1328ac6cf34b576e025b67131d4f2,/debian/devel/Dockerfile,"# for ssh to debian hosts, let's make sure we know their fingerprints <3
"
3942,86db398cc5b1328ac6cf34b576e025b67131d4f2,/debian/devel/Dockerfile,"# make sure things are pretty
"
3943,86db398cc5b1328ac6cf34b576e025b67131d4f2,/debian/devel/Dockerfile,"#(force_color_prompt=yes)/\1/' ~/.bashrc

# quilt is much amaze: https://wiki.debian.org/UsingQuilt#Using_quilt_with_Debian_source_packages
"
3944,fb791c2c19d45dce36486ef851505a53afc5e109,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3945,17e01340f56044863708287f5745dc25433185c3,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3946,17e01340f56044863708287f5745dc25433185c3,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3947,17e01340f56044863708287f5745dc25433185c3,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3948,17e01340f56044863708287f5745dc25433185c3,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3949,17e01340f56044863708287f5745dc25433185c3,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3950,4347d61abe09578dd559d836358e59a918def5f9,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3951,4347d61abe09578dd559d836358e59a918def5f9,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3952,4347d61abe09578dd559d836358e59a918def5f9,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3953,4347d61abe09578dd559d836358e59a918def5f9,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3954,4347d61abe09578dd559d836358e59a918def5f9,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3955,7c10c4b92018bf55450e57aeeff21bef6af1b66a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3956,7c10c4b92018bf55450e57aeeff21bef6af1b66a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3957,7c10c4b92018bf55450e57aeeff21bef6af1b66a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3958,7c10c4b92018bf55450e57aeeff21bef6af1b66a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3959,7c10c4b92018bf55450e57aeeff21bef6af1b66a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3960,62a045d1145ab8436460838b45320dd75ab5ec3b,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3961,6e1a490a7164c5cd61f201c111932d0ed7ba6bff,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3962,6e1a490a7164c5cd61f201c111932d0ed7ba6bff,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3963,6e1a490a7164c5cd61f201c111932d0ed7ba6bff,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3964,6e1a490a7164c5cd61f201c111932d0ed7ba6bff,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3965,6e1a490a7164c5cd61f201c111932d0ed7ba6bff,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3966,8b67e92947bac03efd8041ef497b52155b6e385c,/phpmyadmin/Dockerfile,"# https://docs.phpmyadmin.net/en/latest/setup.html#verifying-phpmyadmin-releases
"
3967,8b67e92947bac03efd8041ef497b52155b6e385c,/phpmyadmin/Dockerfile,"# Since July 2015 all phpMyAdmin releases are cryptographically signed by the releasing developer, who through January 2016 was Marc Delisle.
"
3968,8b67e92947bac03efd8041ef497b52155b6e385c,/phpmyadmin/Dockerfile,"# Beginning in January 2016, the release manager is Isaac Bennetch.
"
3969,8b67e92947bac03efd8041ef497b52155b6e385c,/phpmyadmin/Dockerfile,"# Some additional downloads (for example themes) might be signed by Michal Čihař.
"
3970,87c3ef6e50dbc600b6775e1ca851d18b8a290d08,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3971,87c3ef6e50dbc600b6775e1ca851d18b8a290d08,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3972,87c3ef6e50dbc600b6775e1ca851d18b8a290d08,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3973,87c3ef6e50dbc600b6775e1ca851d18b8a290d08,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3974,87c3ef6e50dbc600b6775e1ca851d18b8a290d08,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3975,e414c931cef0aeaa0ba169b8cbffbd51031f1e02,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
3976,e414c931cef0aeaa0ba169b8cbffbd51031f1e02,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
3977,e414c931cef0aeaa0ba169b8cbffbd51031f1e02,/plex/media-server/Dockerfile,"# the published deb has pre/post-inst scripts that don't really apply to Docker (so we'll skip ""install"" entirely)
# (as of 1.18.5.2309, they have bugs around Docker detection, which is mostly for avoiding init behavior)
"
3978,e414c931cef0aeaa0ba169b8cbffbd51031f1e02,/plex/media-server/Dockerfile,"#	apt-get update; \
#	apt-get install /tmp/plex.deb; \
#	rm -rf /var/lib/apt/lists/*; \
"
3979,6e114bb51cde0a91dc928496fb6af4d0935893b2,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
3980,6e114bb51cde0a91dc928496fb6af4d0935893b2,/plex/media-server/Dockerfile,"# the published deb has pre/post-inst scripts that don't really apply to Docker (so we'll skip ""install"" entirely)
# (as of 1.18.5.2309, they have bugs around Docker detection, which is mostly for avoiding init behavior)
"
3981,6e114bb51cde0a91dc928496fb6af4d0935893b2,/plex/media-server/Dockerfile,"#	apt-get update; \
#	apt-get install /tmp/plex.deb; \
#	rm -rf /var/lib/apt/lists/*; \
"
3982,6e114bb51cde0a91dc928496fb6af4d0935893b2,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
3983,e056e65a80ab89aa2e6e8e0a97b2a910a5a9c8de,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3984,e056e65a80ab89aa2e6e8e0a97b2a910a5a9c8de,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3985,e056e65a80ab89aa2e6e8e0a97b2a910a5a9c8de,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3986,e056e65a80ab89aa2e6e8e0a97b2a910a5a9c8de,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3987,e056e65a80ab89aa2e6e8e0a97b2a910a5a9c8de,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3988,bffde3381c14486af628e439fb5eba195b96363f,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
3989,bffde3381c14486af628e439fb5eba195b96363f,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
3990,bffde3381c14486af628e439fb5eba195b96363f,/jenkins/Dockerfile,"# workaround ""apt-key adv --recv-keys"" hanging in stretch and above
"
3991,528ad08d3e9a38abfee526be960a81c443e15a9c,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3992,24010cd1e4b027ded63a112a6ed21a5f96c51178,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3993,24010cd1e4b027ded63a112a6ed21a5f96c51178,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3994,24010cd1e4b027ded63a112a6ed21a5f96c51178,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3995,24010cd1e4b027ded63a112a6ed21a5f96c51178,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3996,24010cd1e4b027ded63a112a6ed21a5f96c51178,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3997,9c741371cf6ae21853413a7dddcd623020bc2254,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3998,b92a10a4031f754c84d90d9162880ddd6da808e9,/containerd/Dockerfile,"# runtime deps
"
3999,b92a10a4031f754c84d90d9162880ddd6da808e9,/containerd/Dockerfile,"# https://github.com/opencontainers/runc/releases
"
4000,b92a10a4031f754c84d90d9162880ddd6da808e9,/containerd/Dockerfile,"# TODO .asc / .sha256sum
"
4001,b92a10a4031f754c84d90d9162880ddd6da808e9,/containerd/Dockerfile,"# https://github.com/containerd/containerd/releases
"
4002,3c11782a0258df19ac5ebaa60ece7e83a4071582,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4003,d3c38eaa3bc8d408048dbe0265158dae10e08383,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4004,d3c38eaa3bc8d408048dbe0265158dae10e08383,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4005,d3c38eaa3bc8d408048dbe0265158dae10e08383,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4006,d3c38eaa3bc8d408048dbe0265158dae10e08383,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4007,d3c38eaa3bc8d408048dbe0265158dae10e08383,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4008,632d1c0405459a820a954fa0ce6a78c1fcd5416d,/xen-orchestra/Dockerfile,"# see https://xen-orchestra.com/docs/from_the_sources.html

"
4009,632d1c0405459a820a954fa0ce6a78c1fcd5416d,/xen-orchestra/Dockerfile,"# https://github.com/vatesfr/xen-orchestra/releases
"
4010,632d1c0405459a820a954fa0ce6a78c1fcd5416d,/xen-orchestra/Dockerfile,"# tone down the NPM log level (default from image is ""info"")
"
4011,632d1c0405459a820a954fa0ce6a78c1fcd5416d,/xen-orchestra/Dockerfile,"# https://docs.npmjs.com/misc/config#loglevel

"
4012,632d1c0405459a820a954fa0ce6a78c1fcd5416d,/xen-orchestra/Dockerfile,"#'/': '/path/to/xo-web/dist/'!'/': '../web/dist/'!"" \
"
4013,632d1c0405459a820a954fa0ce6a78c1fcd5416d,/xen-orchestra/Dockerfile,"#uri: redis://.*!uri: 'redis://redis:6379'!"" \
"
4014,604d07a2d8d4d5b750c7ca629526abd383ce8a14,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4015,604d07a2d8d4d5b750c7ca629526abd383ce8a14,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4016,604d07a2d8d4d5b750c7ca629526abd383ce8a14,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4017,604d07a2d8d4d5b750c7ca629526abd383ce8a14,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4018,604d07a2d8d4d5b750c7ca629526abd383ce8a14,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4019,9c0f5052431fdc0bc9f44764a3338acee6126a8e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4020,9c0f5052431fdc0bc9f44764a3338acee6126a8e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4021,9c0f5052431fdc0bc9f44764a3338acee6126a8e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4022,9c0f5052431fdc0bc9f44764a3338acee6126a8e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4023,9c0f5052431fdc0bc9f44764a3338acee6126a8e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4024,d1ed7a23284d896fdf3c4d82a516b8b21d45e146,/github-pages/Dockerfile,"# https://pages.github.com/versions/
"
4025,2f594212d1164e9242fd9bd3280f9b6105768078,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4026,2f594212d1164e9242fd9bd3280f9b6105768078,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4027,2f594212d1164e9242fd9bd3280f9b6105768078,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4028,2f594212d1164e9242fd9bd3280f9b6105768078,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4029,2f594212d1164e9242fd9bd3280f9b6105768078,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4030,7d6150c537791912e37a483cd5c91b2e086c25db,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4031,68aa2d19f805bb40e74e4b62f225cfaa9c3e54bc,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4032,68aa2d19f805bb40e74e4b62f225cfaa9c3e54bc,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4033,68aa2d19f805bb40e74e4b62f225cfaa9c3e54bc,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4034,68aa2d19f805bb40e74e4b62f225cfaa9c3e54bc,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4035,68aa2d19f805bb40e74e4b62f225cfaa9c3e54bc,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4036,90c22147f70cc32ad1833eaf291f23372270f17d,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4037,90c22147f70cc32ad1833eaf291f23372270f17d,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4038,90c22147f70cc32ad1833eaf291f23372270f17d,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4039,90c22147f70cc32ad1833eaf291f23372270f17d,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4040,90c22147f70cc32ad1833eaf291f23372270f17d,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4041,a41eea97dfeba4d6c91db7495382dad3429785c3,/dell-netextender/Dockerfile,"# https://sslvpn.demo.sonicwall.com
#   u: demo    p: password

"
4042,a41eea97dfeba4d6c91db7495382dad3429785c3,/dell-netextender/Dockerfile,"# NetExtender connected successfully. Type ""Ctrl-c"" to disconnect...
"
4043,5263101275f7077c07b582e9c107ce9f1d5c0f90,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
4044,5263101275f7077c07b582e9c107ce9f1d5c0f90,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
4045,5263101275f7077c07b582e9c107ce9f1d5c0f90,/plex/media-server/Dockerfile,"# the published deb has pre/post-inst scripts that don't really apply to Docker (so we'll skip ""install"" entirely)
# (as of 1.18.5.2309, they have bugs around Docker detection, which is mostly for avoiding init behavior)
"
4046,5263101275f7077c07b582e9c107ce9f1d5c0f90,/plex/media-server/Dockerfile,"#	apt-get update; \
#	apt-get install /tmp/plex.deb; \
#	rm -rf /var/lib/apt/lists/*; \
"
4047,4d8f0d12f7974b4434551bf86cf66805f4754a59,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4048,4d8f0d12f7974b4434551bf86cf66805f4754a59,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
4049,4d8f0d12f7974b4434551bf86cf66805f4754a59,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
4050,4d8f0d12f7974b4434551bf86cf66805f4754a59,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
4051,4d8f0d12f7974b4434551bf86cf66805f4754a59,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
4052,cac88f550c7a53d9b4efab53cc6ffdb40013af5b,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4053,cac88f550c7a53d9b4efab53cc6ffdb40013af5b,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4054,cac88f550c7a53d9b4efab53cc6ffdb40013af5b,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4055,cac88f550c7a53d9b4efab53cc6ffdb40013af5b,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4056,cac88f550c7a53d9b4efab53cc6ffdb40013af5b,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4057,bb0cbb72ce58ddad9ed974f098bdb33f6211d489,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4058,60cafb7b23a00f115f1f82bd87ac8737375a5f0c,/makemkv/Dockerfile,"# FPL_MainFeature detection only seemed to work with OpenJDK 9 (8 was insufficient)
"
4059,60cafb7b23a00f115f1f82bd87ac8737375a5f0c,/makemkv/Dockerfile,"# This disc requires Java runtime (JRE), but none was found. Certain functions will fail, please install Java. See http://www.makemkv.com/bdjava/ for details.
"
4060,60cafb7b23a00f115f1f82bd87ac8737375a5f0c,/makemkv/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
4061,60cafb7b23a00f115f1f82bd87ac8737375a5f0c,/makemkv/Dockerfile,"# http://www.makemkv.com/forum2/viewtopic.php?f=3&t=224
"
4062,60cafb7b23a00f115f1f82bd87ac8737375a5f0c,/makemkv/Dockerfile,"# beta code: http://www.makemkv.com/forum2/viewtopic.php?f=5&t=1053
"
4063,60cafb7b23a00f115f1f82bd87ac8737375a5f0c,/makemkv/Dockerfile,"# pub   dsa2048 2017-05-26 [SC]
#       2ECF 2330 5F1F C0B3 2001  6733 94E3 083A 1804 2697
# uid           [ unknown] MakeMKV (signature) <support@makemkv.com>
"
4064,78a0d3bd7e4171bc6ce4c89820f1ce2004721e46,/gmpydl/Dockerfile,"# https://pypi.org/project/gmusicapi/
"
4065,78a0d3bd7e4171bc6ce4c89820f1ce2004721e46,/gmpydl/Dockerfile,"# https://github.com/stevenewbs/gmpydl/commits/master
# https://github.com/stevenewbs/gmpydl/releases
"
4066,6c177e36033425611ad73529abc72d9596b47502,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4067,6c177e36033425611ad73529abc72d9596b47502,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4068,6c177e36033425611ad73529abc72d9596b47502,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4069,6c177e36033425611ad73529abc72d9596b47502,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4070,6c177e36033425611ad73529abc72d9596b47502,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4071,3a6dbe6cca83ceb1a83a034644808c6a83397620,/moosefs/Dockerfile,"# mfscli (and cgi) are Python-based
"
4072,3a6dbe6cca83ceb1a83a034644808c6a83397620,/moosefs/Dockerfile,"# mfsmount needs ""fusermount""
"
4073,3a6dbe6cca83ceb1a83a034644808c6a83397620,/moosefs/Dockerfile,"# allow running mfsmount as non-root
"
4074,3a6dbe6cca83ceb1a83a034644808c6a83397620,/moosefs/Dockerfile,"#user_allow_other$/user_allow_other/' /etc/fuse.conf

"
4075,3a6dbe6cca83ceb1a83a034644808c6a83397620,/moosefs/Dockerfile,"# https://github.com/moosefs/moosefs/releases
"
4076,3a6dbe6cca83ceb1a83a034644808c6a83397620,/moosefs/Dockerfile,"# prep the default configuration so things generally work Out-of-the-Box
"
4077,3a6dbe6cca83ceb1a83a034644808c6a83397620,/moosefs/Dockerfile,"# allow us to run as an arbitrary user but still modify configuration
"
4078,3a6dbe6cca83ceb1a83a034644808c6a83397620,/moosefs/Dockerfile,"# prep a scratch space with appropriate permissions to be able to do quick prototyping Out-of-the-Box
"
4079,3a6dbe6cca83ceb1a83a034644808c6a83397620,/moosefs/Dockerfile,"# without this, the Python-based mfscli ""-f"" flag refuses to use UTF-8 box-drawing characters
"
4080,c73dd581d46c681cea1c1ae8216887d1d2140b52,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4081,c73dd581d46c681cea1c1ae8216887d1d2140b52,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4082,c73dd581d46c681cea1c1ae8216887d1d2140b52,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4083,c73dd581d46c681cea1c1ae8216887d1d2140b52,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4084,c73dd581d46c681cea1c1ae8216887d1d2140b52,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4085,8a9bd317bd62a94abe6c2e3b28d37c0ea1f08625,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4086,673fba0348f71a95c9d35f1cb0e55041e4156448,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
4087,673fba0348f71a95c9d35f1cb0e55041e4156448,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
"
4088,fad20a9652a9612c52b44e19a0ec2f57482a6eca,/vultr-cli/Dockerfile,"# https://github.com/vultr/vultr-cli/releases
"
4089,8a3f8dd7f4ba3a4a8daadf8342d6fe3aa4df297d,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4090,8a3f8dd7f4ba3a4a8daadf8342d6fe3aa4df297d,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4091,8a3f8dd7f4ba3a4a8daadf8342d6fe3aa4df297d,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4092,8a3f8dd7f4ba3a4a8daadf8342d6fe3aa4df297d,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4093,8a3f8dd7f4ba3a4a8daadf8342d6fe3aa4df297d,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4094,a5d820803f01e2582d45be1b00a2808ede979951,/xen-orchestra/Dockerfile,"# see https://github.com/vatesfr/xo/blob/master/installation.md

"
4095,a5d820803f01e2582d45be1b00a2808ede979951,/xen-orchestra/Dockerfile,"# TODO use links to get a redis server/database instead (since that's where configuration actually goes)
"
4096,a5d820803f01e2582d45be1b00a2808ede979951,/xen-orchestra/Dockerfile,"# TODO see note above about redis
"
4097,3440bd84e2aa7ad9d08e34c777a814590f74dd91,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4098,3440bd84e2aa7ad9d08e34c777a814590f74dd91,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4099,3440bd84e2aa7ad9d08e34c777a814590f74dd91,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4100,3440bd84e2aa7ad9d08e34c777a814590f74dd91,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4101,3440bd84e2aa7ad9d08e34c777a814590f74dd91,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4102,9ccbaca79ff2d0230b98308aa66cb5885182c35a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4103,9ccbaca79ff2d0230b98308aa66cb5885182c35a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4104,9ccbaca79ff2d0230b98308aa66cb5885182c35a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4105,9ccbaca79ff2d0230b98308aa66cb5885182c35a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4106,9ccbaca79ff2d0230b98308aa66cb5885182c35a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4107,e6da040af07746dd83947322a02057ab5f937058,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4108,e6da040af07746dd83947322a02057ab5f937058,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4109,e6da040af07746dd83947322a02057ab5f937058,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4110,e6da040af07746dd83947322a02057ab5f937058,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4111,e6da040af07746dd83947322a02057ab5f937058,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4112,c338e5d6d98b124a45ad16e06ca3d7f0ca7c4908,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4113,8073dfc2af27b71298f0130acab2b3653b31907f,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4114,47ba9f390c1a8857fef1fd041673bf30835e2d17,/sbuild/Dockerfile,"# run with ""--cap-add SYS_ADMIN"" so that sbuild can ""mount"" in the chroots it creates

"
4115,47ba9f390c1a8857fef1fd041673bf30835e2d17,/sbuild/Dockerfile,"# https://gist.github.com/tianon/a0080cbca558e4b907fe
# (useful sbuild-related scripts)
"
4116,47ba9f390c1a8857fef1fd041673bf30835e2d17,/sbuild/Dockerfile,"# usage: download-debuerreotype-tarball.sh suite [arch]
#    ie: download-debuerreotype-tarball.sh stretch
#        download-debuerreotype-tarball.sh sid i386
"
4117,3a5e692ae04c7f3f1aaf9b26003cfd799d3656cf,/skype/Dockerfile,"# see https://repo.skype.com

"
4118,3a5e692ae04c7f3f1aaf9b26003cfd799d3656cf,/skype/Dockerfile,"# https://repo.skype.com/data/SKYPE-GPG-KEY
"
4119,3a5e692ae04c7f3f1aaf9b26003cfd799d3656cf,/skype/Dockerfile,"# pub   2048R/DF7587C3 2016-06-22 [expires: 2021-06-21]
#       Key fingerprint = D404 0146 BE39 7250 9FD5  7FC7 1F30 45A5 DF75 87C3
# uid                  Skype Linux Client Repository <se-um@microsoft.com>
# sub   2048R/A4EBB320 2016-06-22 [expires: 2021-06-21]
"
4120,c99a47b15c85df9c8528a36d6f4c4150b7dc979f,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
4121,c99a47b15c85df9c8528a36d6f4c4150b7dc979f,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
4122,c99a47b15c85df9c8528a36d6f4c4150b7dc979f,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
4123,85b48e45125d1cc88b5c68d717a5fbef1af63f6b,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
4124,d297e19a3984825ec8293ffb956519988ca881a9,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4125,d297e19a3984825ec8293ffb956519988ca881a9,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
4126,d297e19a3984825ec8293ffb956519988ca881a9,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
4127,225bfed7e35bf9123f0e6c48fcb2df7964ee37bf,/docker/master/dind/Dockerfile,"# https://github.com/docker/docker/blob/master/project/PACKAGERS.md#runtime-dependencies
"
4128,225bfed7e35bf9123f0e6c48fcb2df7964ee37bf,/docker/master/dind/Dockerfile,"# TODO aufs-tools

"
4129,0f11a764a4b6d72a17d0a7eef62d970a6b90031f,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4130,b7111bb0b9cf2cbb1de41211ffa082a5b174648f,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4131,b3db457741b0da034ac3d47e53d7c2723e90250a,/nylas-n1/Dockerfile,"# hijack the browser in the worst way possible
"
4132,b3db457741b0da034ac3d47e53d7c2723e90250a,/nylas-n1/Dockerfile,"#!/bin/bash'; \
"
4133,0cbdfeef279dc14a54cd07292584a74c83f31add,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4134,0cbdfeef279dc14a54cd07292584a74c83f31add,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4135,0cbdfeef279dc14a54cd07292584a74c83f31add,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4136,0cbdfeef279dc14a54cd07292584a74c83f31add,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4137,0cbdfeef279dc14a54cd07292584a74c83f31add,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4138,b7d0f064f21c268f1830ee8c8b10fe2eed775f6f,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4139,09e19373a014c52eb35a9d07b981b9c6d31409dd,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4140,d4fe4b70c4cbac1fb33a08aadd21c0ebd98a25f6,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4141,d4fe4b70c4cbac1fb33a08aadd21c0ebd98a25f6,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
4142,d4fe4b70c4cbac1fb33a08aadd21c0ebd98a25f6,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
4143,d4fe4b70c4cbac1fb33a08aadd21c0ebd98a25f6,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
4144,d4fe4b70c4cbac1fb33a08aadd21c0ebd98a25f6,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
4145,39a4511686382f1a673d48ed26b8314827881c51,/debian/devel/Dockerfile,"# normal build deps
"
4146,39a4511686382f1a673d48ed26b8314827881c51,/debian/devel/Dockerfile,"# need deb-src for compiling packages
"
4147,39a4511686382f1a673d48ed26b8314827881c51,/debian/devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
4148,39a4511686382f1a673d48ed26b8314827881c51,/debian/devel/Dockerfile,"# for ssh to debian hosts, let's make sure we know their fingerprints <3
"
4149,39a4511686382f1a673d48ed26b8314827881c51,/debian/devel/Dockerfile,"# make sure things are pretty
"
4150,39a4511686382f1a673d48ed26b8314827881c51,/debian/devel/Dockerfile,"#(force_color_prompt=yes)/\1/' ~/.bashrc

# quilt is much amaze: https://wiki.debian.org/UsingQuilt#Using_quilt_with_Debian_source_packages
"
4151,a70b767eacee0aba36fd2214f9b3626e43e71cf5,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4152,0ae58c0bc42fe621eb5923049d0fe2dc6622a7a2,/gmpydl/Dockerfile,"# https://pypi.org/project/gmusicapi/
"
4153,0ae58c0bc42fe621eb5923049d0fe2dc6622a7a2,/gmpydl/Dockerfile,"# https://github.com/stevenewbs/gmpydl/commits/master
# https://github.com/stevenewbs/gmpydl/releases
"
4154,2e37f527a42e05e8b9e62a84ec34355edae69e47,/apache2/Dockerfile,"# let's copy a few of the settings from /etc/init.d/apache2
"
4155,2e37f527a42e05e8b9e62a84ec34355edae69e47,/apache2/Dockerfile,"# and then a few more from $APACHE_CONFDIR/envvars itself
"
4156,2e37f527a42e05e8b9e62a84ec34355edae69e47,/apache2/Dockerfile,"# ...
"
4157,2e37f527a42e05e8b9e62a84ec34355edae69e47,/apache2/Dockerfile,"# I really don't like Apache.  Irrationally.
"
4158,b50eda1a72c3d657562060609b419325649d7b4b,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4159,60026184bee861b7db738753bdf12568c37a7478,/jenkins/weekly/Dockerfile,"# grab gosu for easy step-down from root
"
4160,60026184bee861b7db738753bdf12568c37a7478,/jenkins/weekly/Dockerfile,"# grab tini for signal processing and zombie killing
"
4161,60026184bee861b7db738753bdf12568c37a7478,/jenkins/weekly/Dockerfile,"# https://groups.google.com/d/msg/jenkins-infra/c7m_72vUTXE/37zw9GXhAQAJ
"
4162,60026184bee861b7db738753bdf12568c37a7478,/jenkins/weekly/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
4163,9f5fd4023d0e207febf40bbfcee5f618936ef3f2,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4164,9f5fd4023d0e207febf40bbfcee5f618936ef3f2,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
4165,c7eb1429e72e06f2c147dac1c10bf8386a99c972,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4166,c7eb1429e72e06f2c147dac1c10bf8386a99c972,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4167,c7eb1429e72e06f2c147dac1c10bf8386a99c972,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4168,c7eb1429e72e06f2c147dac1c10bf8386a99c972,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4169,c7eb1429e72e06f2c147dac1c10bf8386a99c972,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4170,b09752397d170fa90d308e08b9cf387fff2c5523,/pmbootstrap/Dockerfile,"# verify there are no errors/warnings
"
4171,b09752397d170fa90d308e08b9cf387fff2c5523,/pmbootstrap/Dockerfile,"# https://pypi.org/project/pmbootstrap/
"
4172,b09752397d170fa90d308e08b9cf387fff2c5523,/pmbootstrap/Dockerfile,"# workaround issues with transparent QEMU / binfmt detection (""fix binary"" -- qemu binaries not necessary inside chroots/namespaces)
"
4173,32476ba6961eed4e26c6b23bc09bf738436870eb,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4174,32476ba6961eed4e26c6b23bc09bf738436870eb,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4175,32476ba6961eed4e26c6b23bc09bf738436870eb,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4176,32476ba6961eed4e26c6b23bc09bf738436870eb,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4177,32476ba6961eed4e26c6b23bc09bf738436870eb,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4178,e26dbdf5c537efc58f61d672626aaed15cdf0ac4,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4179,e26dbdf5c537efc58f61d672626aaed15cdf0ac4,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4180,e26dbdf5c537efc58f61d672626aaed15cdf0ac4,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4181,e26dbdf5c537efc58f61d672626aaed15cdf0ac4,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4182,e26dbdf5c537efc58f61d672626aaed15cdf0ac4,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4183,7693cabc41bb6897c39c6d463d77fb446153998b,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4184,7693cabc41bb6897c39c6d463d77fb446153998b,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
4185,7693cabc41bb6897c39c6d463d77fb446153998b,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
4186,7693cabc41bb6897c39c6d463d77fb446153998b,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
4187,7693cabc41bb6897c39c6d463d77fb446153998b,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
4188,bb56a63b58d48c42fcadfb17eb0ec8b26c41c870,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4189,bb56a63b58d48c42fcadfb17eb0ec8b26c41c870,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4190,bb56a63b58d48c42fcadfb17eb0ec8b26c41c870,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4191,bb56a63b58d48c42fcadfb17eb0ec8b26c41c870,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4192,bb56a63b58d48c42fcadfb17eb0ec8b26c41c870,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4193,448a48c707ccf66391cbde3c463a52e0aa9a9c1c,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4194,448a48c707ccf66391cbde3c463a52e0aa9a9c1c,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4195,448a48c707ccf66391cbde3c463a52e0aa9a9c1c,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4196,448a48c707ccf66391cbde3c463a52e0aa9a9c1c,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4197,448a48c707ccf66391cbde3c463a52e0aa9a9c1c,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4198,9ce0908a6dedb99f30beafef128128e4ccdce6d4,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4199,9ce0908a6dedb99f30beafef128128e4ccdce6d4,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4200,9ce0908a6dedb99f30beafef128128e4ccdce6d4,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4201,9ce0908a6dedb99f30beafef128128e4ccdce6d4,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4202,9ce0908a6dedb99f30beafef128128e4ccdce6d4,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4203,88a147c9b01c49ae51c623fa7200fe4b78198f6e,/debian/devel/Dockerfile,"# normal build deps
"
4204,88a147c9b01c49ae51c623fa7200fe4b78198f6e,/debian/devel/Dockerfile,"# need deb-src for compiling packages
"
4205,88a147c9b01c49ae51c623fa7200fe4b78198f6e,/debian/devel/Dockerfile,"# let's make apt list package versions, since those are handy during devel
"
4206,88a147c9b01c49ae51c623fa7200fe4b78198f6e,/debian/devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
4207,88a147c9b01c49ae51c623fa7200fe4b78198f6e,/debian/devel/Dockerfile,"# for ssh to debian hosts, let's make sure we know their fingerprints <3
"
4208,88a147c9b01c49ae51c623fa7200fe4b78198f6e,/debian/devel/Dockerfile,"# make sure things are pretty
"
4209,88a147c9b01c49ae51c623fa7200fe4b78198f6e,/debian/devel/Dockerfile,"#(force_color_prompt=yes)/\1/' ~/.bashrc

# quilt is much amaze: https://wiki.debian.org/UsingQuilt#Using_quilt_with_Debian_source_packages
"
4210,88a147c9b01c49ae51c623fa7200fe4b78198f6e,/debian/devel/Dockerfile,"# make sure pbuilder-dist uses a sane default mirror
"
4211,1e22ac1ac4baf27471e5d7690e0166656c0d1edc,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4212,1e22ac1ac4baf27471e5d7690e0166656c0d1edc,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4213,1e22ac1ac4baf27471e5d7690e0166656c0d1edc,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4214,1e22ac1ac4baf27471e5d7690e0166656c0d1edc,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4215,1e22ac1ac4baf27471e5d7690e0166656c0d1edc,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4216,6d87dc6a2de4e3d09f409eb6c0d59fd3065f046a,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4217,79732fc2b0df47b65df1f5f5f7c07619307858fb,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4218,79732fc2b0df47b65df1f5f5f7c07619307858fb,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4219,79732fc2b0df47b65df1f5f5f7c07619307858fb,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4220,79732fc2b0df47b65df1f5f5f7c07619307858fb,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4221,79732fc2b0df47b65df1f5f5f7c07619307858fb,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4222,268188854fb3f0da48fe6700be7a5bd7b2a58bba,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4223,268188854fb3f0da48fe6700be7a5bd7b2a58bba,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
4224,268188854fb3f0da48fe6700be7a5bd7b2a58bba,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
4225,268188854fb3f0da48fe6700be7a5bd7b2a58bba,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
4226,268188854fb3f0da48fe6700be7a5bd7b2a58bba,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
4227,5588e89d15eaa032223a1f0c05ed9a5733382bcf,/qemu/Dockerfile,"#		qemu-system \
#		qemu-utils \
"
4228,5588e89d15eaa032223a1f0c05ed9a5733382bcf,/qemu/Dockerfile,"# https://www.qemu.org/download/#source
"
4229,5588e89d15eaa032223a1f0c05ed9a5733382bcf,/qemu/Dockerfile,"# TODO verify signature
"
4230,5588e89d15eaa032223a1f0c05ed9a5733382bcf,/qemu/Dockerfile,"# system targets
# (https://sources.debian.org/src/qemu/stretch/debian/rules/#L57-L61, slimmed)
"
4231,5588e89d15eaa032223a1f0c05ed9a5733382bcf,/qemu/Dockerfile,"# user targets
# (https://sources.debian.org/src/qemu/stretch/debian/rules/#L81-L86, slimmed)
"
4232,5588e89d15eaa032223a1f0c05ed9a5733382bcf,/qemu/Dockerfile,"#		--enable-rbd \
#		--enable-vde \
"
4233,82dff9eeced452d669ab0045364b5d89328586af,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4234,aae72a775b9c3cee67dcc40e888293dcb4f5ede0,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4235,adaa95f093734795175b24bc3a3c6a8ec4cba912,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4236,1f13886bfee0eb32b5d8094ee015ef3f793ef7b2,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4237,1f13886bfee0eb32b5d8094ee015ef3f793ef7b2,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4238,1f13886bfee0eb32b5d8094ee015ef3f793ef7b2,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4239,1f13886bfee0eb32b5d8094ee015ef3f793ef7b2,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4240,1f13886bfee0eb32b5d8094ee015ef3f793ef7b2,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4241,cfc626be3671cd10a04e7157d031fd7cbec5b3bc,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4242,cfc626be3671cd10a04e7157d031fd7cbec5b3bc,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
4243,cfc626be3671cd10a04e7157d031fd7cbec5b3bc,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
4244,cfc626be3671cd10a04e7157d031fd7cbec5b3bc,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
4245,cfc626be3671cd10a04e7157d031fd7cbec5b3bc,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
4246,7457bc266c5b740b95c68467b0433407214f501c,/prometheus/Dockerfile,"# https://github.com/prometheus/prometheus/releases
"
4247,d0c5936cf64d23113eac4e9872cf52b8ccb93e63,/nginx/Dockerfile,"# prevent backgrounding (for Docker)\ndaemon off;' >> /etc/nginx/nginx.conf

"
4248,28944bd606b19367b154ed191f4950c852bbdd84,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4249,366805e14c35a352b2e6593270e446a2e78715e6,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4250,366805e14c35a352b2e6593270e446a2e78715e6,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
4251,366805e14c35a352b2e6593270e446a2e78715e6,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
4252,cfe33e4e7664ecfc89f9aa1cfe77560d4af2a6c6,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4253,57cae9900e5a0bf1f0603d8da8c14f5fb0735b2c,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4254,57cae9900e5a0bf1f0603d8da8c14f5fb0735b2c,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4255,57cae9900e5a0bf1f0603d8da8c14f5fb0735b2c,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4256,57cae9900e5a0bf1f0603d8da8c14f5fb0735b2c,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4257,57cae9900e5a0bf1f0603d8da8c14f5fb0735b2c,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4258,e3872662187caddf9bf72536532a2e197df12b51,/skype/Dockerfile,"# see https://repo.skype.com

"
4259,e3872662187caddf9bf72536532a2e197df12b51,/skype/Dockerfile,"# wget is invoked by skypeforlinux for crash reports
"
4260,e3872662187caddf9bf72536532a2e197df12b51,/skype/Dockerfile,"# https://repo.skype.com/data/SKYPE-GPG-KEY
"
4261,e3872662187caddf9bf72536532a2e197df12b51,/skype/Dockerfile,"# pub   2048R/DF7587C3 2016-06-22 [expires: 2021-06-21]
#       Key fingerprint = D404 0146 BE39 7250 9FD5  7FC7 1F30 45A5 DF75 87C3
# uid                  Skype Linux Client Repository <se-um@microsoft.com>
# sub   2048R/A4EBB320 2016-06-22 [expires: 2021-06-21]
"
4262,5dbe0b0ee2941a4b1cf0d121d57b089ec41e7612,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4263,5dbe0b0ee2941a4b1cf0d121d57b089ec41e7612,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4264,5dbe0b0ee2941a4b1cf0d121d57b089ec41e7612,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4265,5dbe0b0ee2941a4b1cf0d121d57b089ec41e7612,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4266,5dbe0b0ee2941a4b1cf0d121d57b089ec41e7612,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4267,c20bb01c92bb87c2d15782252209e3d4225da8f0,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4268,c20bb01c92bb87c2d15782252209e3d4225da8f0,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
4269,c20bb01c92bb87c2d15782252209e3d4225da8f0,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
4270,a6fd50185d232c0ce9d38091564ceb0dc42d8b93,/slack/Dockerfile,"# used as a fake browser so clicked URLs (and internal Slack behavior that wants to open a browser) pop up with a URL + clipboard instead of silently doing nothing
"
4271,a6fd50185d232c0ce9d38091564ceb0dc42d8b93,/slack/Dockerfile,"# the .deb file linked at https://slack.com/downloads/instructions/debian includes ""/etc/cron.daily/slack"" which sets up an APT repo entry as in the following installation

# pub   rsa4096 2016-02-18 [SCEA]
#       DB08 5A08 CA13 B8AC B917  E0F6 D938 EC0D 0386 51BD
# uid           [ unknown] https://packagecloud.io/slacktechnologies/slack (https://packagecloud.io/docs#gpg_signing) <support@packagecloud.io>
# sub   rsa4096 2016-02-18 [SEA]
"
4272,a6fd50185d232c0ce9d38091564ceb0dc42d8b93,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libX11-xcb.so.1: cannot open shared object file: No such file or directory
"
4273,a6fd50185d232c0ce9d38091564ceb0dc42d8b93,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libasound.so.2: cannot open shared object file: No such file or directory
"
4274,a6fd50185d232c0ce9d38091564ceb0dc42d8b93,/slack/Dockerfile,"# 3.3.3: slack: error while loading shared libraries: libgtk-3.so.0: cannot open shared object file: No such file or directory
"
4275,a6fd50185d232c0ce9d38091564ceb0dc42d8b93,/slack/Dockerfile,"# 4.4.0: Error: libxkbfile.so.1: cannot open shared object file: No such file or directory
"
4276,a6fd50185d232c0ce9d38091564ceb0dc42d8b93,/slack/Dockerfile,"# 4.4.0: libGL error: failed to load driver: (i915_dri.so, i194, i965, swrast_dir.so, swrast)
"
4277,1348a0d41489549cddf60410a03b60e65585f9ac,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4278,1348a0d41489549cddf60410a03b60e65585f9ac,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4279,1348a0d41489549cddf60410a03b60e65585f9ac,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4280,1348a0d41489549cddf60410a03b60e65585f9ac,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4281,1348a0d41489549cddf60410a03b60e65585f9ac,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4282,8172369341ea74da6a6958ebe65235b2677d06f3,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4283,8172369341ea74da6a6958ebe65235b2677d06f3,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4284,8172369341ea74da6a6958ebe65235b2677d06f3,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4285,8172369341ea74da6a6958ebe65235b2677d06f3,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4286,8172369341ea74da6a6958ebe65235b2677d06f3,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4287,3b1f4b468ac94950351e544c72b961ee8ee08fe6,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4288,3b1f4b468ac94950351e544c72b961ee8ee08fe6,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4289,3b1f4b468ac94950351e544c72b961ee8ee08fe6,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4290,3b1f4b468ac94950351e544c72b961ee8ee08fe6,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4291,3b1f4b468ac94950351e544c72b961ee8ee08fe6,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4292,ee1e4d7b645bfac3a4e605778782ef79fd49b63b,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4293,ee1e4d7b645bfac3a4e605778782ef79fd49b63b,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4294,ee1e4d7b645bfac3a4e605778782ef79fd49b63b,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4295,ee1e4d7b645bfac3a4e605778782ef79fd49b63b,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4296,ee1e4d7b645bfac3a4e605778782ef79fd49b63b,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4297,0ddca343b41b32cfd7855e63cea472975f573c03,/pmbootstrap/Dockerfile,"# https://gitlab.alpinelinux.org/alpine/aports/issues/11122
"
4298,0ddca343b41b32cfd7855e63cea472975f573c03,/pmbootstrap/Dockerfile,"# verify there are no errors/warnings
"
4299,0ddca343b41b32cfd7855e63cea472975f573c03,/pmbootstrap/Dockerfile,"# https://pypi.org/project/pmbootstrap/
"
4300,0ddca343b41b32cfd7855e63cea472975f573c03,/pmbootstrap/Dockerfile,"# workaround issues with transparent QEMU / binfmt detection (""fix binary"" -- qemu binaries not necessary inside chroots/namespaces)
"
4301,4ae23bbe3303733453a4fb86777680e3c8242ae3,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4302,43c1bc11c7839ce8647855794c2a46936871824f,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4303,30bbea799b0ab0a9f482a0f78a843907c9a17a6d,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4304,30bbea799b0ab0a9f482a0f78a843907c9a17a6d,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
4305,30bbea799b0ab0a9f482a0f78a843907c9a17a6d,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
4306,30bbea799b0ab0a9f482a0f78a843907c9a17a6d,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
4307,30bbea799b0ab0a9f482a0f78a843907c9a17a6d,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
4308,4158c9bc0e3270322b901f8189de980b2df91db6,/phpmyadmin/Dockerfile,"# https://www.phpmyadmin.net/downloads/
"
4309,4158c9bc0e3270322b901f8189de980b2df91db6,/phpmyadmin/Dockerfile,"# https://docs.phpmyadmin.net/en/latest/setup.html#verifying-phpmyadmin-releases
"
4310,4158c9bc0e3270322b901f8189de980b2df91db6,/phpmyadmin/Dockerfile,"# Since July 2015 all phpMyAdmin releases are cryptographically signed by the releasing developer, who through January 2016 was Marc Delisle.
"
4311,4158c9bc0e3270322b901f8189de980b2df91db6,/phpmyadmin/Dockerfile,"# Beginning in January 2016, the release manager is Isaac Bennetch.
"
4312,4158c9bc0e3270322b901f8189de980b2df91db6,/phpmyadmin/Dockerfile,"# Some additional downloads (for example themes) might be signed by Michal Čihař.
"
4313,60eae8cba22d26a9ea499d8348f69b29673ceaf1,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4314,60eae8cba22d26a9ea499d8348f69b29673ceaf1,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4315,60eae8cba22d26a9ea499d8348f69b29673ceaf1,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4316,60eae8cba22d26a9ea499d8348f69b29673ceaf1,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4317,60eae8cba22d26a9ea499d8348f69b29673ceaf1,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4318,21738574416cf0165dd6df8a4c62df76748b4ee8,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4319,21738574416cf0165dd6df8a4c62df76748b4ee8,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4320,21738574416cf0165dd6df8a4c62df76748b4ee8,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4321,21738574416cf0165dd6df8a4c62df76748b4ee8,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4322,21738574416cf0165dd6df8a4c62df76748b4ee8,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4323,c681a89ab2be2591de3127ac0a1b2c8874f5deb2,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4324,c681a89ab2be2591de3127ac0a1b2c8874f5deb2,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4325,c681a89ab2be2591de3127ac0a1b2c8874f5deb2,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4326,c681a89ab2be2591de3127ac0a1b2c8874f5deb2,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4327,c681a89ab2be2591de3127ac0a1b2c8874f5deb2,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4328,b65f810d8e4f551517d4b2924c924b013e040972,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4329,b65f810d8e4f551517d4b2924c924b013e040972,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4330,b65f810d8e4f551517d4b2924c924b013e040972,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4331,b65f810d8e4f551517d4b2924c924b013e040972,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4332,b65f810d8e4f551517d4b2924c924b013e040972,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4333,f02adfab3156863841e6816ed4813207c6d92982,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4334,f02adfab3156863841e6816ed4813207c6d92982,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4335,f02adfab3156863841e6816ed4813207c6d92982,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4336,f02adfab3156863841e6816ed4813207c6d92982,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4337,f02adfab3156863841e6816ed4813207c6d92982,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4338,cda8a79174a1f0214acb3dd8e65e43e03b078cae,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4339,cda8a79174a1f0214acb3dd8e65e43e03b078cae,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4340,cda8a79174a1f0214acb3dd8e65e43e03b078cae,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4341,cda8a79174a1f0214acb3dd8e65e43e03b078cae,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4342,cda8a79174a1f0214acb3dd8e65e43e03b078cae,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4343,56d4e8d21f8a668fa26cf3ffd99b1d225dc3638a,/slack/Dockerfile,"# the .deb file linked at https://slack.com/downloads/instructions/debian includes ""/etc/cron.daily/slack"" which sets up an APT repo entry as in the following installation

# pub   rsa4096 2016-02-18 [SCEA]
#       DB08 5A08 CA13 B8AC B917  E0F6 D938 EC0D 0386 51BD
# uid           [ unknown] https://packagecloud.io/slacktechnologies/slack (https://packagecloud.io/docs#gpg_signing) <support@packagecloud.io>
# sub   rsa4096 2016-02-18 [SEA]
"
4344,56d4e8d21f8a668fa26cf3ffd99b1d225dc3638a,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libX11-xcb.so.1: cannot open shared object file: No such file or directory
"
4345,56d4e8d21f8a668fa26cf3ffd99b1d225dc3638a,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libasound.so.2: cannot open shared object file: No such file or directory
"
4346,56d4e8d21f8a668fa26cf3ffd99b1d225dc3638a,/slack/Dockerfile,"# 3.3.3: slack: error while loading shared libraries: libgtk-3.so.0: cannot open shared object file: No such file or directory
"
4347,ae10b33c34066f45a94e35acac1b2e3b302a828a,/vultr-cli/Dockerfile,"# https://github.com/vultr/vultr-cli/releases
"
4348,4c1b4a5fac92ebc2db1db01feeef05079749ac99,/debian/devel/Dockerfile,"# normal build deps
"
4349,4c1b4a5fac92ebc2db1db01feeef05079749ac99,/debian/devel/Dockerfile,"# need an editor for ""dch -i""
"
4350,4c1b4a5fac92ebc2db1db01feeef05079749ac99,/debian/devel/Dockerfile,"# a few extra little useful things
"
4351,4c1b4a5fac92ebc2db1db01feeef05079749ac99,/debian/devel/Dockerfile,"# need deb-src for compiling packages
"
4352,4c1b4a5fac92ebc2db1db01feeef05079749ac99,/debian/devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
4353,4c1b4a5fac92ebc2db1db01feeef05079749ac99,/debian/devel/Dockerfile,"# for ssh to debian hosts, let's make sure we know their fingerprints <3
"
4354,4c1b4a5fac92ebc2db1db01feeef05079749ac99,/debian/devel/Dockerfile,"# make sure things are pretty
"
4355,4c1b4a5fac92ebc2db1db01feeef05079749ac99,/debian/devel/Dockerfile,"#(force_color_prompt=yes)/\1/' /root/.bashrc

# quilt is much amaze: https://wiki.debian.org/UsingQuilt#Using_quilt_with_Debian_source_packages
"
4356,5546017a9369e7e4fd90ab43c59d6a384a036600,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4357,5546017a9369e7e4fd90ab43c59d6a384a036600,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4358,5546017a9369e7e4fd90ab43c59d6a384a036600,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4359,5546017a9369e7e4fd90ab43c59d6a384a036600,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4360,5546017a9369e7e4fd90ab43c59d6a384a036600,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4361,62cf23c2b8f38a650f4d2bf6291260596ed9f952,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4362,9015d8ced0c363d427efa289a65c0b4e17f3caa9,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4363,9015d8ced0c363d427efa289a65c0b4e17f3caa9,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4364,9015d8ced0c363d427efa289a65c0b4e17f3caa9,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4365,9015d8ced0c363d427efa289a65c0b4e17f3caa9,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4366,9015d8ced0c363d427efa289a65c0b4e17f3caa9,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4367,cb5dc0fd34de7dabba336e826186349d177b20ab,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
4368,cb5dc0fd34de7dabba336e826186349d177b20ab,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
4369,cb5dc0fd34de7dabba336e826186349d177b20ab,/plex/media-server/Dockerfile,"# the published deb has pre/post-inst scripts that don't really apply to Docker (so we'll skip ""install"" entirely)
# (as of 1.18.5.2309, they have bugs around Docker detection, which is mostly for avoiding init behavior)
"
4370,cb5dc0fd34de7dabba336e826186349d177b20ab,/plex/media-server/Dockerfile,"#	apt-get update; \
#	apt-get install /tmp/plex.deb; \
#	rm -rf /var/lib/apt/lists/*; \
"
4371,c6fb1477c0c13e8973445fd3dbf14a4fc75bc43c,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4372,c6fb1477c0c13e8973445fd3dbf14a4fc75bc43c,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4373,c6fb1477c0c13e8973445fd3dbf14a4fc75bc43c,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4374,c6fb1477c0c13e8973445fd3dbf14a4fc75bc43c,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4375,c6fb1477c0c13e8973445fd3dbf14a4fc75bc43c,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4376,189794b666bd73feeb59af1b0e12e3e52cda5f64,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4377,51f0eb74e0e33c2a5ea5c4ac780268ff40fb109e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4378,51f0eb74e0e33c2a5ea5c4ac780268ff40fb109e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4379,51f0eb74e0e33c2a5ea5c4ac780268ff40fb109e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4380,51f0eb74e0e33c2a5ea5c4ac780268ff40fb109e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4381,51f0eb74e0e33c2a5ea5c4ac780268ff40fb109e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4382,84df85957db8a8492ac82b69b5fa04b8e6dc4269,/xen-orchestra/Dockerfile,"# see https://xen-orchestra.com/docs/from_the_sources.html

"
4383,84df85957db8a8492ac82b69b5fa04b8e6dc4269,/xen-orchestra/Dockerfile,"# https://github.com/vatesfr/xen-orchestra/releases
"
4384,84df85957db8a8492ac82b69b5fa04b8e6dc4269,/xen-orchestra/Dockerfile,"#'/': '/path/to/xo-web/dist/'!'/': '../xo-web/dist/'!"" \
"
4385,84df85957db8a8492ac82b69b5fa04b8e6dc4269,/xen-orchestra/Dockerfile,"#uri: redis://.*!uri: 'redis://redis:6379'!"" \
"
4386,ce097aa4b99c9bf259e2005e6e5e82e823a03075,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4387,ce097aa4b99c9bf259e2005e6e5e82e823a03075,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4388,ce097aa4b99c9bf259e2005e6e5e82e823a03075,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4389,ce097aa4b99c9bf259e2005e6e5e82e823a03075,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4390,ce097aa4b99c9bf259e2005e6e5e82e823a03075,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4391,b44e9b185efcd595fbbcdaf4eb2cbb56e22d61b8,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4392,b44e9b185efcd595fbbcdaf4eb2cbb56e22d61b8,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4393,b44e9b185efcd595fbbcdaf4eb2cbb56e22d61b8,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4394,b44e9b185efcd595fbbcdaf4eb2cbb56e22d61b8,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4395,b44e9b185efcd595fbbcdaf4eb2cbb56e22d61b8,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4396,ef30e1a74a2208b78f6bea3c64201fd332d2bb86,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4397,ef30e1a74a2208b78f6bea3c64201fd332d2bb86,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4398,ef30e1a74a2208b78f6bea3c64201fd332d2bb86,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4399,ef30e1a74a2208b78f6bea3c64201fd332d2bb86,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4400,ef30e1a74a2208b78f6bea3c64201fd332d2bb86,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4401,467c068c22156717def589010d2f13d0bebb6a9c,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4402,467c068c22156717def589010d2f13d0bebb6a9c,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
4403,467c068c22156717def589010d2f13d0bebb6a9c,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
4404,111d87749260acc6de757b848ac6a60fd7239abb,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4405,111d87749260acc6de757b848ac6a60fd7239abb,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4406,111d87749260acc6de757b848ac6a60fd7239abb,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4407,111d87749260acc6de757b848ac6a60fd7239abb,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4408,111d87749260acc6de757b848ac6a60fd7239abb,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4409,31a524240dee0b6c652daee5590a6dd424e1a145,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4410,31a524240dee0b6c652daee5590a6dd424e1a145,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
4411,31a524240dee0b6c652daee5590a6dd424e1a145,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
4412,31a524240dee0b6c652daee5590a6dd424e1a145,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
4413,31a524240dee0b6c652daee5590a6dd424e1a145,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
4414,820b017d780bc585325cf065e2b76075174fcf47,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4415,820b017d780bc585325cf065e2b76075174fcf47,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
4416,820b017d780bc585325cf065e2b76075174fcf47,/jenkins/Dockerfile,"# https://groups.google.com/d/msg/jenkins-infra/c7m_72vUTXE/37zw9GXhAQAJ
"
4417,820b017d780bc585325cf065e2b76075174fcf47,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
4418,f188057ed9be2a6bd14b82868f438ecd1c7c94bc,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4419,f188057ed9be2a6bd14b82868f438ecd1c7c94bc,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4420,f188057ed9be2a6bd14b82868f438ecd1c7c94bc,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4421,f188057ed9be2a6bd14b82868f438ecd1c7c94bc,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4422,f188057ed9be2a6bd14b82868f438ecd1c7c94bc,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4423,69d7c3fdb8b47b53cafe6a47d6ab079726fd8127,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4424,69d7c3fdb8b47b53cafe6a47d6ab079726fd8127,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
4425,69d7c3fdb8b47b53cafe6a47d6ab079726fd8127,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
4426,69d7c3fdb8b47b53cafe6a47d6ab079726fd8127,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
4427,69d7c3fdb8b47b53cafe6a47d6ab079726fd8127,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
4428,4021f848488b908085ec383d01407af9d911978a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4429,4021f848488b908085ec383d01407af9d911978a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4430,4021f848488b908085ec383d01407af9d911978a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4431,4021f848488b908085ec383d01407af9d911978a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4432,4021f848488b908085ec383d01407af9d911978a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4433,a1155c9262b5f1f8154348e74fd806c91e2a08ad,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4434,a1155c9262b5f1f8154348e74fd806c91e2a08ad,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
4435,a1155c9262b5f1f8154348e74fd806c91e2a08ad,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
4436,a1155c9262b5f1f8154348e74fd806c91e2a08ad,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
4437,a1155c9262b5f1f8154348e74fd806c91e2a08ad,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
4438,dd82eede4dcfdfeadd15dde8836a935d159aa2c4,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4439,dd82eede4dcfdfeadd15dde8836a935d159aa2c4,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
4440,dd82eede4dcfdfeadd15dde8836a935d159aa2c4,/jenkins/Dockerfile,"# https://groups.google.com/d/msg/jenkins-infra/c7m_72vUTXE/37zw9GXhAQAJ
"
4441,dd82eede4dcfdfeadd15dde8836a935d159aa2c4,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
4442,9333a5afa5c2f377d6bacef46659c81f4405969a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4443,9333a5afa5c2f377d6bacef46659c81f4405969a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4444,9333a5afa5c2f377d6bacef46659c81f4405969a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4445,9333a5afa5c2f377d6bacef46659c81f4405969a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4446,9333a5afa5c2f377d6bacef46659c81f4405969a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4447,eab8597f20eeae680c94b33b81421de776364638,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4448,eab8597f20eeae680c94b33b81421de776364638,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4449,eab8597f20eeae680c94b33b81421de776364638,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4450,eab8597f20eeae680c94b33b81421de776364638,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4451,eab8597f20eeae680c94b33b81421de776364638,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4452,b3cd62774f182cdd09fbc2c89fbe464e119b7666,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4453,7feccce59f1042ca63b74182af9c8313f523bfb6,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4454,7feccce59f1042ca63b74182af9c8313f523bfb6,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4455,7feccce59f1042ca63b74182af9c8313f523bfb6,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4456,7feccce59f1042ca63b74182af9c8313f523bfb6,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4457,7feccce59f1042ca63b74182af9c8313f523bfb6,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4458,9ccad090706aabe89dd1875646b3c5d51ad1a6cd,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4459,9ccad090706aabe89dd1875646b3c5d51ad1a6cd,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4460,9ccad090706aabe89dd1875646b3c5d51ad1a6cd,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4461,9ccad090706aabe89dd1875646b3c5d51ad1a6cd,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4462,9ccad090706aabe89dd1875646b3c5d51ad1a6cd,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4463,692bf4b090a35c3e101846a7cb25c4b53688a13c,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4464,692bf4b090a35c3e101846a7cb25c4b53688a13c,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4465,692bf4b090a35c3e101846a7cb25c4b53688a13c,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4466,692bf4b090a35c3e101846a7cb25c4b53688a13c,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4467,692bf4b090a35c3e101846a7cb25c4b53688a13c,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4468,11fe43a9129fdeb94495cc97a6094ccf217c31ad,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
4469,fe703cf4e128065ea7a601fe9f15ab231848ab28,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4470,fe703cf4e128065ea7a601fe9f15ab231848ab28,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4471,fe703cf4e128065ea7a601fe9f15ab231848ab28,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4472,fe703cf4e128065ea7a601fe9f15ab231848ab28,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4473,fe703cf4e128065ea7a601fe9f15ab231848ab28,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4474,38531b4fe35352bc84beb278c8484c879c7dd354,/makemkv/Dockerfile,"# http://www.makemkv.com/forum2/viewtopic.php?f=3&t=224
"
4475,38531b4fe35352bc84beb278c8484c879c7dd354,/makemkv/Dockerfile,"# beta code: http://www.makemkv.com/forum2/viewtopic.php?f=5&t=1053
"
4476,3f5483ffa4f790d4a4da610421f0b62ee7c3cdca,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4477,3f5483ffa4f790d4a4da610421f0b62ee7c3cdca,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4478,3f5483ffa4f790d4a4da610421f0b62ee7c3cdca,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4479,3f5483ffa4f790d4a4da610421f0b62ee7c3cdca,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4480,3f5483ffa4f790d4a4da610421f0b62ee7c3cdca,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4481,9333a5afa5c2f377d6bacef46659c81f4405969a,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4482,1a0b04e201296bd5020d8a851f0e54757498f0fb,/mutt-gmail/Dockerfile,"# a browser is necessary!
"
4483,1a0b04e201296bd5020d8a851f0e54757498f0fb,/mutt-gmail/Dockerfile,"# my preferred editor :) (see also muttrc)
"
4484,1a0b04e201296bd5020d8a851f0e54757498f0fb,/mutt-gmail/Dockerfile,"# ""No authenticators available""
"
4485,f4b0f5be45d4e25e14b3b329fba53b4b1a4bb4af,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4486,893f0de110037acd89e26339478ad0606cf1d870,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4487,893f0de110037acd89e26339478ad0606cf1d870,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4488,893f0de110037acd89e26339478ad0606cf1d870,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4489,893f0de110037acd89e26339478ad0606cf1d870,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4490,893f0de110037acd89e26339478ad0606cf1d870,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4491,83480cd71aa603e0cff29c45275e38c94d98227d,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4492,83480cd71aa603e0cff29c45275e38c94d98227d,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
4493,83480cd71aa603e0cff29c45275e38c94d98227d,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
4494,b7af40dbef94a1e999c531b9b57cbf92bfedca29,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4495,b7af40dbef94a1e999c531b9b57cbf92bfedca29,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4496,b7af40dbef94a1e999c531b9b57cbf92bfedca29,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4497,b7af40dbef94a1e999c531b9b57cbf92bfedca29,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4498,b7af40dbef94a1e999c531b9b57cbf92bfedca29,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4499,42193871834fe996b021a5b8129abe3bd6b4e4b2,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4500,42193871834fe996b021a5b8129abe3bd6b4e4b2,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4501,42193871834fe996b021a5b8129abe3bd6b4e4b2,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4502,42193871834fe996b021a5b8129abe3bd6b4e4b2,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4503,42193871834fe996b021a5b8129abe3bd6b4e4b2,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4504,e68d806c768dec30295c643e190bf310be2010e9,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4505,e68d806c768dec30295c643e190bf310be2010e9,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4506,e68d806c768dec30295c643e190bf310be2010e9,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4507,e68d806c768dec30295c643e190bf310be2010e9,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4508,e68d806c768dec30295c643e190bf310be2010e9,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4509,35a9afd90059c7c2701b719f680db9bb084f9912,/prometheus/Dockerfile,"# https://github.com/prometheus/prometheus/releases
"
4510,3a6dbe6cca83ceb1a83a034644808c6a83397620,/github-pages/Dockerfile,"# https://pages.github.com/versions/
"
4511,b09752397d170fa90d308e08b9cf387fff2c5523,/gmpydl/Dockerfile,"# https://pypi.org/project/gmusicapi/
"
4512,b09752397d170fa90d308e08b9cf387fff2c5523,/gmpydl/Dockerfile,"# https://github.com/stevenewbs/gmpydl/commits/master
# https://github.com/stevenewbs/gmpydl/releases
"
4513,2a3584e5f6fcb0e0e1c63863830e3ed2347df590,/mongodb-mms/Dockerfile,"# see https://mms.mongodb.com/settings/monitoring-agent
# click on ""Ubuntu 12.04+""
"
4514,ccbf0d2efacf31ec5c976d2d001ecefc683d1577,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4515,ccbf0d2efacf31ec5c976d2d001ecefc683d1577,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4516,ccbf0d2efacf31ec5c976d2d001ecefc683d1577,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4517,ccbf0d2efacf31ec5c976d2d001ecefc683d1577,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4518,ccbf0d2efacf31ec5c976d2d001ecefc683d1577,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4519,f2eeed62198e7337221667ba9d347026adcfa62e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4520,f2eeed62198e7337221667ba9d347026adcfa62e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4521,f2eeed62198e7337221667ba9d347026adcfa62e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4522,f2eeed62198e7337221667ba9d347026adcfa62e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4523,f2eeed62198e7337221667ba9d347026adcfa62e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4524,bc102f455d26b7c4dd1a7e91d2fb0ff48104b29a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4525,bc102f455d26b7c4dd1a7e91d2fb0ff48104b29a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4526,bc102f455d26b7c4dd1a7e91d2fb0ff48104b29a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4527,bc102f455d26b7c4dd1a7e91d2fb0ff48104b29a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4528,bc102f455d26b7c4dd1a7e91d2fb0ff48104b29a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4529,a9f9e202648f2d917684768579c2af66d44743e7,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4530,6ad8708606a059132562da908386ee49ad268ac8,/perl/Dockerfile,"# secure by default ♥ (thanks to sri!)
"
4531,6ad8708606a059132562da908386ee49ad268ac8,/perl/Dockerfile,"# reinstall cpanm itself, for good measure
"
4532,a362e1cbb0c0f498ae64b1033647fd42d79b3e9d,/google-cloud-print-connector/Dockerfile,"# fetch dependencies
# format: import-path=strip-components=tarball-url
"
4533,a362e1cbb0c0f498ae64b1033647fd42d79b3e9d,/google-cloud-print-connector/Dockerfile,"# https://github.com/coreos/go-systemd/releases
"
4534,a362e1cbb0c0f498ae64b1033647fd42d79b3e9d,/google-cloud-print-connector/Dockerfile,"# https://github.com/satori/go.uuid/releases
"
4535,a362e1cbb0c0f498ae64b1033647fd42d79b3e9d,/google-cloud-print-connector/Dockerfile,"# https://github.com/urfave/cli/releases
"
4536,a362e1cbb0c0f498ae64b1033647fd42d79b3e9d,/google-cloud-print-connector/Dockerfile,"# https://github.com/golang/net/commits/master
"
4537,a362e1cbb0c0f498ae64b1033647fd42d79b3e9d,/google-cloud-print-connector/Dockerfile,"# https://github.com/golang/oauth2/commits/master
"
4538,a362e1cbb0c0f498ae64b1033647fd42d79b3e9d,/google-cloud-print-connector/Dockerfile,"# https://bazaar.launchpad.net/~chipaca/go-xdg/v0/files (""view revision"")
# https://bazaar.launchpad.net/~chipaca/go-xdg/v0/revision/10?start_revid=10 (""download tarball"")
"
4539,a362e1cbb0c0f498ae64b1033647fd42d79b3e9d,/google-cloud-print-connector/Dockerfile,"#*=}""; dep=""${dep%=$strip}""; \
"
4540,a362e1cbb0c0f498ae64b1033647fd42d79b3e9d,/google-cloud-print-connector/Dockerfile,"#*=}""; strip=""${strip%=$tarball}""; \
"
4541,a362e1cbb0c0f498ae64b1033647fd42d79b3e9d,/google-cloud-print-connector/Dockerfile,"# https://github.com/google/cloud-print-connector/releases
"
4542,d72088d48cd11cdc7b8d6f079d399dcd3e0fdc58,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4543,d72088d48cd11cdc7b8d6f079d399dcd3e0fdc58,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4544,d72088d48cd11cdc7b8d6f079d399dcd3e0fdc58,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4545,d72088d48cd11cdc7b8d6f079d399dcd3e0fdc58,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4546,d72088d48cd11cdc7b8d6f079d399dcd3e0fdc58,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4547,57d61884ee8ea9898cad13c77b4292e26de2079f,/xen-orchestra/Dockerfile,"# see https://xen-orchestra.com/docs/from_the_sources.html

"
4548,57d61884ee8ea9898cad13c77b4292e26de2079f,/xen-orchestra/Dockerfile,"# https://github.com/nodejs/node-gyp/releases
"
4549,57d61884ee8ea9898cad13c77b4292e26de2079f,/xen-orchestra/Dockerfile,"# https://github.com/vatesfr/xen-orchestra/releases
"
4550,57d61884ee8ea9898cad13c77b4292e26de2079f,/xen-orchestra/Dockerfile,"#		-e ""s!#'/' = '/path/to/xo-web/dist/'!'/' = '../xo-web/dist/'!"" \
"
4551,57d61884ee8ea9898cad13c77b4292e26de2079f,/xen-orchestra/Dockerfile,"#uri = 'redis://.*'!uri = 'redis://redis:6379'!"" \
"
4552,57d61884ee8ea9898cad13c77b4292e26de2079f,/xen-orchestra/Dockerfile,"#' config.toml | grep '../xo-web/dist'; \
"
4553,3165e9ed31e3ef0abddf7e803a9a72b51dd6e634,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4554,3165e9ed31e3ef0abddf7e803a9a72b51dd6e634,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4555,3165e9ed31e3ef0abddf7e803a9a72b51dd6e634,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4556,3165e9ed31e3ef0abddf7e803a9a72b51dd6e634,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4557,3165e9ed31e3ef0abddf7e803a9a72b51dd6e634,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4558,fd4482d305745d6383374be295e274dea97b7783,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4559,fd4482d305745d6383374be295e274dea97b7783,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4560,fd4482d305745d6383374be295e274dea97b7783,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4561,fd4482d305745d6383374be295e274dea97b7783,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4562,fd4482d305745d6383374be295e274dea97b7783,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4563,9d55af94b095b17c18c6da9e58b51b73757a7b4e,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
4564,9d55af94b095b17c18c6da9e58b51b73757a7b4e,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
4565,9d55af94b095b17c18c6da9e58b51b73757a7b4e,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
4566,ff23c8a82caf501db8435f47c6d547b90783609e,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4567,ba36ee9738a12bfdd3f5f5db09bf095f381f9a45,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4568,ba36ee9738a12bfdd3f5f5db09bf095f381f9a45,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4569,ba36ee9738a12bfdd3f5f5db09bf095f381f9a45,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4570,ba36ee9738a12bfdd3f5f5db09bf095f381f9a45,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4571,ba36ee9738a12bfdd3f5f5db09bf095f381f9a45,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4572,8bfa99bb8e6a6d6dcba3b6fe8f80ce04dcd36b0d,/mongodb-mms/Dockerfile,"# see https://mms.mongodb.com/settings/monitoring-agent
# click on ""Ubuntu 12.04+""
"
4573,9afb1df5da6f319884ed6e6dc9ca178beef4e4a4,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4574,9afb1df5da6f319884ed6e6dc9ca178beef4e4a4,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4575,9afb1df5da6f319884ed6e6dc9ca178beef4e4a4,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4576,9afb1df5da6f319884ed6e6dc9ca178beef4e4a4,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4577,9afb1df5da6f319884ed6e6dc9ca178beef4e4a4,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4578,1933655e30ba7e8b79bf58e449105e0d7539ec7a,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
4579,011787bda7204080536b398b81158509ef74ef9a,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
4580,968bbf4d9cb71b7b6fd5d7211a7655bd71750289,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4581,968bbf4d9cb71b7b6fd5d7211a7655bd71750289,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4582,968bbf4d9cb71b7b6fd5d7211a7655bd71750289,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4583,968bbf4d9cb71b7b6fd5d7211a7655bd71750289,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4584,968bbf4d9cb71b7b6fd5d7211a7655bd71750289,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4585,52ead8482647a42b492e12266d27e5d531c798c1,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4586,52ead8482647a42b492e12266d27e5d531c798c1,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4587,52ead8482647a42b492e12266d27e5d531c798c1,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4588,52ead8482647a42b492e12266d27e5d531c798c1,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4589,52ead8482647a42b492e12266d27e5d531c798c1,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4590,696d1075a7cfb23b984c6dedf6817ce3483c1de9,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
4591,ff23c8a82caf501db8435f47c6d547b90783609e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4592,ff23c8a82caf501db8435f47c6d547b90783609e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4593,ff23c8a82caf501db8435f47c6d547b90783609e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4594,ff23c8a82caf501db8435f47c6d547b90783609e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4595,ff23c8a82caf501db8435f47c6d547b90783609e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4596,3c7c3522cec71e1ab77b6c3398f93e37d49f46ca,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4597,3c7c3522cec71e1ab77b6c3398f93e37d49f46ca,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4598,3c7c3522cec71e1ab77b6c3398f93e37d49f46ca,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4599,3c7c3522cec71e1ab77b6c3398f93e37d49f46ca,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4600,3c7c3522cec71e1ab77b6c3398f93e37d49f46ca,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4601,c3ab1b772fc6e3b9c2424ee53ed5b747e59b6a12,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4602,c3ab1b772fc6e3b9c2424ee53ed5b747e59b6a12,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
4603,c3ab1b772fc6e3b9c2424ee53ed5b747e59b6a12,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
4604,e75a6470b4051baefc80a3dc10f6701ef4172fe5,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4605,e75a6470b4051baefc80a3dc10f6701ef4172fe5,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
4606,e75a6470b4051baefc80a3dc10f6701ef4172fe5,/jenkins/Dockerfile,"# https://groups.google.com/d/msg/jenkins-infra/c7m_72vUTXE/37zw9GXhAQAJ
"
4607,e75a6470b4051baefc80a3dc10f6701ef4172fe5,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
4608,ee6b42952e48ec1caa45a6dde2bd83efdbd4e227,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4609,ee6b42952e48ec1caa45a6dde2bd83efdbd4e227,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4610,ee6b42952e48ec1caa45a6dde2bd83efdbd4e227,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4611,ee6b42952e48ec1caa45a6dde2bd83efdbd4e227,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4612,ee6b42952e48ec1caa45a6dde2bd83efdbd4e227,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4613,745b91b7a95066392e6d85fc0a986b6919fa724e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4614,745b91b7a95066392e6d85fc0a986b6919fa724e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4615,745b91b7a95066392e6d85fc0a986b6919fa724e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4616,745b91b7a95066392e6d85fc0a986b6919fa724e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4617,745b91b7a95066392e6d85fc0a986b6919fa724e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4618,291449b9d10911a54c0483f60850d37ae9b2725e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4619,291449b9d10911a54c0483f60850d37ae9b2725e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4620,291449b9d10911a54c0483f60850d37ae9b2725e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4621,291449b9d10911a54c0483f60850d37ae9b2725e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4622,291449b9d10911a54c0483f60850d37ae9b2725e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4623,9404ccd1afdd14f265472c6eaebd93de26f68b84,/handbrake/Dockerfile,"# https://handbrake.fr/downloads.php
# https://launchpad.net/~stebbins/+archive/ubuntu/handbrake-releases
"
4624,b801b9a886fd849220b557b957ff4ccbd9f5fb6a,/kgb-bot/Dockerfile,"# ""/etc/kgb-bot/kgb.conf is world-readable"" :'(
"
4625,40aaf810b550d7e529d0e268d93fb204e1d485e3,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4626,345720aba14e9d048d078b008e8bcd19fd1a78dc,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4627,345720aba14e9d048d078b008e8bcd19fd1a78dc,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4628,345720aba14e9d048d078b008e8bcd19fd1a78dc,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4629,345720aba14e9d048d078b008e8bcd19fd1a78dc,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4630,345720aba14e9d048d078b008e8bcd19fd1a78dc,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4631,1de8967ec5c45b7c9476538a965096b44fe12648,/mongodb-mms/Dockerfile,"# see https://mms.mongodb.com/settings/monitoring-agent
# click on ""Ubuntu 12.04+""
"
4632,1de8967ec5c45b7c9476538a965096b44fe12648,/mongodb-mms/Dockerfile,"# missing dep in mms.deb
"
4633,185e90bff8f63455cd37b11899f3b215b201e37e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4634,185e90bff8f63455cd37b11899f3b215b201e37e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4635,185e90bff8f63455cd37b11899f3b215b201e37e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4636,185e90bff8f63455cd37b11899f3b215b201e37e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4637,185e90bff8f63455cd37b11899f3b215b201e37e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4638,9792ae662a982d6f17fda3cec7ae94146ab29b83,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4639,9792ae662a982d6f17fda3cec7ae94146ab29b83,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
4640,9792ae662a982d6f17fda3cec7ae94146ab29b83,/jenkins/Dockerfile,"# workaround ""apt-key adv --recv-keys"" hanging in stretch and above
"
4641,34dc417b3b3f8bfbc60c54cc785ce920b53f835a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4642,34dc417b3b3f8bfbc60c54cc785ce920b53f835a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4643,34dc417b3b3f8bfbc60c54cc785ce920b53f835a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4644,34dc417b3b3f8bfbc60c54cc785ce920b53f835a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4645,34dc417b3b3f8bfbc60c54cc785ce920b53f835a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4646,aea150b654786f5f6f902f1f8d034f38ba6261f9,/xen-orchestra/Dockerfile,"# see https://xen-orchestra.com/docs/from_the_sources.html

"
4647,aea150b654786f5f6f902f1f8d034f38ba6261f9,/xen-orchestra/Dockerfile,"# https://github.com/vatesfr/xen-orchestra/releases
"
4648,aea150b654786f5f6f902f1f8d034f38ba6261f9,/xen-orchestra/Dockerfile,"#'/' = '/path/to/xo-web/dist/'!'/' = '../xo-web/dist/'!"" \
"
4649,aea150b654786f5f6f902f1f8d034f38ba6261f9,/xen-orchestra/Dockerfile,"#uri = 'redis://.*'!uri = 'redis://redis:6379'!"" \
"
4650,11c074bb51fa07556e1223f2c4a3e3ed457f0048,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4651,11c074bb51fa07556e1223f2c4a3e3ed457f0048,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4652,11c074bb51fa07556e1223f2c4a3e3ed457f0048,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4653,11c074bb51fa07556e1223f2c4a3e3ed457f0048,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4654,11c074bb51fa07556e1223f2c4a3e3ed457f0048,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4655,43d866d1067d479c84e8f104c8fa15e031f62134,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4656,43d866d1067d479c84e8f104c8fa15e031f62134,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
4657,43d866d1067d479c84e8f104c8fa15e031f62134,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
4658,43d866d1067d479c84e8f104c8fa15e031f62134,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
4659,43d866d1067d479c84e8f104c8fa15e031f62134,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
4660,bae498b0a3c32b432a95998d133de20653b5949d,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4661,bae498b0a3c32b432a95998d133de20653b5949d,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4662,bae498b0a3c32b432a95998d133de20653b5949d,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4663,bae498b0a3c32b432a95998d133de20653b5949d,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4664,bae498b0a3c32b432a95998d133de20653b5949d,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4665,810ca26d864d66f788e369ca5e1ec0184f1e99c3,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4666,9afb1df5da6f319884ed6e6dc9ca178beef4e4a4,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4667,251b6b63f644fefc93f86f53d7312d747f427400,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4668,251b6b63f644fefc93f86f53d7312d747f427400,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4669,251b6b63f644fefc93f86f53d7312d747f427400,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4670,251b6b63f644fefc93f86f53d7312d747f427400,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4671,251b6b63f644fefc93f86f53d7312d747f427400,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4672,3918e63e2098f8f479953e4a69d5cf54af419bf8,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4673,3918e63e2098f8f479953e4a69d5cf54af419bf8,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4674,3918e63e2098f8f479953e4a69d5cf54af419bf8,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4675,3918e63e2098f8f479953e4a69d5cf54af419bf8,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4676,3918e63e2098f8f479953e4a69d5cf54af419bf8,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4677,4b29448207298b899b748347b469a39b62371171,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4678,4b29448207298b899b748347b469a39b62371171,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
4679,4b29448207298b899b748347b469a39b62371171,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
4680,4b29448207298b899b748347b469a39b62371171,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
4681,4b29448207298b899b748347b469a39b62371171,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
4682,7ff231137fcd05510555bee792e961b8e61ccc71,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4683,7ff231137fcd05510555bee792e961b8e61ccc71,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4684,7ff231137fcd05510555bee792e961b8e61ccc71,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4685,7ff231137fcd05510555bee792e961b8e61ccc71,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4686,7ff231137fcd05510555bee792e961b8e61ccc71,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4687,08e8f8b2cf10a3ba7c0bb5bd4ea154c7bc2cd2c1,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4688,08e8f8b2cf10a3ba7c0bb5bd4ea154c7bc2cd2c1,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4689,08e8f8b2cf10a3ba7c0bb5bd4ea154c7bc2cd2c1,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4690,08e8f8b2cf10a3ba7c0bb5bd4ea154c7bc2cd2c1,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4691,08e8f8b2cf10a3ba7c0bb5bd4ea154c7bc2cd2c1,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4692,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/13.04/Dockerfile,"# much of this was gleaned from https://github.com/lxc/lxc/blob/lxc-0.8.0/templates/lxc-ubuntu.in

# we're going to want this bad boy installed so we can connect :)
"
4693,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/13.04/Dockerfile,"# undo some leet hax of the base image
"
4694,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/13.04/Dockerfile,"# generate a nice UTF-8 locale for our use
"
4695,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/13.04/Dockerfile,"# remove some pointless services
"
4696,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/13.04/Dockerfile,"# /lib/init/fstab: cleared out for bare-bones lxc' > /lib/init/fstab

# small fix for SSH in 13.10 (that's harmless everywhere else)
"
4697,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/13.04/Dockerfile,"# set a cheap, simple password for great convenience
"
4698,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/13.04/Dockerfile,"# we can has SSH
"
4699,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/13.04/Dockerfile,"# pepare for takeoff
"
4700,efb5b6253bca6f92ffbf9cd6421d59ae4de4ac8b,/skype/Dockerfile,"# see https://repo.skype.com

"
4701,efb5b6253bca6f92ffbf9cd6421d59ae4de4ac8b,/skype/Dockerfile,"# https://repo.skype.com/data/SKYPE-GPG-KEY
"
4702,efb5b6253bca6f92ffbf9cd6421d59ae4de4ac8b,/skype/Dockerfile,"# pub   2048R/DF7587C3 2016-06-22 [expires: 2021-06-21]
#       Key fingerprint = D404 0146 BE39 7250 9FD5  7FC7 1F30 45A5 DF75 87C3
# uid                  Skype Linux Client Repository <se-um@microsoft.com>
# sub   2048R/A4EBB320 2016-06-22 [expires: 2021-06-21]
"
4703,69504437ae27d389e34d48d4ecfec320bad2d751,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4704,69504437ae27d389e34d48d4ecfec320bad2d751,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
4705,69504437ae27d389e34d48d4ecfec320bad2d751,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
4706,69504437ae27d389e34d48d4ecfec320bad2d751,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
4707,69504437ae27d389e34d48d4ecfec320bad2d751,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
4708,329fcaf4381124e3052a883b1fa074e90293fa6d,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4709,43828e04248a036dfd46b452b0a41246a941b312,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
4710,0f90322cdcba865c131a9ca4c568aa7ba4e7b80c,/steam/Dockerfile,"# let's head off a few of the things steam will want to install immediately
"
4711,0f90322cdcba865c131a9ca4c568aa7ba4e7b80c,/steam/Dockerfile,"# steam itself needs to be able to install things, and it uses ""sudo"" for that
"
4712,6d63a61871677c29630e6010aa7842e5d1202915,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4713,ab9cdb4155339eb7d3b0821e1bba44000a5b54a1,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4714,ab9cdb4155339eb7d3b0821e1bba44000a5b54a1,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4715,ab9cdb4155339eb7d3b0821e1bba44000a5b54a1,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4716,ab9cdb4155339eb7d3b0821e1bba44000a5b54a1,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4717,ab9cdb4155339eb7d3b0821e1bba44000a5b54a1,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4718,0c787fcd11bb40555786a2c02a245fd1cb430ca4,/slack/Dockerfile,"# the .deb file linked at https://slack.com/downloads/instructions/debian includes ""/etc/cron.daily/slack"" which sets up an APT repo entry as in the following installation

# pub   rsa4096 2016-02-18 [SCEA]
#       DB08 5A08 CA13 B8AC B917  E0F6 D938 EC0D 0386 51BD
# uid           [ unknown] https://packagecloud.io/slacktechnologies/slack (https://packagecloud.io/docs#gpg_signing) <support@packagecloud.io>
# sub   rsa4096 2016-02-18 [SEA]
"
4719,0c787fcd11bb40555786a2c02a245fd1cb430ca4,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libX11-xcb.so.1: cannot open shared object file: No such file or directory
"
4720,0c787fcd11bb40555786a2c02a245fd1cb430ca4,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libasound.so.2: cannot open shared object file: No such file or directory
"
4721,0c787fcd11bb40555786a2c02a245fd1cb430ca4,/slack/Dockerfile,"# 3.3.3: slack: error while loading shared libraries: libgtk-3.so.0: cannot open shared object file: No such file or directory
"
4722,820cb38b429e575bee7f378a576f02327d322fc8,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4723,820cb38b429e575bee7f378a576f02327d322fc8,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4724,820cb38b429e575bee7f378a576f02327d322fc8,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4725,820cb38b429e575bee7f378a576f02327d322fc8,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4726,820cb38b429e575bee7f378a576f02327d322fc8,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4727,aadd653ef6bed40c2bb0d6c4aa6d5bf76a835892,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4728,aadd653ef6bed40c2bb0d6c4aa6d5bf76a835892,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4729,aadd653ef6bed40c2bb0d6c4aa6d5bf76a835892,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4730,aadd653ef6bed40c2bb0d6c4aa6d5bf76a835892,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4731,aadd653ef6bed40c2bb0d6c4aa6d5bf76a835892,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4732,31979a9190b03db5f3dfda253606bed5bc72112d,/network-toolbox/alpine/Dockerfile,"# TODO add ""nbtscan"" when we get to Alpine 3.12 (if it makes it out of edge)
# https://pkgs.alpinelinux.org/packages?name=nbtscan&branch=edge&arch=x86_64

"
4733,09d6e2611db1ef5e5bb647cf255b218159d076fa,/slack/Dockerfile,"# the .deb file linked at https://slack.com/downloads/instructions/debian includes ""/etc/cron.daily/slack"" which sets up an APT repo entry as in the following installation

# pub   rsa4096 2016-02-18 [SCEA]
#       DB08 5A08 CA13 B8AC B917  E0F6 D938 EC0D 0386 51BD
# uid           [ unknown] https://packagecloud.io/slacktechnologies/slack (https://packagecloud.io/docs#gpg_signing) <support@packagecloud.io>
# sub   rsa4096 2016-02-18 [SEA]
"
4734,09d6e2611db1ef5e5bb647cf255b218159d076fa,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libX11-xcb.so.1: cannot open shared object file: No such file or directory
"
4735,09d6e2611db1ef5e5bb647cf255b218159d076fa,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libasound.so.2: cannot open shared object file: No such file or directory
"
4736,09d6e2611db1ef5e5bb647cf255b218159d076fa,/slack/Dockerfile,"# 3.3.3: slack: error while loading shared libraries: libgtk-3.so.0: cannot open shared object file: No such file or directory
"
4737,9c30a632b2fbc7d28d88d8266450ee8d34e3b2a1,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4738,9c30a632b2fbc7d28d88d8266450ee8d34e3b2a1,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4739,9c30a632b2fbc7d28d88d8266450ee8d34e3b2a1,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4740,9c30a632b2fbc7d28d88d8266450ee8d34e3b2a1,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4741,9c30a632b2fbc7d28d88d8266450ee8d34e3b2a1,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4742,7066fc32d1a0611d11f01b1036fbd2e5f95d9ca6,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
4743,89fa61933bd1dfa5101b1523428e2b9a84b2edfb,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4744,b2e985ac618c4a8e8b5a89b6c01d5dfd1936631f,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4745,b2e985ac618c4a8e8b5a89b6c01d5dfd1936631f,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
4746,b2e985ac618c4a8e8b5a89b6c01d5dfd1936631f,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
4747,b2e985ac618c4a8e8b5a89b6c01d5dfd1936631f,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
4748,b2e985ac618c4a8e8b5a89b6c01d5dfd1936631f,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
4749,7ad6e3855d5cf19c2a0c12ce53b0614746d5c5d3,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4750,7ad6e3855d5cf19c2a0c12ce53b0614746d5c5d3,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4751,7ad6e3855d5cf19c2a0c12ce53b0614746d5c5d3,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4752,7ad6e3855d5cf19c2a0c12ce53b0614746d5c5d3,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4753,7ad6e3855d5cf19c2a0c12ce53b0614746d5c5d3,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4754,5a958eb1e153b3d7915d484dfed4bc8d61da6f2a,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4755,89ad84e63c7cb068686b389726d983e5d9e7231a,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4756,ac1348355034ad07ce9bd69ef2df542a9ac640a8,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4757,ac1348355034ad07ce9bd69ef2df542a9ac640a8,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4758,ac1348355034ad07ce9bd69ef2df542a9ac640a8,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4759,ac1348355034ad07ce9bd69ef2df542a9ac640a8,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4760,ac1348355034ad07ce9bd69ef2df542a9ac640a8,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4761,1d658a08289fe456c38f6267ef73da56302e79ea,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4762,1d658a08289fe456c38f6267ef73da56302e79ea,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4763,1d658a08289fe456c38f6267ef73da56302e79ea,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4764,1d658a08289fe456c38f6267ef73da56302e79ea,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4765,1d658a08289fe456c38f6267ef73da56302e79ea,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4766,9e8ac7f01d20bc0263c0ab3f13f3f2a3be59a54b,/familysearch-indexing/Dockerfile,"# docker-manifest.sh debian/eol:wheezy-slim | jq -r '.manifests[] | select(.platform.architecture == ""386"") | .digest'
"
4767,9e8ac7f01d20bc0263c0ab3f13f3f2a3be59a54b,/familysearch-indexing/Dockerfile,"# TODO add a very lightweight browser for opening help and/or registration
"
4768,c734b40c7a1fc0d119b51a60532ec7a7197be5c7,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4769,c734b40c7a1fc0d119b51a60532ec7a7197be5c7,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4770,c734b40c7a1fc0d119b51a60532ec7a7197be5c7,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4771,c734b40c7a1fc0d119b51a60532ec7a7197be5c7,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4772,c734b40c7a1fc0d119b51a60532ec7a7197be5c7,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4773,03c351859fd6a80d65ee4a35a4bb71d7510a6041,/nylas/sync-engine/Dockerfile,"# tell pynacl to use system libsodium
"
4774,03c351859fd6a80d65ee4a35a4bb71d7510a6041,/nylas/sync-engine/Dockerfile,"#ENV SYNC_VERSION v0.3.0 # 2014 :'(
"
4775,03c351859fd6a80d65ee4a35a4bb71d7510a6041,/nylas/sync-engine/Dockerfile,"# https://github.com/eventable/vobject/issues/2
"
4776,03c351859fd6a80d65ee4a35a4bb71d7510a6041,/nylas/sync-engine/Dockerfile,"# ugh, NameError: name 'PROTOCOL_SSLv3' is not defined
"
4777,03c351859fd6a80d65ee4a35a4bb71d7510a6041,/nylas/sync-engine/Dockerfile," # TODO inbox-api or inbox-start
"
4778,77371c78f876ac6c2c44312bc22adba01c06a572,/skype/Dockerfile,"# see https://repo.skype.com

"
4779,77371c78f876ac6c2c44312bc22adba01c06a572,/skype/Dockerfile,"# wget is invoked by skypeforlinux for crash reports
"
4780,77371c78f876ac6c2c44312bc22adba01c06a572,/skype/Dockerfile,"# https://repo.skype.com/data/SKYPE-GPG-KEY
"
4781,77371c78f876ac6c2c44312bc22adba01c06a572,/skype/Dockerfile,"# pub   2048R/DF7587C3 2016-06-22 [expires: 2021-06-21]
#       Key fingerprint = D404 0146 BE39 7250 9FD5  7FC7 1F30 45A5 DF75 87C3
# uid                  Skype Linux Client Repository <se-um@microsoft.com>
# sub   2048R/A4EBB320 2016-06-22 [expires: 2021-06-21]
"
4782,0f90322cdcba865c131a9ca4c568aa7ba4e7b80c,/sbin-init/ubuntu/12.04/Dockerfile,"# much of this was gleaned from https://github.com/lxc/lxc/blob/lxc-0.8.0/templates/lxc-ubuntu.in

# we're going to want this bad boy installed so we can connect :)
"
4783,0f90322cdcba865c131a9ca4c568aa7ba4e7b80c,/sbin-init/ubuntu/12.04/Dockerfile,"# undo some leet hax of the base image
"
4784,0f90322cdcba865c131a9ca4c568aa7ba4e7b80c,/sbin-init/ubuntu/12.04/Dockerfile,"# generate a nice UTF-8 locale for our use
"
4785,0f90322cdcba865c131a9ca4c568aa7ba4e7b80c,/sbin-init/ubuntu/12.04/Dockerfile,"# remove some pointless services
"
4786,0f90322cdcba865c131a9ca4c568aa7ba4e7b80c,/sbin-init/ubuntu/12.04/Dockerfile,"# /lib/init/fstab: cleared out for bare-bones lxc' > /lib/init/fstab

# small fix for SSH in 13.10 (that's harmless everywhere else)
"
4787,0f90322cdcba865c131a9ca4c568aa7ba4e7b80c,/sbin-init/ubuntu/12.04/Dockerfile,"# set a cheap, simple password for great convenience
"
4788,0f90322cdcba865c131a9ca4c568aa7ba4e7b80c,/sbin-init/ubuntu/12.04/Dockerfile,"# we can has SSH
"
4789,0f90322cdcba865c131a9ca4c568aa7ba4e7b80c,/sbin-init/ubuntu/12.04/Dockerfile,"# pepare for takeoff
"
4790,b879fd090091da8cbf0e6a0dfff8ed90ac3e0dec,/golang/Dockerfile,"# necessary for building Go
"
4791,b879fd090091da8cbf0e6a0dfff8ed90ac3e0dec,/golang/Dockerfile,"# these are useful for ""go get""
"
4792,b879fd090091da8cbf0e6a0dfff8ed90ac3e0dec,/golang/Dockerfile,"# see http://golang.org/doc/install/source#environment
"
4793,b879fd090091da8cbf0e6a0dfff8ed90ac3e0dec,/golang/Dockerfile,"# (set an explicit GOARM of 5 for maximum ARM compatibility)
"
4794,b879fd090091da8cbf0e6a0dfff8ed90ac3e0dec,/golang/Dockerfile,"##*/} \
"
4795,b879fd090091da8cbf0e6a0dfff8ed90ac3e0dec,/golang/Dockerfile,"/*} \
			GOARCH=${platform##*/"
4796,3c4435eac4ce430c026d70ab0f871f20d670f971,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4797,3c4435eac4ce430c026d70ab0f871f20d670f971,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4798,3c4435eac4ce430c026d70ab0f871f20d670f971,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4799,3c4435eac4ce430c026d70ab0f871f20d670f971,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4800,3c4435eac4ce430c026d70ab0f871f20d670f971,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4801,64a223ef8564053f777d93991c31ef651e1e9b48,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4802,64a223ef8564053f777d93991c31ef651e1e9b48,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4803,64a223ef8564053f777d93991c31ef651e1e9b48,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4804,64a223ef8564053f777d93991c31ef651e1e9b48,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4805,64a223ef8564053f777d93991c31ef651e1e9b48,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4806,49d826b18f0dcf7cf754930b2854d98ab371f9b7,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4807,49d826b18f0dcf7cf754930b2854d98ab371f9b7,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4808,49d826b18f0dcf7cf754930b2854d98ab371f9b7,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4809,49d826b18f0dcf7cf754930b2854d98ab371f9b7,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4810,49d826b18f0dcf7cf754930b2854d98ab371f9b7,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4811,55b5683d4fa9fc7804e239bc1130731f7cccfe65,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4812,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/12.10/Dockerfile,"# much of this was gleaned from https://github.com/lxc/lxc/blob/lxc-0.8.0/templates/lxc-ubuntu.in
# and then heavily modified and hacked like crazy

# we're going to want this bad boy installed so we can connect :)
"
4813,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/12.10/Dockerfile,"# undo some leet hax of the base image
"
4814,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/12.10/Dockerfile,"# generate a nice UTF-8 locale for our use
"
4815,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/12.10/Dockerfile,"# remove some pointless services
"
4816,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/12.10/Dockerfile,"# /lib/init/fstab: cleared out for bare-bones Docker' > /lib/init/fstab

# small fix for SSH in 13.10 (that's harmless everywhere else)
"
4817,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/12.10/Dockerfile,"# let Upstart know it's in a container
"
4818,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/12.10/Dockerfile,"# set a cheap, simple password for great convenience
"
4819,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/12.10/Dockerfile,"# we can has SSH
"
4820,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/12.10/Dockerfile,"# pepare for takeoff
"
4821,4c3420922f16091cab1e732b20575914da2a492f,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4822,4c3420922f16091cab1e732b20575914da2a492f,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
4823,4c3420922f16091cab1e732b20575914da2a492f,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
4824,4c3420922f16091cab1e732b20575914da2a492f,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
4825,4c3420922f16091cab1e732b20575914da2a492f,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
4826,ccda33b5e71807cdcb9357e58e5ab60b0cbd5f8b,/phpmyadmin/Dockerfile,"# https://docs.phpmyadmin.net/en/latest/setup.html#verifying-phpmyadmin-releases
"
4827,ccda33b5e71807cdcb9357e58e5ab60b0cbd5f8b,/phpmyadmin/Dockerfile,"# Since July 2015 all phpMyAdmin releases are cryptographically signed by the releasing developer, who through January 2016 was Marc Delisle.
"
4828,ccda33b5e71807cdcb9357e58e5ab60b0cbd5f8b,/phpmyadmin/Dockerfile,"# Beginning in January 2016, the release manager is Isaac Bennetch.
"
4829,ccda33b5e71807cdcb9357e58e5ab60b0cbd5f8b,/phpmyadmin/Dockerfile,"# Some additional downloads (for example themes) might be signed by Michal Čihař.
"
4830,41956a5c14ff889f17bf31e77bdd841c840866c9,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4831,41956a5c14ff889f17bf31e77bdd841c840866c9,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4832,41956a5c14ff889f17bf31e77bdd841c840866c9,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4833,41956a5c14ff889f17bf31e77bdd841c840866c9,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4834,41956a5c14ff889f17bf31e77bdd841c840866c9,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4835,9081233dfb9b10201abef4afb0c5c856c09f93e0,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4836,9081233dfb9b10201abef4afb0c5c856c09f93e0,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
4837,9081233dfb9b10201abef4afb0c5c856c09f93e0,/jenkins/Dockerfile,"# workaround ""apt-key adv --recv-keys"" hanging in stretch and above
"
4838,05167f0371d3bfbe530fd7b9225644e270720155,/prometheus/Dockerfile,"# https://github.com/prometheus/prometheus/releases
"
4839,8d26a641b3ada81edbf03c178190af88eea4805f,/google-musicmanager/Dockerfile,"# https://www.google.com/linuxrepositories/
"
4840,8d26a641b3ada81edbf03c178190af88eea4805f,/google-musicmanager/Dockerfile,"# pub   rsa4096 2016-04-12 [SC]
#       EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796
# uid           [ unknown] Google Inc. (Linux Packages Signing Authority) <linux-packages-keymaster@google.com>
# sub   rsa4096 2016-04-12 [S] [expires: 2019-04-12]
"
4841,8d26a641b3ada81edbf03c178190af88eea4805f,/google-musicmanager/Dockerfile,"# pub   dsa1024 2007-03-08 [SC]
#       4CCA 1EAF 950C EE4A B839  76DC A040 830F 7FAC 5991
# uid           [ unknown] Google, Inc. Linux Package Signing Key <linux-packages-keymaster@google.com>
# sub   elg2048 2007-03-08 [E]
#		4CCA1EAF950CEE4AB83976DCA040830F7FAC5991

"
4842,8d26a641b3ada81edbf03c178190af88eea4805f,/google-musicmanager/Dockerfile,"# only stretch+ supports --armor in trusted.gpg.asc
#	gpg --export --armor $GPG_KEYS | tee /etc/apt/trusted.gpg.d/google.gpg.asc; \
"
4843,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/12.10/Dockerfile,"# much of this was gleaned from https://github.com/lxc/lxc/blob/lxc-0.8.0/templates/lxc-ubuntu.in

# we're going to want this bad boy installed so we can connect :)
"
4844,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/12.10/Dockerfile,"# undo some leet hax of the base image
"
4845,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/12.10/Dockerfile,"# generate a nice UTF-8 locale for our use
"
4846,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/12.10/Dockerfile,"# remove some pointless services
"
4847,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/12.10/Dockerfile,"# /lib/init/fstab: cleared out for bare-bones lxc' > /lib/init/fstab

# small fix for SSH in 13.10 (that's harmless everywhere else)
"
4848,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/12.10/Dockerfile,"# set a cheap, simple password for great convenience
"
4849,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/12.10/Dockerfile,"# we can has SSH
"
4850,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/12.10/Dockerfile,"# pepare for takeoff
"
4851,6b37ad1e3b69113ccff160de204c9662844838a7,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4852,8bf4388c74fa3d687ce794a516e6797bb0f8112b,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4853,0bff268b4aeac80fff2ca0c209f42bc4c2fab383,/robomongo/Dockerfile,"# install dependencies...
"
4854,cd3035784f0018648b9f3ac1dd11dc2084b5c5dc,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4855,cd3035784f0018648b9f3ac1dd11dc2084b5c5dc,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4856,cd3035784f0018648b9f3ac1dd11dc2084b5c5dc,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4857,cd3035784f0018648b9f3ac1dd11dc2084b5c5dc,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4858,cd3035784f0018648b9f3ac1dd11dc2084b5c5dc,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4859,1d2040c390a50eca1338d03c4db5ec2db56ef3e2,/grafana/Dockerfile,"# https://github.com/grafana/grafana/releases
"
4860,1d2040c390a50eca1338d03c4db5ec2db56ef3e2,/grafana/Dockerfile,"# https://github.com/grafana/grafana/blob/master/packaging/docker/Dockerfile

"
4861,1d2040c390a50eca1338d03c4db5ec2db56ef3e2,/grafana/Dockerfile,"# https://grafana.com/grafana/download/5.3.4?platform=linux
# https://grafana.com/grafana/download/5.3.4?platform=arm
"
4862,1d2040c390a50eca1338d03c4db5ec2db56ef3e2,/grafana/Dockerfile,"# TODO verify sha256 values! (add "".sha256"" to the end of this URL)
"
4863,57d61884ee8ea9898cad13c77b4292e26de2079f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4864,57d61884ee8ea9898cad13c77b4292e26de2079f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4865,57d61884ee8ea9898cad13c77b4292e26de2079f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4866,57d61884ee8ea9898cad13c77b4292e26de2079f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4867,57d61884ee8ea9898cad13c77b4292e26de2079f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4868,d17b242c3198b6be8174beaf33fb5a1a865960dd,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4869,d17b242c3198b6be8174beaf33fb5a1a865960dd,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4870,d17b242c3198b6be8174beaf33fb5a1a865960dd,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4871,d17b242c3198b6be8174beaf33fb5a1a865960dd,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4872,d17b242c3198b6be8174beaf33fb5a1a865960dd,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4873,aa71bc74aac362a129aeaea86975eecbc3d51e52,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4874,aa71bc74aac362a129aeaea86975eecbc3d51e52,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4875,aa71bc74aac362a129aeaea86975eecbc3d51e52,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4876,aa71bc74aac362a129aeaea86975eecbc3d51e52,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4877,aa71bc74aac362a129aeaea86975eecbc3d51e52,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4878,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/12.04/Dockerfile,"# much of this was gleaned from https://github.com/lxc/lxc/blob/lxc-0.8.0/templates/lxc-ubuntu.in

# we're going to want this bad boy installed so we can connect :)
"
4879,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/12.04/Dockerfile,"# undo some leet hax of the base image
"
4880,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/12.04/Dockerfile,"# generate a nice UTF-8 locale for our use
"
4881,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/12.04/Dockerfile,"# remove some pointless services
"
4882,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/12.04/Dockerfile,"# /lib/init/fstab: cleared out for bare-bones lxc' > /lib/init/fstab

# small fix for SSH in 13.10 (that's harmless everywhere else)
"
4883,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/12.04/Dockerfile,"# set a cheap, simple password for great convenience
"
4884,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/12.04/Dockerfile,"# we can has SSH
"
4885,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/12.04/Dockerfile,"# pepare for takeoff
"
4886,56a104c1fb431fffd8a232e94593af6c522c1d59,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4887,56a104c1fb431fffd8a232e94593af6c522c1d59,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
4888,56a104c1fb431fffd8a232e94593af6c522c1d59,/jenkins/Dockerfile,"# workaround ""apt-key adv --recv-keys"" hanging in stretch and above
"
4889,79a45e2bfac4e1c6093884ea5f1d6b4a8619a41d,/makemkv/Dockerfile,"# http://www.makemkv.com/forum2/viewtopic.php?f=3&t=224
"
4890,79a45e2bfac4e1c6093884ea5f1d6b4a8619a41d,/makemkv/Dockerfile,"# beta code: http://www.makemkv.com/forum2/viewtopic.php?f=5&t=1053
"
4891,1b451f4bbc32a59ed21d015bad9c6e3d6725b51b,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4892,94aa87dd3d9fee6fd9b31b45b236df2a10f9c670,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
4893,b1a02930a31184729db6c8356fa529a32960b59f,/debian/ubuntu-devel/Dockerfile,"# let's make apt list package versions, since those are handy during devel
"
4894,b1a02930a31184729db6c8356fa529a32960b59f,/debian/ubuntu-devel/Dockerfile,"# normal build deps
"
4895,b1a02930a31184729db6c8356fa529a32960b59f,/debian/ubuntu-devel/Dockerfile,"# get dh-make-golang from Git since it's so rapidly changing
"
4896,b1a02930a31184729db6c8356fa529a32960b59f,/debian/ubuntu-devel/Dockerfile,"# need deb-src for compiling packages
"
4897,b1a02930a31184729db6c8356fa529a32960b59f,/debian/ubuntu-devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
4898,b1a02930a31184729db6c8356fa529a32960b59f,/debian/ubuntu-devel/Dockerfile,"# for ssh to debian hosts, let's make sure we know their fingerprints <3
"
4899,b1a02930a31184729db6c8356fa529a32960b59f,/debian/ubuntu-devel/Dockerfile,"# make sure things are pretty
"
4900,b1a02930a31184729db6c8356fa529a32960b59f,/debian/ubuntu-devel/Dockerfile,"#(force_color_prompt=yes)/\1/' ~/.bashrc

# quilt is much amaze: https://wiki.debian.org/UsingQuilt#Using_quilt_with_Debian_source_packages
"
4901,b1a02930a31184729db6c8356fa529a32960b59f,/debian/ubuntu-devel/Dockerfile,"# make sure pbuilder-dist uses a sane default mirror
"
4902,b0ada93b57e81cfd5295ae42b0dee1cf8a7263e2,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4903,b0ada93b57e81cfd5295ae42b0dee1cf8a7263e2,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4904,b0ada93b57e81cfd5295ae42b0dee1cf8a7263e2,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4905,b0ada93b57e81cfd5295ae42b0dee1cf8a7263e2,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4906,b0ada93b57e81cfd5295ae42b0dee1cf8a7263e2,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4907,0c794c7ddee7dcffc27894c4af4c8af92a629807,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4908,0c794c7ddee7dcffc27894c4af4c8af92a629807,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
4909,0c794c7ddee7dcffc27894c4af4c8af92a629807,/jenkins/Dockerfile,"# workaround ""apt-key adv --recv-keys"" hanging in stretch and above
"
4910,ad001d447cded94b7095d86a54d1bacd7bfa01b4,/gmpydl/Dockerfile,"# https://pypi.org/project/gmusicapi/
"
4911,ad001d447cded94b7095d86a54d1bacd7bfa01b4,/gmpydl/Dockerfile,"# https://github.com/stevenewbs/gmpydl/commits/master
# https://github.com/stevenewbs/gmpydl/releases
"
4912,2e6fb5e337c61fb0136f3f95cd98403c5cc26f69,/ymlfmt/Dockerfile,"# https://pypi.org/project/ruamel.yaml/
"
4913,da6b50da70a8dca2eada0563c3ebc4a126e42a5d,/network-toolbox/alpine/Dockerfile,"# TODO add ""nbtscan"" when we get to Alpine 3.9 (if it makes it out of edge for 3.9)

"
4914,5f5df46474f5dfe5bca0d339ad66f93dc44981eb,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4915,5f5df46474f5dfe5bca0d339ad66f93dc44981eb,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4916,5f5df46474f5dfe5bca0d339ad66f93dc44981eb,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4917,5f5df46474f5dfe5bca0d339ad66f93dc44981eb,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4918,5f5df46474f5dfe5bca0d339ad66f93dc44981eb,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4919,94b13984c1ab418f4875498efc2b588274e0b496,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4920,94b13984c1ab418f4875498efc2b588274e0b496,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4921,94b13984c1ab418f4875498efc2b588274e0b496,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4922,94b13984c1ab418f4875498efc2b588274e0b496,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4923,94b13984c1ab418f4875498efc2b588274e0b496,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4924,4e21adae6ac369c40bfc9bfc83e1b34fff0e0596,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4925,4e21adae6ac369c40bfc9bfc83e1b34fff0e0596,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4926,4e21adae6ac369c40bfc9bfc83e1b34fff0e0596,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4927,4e21adae6ac369c40bfc9bfc83e1b34fff0e0596,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4928,4e21adae6ac369c40bfc9bfc83e1b34fff0e0596,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4929,75e9919f48fe8607a5228b7f84996d2b7d1e979c,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4930,75e9919f48fe8607a5228b7f84996d2b7d1e979c,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4931,75e9919f48fe8607a5228b7f84996d2b7d1e979c,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4932,75e9919f48fe8607a5228b7f84996d2b7d1e979c,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4933,75e9919f48fe8607a5228b7f84996d2b7d1e979c,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4934,258646ccfc4061a4b1fbc14912dfebb114306e7a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4935,258646ccfc4061a4b1fbc14912dfebb114306e7a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4936,258646ccfc4061a4b1fbc14912dfebb114306e7a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4937,258646ccfc4061a4b1fbc14912dfebb114306e7a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4938,258646ccfc4061a4b1fbc14912dfebb114306e7a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4939,0a62b72361d10bb2179bad584d9a2f8395f18989,/exim4/Dockerfile,"# grab tini for signal processing and zombie killing
"
4940,d219b1af41fd8c21dc4c826f9bde992b55626f36,/vultr-cli/Dockerfile,"# https://github.com/vultr/vultr-cli/releases
"
4941,ea575c40211d560e3244220ec97dfe7e9f0d6500,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4942,ea575c40211d560e3244220ec97dfe7e9f0d6500,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
4943,ea575c40211d560e3244220ec97dfe7e9f0d6500,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
4944,ea575c40211d560e3244220ec97dfe7e9f0d6500,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
4945,ea575c40211d560e3244220ec97dfe7e9f0d6500,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
4946,7fdc462c03eeceb1b4b4d4cdc640b4438e204350,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4947,7fdc462c03eeceb1b4b4d4cdc640b4438e204350,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4948,7fdc462c03eeceb1b4b4d4cdc640b4438e204350,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4949,7fdc462c03eeceb1b4b4d4cdc640b4438e204350,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4950,7fdc462c03eeceb1b4b4d4cdc640b4438e204350,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4951,75c18dbedafe7f518e7aafc7124e61c0a81f9007,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4952,75c18dbedafe7f518e7aafc7124e61c0a81f9007,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
4953,75c18dbedafe7f518e7aafc7124e61c0a81f9007,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
4954,381c2695165c60a5f1c9cfc1af46f2f67d2a5bd3,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4955,381c2695165c60a5f1c9cfc1af46f2f67d2a5bd3,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4956,381c2695165c60a5f1c9cfc1af46f2f67d2a5bd3,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4957,381c2695165c60a5f1c9cfc1af46f2f67d2a5bd3,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4958,381c2695165c60a5f1c9cfc1af46f2f67d2a5bd3,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4959,8c08cd3e829dc48494c3567b3c8706cc29389ba6,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4960,8c08cd3e829dc48494c3567b3c8706cc29389ba6,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4961,8c08cd3e829dc48494c3567b3c8706cc29389ba6,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4962,8c08cd3e829dc48494c3567b3c8706cc29389ba6,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4963,8c08cd3e829dc48494c3567b3c8706cc29389ba6,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4964,34f5b5a84c2f9c689317b64609f2c0306b106ad7,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4965,34f5b5a84c2f9c689317b64609f2c0306b106ad7,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4966,34f5b5a84c2f9c689317b64609f2c0306b106ad7,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4967,34f5b5a84c2f9c689317b64609f2c0306b106ad7,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4968,34f5b5a84c2f9c689317b64609f2c0306b106ad7,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4969,a35e00a6972beba6df7631ff33bc67ce71ad05cf,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4970,9716a1530497f14b9e953cee7ba87f68f84b4fae,/golang/Dockerfile,"# (set an explicit GOARM of 5 for maximum ARM compatibility)
"
4971,9716a1530497f14b9e953cee7ba87f68f84b4fae,/golang/Dockerfile,"##*/} \
"
4972,9716a1530497f14b9e953cee7ba87f68f84b4fae,/golang/Dockerfile,"/*} \
			GOARCH=${platform##*/"
4973,5f330cfdf5f2a6a49dc30438f3db32f37ef1da29,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4974,5f330cfdf5f2a6a49dc30438f3db32f37ef1da29,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4975,5f330cfdf5f2a6a49dc30438f3db32f37ef1da29,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4976,5f330cfdf5f2a6a49dc30438f3db32f37ef1da29,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4977,5f330cfdf5f2a6a49dc30438f3db32f37ef1da29,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4978,611bcfef0265eeb461754095663b7f7a7cf75aa6,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4979,711052e729d04bff4bad27f40ef8b8270d1d81e2,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4980,711052e729d04bff4bad27f40ef8b8270d1d81e2,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4981,711052e729d04bff4bad27f40ef8b8270d1d81e2,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4982,711052e729d04bff4bad27f40ef8b8270d1d81e2,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4983,711052e729d04bff4bad27f40ef8b8270d1d81e2,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4984,cf537ef4802666769017bf9efbbefed1da8d4b6b,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4985,0c0f9a9739ba1485cf7ebc0d0fadd6ff892789c8,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4986,0c0f9a9739ba1485cf7ebc0d0fadd6ff892789c8,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4987,0c0f9a9739ba1485cf7ebc0d0fadd6ff892789c8,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4988,0c0f9a9739ba1485cf7ebc0d0fadd6ff892789c8,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4989,0c0f9a9739ba1485cf7ebc0d0fadd6ff892789c8,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4990,72ca16bccb1ca74198ea31529a86e03a00b1de1b,/jenkins/slave/debian/Dockerfile,"#?PermitRootLogin[[:space:]].*$/PermitRootLogin yes/g' /etc/ssh/sshd_config

"
4991,72ca16bccb1ca74198ea31529a86e03a00b1de1b,/jenkins/slave/debian/Dockerfile,"# let's make /root a volume so ~/.ssh/authorized_keys is easier to save
"
4992,a1f938ff6e16ce7479a6cabc6f60259b7255557f,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
4993,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/13.10/Dockerfile,"# much of this was gleaned from https://github.com/lxc/lxc/blob/lxc-0.8.0/templates/lxc-ubuntu.in

# we're going to want this bad boy installed so we can connect :)
"
4994,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/13.10/Dockerfile,"# undo some leet hax of the base image
"
4995,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/13.10/Dockerfile,"# generate a nice UTF-8 locale for our use
"
4996,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/13.10/Dockerfile,"# remove some pointless services
"
4997,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/13.10/Dockerfile,"# /lib/init/fstab: cleared out for bare-bones lxc' > /lib/init/fstab

# small fix for SSH in 13.10 (that's harmless everywhere else)
"
4998,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/13.10/Dockerfile,"# set a cheap, simple password for great convenience
"
4999,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/13.10/Dockerfile,"# we can has SSH
"
5000,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/13.10/Dockerfile,"# pepare for takeoff
"
5001,960063f18e4789a62cb6e8f2beb077685f3b3a3b,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5002,960063f18e4789a62cb6e8f2beb077685f3b3a3b,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5003,960063f18e4789a62cb6e8f2beb077685f3b3a3b,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5004,960063f18e4789a62cb6e8f2beb077685f3b3a3b,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5005,960063f18e4789a62cb6e8f2beb077685f3b3a3b,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5006,0cf979a3a9d7ca6eed32efc575c13bc62fc7ba6e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5007,0cf979a3a9d7ca6eed32efc575c13bc62fc7ba6e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5008,0cf979a3a9d7ca6eed32efc575c13bc62fc7ba6e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5009,0cf979a3a9d7ca6eed32efc575c13bc62fc7ba6e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5010,0cf979a3a9d7ca6eed32efc575c13bc62fc7ba6e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5011,db26b612d677d6c405ca8d40ca5a36c00f1d19d7,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5012,db26b612d677d6c405ca8d40ca5a36c00f1d19d7,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5013,db26b612d677d6c405ca8d40ca5a36c00f1d19d7,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5014,db26b612d677d6c405ca8d40ca5a36c00f1d19d7,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5015,db26b612d677d6c405ca8d40ca5a36c00f1d19d7,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5016,cc0cae5285d3e7cb914751c0a7dd0a7e8b6281ed,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5017,5d185b3d49bacb65687cfd6c1dee8876c969ee65,/xen-orchestra/Dockerfile,"# see https://xen-orchestra.com/docs/from_the_sources.html

"
5018,5d185b3d49bacb65687cfd6c1dee8876c969ee65,/xen-orchestra/Dockerfile,"# https://github.com/nodejs/node-gyp/releases
"
5019,5d185b3d49bacb65687cfd6c1dee8876c969ee65,/xen-orchestra/Dockerfile,"# https://github.com/vatesfr/xen-orchestra/releases
"
5020,5d185b3d49bacb65687cfd6c1dee8876c969ee65,/xen-orchestra/Dockerfile,"#		-e ""s!#'/' = '/path/to/xo-web/dist/'!'/' = '../xo-web/dist/'!"" \
"
5021,5d185b3d49bacb65687cfd6c1dee8876c969ee65,/xen-orchestra/Dockerfile,"#uri = 'redis://.*'!uri = 'redis://redis:6379'!"" \
"
5022,5d185b3d49bacb65687cfd6c1dee8876c969ee65,/xen-orchestra/Dockerfile,"#' config.toml | grep '../xo-web/dist'; \
"
5023,c0bda987c28d23dcb2779cd76b9d738b55b01a1a,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
5024,c0bda987c28d23dcb2779cd76b9d738b55b01a1a,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
5025,c0bda987c28d23dcb2779cd76b9d738b55b01a1a,/jenkins/Dockerfile,"# workaround ""apt-key adv --recv-keys"" hanging in stretch and above
"
5026,edf973a3263bbc7c8c477a8415234c9f9fd6de97,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5027,edf973a3263bbc7c8c477a8415234c9f9fd6de97,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5028,edf973a3263bbc7c8c477a8415234c9f9fd6de97,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5029,edf973a3263bbc7c8c477a8415234c9f9fd6de97,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5030,edf973a3263bbc7c8c477a8415234c9f9fd6de97,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5031,c0c332c654a4727c16db6107963b153badfeaa08,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5032,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/13.10/Dockerfile,"# much of this was gleaned from https://github.com/lxc/lxc/blob/lxc-0.8.0/templates/lxc-ubuntu.in
# and then heavily modified and hacked like crazy

# we're going to want this bad boy installed so we can connect :)
"
5033,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/13.10/Dockerfile,"# undo some leet hax of the base image
"
5034,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/13.10/Dockerfile,"# generate a nice UTF-8 locale for our use
"
5035,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/13.10/Dockerfile,"# remove some pointless services
"
5036,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/13.10/Dockerfile,"# /lib/init/fstab: cleared out for bare-bones Docker' > /lib/init/fstab

# small fix for SSH in 13.10 (that's harmless everywhere else)
"
5037,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/13.10/Dockerfile,"# let Upstart know it's in a container
"
5038,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/13.10/Dockerfile,"# set a cheap, simple password for great convenience
"
5039,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/13.10/Dockerfile,"# we can has SSH
"
5040,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/13.10/Dockerfile,"# pepare for takeoff
"
5041,7e4224d033d87ae8588f6e6395f4b2cf9a69398c,/phpmyadmin/Dockerfile,"# https://www.phpmyadmin.net/downloads/
"
5042,7e4224d033d87ae8588f6e6395f4b2cf9a69398c,/phpmyadmin/Dockerfile,"# https://docs.phpmyadmin.net/en/latest/setup.html#verifying-phpmyadmin-releases
"
5043,7e4224d033d87ae8588f6e6395f4b2cf9a69398c,/phpmyadmin/Dockerfile,"# Since July 2015 all phpMyAdmin releases are cryptographically signed by the releasing developer, who through January 2016 was Marc Delisle.
"
5044,7e4224d033d87ae8588f6e6395f4b2cf9a69398c,/phpmyadmin/Dockerfile,"# Beginning in January 2016, the release manager is Isaac Bennetch.
"
5045,7e4224d033d87ae8588f6e6395f4b2cf9a69398c,/phpmyadmin/Dockerfile,"# Some additional downloads (for example themes) might be signed by Michal Čihař.
"
5046,3469a82bad8889891a879efaa876e4b69c1f8773,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5047,3469a82bad8889891a879efaa876e4b69c1f8773,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5048,3469a82bad8889891a879efaa876e4b69c1f8773,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5049,3469a82bad8889891a879efaa876e4b69c1f8773,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5050,3469a82bad8889891a879efaa876e4b69c1f8773,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5051,7ab16829510457b5557b2d9b7d78ff3eb7430e63,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5052,7ab16829510457b5557b2d9b7d78ff3eb7430e63,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5053,7ab16829510457b5557b2d9b7d78ff3eb7430e63,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5054,7ab16829510457b5557b2d9b7d78ff3eb7430e63,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5055,7ab16829510457b5557b2d9b7d78ff3eb7430e63,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5056,94739571b38c99220eb712e67925d8145bd04b07,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
5057,94739571b38c99220eb712e67925d8145bd04b07,/plex/media-server/Dockerfile,"# the published deb has pre/post-inst scripts that don't really apply to Docker (so we'll skip ""install"" entirely)
# (as of 1.18.5.2309, they have bugs around Docker detection, which is mostly for avoiding init behavior)
"
5058,94739571b38c99220eb712e67925d8145bd04b07,/plex/media-server/Dockerfile,"#	apt-get update; \
#	apt-get install /tmp/plex.deb; \
#	rm -rf /var/lib/apt/lists/*; \
"
5059,94739571b38c99220eb712e67925d8145bd04b07,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
5060,0496c92f87947fad432e3703162d3f6751017c45,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5061,a9323cfaaa5f50ad3c2ab16fb96f98d2e8a237eb,/xen-orchestra/Dockerfile,"# see https://github.com/vatesfr/xo/blob/master/installation.md

"
5062,5a8168ef14f29ae5f9fac610d2676b96e5c75ea3,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5063,5a8168ef14f29ae5f9fac610d2676b96e5c75ea3,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5064,5a8168ef14f29ae5f9fac610d2676b96e5c75ea3,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5065,5a8168ef14f29ae5f9fac610d2676b96e5c75ea3,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5066,5a8168ef14f29ae5f9fac610d2676b96e5c75ea3,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5067,31e7d2dfa0230c6c93a1ffc3e5c63a896cf4d71e,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5068,07c88f6b99480a1fb6282de02b33734e782683a1,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5069,07c88f6b99480a1fb6282de02b33734e782683a1,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5070,07c88f6b99480a1fb6282de02b33734e782683a1,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5071,07c88f6b99480a1fb6282de02b33734e782683a1,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5072,07c88f6b99480a1fb6282de02b33734e782683a1,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5073,60685f6f59f8fe1302dc6b1e57a1260ba515cb25,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5074,6c82c1f4ff956231a3ca33d829176fd696aad2ec,/kgb-bot/Dockerfile,"# ""/etc/kgb-bot/kgb.conf is world-readable"" :'(
"
5075,d131a3bd5d437b4f321c9057df10faa925d815bd,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5076,d131a3bd5d437b4f321c9057df10faa925d815bd,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5077,d131a3bd5d437b4f321c9057df10faa925d815bd,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5078,d131a3bd5d437b4f321c9057df10faa925d815bd,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5079,d131a3bd5d437b4f321c9057df10faa925d815bd,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5080,5c0da879e7565a531557d560495f21420b3cd790,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5081,5c0da879e7565a531557d560495f21420b3cd790,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5082,5c0da879e7565a531557d560495f21420b3cd790,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5083,5c0da879e7565a531557d560495f21420b3cd790,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5084,5c0da879e7565a531557d560495f21420b3cd790,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5085,1fbab10e426d077bcaf2d35da6311618e0ab4c69,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5086,1fbab10e426d077bcaf2d35da6311618e0ab4c69,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5087,1fbab10e426d077bcaf2d35da6311618e0ab4c69,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5088,1fbab10e426d077bcaf2d35da6311618e0ab4c69,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5089,1fbab10e426d077bcaf2d35da6311618e0ab4c69,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5090,a2f473344d194f756d4ce3aaeed3a1d8a74af59e,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5091,0f90322cdcba865c131a9ca4c568aa7ba4e7b80c,/sbin-init/ubuntu/13.04/Dockerfile,"# much of this was gleaned from https://github.com/lxc/lxc/blob/lxc-0.8.0/templates/lxc-ubuntu.in

# we're going to want this bad boy installed so we can connect :)
"
5092,0f90322cdcba865c131a9ca4c568aa7ba4e7b80c,/sbin-init/ubuntu/13.04/Dockerfile,"# undo some leet hax of the base image
"
5093,0f90322cdcba865c131a9ca4c568aa7ba4e7b80c,/sbin-init/ubuntu/13.04/Dockerfile,"# generate a nice UTF-8 locale for our use
"
5094,0f90322cdcba865c131a9ca4c568aa7ba4e7b80c,/sbin-init/ubuntu/13.04/Dockerfile,"# remove some pointless services
"
5095,0f90322cdcba865c131a9ca4c568aa7ba4e7b80c,/sbin-init/ubuntu/13.04/Dockerfile,"# /lib/init/fstab: cleared out for bare-bones lxc' > /lib/init/fstab

# small fix for SSH in 13.10 (that's harmless everywhere else)
"
5096,0f90322cdcba865c131a9ca4c568aa7ba4e7b80c,/sbin-init/ubuntu/13.04/Dockerfile,"# set a cheap, simple password for great convenience
"
5097,0f90322cdcba865c131a9ca4c568aa7ba4e7b80c,/sbin-init/ubuntu/13.04/Dockerfile,"# we can has SSH
"
5098,0f90322cdcba865c131a9ca4c568aa7ba4e7b80c,/sbin-init/ubuntu/13.04/Dockerfile,"# pepare for takeoff
"
5099,0a7fc8e9c66115e25ab41177b3cab92b02a5329a,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
5100,0a7fc8e9c66115e25ab41177b3cab92b02a5329a,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
5101,0a7fc8e9c66115e25ab41177b3cab92b02a5329a,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
5102,0a7fc8e9c66115e25ab41177b3cab92b02a5329a,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
5103,0a7fc8e9c66115e25ab41177b3cab92b02a5329a,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
5104,cdbbdc085abfedda1fdcb1a268eb6a9e2d3ac67b,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5105,939d8e964d989ad76fba85fb8f120d8fcc8d5852,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5106,391abf70ebc4639af578f632e4c062595faf7f21,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
5107,391abf70ebc4639af578f632e4c062595faf7f21,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
5108,391abf70ebc4639af578f632e4c062595faf7f21,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
5109,391abf70ebc4639af578f632e4c062595faf7f21,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
5110,391abf70ebc4639af578f632e4c062595faf7f21,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
5111,a51f6a25c2be074b9b28d069e02bec0439f4932a,/google-cloud-print-connector/Dockerfile,"# fetch dependencies
# format: import-path=strip-components=tarball-url
"
5112,a51f6a25c2be074b9b28d069e02bec0439f4932a,/google-cloud-print-connector/Dockerfile,"# https://github.com/coreos/go-systemd/releases
"
5113,a51f6a25c2be074b9b28d069e02bec0439f4932a,/google-cloud-print-connector/Dockerfile,"# https://github.com/satori/go.uuid/releases
"
5114,a51f6a25c2be074b9b28d069e02bec0439f4932a,/google-cloud-print-connector/Dockerfile,"# https://github.com/urfave/cli/releases
"
5115,a51f6a25c2be074b9b28d069e02bec0439f4932a,/google-cloud-print-connector/Dockerfile,"# https://github.com/golang/net/commits/master
"
5116,a51f6a25c2be074b9b28d069e02bec0439f4932a,/google-cloud-print-connector/Dockerfile,"# https://github.com/golang/oauth2/commits/master
"
5117,a51f6a25c2be074b9b28d069e02bec0439f4932a,/google-cloud-print-connector/Dockerfile,"# https://bazaar.launchpad.net/~chipaca/go-xdg/v0/files (""view revision"")
# https://bazaar.launchpad.net/~chipaca/go-xdg/v0/revision/10?start_revid=10 (""download tarball"")
"
5118,a51f6a25c2be074b9b28d069e02bec0439f4932a,/google-cloud-print-connector/Dockerfile,"#*=}""; dep=""${dep%=$strip}""; \
"
5119,a51f6a25c2be074b9b28d069e02bec0439f4932a,/google-cloud-print-connector/Dockerfile,"#*=}""; strip=""${strip%=$tarball}""; \
"
5120,a51f6a25c2be074b9b28d069e02bec0439f4932a,/google-cloud-print-connector/Dockerfile,"# https://github.com/google/cloud-print-connector/releases
"
5121,71acec38a13a598cf1f95db7b1ad0cafe790b2a3,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5122,71acec38a13a598cf1f95db7b1ad0cafe790b2a3,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5123,71acec38a13a598cf1f95db7b1ad0cafe790b2a3,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5124,71acec38a13a598cf1f95db7b1ad0cafe790b2a3,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5125,71acec38a13a598cf1f95db7b1ad0cafe790b2a3,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5126,f234bb15bf5075509b5e475c734f74404e9d0b2e,/debian/devel/Dockerfile,"# normal build deps
"
5127,f234bb15bf5075509b5e475c734f74404e9d0b2e,/debian/devel/Dockerfile,"# need deb-src for compiling packages
"
5128,f234bb15bf5075509b5e475c734f74404e9d0b2e,/debian/devel/Dockerfile,"# let's make apt list package versions, since those are handy during devel
"
5129,f234bb15bf5075509b5e475c734f74404e9d0b2e,/debian/devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
5130,f234bb15bf5075509b5e475c734f74404e9d0b2e,/debian/devel/Dockerfile,"# for ssh to debian hosts, let's make sure we know their fingerprints <3
"
5131,f234bb15bf5075509b5e475c734f74404e9d0b2e,/debian/devel/Dockerfile,"# make sure things are pretty
"
5132,f234bb15bf5075509b5e475c734f74404e9d0b2e,/debian/devel/Dockerfile,"#(force_color_prompt=yes)/\1/' ~/.bashrc

# quilt is much amaze: https://wiki.debian.org/UsingQuilt#Using_quilt_with_Debian_source_packages
"
5133,f234bb15bf5075509b5e475c734f74404e9d0b2e,/debian/devel/Dockerfile,"# make sure pbuilder-dist uses a sane default mirror
"
5134,09dbe556aa85eac7cb48c2cd77e413a1fe0de682,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5135,09dbe556aa85eac7cb48c2cd77e413a1fe0de682,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5136,09dbe556aa85eac7cb48c2cd77e413a1fe0de682,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5137,09dbe556aa85eac7cb48c2cd77e413a1fe0de682,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5138,09dbe556aa85eac7cb48c2cd77e413a1fe0de682,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5139,6413e7bd54ad6826360fab13efe662cd7a1431e5,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
5140,57d61884ee8ea9898cad13c77b4292e26de2079f,/certbot/Dockerfile,"# Executable not found: can't find the executable for the dialog-like program
"
5141,57d61884ee8ea9898cad13c77b4292e26de2079f,/certbot/Dockerfile,"#VOLUME /etc/letsencrypt
"
5142,57d61884ee8ea9898cad13c77b4292e26de2079f,/certbot/Dockerfile,"#VOLUME /var/log/letsencrypt

"
5143,3e8a873095bcd44f86239cfcc59c919bebce49e9,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
5144,48e61382a9c58dc10b8d0d0d5aed310cd8150a9f,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
5145,9e81dfefef25592dfa1c486ab82148a1d6037aab,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5146,0afd0ce81d1a3c7331896299d6a5265739c4df5b,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5147,0afd0ce81d1a3c7331896299d6a5265739c4df5b,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5148,0afd0ce81d1a3c7331896299d6a5265739c4df5b,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5149,0afd0ce81d1a3c7331896299d6a5265739c4df5b,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5150,0afd0ce81d1a3c7331896299d6a5265739c4df5b,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5151,24fdfaf6b40ee45507365fe429845767f942a731,/vultr-cli/Dockerfile,"# https://github.com/vultr/vultr-cli/releases
"
5152,4d38458ffce7137dd3388dd7cbca6348465153d1,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5153,45b8f8118c33c3c17cafb8474d57ab53f4f71dd6,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5154,45b8f8118c33c3c17cafb8474d57ab53f4f71dd6,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5155,45b8f8118c33c3c17cafb8474d57ab53f4f71dd6,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5156,45b8f8118c33c3c17cafb8474d57ab53f4f71dd6,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5157,45b8f8118c33c3c17cafb8474d57ab53f4f71dd6,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5158,57d61884ee8ea9898cad13c77b4292e26de2079f,/gmpydl/Dockerfile,"# https://pypi.org/project/gmusicapi/
"
5159,57d61884ee8ea9898cad13c77b4292e26de2079f,/gmpydl/Dockerfile,"# https://github.com/stevenewbs/gmpydl/commits/master
# https://github.com/stevenewbs/gmpydl/releases
"
5160,b1f253c879c8a0a3e2d12621afd95338dd738fa8,/ymlfmt/Dockerfile,"# https://pypi.org/project/ruamel.yaml/
"
5161,74c1c756573654f424e7d50dd104e149900d15a7,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5162,74c1c756573654f424e7d50dd104e149900d15a7,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5163,74c1c756573654f424e7d50dd104e149900d15a7,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5164,74c1c756573654f424e7d50dd104e149900d15a7,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5165,74c1c756573654f424e7d50dd104e149900d15a7,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5166,2fa73d6516671a271563e32b81416e955cd8113b,/snapcraft/Dockerfile,"# based initially on https://hub.docker.com/r/didrocks/snapcraft/
"
5167,2fa73d6516671a271563e32b81416e955cd8113b,/snapcraft/Dockerfile,"# enable multiverse as snapcraft cleanbuild does
#RUN sed -i 's/ universe$/ universe multiverse/' /etc/apt/sources.list

# pin specific version so we can update with a natural cache bust
"
5168,8127e9724a1d6f6405d19b082a2580a82dc63fe2,/vultr-cli/Dockerfile,"# https://github.com/vultr/vultr-cli/releases
"
5169,ef9cf9438d12236072488bc6768c0504d53636ba,/gmpydl/Dockerfile,"# https://pypi.org/project/gmusicapi/
"
5170,ef9cf9438d12236072488bc6768c0504d53636ba,/gmpydl/Dockerfile,"# https://github.com/stevenewbs/gmpydl/commits/master
# https://github.com/stevenewbs/gmpydl/releases
"
5171,2de6ba8428ca3a5c2d992152f8d798f5d18cdc01,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5172,2de6ba8428ca3a5c2d992152f8d798f5d18cdc01,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5173,2de6ba8428ca3a5c2d992152f8d798f5d18cdc01,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5174,2de6ba8428ca3a5c2d992152f8d798f5d18cdc01,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5175,2de6ba8428ca3a5c2d992152f8d798f5d18cdc01,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5176,da42cb67a73ac9536ad5cb4e72272692db669d60,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5177,9f6f4d2de420c33fc1f4883e3ccfe71fac753d64,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5178,809c799cdc170ff4cacd390fe3eef9740be971d8,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5179,fe911bd0369fe1d914e4b8957df38c0fe42a18ee,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
5180,e7cc93ff4ebb1d71aa8ec65c75545e7456c42eb7,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5181,e7cc93ff4ebb1d71aa8ec65c75545e7456c42eb7,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5182,e7cc93ff4ebb1d71aa8ec65c75545e7456c42eb7,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5183,e7cc93ff4ebb1d71aa8ec65c75545e7456c42eb7,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5184,e7cc93ff4ebb1d71aa8ec65c75545e7456c42eb7,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5185,acdb8b709ffad6b5d2c85f46aae9266f34ba7361,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
5186,acdb8b709ffad6b5d2c85f46aae9266f34ba7361,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
5187,acdb8b709ffad6b5d2c85f46aae9266f34ba7361,/jenkins/Dockerfile,"# https://groups.google.com/d/msg/jenkins-infra/c7m_72vUTXE/37zw9GXhAQAJ
"
5188,acdb8b709ffad6b5d2c85f46aae9266f34ba7361,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
5189,a9a6a340f76b85930e12c1e1636e25ebbd92d2ec,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
5190,a9a6a340f76b85930e12c1e1636e25ebbd92d2ec,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
5191,a9a6a340f76b85930e12c1e1636e25ebbd92d2ec,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
5192,71cf48b313a9b708562d6ea4188dd5924239833c,/jenkins/weekly/Dockerfile,"# grab gosu for easy step-down from root
"
5193,71cf48b313a9b708562d6ea4188dd5924239833c,/jenkins/weekly/Dockerfile,"# grab tini for signal processing and zombie killing
"
5194,71cf48b313a9b708562d6ea4188dd5924239833c,/jenkins/weekly/Dockerfile,"# https://groups.google.com/d/msg/jenkins-infra/c7m_72vUTXE/37zw9GXhAQAJ
"
5195,71cf48b313a9b708562d6ea4188dd5924239833c,/jenkins/weekly/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
5196,cd6e90cf0668753b236bdf7938c5c38dcd62ebe1,/ruby-unicorn/Dockerfile,"# set a few bundle config variables so that a local .bundle in our development directory doesn't screw up our image
"
5197,cd6e90cf0668753b236bdf7938c5c38dcd62ebe1,/ruby-unicorn/Dockerfile,"# TODO find a clean way to do this here in such a way that gems like rmagick can install cleanly without first installing libmagickcore-dev
#ONBUILD ADD Gemfile /apps/rails/Gemfile
#ONBUILD ADD Gemfile.lock /apps/rails/Gemfile.lock
#ONBUILD RUN bundle install --deployment
#ONBUILD ADD . /apps/rails
"
5198,ad001d447cded94b7095d86a54d1bacd7bfa01b4,/certbot/Dockerfile,"# Executable not found: can't find the executable for the dialog-like program
"
5199,ad001d447cded94b7095d86a54d1bacd7bfa01b4,/certbot/Dockerfile,"#VOLUME /etc/letsencrypt
"
5200,ad001d447cded94b7095d86a54d1bacd7bfa01b4,/certbot/Dockerfile,"#VOLUME /var/log/letsencrypt

"
5201,366a3004f85b9cce5d1bdeafe414c32e1620f646,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5202,9161fd6553d0cd48c07d9d1dfa243c5891f821f8,/tinygo/Dockerfile,"# the .deb (as of 0.6.0) installs to /usr/local/tinygo but doesn't add ""tinygo"" to PATH
"
5203,9161fd6553d0cd48c07d9d1dfa243c5891f821f8,/tinygo/Dockerfile,"# https://tinygo.org/getting-started/linux/

# https://github.com/tinygo-org/tinygo/releases
"
5204,ecc21838d63921733aa542bb906b9a7571ce299e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5205,ecc21838d63921733aa542bb906b9a7571ce299e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5206,ecc21838d63921733aa542bb906b9a7571ce299e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5207,ecc21838d63921733aa542bb906b9a7571ce299e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5208,ecc21838d63921733aa542bb906b9a7571ce299e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5209,4f3c297e3d694f4033315d4f9e5b5248c0a0aadc,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5210,62e574a51f4d77a500a4e5d299adade62b2177f9,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
5211,93232ce4dc415091faf219d9797bf7b0c4192ad7,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5212,c59a0145f300cc4ff07395dd03fabf47f209bb7c,/mongodb-mms/Dockerfile,"# see https://mms.mongodb.com/settings/monitoring-agent
# click on ""Ubuntu 12.04+""
"
5213,5dd4032771cdabfa70c571865e2e509361cdb7cd,/docker/experimental/dind/Dockerfile,"# https://github.com/docker/docker/blob/master/project/PACKAGERS.md#runtime-dependencies
"
5214,5dd4032771cdabfa70c571865e2e509361cdb7cd,/docker/experimental/dind/Dockerfile,"# TODO aufs-tools

"
5215,51c37f90c5c6f6c75a5b6ea1974adfba0cb32232,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5216,51c37f90c5c6f6c75a5b6ea1974adfba0cb32232,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5217,51c37f90c5c6f6c75a5b6ea1974adfba0cb32232,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5218,51c37f90c5c6f6c75a5b6ea1974adfba0cb32232,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5219,51c37f90c5c6f6c75a5b6ea1974adfba0cb32232,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5220,f0d65439bd223b132372d38065596db6b06e0eb3,/caff/Dockerfile,"# TODO move this down when COPY adheres to USER (and remove chown)
"
5221,854c15311877f0b6e8e9b789d637b4457cbafe44,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5222,854c15311877f0b6e8e9b789d637b4457cbafe44,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5223,854c15311877f0b6e8e9b789d637b4457cbafe44,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5224,854c15311877f0b6e8e9b789d637b4457cbafe44,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5225,854c15311877f0b6e8e9b789d637b4457cbafe44,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5226,a70b767eacee0aba36fd2214f9b3626e43e71cf5,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5227,a70b767eacee0aba36fd2214f9b3626e43e71cf5,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5228,a70b767eacee0aba36fd2214f9b3626e43e71cf5,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5229,a70b767eacee0aba36fd2214f9b3626e43e71cf5,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5230,a70b767eacee0aba36fd2214f9b3626e43e71cf5,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5231,562267bc549dfbe2b896631921c352769474c912,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5232,ca4641924d1fce6dcd097727a9e34252e80ab7c6,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
5233,ca4641924d1fce6dcd097727a9e34252e80ab7c6,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
5234,ca4641924d1fce6dcd097727a9e34252e80ab7c6,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
5235,ca4641924d1fce6dcd097727a9e34252e80ab7c6,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
5236,ca4641924d1fce6dcd097727a9e34252e80ab7c6,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
5237,06ebc8e79a1581045b09bb566be78092da664d49,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5238,06ebc8e79a1581045b09bb566be78092da664d49,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5239,06ebc8e79a1581045b09bb566be78092da664d49,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5240,06ebc8e79a1581045b09bb566be78092da664d49,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5241,06ebc8e79a1581045b09bb566be78092da664d49,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5242,6876bb3ec02e7983e2eba3716d828f0aef950e66,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
5243,6876bb3ec02e7983e2eba3716d828f0aef950e66,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
5244,6876bb3ec02e7983e2eba3716d828f0aef950e66,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
5245,6876bb3ec02e7983e2eba3716d828f0aef950e66,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
5246,6876bb3ec02e7983e2eba3716d828f0aef950e66,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
5247,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/12.10/Dockerfile,"# much of this was gleaned from https://github.com/lxc/lxc/blob/lxc-0.8.0/templates/lxc-ubuntu.in

# we're going to want this bad boy installed so we can connect :)
"
5248,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/12.10/Dockerfile,"# undo some leet hax of the base image
"
5249,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/12.10/Dockerfile,"# generate a nice UTF-8 locale for our use
"
5250,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/12.10/Dockerfile,"# remove some pointless services
"
5251,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/12.10/Dockerfile,"# /lib/init/fstab: cleared out for bare-bones lxc' > /lib/init/fstab

# small fix for SSH in 13.10 (that's harmless everywhere else)
"
5252,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/12.10/Dockerfile,"# set a cheap, simple password for great convenience
"
5253,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/12.10/Dockerfile,"# we can has SSH
"
5254,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/12.10/Dockerfile,"# pepare for takeoff
"
5255,68aa2d19f805bb40e74e4b62f225cfaa9c3e54bc,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5256,9ee3c1e724b31da1a1ebdab0de134d35b91e4455,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5257,9ee3c1e724b31da1a1ebdab0de134d35b91e4455,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5258,9ee3c1e724b31da1a1ebdab0de134d35b91e4455,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5259,9ee3c1e724b31da1a1ebdab0de134d35b91e4455,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5260,9ee3c1e724b31da1a1ebdab0de134d35b91e4455,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5261,2e7d49957a98eb3b4a7e96918d3801d61168fc20,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5262,2e7d49957a98eb3b4a7e96918d3801d61168fc20,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5263,2e7d49957a98eb3b4a7e96918d3801d61168fc20,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5264,2e7d49957a98eb3b4a7e96918d3801d61168fc20,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5265,2e7d49957a98eb3b4a7e96918d3801d61168fc20,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5266,a1c89c4afae2df1363a3d07b1ebd89360a68de55,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5267,a1c89c4afae2df1363a3d07b1ebd89360a68de55,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5268,a1c89c4afae2df1363a3d07b1ebd89360a68de55,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5269,a1c89c4afae2df1363a3d07b1ebd89360a68de55,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5270,a1c89c4afae2df1363a3d07b1ebd89360a68de55,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5271,482ce46a79f1d0394b092269ba69e8024beeac1d,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5272,482ce46a79f1d0394b092269ba69e8024beeac1d,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5273,482ce46a79f1d0394b092269ba69e8024beeac1d,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5274,482ce46a79f1d0394b092269ba69e8024beeac1d,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5275,482ce46a79f1d0394b092269ba69e8024beeac1d,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5276,3b23a89c05eabe861f32d71d4728f67df9692939,/pmbootstrap/Dockerfile,"# https://gitlab.alpinelinux.org/alpine/aports/issues/11122
"
5277,3b23a89c05eabe861f32d71d4728f67df9692939,/pmbootstrap/Dockerfile,"# verify there are no errors/warnings
"
5278,3b23a89c05eabe861f32d71d4728f67df9692939,/pmbootstrap/Dockerfile,"# https://pypi.org/project/pmbootstrap/
"
5279,3b23a89c05eabe861f32d71d4728f67df9692939,/pmbootstrap/Dockerfile,"# workaround issues with transparent QEMU / binfmt detection (""fix binary"" -- qemu binaries not necessary inside chroots/namespaces)
"
5280,e23c765a61cddc9bd9e9fe1d4bb0e6cfbfc7566a,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
5281,5297ce0ed2d601e0fd3cfbeecbc87160f0ed71b3,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5282,5297ce0ed2d601e0fd3cfbeecbc87160f0ed71b3,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5283,5297ce0ed2d601e0fd3cfbeecbc87160f0ed71b3,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5284,5297ce0ed2d601e0fd3cfbeecbc87160f0ed71b3,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5285,5297ce0ed2d601e0fd3cfbeecbc87160f0ed71b3,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5286,0f90322cdcba865c131a9ca4c568aa7ba4e7b80c,/sbin-init/ubuntu/13.10/Dockerfile,"# much of this was gleaned from https://github.com/lxc/lxc/blob/lxc-0.8.0/templates/lxc-ubuntu.in

# we're going to want this bad boy installed so we can connect :)
"
5287,0f90322cdcba865c131a9ca4c568aa7ba4e7b80c,/sbin-init/ubuntu/13.10/Dockerfile,"# undo some leet hax of the base image
"
5288,0f90322cdcba865c131a9ca4c568aa7ba4e7b80c,/sbin-init/ubuntu/13.10/Dockerfile,"# generate a nice UTF-8 locale for our use
"
5289,0f90322cdcba865c131a9ca4c568aa7ba4e7b80c,/sbin-init/ubuntu/13.10/Dockerfile,"# remove some pointless services
"
5290,0f90322cdcba865c131a9ca4c568aa7ba4e7b80c,/sbin-init/ubuntu/13.10/Dockerfile,"# /lib/init/fstab: cleared out for bare-bones lxc' > /lib/init/fstab

# small fix for SSH in 13.10 (that's harmless everywhere else)
"
5291,0f90322cdcba865c131a9ca4c568aa7ba4e7b80c,/sbin-init/ubuntu/13.10/Dockerfile,"# set a cheap, simple password for great convenience
"
5292,0f90322cdcba865c131a9ca4c568aa7ba4e7b80c,/sbin-init/ubuntu/13.10/Dockerfile,"# we can has SSH
"
5293,0f90322cdcba865c131a9ca4c568aa7ba4e7b80c,/sbin-init/ubuntu/13.10/Dockerfile,"# pepare for takeoff
"
5294,44833445728d1f97e100a6f97777162ad531cc95,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5295,25b6412ae91a431113325f8d2f4a5cd88eb7ce99,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5296,25b6412ae91a431113325f8d2f4a5cd88eb7ce99,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5297,25b6412ae91a431113325f8d2f4a5cd88eb7ce99,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5298,25b6412ae91a431113325f8d2f4a5cd88eb7ce99,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5299,25b6412ae91a431113325f8d2f4a5cd88eb7ce99,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5300,76a9c408c02fc3bd472a09012dfe0d0412cc1966,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5301,76a9c408c02fc3bd472a09012dfe0d0412cc1966,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5302,76a9c408c02fc3bd472a09012dfe0d0412cc1966,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5303,76a9c408c02fc3bd472a09012dfe0d0412cc1966,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5304,76a9c408c02fc3bd472a09012dfe0d0412cc1966,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5305,449c89ebbc0b1e431dd6cd720fdd769a15330c54,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5306,cf4c6c1ec420212e5378b877516aeddee0bb078f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5307,cf4c6c1ec420212e5378b877516aeddee0bb078f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5308,cf4c6c1ec420212e5378b877516aeddee0bb078f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5309,cf4c6c1ec420212e5378b877516aeddee0bb078f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5310,cf4c6c1ec420212e5378b877516aeddee0bb078f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5311,09e19373a014c52eb35a9d07b981b9c6d31409dd,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5312,09e19373a014c52eb35a9d07b981b9c6d31409dd,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5313,09e19373a014c52eb35a9d07b981b9c6d31409dd,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5314,09e19373a014c52eb35a9d07b981b9c6d31409dd,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5315,09e19373a014c52eb35a9d07b981b9c6d31409dd,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5316,721645aac78541600cae15d046ba28afdf2f076e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5317,721645aac78541600cae15d046ba28afdf2f076e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5318,721645aac78541600cae15d046ba28afdf2f076e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5319,721645aac78541600cae15d046ba28afdf2f076e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5320,721645aac78541600cae15d046ba28afdf2f076e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5321,b29511e11e1fc10053ae307a3a74e841949d7ea1,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5322,b29511e11e1fc10053ae307a3a74e841949d7ea1,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5323,b29511e11e1fc10053ae307a3a74e841949d7ea1,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5324,b29511e11e1fc10053ae307a3a74e841949d7ea1,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5325,b29511e11e1fc10053ae307a3a74e841949d7ea1,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5326,b56c5f000960d1a677512f2abcba2d38f9a1fff8,/prometheus/Dockerfile,"# https://github.com/prometheus/prometheus/releases
"
5327,33ab463fbc95c2cec0f8201be8d05003f88ce408,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5328,f01e8099be5c23872e57197b77cd9e74fcef101c,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
5329,f01e8099be5c23872e57197b77cd9e74fcef101c,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
5330,f01e8099be5c23872e57197b77cd9e74fcef101c,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
5331,f01e8099be5c23872e57197b77cd9e74fcef101c,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
5332,f01e8099be5c23872e57197b77cd9e74fcef101c,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
5333,5cdfacd54f8f89422f79a9506d1ae6906c744b7d,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
5334,5cdfacd54f8f89422f79a9506d1ae6906c744b7d,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
5335,5cdfacd54f8f89422f79a9506d1ae6906c744b7d,/plex/media-server/Dockerfile,"# the published deb has pre/post-inst scripts that don't really apply to Docker (so we'll skip ""install"" entirely)
# (as of 1.18.5.2309, they have bugs around Docker detection, which is mostly for avoiding init behavior)
"
5336,5cdfacd54f8f89422f79a9506d1ae6906c744b7d,/plex/media-server/Dockerfile,"#	apt-get update; \
#	apt-get install /tmp/plex.deb; \
#	rm -rf /var/lib/apt/lists/*; \
"
5337,8a770950c03bdea2d6525fa169cc097765160391,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5338,2bcfb62d2faacf99cc4524d9de5561f110fbee0a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5339,2bcfb62d2faacf99cc4524d9de5561f110fbee0a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5340,2bcfb62d2faacf99cc4524d9de5561f110fbee0a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5341,2bcfb62d2faacf99cc4524d9de5561f110fbee0a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5342,2bcfb62d2faacf99cc4524d9de5561f110fbee0a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5343,bc4d16feeb040bbc6c2f003b2ed749bc55e6a776,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5344,bc4d16feeb040bbc6c2f003b2ed749bc55e6a776,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5345,bc4d16feeb040bbc6c2f003b2ed749bc55e6a776,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5346,bc4d16feeb040bbc6c2f003b2ed749bc55e6a776,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5347,bc4d16feeb040bbc6c2f003b2ed749bc55e6a776,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5348,217170cf047605cd6919b5382a8af6476431d607,/perl/Dockerfile,"# secure by default ♥ (thanks to sri!)
"
5349,217170cf047605cd6919b5382a8af6476431d607,/perl/Dockerfile,"# reinstall cpanm itself, for good measure
"
5350,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/13.04/Dockerfile,"# much of this was gleaned from https://github.com/lxc/lxc/blob/lxc-0.8.0/templates/lxc-ubuntu.in
# and then heavily modified and hacked like crazy

# we're going to want this bad boy installed so we can connect :)
"
5351,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/13.04/Dockerfile,"# undo some leet hax of the base image
"
5352,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/13.04/Dockerfile,"# generate a nice UTF-8 locale for our use
"
5353,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/13.04/Dockerfile,"# remove some pointless services
"
5354,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/13.04/Dockerfile,"# /lib/init/fstab: cleared out for bare-bones Docker' > /lib/init/fstab

# small fix for SSH in 13.10 (that's harmless everywhere else)
"
5355,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/13.04/Dockerfile,"# let Upstart know it's in a container
"
5356,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/13.04/Dockerfile,"# set a cheap, simple password for great convenience
"
5357,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/13.04/Dockerfile,"# we can has SSH
"
5358,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/13.04/Dockerfile,"# pepare for takeoff
"
5359,f6a827ea67a070853eedc8572187646b4198f736,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5360,f6a827ea67a070853eedc8572187646b4198f736,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5361,f6a827ea67a070853eedc8572187646b4198f736,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5362,f6a827ea67a070853eedc8572187646b4198f736,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5363,f6a827ea67a070853eedc8572187646b4198f736,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5364,9ddf34b9a23996600f52dbf00d079df0c2ac476f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5365,9ddf34b9a23996600f52dbf00d079df0c2ac476f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5366,9ddf34b9a23996600f52dbf00d079df0c2ac476f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5367,9ddf34b9a23996600f52dbf00d079df0c2ac476f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5368,9ddf34b9a23996600f52dbf00d079df0c2ac476f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5369,02e029ac1004fcdfe8255cc79ee9a316dbf4ce53,/makemkv/Dockerfile,"# This disc requires Java runtime (JRE), but none was found. Certain functions will fail, please install Java. See http://www.makemkv.com/bdjava/ for details.
"
5370,02e029ac1004fcdfe8255cc79ee9a316dbf4ce53,/makemkv/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
5371,02e029ac1004fcdfe8255cc79ee9a316dbf4ce53,/makemkv/Dockerfile,"# http://www.makemkv.com/forum2/viewtopic.php?f=3&t=224
"
5372,02e029ac1004fcdfe8255cc79ee9a316dbf4ce53,/makemkv/Dockerfile,"# beta code: http://www.makemkv.com/forum2/viewtopic.php?f=5&t=1053
"
5373,f0da16b2597c2954d443148ddb95a8683d49cca2,/google-cloud-print-connector/Dockerfile,"# fetch dependencies
# format: import-path=strip-components=tarball-url
"
5374,f0da16b2597c2954d443148ddb95a8683d49cca2,/google-cloud-print-connector/Dockerfile,"# https://github.com/coreos/go-systemd/releases
"
5375,f0da16b2597c2954d443148ddb95a8683d49cca2,/google-cloud-print-connector/Dockerfile,"# https://github.com/satori/go.uuid/releases
"
5376,f0da16b2597c2954d443148ddb95a8683d49cca2,/google-cloud-print-connector/Dockerfile,"# https://github.com/urfave/cli/releases
"
5377,f0da16b2597c2954d443148ddb95a8683d49cca2,/google-cloud-print-connector/Dockerfile,"# https://github.com/golang/net/commits/master
"
5378,f0da16b2597c2954d443148ddb95a8683d49cca2,/google-cloud-print-connector/Dockerfile,"# https://github.com/golang/oauth2/commits/master
"
5379,f0da16b2597c2954d443148ddb95a8683d49cca2,/google-cloud-print-connector/Dockerfile,"# https://bazaar.launchpad.net/~chipaca/go-xdg/v0/files (""view revision"")
# https://bazaar.launchpad.net/~chipaca/go-xdg/v0/revision/10?start_revid=10 (""download tarball"")
"
5380,f0da16b2597c2954d443148ddb95a8683d49cca2,/google-cloud-print-connector/Dockerfile,"#*=}""; dep=""${dep%=$strip}""; \
"
5381,f0da16b2597c2954d443148ddb95a8683d49cca2,/google-cloud-print-connector/Dockerfile,"#*=}""; strip=""${strip%=$tarball}""; \
"
5382,f0da16b2597c2954d443148ddb95a8683d49cca2,/google-cloud-print-connector/Dockerfile,"# https://github.com/google/cloud-print-connector/releases
"
5383,f0da16b2597c2954d443148ddb95a8683d49cca2,/google-cloud-print-connector/Dockerfile,"#ENV GCPC_VERSION d353d01
# https://github.com/google/cloud-print-connector/commit/d353d01
"
5384,a7a54e4c3cbe1ea048a74660b479713e346664dd,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5385,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/13.04/Dockerfile,"# much of this was gleaned from https://github.com/lxc/lxc/blob/lxc-0.8.0/templates/lxc-ubuntu.in

# we're going to want this bad boy installed so we can connect :)
"
5386,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/13.04/Dockerfile,"# undo some leet hax of the base image
"
5387,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/13.04/Dockerfile,"# generate a nice UTF-8 locale for our use
"
5388,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/13.04/Dockerfile,"# remove some pointless services
"
5389,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/13.04/Dockerfile,"# /lib/init/fstab: cleared out for bare-bones lxc' > /lib/init/fstab

# small fix for SSH in 13.10 (that's harmless everywhere else)
"
5390,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/13.04/Dockerfile,"# set a cheap, simple password for great convenience
"
5391,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/13.04/Dockerfile,"# we can has SSH
"
5392,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/13.04/Dockerfile,"# pepare for takeoff
"
5393,5421a734284f8ebe2231cc1ef1ecc1e20ba61c50,/exim4/Dockerfile,"# grab tini for signal processing and zombie killing
"
5394,3c7c7bed404009ee7aeac9421c521000017cd5cc,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5395,3c7c7bed404009ee7aeac9421c521000017cd5cc,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5396,3c7c7bed404009ee7aeac9421c521000017cd5cc,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5397,3c7c7bed404009ee7aeac9421c521000017cd5cc,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5398,3c7c7bed404009ee7aeac9421c521000017cd5cc,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5399,1f1f12aafa7f666b1b465f752c7e8f9eb08a879a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5400,1f1f12aafa7f666b1b465f752c7e8f9eb08a879a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5401,1f1f12aafa7f666b1b465f752c7e8f9eb08a879a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5402,1f1f12aafa7f666b1b465f752c7e8f9eb08a879a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5403,1f1f12aafa7f666b1b465f752c7e8f9eb08a879a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5404,7f60ec2716b80a8aa0cbf3d98aade217b9a7e297,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5405,7f60ec2716b80a8aa0cbf3d98aade217b9a7e297,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5406,7f60ec2716b80a8aa0cbf3d98aade217b9a7e297,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5407,7f60ec2716b80a8aa0cbf3d98aade217b9a7e297,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5408,7f60ec2716b80a8aa0cbf3d98aade217b9a7e297,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5409,bf73c530da22ad7985bbf9ade5d23be68a903fbb,/dind/Dockerfile,"#RUN curl -sL https://get.docker.io | sh

# let's grab the lastest ""master"" version of the install.sh script >:)
"
5410,ac0c050c990b6c81adad0287574fd8b8a6fcd452,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5411,ebea3bdb6f9568ccdfa874ab58ad76638b9d7987,/debian/devel/Dockerfile,"# normal build deps
"
5412,ebea3bdb6f9568ccdfa874ab58ad76638b9d7987,/debian/devel/Dockerfile,"# need an editor for ""dch -i""
"
5413,ebea3bdb6f9568ccdfa874ab58ad76638b9d7987,/debian/devel/Dockerfile,"# a few extra little useful things
"
5414,ebea3bdb6f9568ccdfa874ab58ad76638b9d7987,/debian/devel/Dockerfile,"# need deb-src for compiling packages
"
5415,ebea3bdb6f9568ccdfa874ab58ad76638b9d7987,/debian/devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
5416,28f5996df52805e115b04be34fa77284283c8da2,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5417,28f5996df52805e115b04be34fa77284283c8da2,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5418,28f5996df52805e115b04be34fa77284283c8da2,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5419,28f5996df52805e115b04be34fa77284283c8da2,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5420,28f5996df52805e115b04be34fa77284283c8da2,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5421,7a9df07658269c3e69835b002d12021c9a76a376,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5422,7a9df07658269c3e69835b002d12021c9a76a376,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5423,7a9df07658269c3e69835b002d12021c9a76a376,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5424,7a9df07658269c3e69835b002d12021c9a76a376,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5425,7a9df07658269c3e69835b002d12021c9a76a376,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5426,4c753abe59121a35349e62f0c5b00af2e1529654,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5427,200c6c0ec2fe3b3f609599816d67df1b59f7d43f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5428,200c6c0ec2fe3b3f609599816d67df1b59f7d43f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5429,200c6c0ec2fe3b3f609599816d67df1b59f7d43f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5430,200c6c0ec2fe3b3f609599816d67df1b59f7d43f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5431,200c6c0ec2fe3b3f609599816d67df1b59f7d43f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5432,b6c2ac0faaec239ee1c869bd8a3155ba8997bb59,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5433,b6c2ac0faaec239ee1c869bd8a3155ba8997bb59,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5434,b6c2ac0faaec239ee1c869bd8a3155ba8997bb59,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5435,b6c2ac0faaec239ee1c869bd8a3155ba8997bb59,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5436,b6c2ac0faaec239ee1c869bd8a3155ba8997bb59,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5437,6619904eb134c734d3b7f0b3b8433b883e3a4f32,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5438,f7b12458caea5e8846e0bf43d97782369a417877,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5439,f7b12458caea5e8846e0bf43d97782369a417877,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5440,f7b12458caea5e8846e0bf43d97782369a417877,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5441,f7b12458caea5e8846e0bf43d97782369a417877,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5442,f7b12458caea5e8846e0bf43d97782369a417877,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5443,0292ea40923ebb6600b48873b132bbbf46870659,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5444,53c9715b94cb4eccb30d8b11d7ef9063480d6484,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5445,53c9715b94cb4eccb30d8b11d7ef9063480d6484,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5446,53c9715b94cb4eccb30d8b11d7ef9063480d6484,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5447,53c9715b94cb4eccb30d8b11d7ef9063480d6484,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5448,53c9715b94cb4eccb30d8b11d7ef9063480d6484,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5449,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/13.10/Dockerfile,"# much of this was gleaned from https://github.com/lxc/lxc/blob/lxc-0.8.0/templates/lxc-ubuntu.in

# we're going to want this bad boy installed so we can connect :)
"
5450,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/13.10/Dockerfile,"# undo some leet hax of the base image
"
5451,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/13.10/Dockerfile,"# generate a nice UTF-8 locale for our use
"
5452,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/13.10/Dockerfile,"# remove some pointless services
"
5453,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/13.10/Dockerfile,"# /lib/init/fstab: cleared out for bare-bones lxc' > /lib/init/fstab

# small fix for SSH in 13.10 (that's harmless everywhere else)
"
5454,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/13.10/Dockerfile,"# set a cheap, simple password for great convenience
"
5455,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/13.10/Dockerfile,"# we can has SSH
"
5456,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/13.10/Dockerfile,"# pepare for takeoff
"
5457,79bfbda6ac4c24696ea3b8cda001013d99b6df3d,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5458,79bfbda6ac4c24696ea3b8cda001013d99b6df3d,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5459,79bfbda6ac4c24696ea3b8cda001013d99b6df3d,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5460,79bfbda6ac4c24696ea3b8cda001013d99b6df3d,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5461,79bfbda6ac4c24696ea3b8cda001013d99b6df3d,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5462,7c184d8e9d02dfad5b6249eb330d96debec22c9d,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
5463,7c184d8e9d02dfad5b6249eb330d96debec22c9d,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
5464,7cd9ad63c9dca4fa1e1390647e92472c6483d092,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
5465,7cd9ad63c9dca4fa1e1390647e92472c6483d092,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
5466,e76c2866be5ad8b4d00766e3fe8184c179872e51,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5467,e76c2866be5ad8b4d00766e3fe8184c179872e51,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5468,e76c2866be5ad8b4d00766e3fe8184c179872e51,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5469,e76c2866be5ad8b4d00766e3fe8184c179872e51,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5470,e76c2866be5ad8b4d00766e3fe8184c179872e51,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5471,e7deae9b38272ff7c557dbb258735cceec3becab,/nginx/Dockerfile,"# log to stderr
"
5472,e7deae9b38272ff7c557dbb258735cceec3becab,/nginx/Dockerfile,"# prevent backgrounding (for Docker)\ndaemon off;' >> /etc/nginx/nginx.conf

"
5473,dc022a2175c7f52de98f8357b57a8c6ee7e91b71,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
5474,dc022a2175c7f52de98f8357b57a8c6ee7e91b71,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
5475,f9de0f5feb4d95836cebf071977671612d46e929,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5476,f9de0f5feb4d95836cebf071977671612d46e929,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5477,f9de0f5feb4d95836cebf071977671612d46e929,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5478,f9de0f5feb4d95836cebf071977671612d46e929,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5479,f9de0f5feb4d95836cebf071977671612d46e929,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5480,17c23fd0ade4a41cc80d62ca50df21fab492ec9a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5481,17c23fd0ade4a41cc80d62ca50df21fab492ec9a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5482,17c23fd0ade4a41cc80d62ca50df21fab492ec9a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5483,17c23fd0ade4a41cc80d62ca50df21fab492ec9a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5484,17c23fd0ade4a41cc80d62ca50df21fab492ec9a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5485,95ddd97cea14dbcb863c46e020cb66f2fe7bb81f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5486,95ddd97cea14dbcb863c46e020cb66f2fe7bb81f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5487,95ddd97cea14dbcb863c46e020cb66f2fe7bb81f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5488,95ddd97cea14dbcb863c46e020cb66f2fe7bb81f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5489,95ddd97cea14dbcb863c46e020cb66f2fe7bb81f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5490,2eac1e38890fcb8184839a3202beafb09b573f0f,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5491,30ae67624ab83ebc345350c6488130a7335c2e96,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
5492,30ae67624ab83ebc345350c6488130a7335c2e96,/plex/media-server/Dockerfile,"# the published deb has pre/post-inst scripts that don't really apply to Docker (so we'll skip ""install"" entirely)
# (as of 1.18.5.2309, they have bugs around Docker detection, which is mostly for avoiding init behavior)
"
5493,30ae67624ab83ebc345350c6488130a7335c2e96,/plex/media-server/Dockerfile,"#	apt-get update; \
#	apt-get install /tmp/plex.deb; \
#	rm -rf /var/lib/apt/lists/*; \
"
5494,30ae67624ab83ebc345350c6488130a7335c2e96,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
5495,d8914e186b2eea78c5345096d282da0ee747d66f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5496,d8914e186b2eea78c5345096d282da0ee747d66f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5497,d8914e186b2eea78c5345096d282da0ee747d66f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5498,d8914e186b2eea78c5345096d282da0ee747d66f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5499,d8914e186b2eea78c5345096d282da0ee747d66f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5500,4a559f4470c5fa9a183453de051a1063452c52cf,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5501,4a559f4470c5fa9a183453de051a1063452c52cf,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5502,4a559f4470c5fa9a183453de051a1063452c52cf,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5503,4a559f4470c5fa9a183453de051a1063452c52cf,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5504,4a559f4470c5fa9a183453de051a1063452c52cf,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5505,0bff268b4aeac80fff2ca0c209f42bc4c2fab383,/nginx/Dockerfile,"# log to stderr
"
5506,0bff268b4aeac80fff2ca0c209f42bc4c2fab383,/nginx/Dockerfile,"# prevent backgrounding (for Docker)\ndaemon off;' >> /etc/nginx/nginx.conf

"
5507,912dd59359af49548c58260eb2d85e85603b66b3,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5508,be4c48c72f610648a9818807da84928b771bb77c,/slack/Dockerfile,"# the .deb file linked at https://slack.com/downloads/instructions/debian includes ""/etc/cron.daily/slack"" which sets up an APT repo entry as in the following installation

# pub   rsa4096 2016-02-18 [SCEA]
#       DB08 5A08 CA13 B8AC B917  E0F6 D938 EC0D 0386 51BD
# uid           [ unknown] https://packagecloud.io/slacktechnologies/slack (https://packagecloud.io/docs#gpg_signing) <support@packagecloud.io>
# sub   rsa4096 2016-02-18 [SEA]
"
5509,be4c48c72f610648a9818807da84928b771bb77c,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libX11-xcb.so.1: cannot open shared object file: No such file or directory
"
5510,be4c48c72f610648a9818807da84928b771bb77c,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libasound.so.2: cannot open shared object file: No such file or directory
"
5511,be4c48c72f610648a9818807da84928b771bb77c,/slack/Dockerfile,"# 3.3.3: slack: error while loading shared libraries: libgtk-3.so.0: cannot open shared object file: No such file or directory
"
5512,8ac9b9545e976c1ffe7dc862703107a56cd5b41b,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5513,8ac9b9545e976c1ffe7dc862703107a56cd5b41b,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5514,8ac9b9545e976c1ffe7dc862703107a56cd5b41b,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5515,8ac9b9545e976c1ffe7dc862703107a56cd5b41b,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5516,8ac9b9545e976c1ffe7dc862703107a56cd5b41b,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5517,6f3b2ee0f98d1abde53cf49b7bb47bba0e466cfd,/ruby-unicorn/Dockerfile,"# set a few bundle config variables so that a local .bundle in our development directory doesn't screw up our image
"
5518,6f3b2ee0f98d1abde53cf49b7bb47bba0e466cfd,/ruby-unicorn/Dockerfile,"# TODO find a clean way to do this here in such a way that gems like rmagick can install cleanly without first installing libmagickcore-dev
#ONBUILD ADD Gemfile /apps/rails/Gemfile
#ONBUILD ADD Gemfile.lock /apps/rails/Gemfile.lock
#ONBUILD RUN bundle install --deployment
#ONBUILD ADD . /apps/rails
"
5519,3c10117b380c43e76f278def8182f1784b9d684d,/prometheus/Dockerfile,"# https://github.com/prometheus/prometheus/releases
"
5520,f2eeed62198e7337221667ba9d347026adcfa62e,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5521,c197a6558a555e397421df60e9e558211d190e01,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5522,c197a6558a555e397421df60e9e558211d190e01,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5523,c197a6558a555e397421df60e9e558211d190e01,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5524,c197a6558a555e397421df60e9e558211d190e01,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5525,c197a6558a555e397421df60e9e558211d190e01,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5526,94efa5dc41db64b65416d9fb2273156dd7794aa1,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
5527,94efa5dc41db64b65416d9fb2273156dd7794aa1,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
5528,aadd653ef6bed40c2bb0d6c4aa6d5bf76a835892,/gmpydl/Dockerfile,"# https://pypi.org/project/gmusicapi/
"
5529,aadd653ef6bed40c2bb0d6c4aa6d5bf76a835892,/gmpydl/Dockerfile,"# https://github.com/stevenewbs/gmpydl/commits/master
# https://github.com/stevenewbs/gmpydl/releases
"
5530,87642ab3d17758161a4acc1347223adec05e8e75,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5531,87642ab3d17758161a4acc1347223adec05e8e75,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5532,87642ab3d17758161a4acc1347223adec05e8e75,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5533,87642ab3d17758161a4acc1347223adec05e8e75,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5534,87642ab3d17758161a4acc1347223adec05e8e75,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5535,a10eeaf58b583af82ffdab8166c7ffa6ff205b0a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5536,a10eeaf58b583af82ffdab8166c7ffa6ff205b0a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5537,a10eeaf58b583af82ffdab8166c7ffa6ff205b0a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5538,a10eeaf58b583af82ffdab8166c7ffa6ff205b0a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5539,a10eeaf58b583af82ffdab8166c7ffa6ff205b0a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5540,a6e0ca37d78d3c19105017de3fa3415df38c8224,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
5541,a6e0ca37d78d3c19105017de3fa3415df38c8224,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
5542,a6e0ca37d78d3c19105017de3fa3415df38c8224,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
5543,a6e0ca37d78d3c19105017de3fa3415df38c8224,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
5544,a6e0ca37d78d3c19105017de3fa3415df38c8224,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
5545,c1610b96ffcea268495de6bc01aa9d72c59f9392,/gmpydl/Dockerfile,"# https://pypi.org/project/gmusicapi/
"
5546,c1610b96ffcea268495de6bc01aa9d72c59f9392,/gmpydl/Dockerfile,"# https://github.com/stevenewbs/gmpydl/commits/master
# https://github.com/stevenewbs/gmpydl/releases
"
5547,b79aa84030172148c42afdacda13d099975c0ca8,/vultr-cli/Dockerfile,"# https://github.com/vultr/vultr-cli/releases
"
5548,3d30b33bed89b4d3896d94f59a6de6776c97b1f6,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
5549,3d30b33bed89b4d3896d94f59a6de6776c97b1f6,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
5550,2f1ea77477a44a468d3def2a610af02e106e9340,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5551,2f1ea77477a44a468d3def2a610af02e106e9340,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5552,2f1ea77477a44a468d3def2a610af02e106e9340,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5553,2f1ea77477a44a468d3def2a610af02e106e9340,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5554,2f1ea77477a44a468d3def2a610af02e106e9340,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5555,d219b1af41fd8c21dc4c826f9bde992b55626f36,/xen-orchestra/Dockerfile,"# see https://xen-orchestra.com/docs/from_the_sources.html

"
5556,d219b1af41fd8c21dc4c826f9bde992b55626f36,/xen-orchestra/Dockerfile,"# https://github.com/nodejs/node-gyp/releases
"
5557,d219b1af41fd8c21dc4c826f9bde992b55626f36,/xen-orchestra/Dockerfile,"# https://github.com/vatesfr/xen-orchestra/releases
"
5558,d219b1af41fd8c21dc4c826f9bde992b55626f36,/xen-orchestra/Dockerfile,"#		-e ""s!#'/' = '/path/to/xo-web/dist/'!'/' = '../xo-web/dist/'!"" \
"
5559,d219b1af41fd8c21dc4c826f9bde992b55626f36,/xen-orchestra/Dockerfile,"#uri = 'redis://.*'!uri = 'redis://redis:6379'!"" \
"
5560,d219b1af41fd8c21dc4c826f9bde992b55626f36,/xen-orchestra/Dockerfile,"#' config.toml | grep '../xo-web/dist'; \
"
5561,6f9755bcfd1e7609365af603a5c466ab3aa7bed5,/phpmyadmin/Dockerfile,"# https://www.phpmyadmin.net/downloads/
"
5562,6f9755bcfd1e7609365af603a5c466ab3aa7bed5,/phpmyadmin/Dockerfile,"# https://docs.phpmyadmin.net/en/latest/setup.html#verifying-phpmyadmin-releases
"
5563,6f9755bcfd1e7609365af603a5c466ab3aa7bed5,/phpmyadmin/Dockerfile,"# Since July 2015 all phpMyAdmin releases are cryptographically signed by the releasing developer, who through January 2016 was Marc Delisle.
"
5564,6f9755bcfd1e7609365af603a5c466ab3aa7bed5,/phpmyadmin/Dockerfile,"# Beginning in January 2016, the release manager is Isaac Bennetch.
"
5565,6f9755bcfd1e7609365af603a5c466ab3aa7bed5,/phpmyadmin/Dockerfile,"# Some additional downloads (for example themes) might be signed by Michal Čihař.
"
5566,2ceb773f3089d42b6e5d55b2af76243788c87d11,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
5567,da00fad425e2e4da260234d0cdaa059f0a60144b,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5568,da00fad425e2e4da260234d0cdaa059f0a60144b,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5569,da00fad425e2e4da260234d0cdaa059f0a60144b,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5570,da00fad425e2e4da260234d0cdaa059f0a60144b,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5571,da00fad425e2e4da260234d0cdaa059f0a60144b,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5572,a2d88bd03783c3afb59d105e52d868068ff2dccc,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5573,a2d88bd03783c3afb59d105e52d868068ff2dccc,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5574,a2d88bd03783c3afb59d105e52d868068ff2dccc,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5575,a2d88bd03783c3afb59d105e52d868068ff2dccc,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5576,a2d88bd03783c3afb59d105e52d868068ff2dccc,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5577,553d308ba91850bb95e82a324ac274e65ed26a11,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
5578,553d308ba91850bb95e82a324ac274e65ed26a11,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
5579,553d308ba91850bb95e82a324ac274e65ed26a11,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
5580,2adecd36345c58934648f46b156c9e4d5f9dedc6,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
5581,2adecd36345c58934648f46b156c9e4d5f9dedc6,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
5582,2adecd36345c58934648f46b156c9e4d5f9dedc6,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
5583,2adecd36345c58934648f46b156c9e4d5f9dedc6,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
5584,2adecd36345c58934648f46b156c9e4d5f9dedc6,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
5585,fc23190e5615691b0c8234cb6cbcea87a02c46e7,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
5586,fc23190e5615691b0c8234cb6cbcea87a02c46e7,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
5587,fc23190e5615691b0c8234cb6cbcea87a02c46e7,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
5588,fc23190e5615691b0c8234cb6cbcea87a02c46e7,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
5589,fc23190e5615691b0c8234cb6cbcea87a02c46e7,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
5590,2fbb2dc63bb9a0554f36778dae372c029f2c4025,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5591,2fbb2dc63bb9a0554f36778dae372c029f2c4025,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5592,2fbb2dc63bb9a0554f36778dae372c029f2c4025,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5593,2fbb2dc63bb9a0554f36778dae372c029f2c4025,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5594,2fbb2dc63bb9a0554f36778dae372c029f2c4025,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5595,77e3230125a7aa6d620906695d872d03ac9ac83c,/docker/master/dind/Dockerfile,"# https://github.com/docker/docker/blob/master/project/PACKAGERS.md#runtime-dependencies
"
5596,77e3230125a7aa6d620906695d872d03ac9ac83c,/docker/master/dind/Dockerfile,"# TODO aufs-tools

"
5597,44833445728d1f97e100a6f97777162ad531cc95,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5598,44833445728d1f97e100a6f97777162ad531cc95,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5599,44833445728d1f97e100a6f97777162ad531cc95,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5600,44833445728d1f97e100a6f97777162ad531cc95,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5601,44833445728d1f97e100a6f97777162ad531cc95,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5602,26b05718b07b66a4eb6626033039798ab9cbce44,/docker/master/dind/Dockerfile,"# https://github.com/docker/docker/blob/master/project/PACKAGERS.md#runtime-dependencies
"
5603,26b05718b07b66a4eb6626033039798ab9cbce44,/docker/master/dind/Dockerfile,"# TODO aufs-tools

"
5604,b6b9ecf948ba53ccbc995113905035a3d4474a68,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5605,b6b9ecf948ba53ccbc995113905035a3d4474a68,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5606,b6b9ecf948ba53ccbc995113905035a3d4474a68,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5607,b6b9ecf948ba53ccbc995113905035a3d4474a68,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5608,b6b9ecf948ba53ccbc995113905035a3d4474a68,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5609,90ba5e598ea846c93567c53660aec5cebf9fbdc4,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5610,90ba5e598ea846c93567c53660aec5cebf9fbdc4,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5611,90ba5e598ea846c93567c53660aec5cebf9fbdc4,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5612,90ba5e598ea846c93567c53660aec5cebf9fbdc4,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5613,90ba5e598ea846c93567c53660aec5cebf9fbdc4,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5614,2486226e6976e142dc942c38459d3d5b42b6ed71,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5615,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/12.04/Dockerfile,"# much of this was gleaned from https://github.com/lxc/lxc/blob/lxc-0.8.0/templates/lxc-ubuntu.in

# we're going to want this bad boy installed so we can connect :)
"
5616,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/12.04/Dockerfile,"# undo some leet hax of the base image
"
5617,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/12.04/Dockerfile,"# generate a nice UTF-8 locale for our use
"
5618,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/12.04/Dockerfile,"# remove some pointless services
"
5619,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/12.04/Dockerfile,"# /lib/init/fstab: cleared out for bare-bones lxc' > /lib/init/fstab

# small fix for SSH in 13.10 (that's harmless everywhere else)
"
5620,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/12.04/Dockerfile,"# set a cheap, simple password for great convenience
"
5621,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/12.04/Dockerfile,"# we can has SSH
"
5622,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/12.04/Dockerfile,"# pepare for takeoff
"
5623,8f734d5102a2f0b1b909749fecde52ae2b997cd0,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5624,8f734d5102a2f0b1b909749fecde52ae2b997cd0,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5625,8f734d5102a2f0b1b909749fecde52ae2b997cd0,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5626,8f734d5102a2f0b1b909749fecde52ae2b997cd0,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5627,8f734d5102a2f0b1b909749fecde52ae2b997cd0,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5628,5baf4ce6cc1f142f748c9847cb8cdea059f80482,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5629,9c81a836b8aff77429f27b400809df29dd15fcbc,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5630,9c81a836b8aff77429f27b400809df29dd15fcbc,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5631,9c81a836b8aff77429f27b400809df29dd15fcbc,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5632,9c81a836b8aff77429f27b400809df29dd15fcbc,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5633,9c81a836b8aff77429f27b400809df29dd15fcbc,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5634,34fa4944b6df22493cfd0395e6b913b5fda1e136,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5635,34fa4944b6df22493cfd0395e6b913b5fda1e136,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5636,34fa4944b6df22493cfd0395e6b913b5fda1e136,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5637,34fa4944b6df22493cfd0395e6b913b5fda1e136,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5638,34fa4944b6df22493cfd0395e6b913b5fda1e136,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5639,ef5f8ad7a107bad04c9410fcab4fcd8f092b7ea5,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5640,ef5f8ad7a107bad04c9410fcab4fcd8f092b7ea5,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5641,ef5f8ad7a107bad04c9410fcab4fcd8f092b7ea5,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5642,ef5f8ad7a107bad04c9410fcab4fcd8f092b7ea5,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5643,ef5f8ad7a107bad04c9410fcab4fcd8f092b7ea5,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5644,6b87e5e020895b7ff4a189fe139722e9fe409ae5,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5645,6b87e5e020895b7ff4a189fe139722e9fe409ae5,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5646,6b87e5e020895b7ff4a189fe139722e9fe409ae5,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5647,6b87e5e020895b7ff4a189fe139722e9fe409ae5,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5648,6b87e5e020895b7ff4a189fe139722e9fe409ae5,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5649,98de29fce1937503dd88a45af27117e1a7692704,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5650,98de29fce1937503dd88a45af27117e1a7692704,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5651,98de29fce1937503dd88a45af27117e1a7692704,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5652,98de29fce1937503dd88a45af27117e1a7692704,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5653,98de29fce1937503dd88a45af27117e1a7692704,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5654,ad79fd7c4b5de26e95629761618e6f0ceb55adaa,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5655,ad79fd7c4b5de26e95629761618e6f0ceb55adaa,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5656,ad79fd7c4b5de26e95629761618e6f0ceb55adaa,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5657,ad79fd7c4b5de26e95629761618e6f0ceb55adaa,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5658,ad79fd7c4b5de26e95629761618e6f0ceb55adaa,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5659,68cb6970da1789a2bbd651fc677cb8165be1ac93,/dind/Dockerfile,"#RUN curl -sL https://get.docker.io | sh

# let's grab the lastest ""master"" version of the install.sh script >:)
"
5660,e2763d1d2ce36979a95c76e4b55cd388a0e0fcdc,/certbot/Dockerfile,"# Executable not found: can't find the executable for the dialog-like program
"
5661,e2763d1d2ce36979a95c76e4b55cd388a0e0fcdc,/certbot/Dockerfile,"#VOLUME /etc/letsencrypt
"
5662,e2763d1d2ce36979a95c76e4b55cd388a0e0fcdc,/certbot/Dockerfile,"#VOLUME /var/log/letsencrypt

"
5663,468a679fe8a86802e25a84299e6c754438d12575,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
5664,468a679fe8a86802e25a84299e6c754438d12575,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
5665,468a679fe8a86802e25a84299e6c754438d12575,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
5666,468a679fe8a86802e25a84299e6c754438d12575,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
5667,468a679fe8a86802e25a84299e6c754438d12575,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
5668,b5a8c636092cd472f94365f19ac47cd7a341cb1d,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5669,b5a8c636092cd472f94365f19ac47cd7a341cb1d,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5670,b5a8c636092cd472f94365f19ac47cd7a341cb1d,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5671,b5a8c636092cd472f94365f19ac47cd7a341cb1d,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5672,b5a8c636092cd472f94365f19ac47cd7a341cb1d,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5673,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/12.04/Dockerfile,"# much of this was gleaned from https://github.com/lxc/lxc/blob/lxc-0.8.0/templates/lxc-ubuntu.in
# and then heavily modified and hacked like crazy

# we're going to want this bad boy installed so we can connect :)
"
5674,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/12.04/Dockerfile,"# undo some leet hax of the base image
"
5675,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/12.04/Dockerfile,"# generate a nice UTF-8 locale for our use
"
5676,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/12.04/Dockerfile,"# remove some pointless services
"
5677,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/12.04/Dockerfile,"# /lib/init/fstab: cleared out for bare-bones Docker' > /lib/init/fstab

# small fix for SSH in 13.10 (that's harmless everywhere else)
"
5678,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/12.04/Dockerfile,"# let Upstart know it's in a container
"
5679,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/12.04/Dockerfile,"# set a cheap, simple password for great convenience
"
5680,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/12.04/Dockerfile,"# we can has SSH
"
5681,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/12.04/Dockerfile,"# pepare for takeoff
"
5682,7ccdbe125933f966e534c36227b2eacd1419847f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5683,7ccdbe125933f966e534c36227b2eacd1419847f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5684,7ccdbe125933f966e534c36227b2eacd1419847f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5685,7ccdbe125933f966e534c36227b2eacd1419847f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5686,7ccdbe125933f966e534c36227b2eacd1419847f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5687,ae10b33c34066f45a94e35acac1b2e3b302a828a,/xen-orchestra/Dockerfile,"# see https://xen-orchestra.com/docs/from_the_sources.html

"
5688,ae10b33c34066f45a94e35acac1b2e3b302a828a,/xen-orchestra/Dockerfile,"# https://github.com/nodejs/node-gyp/releases
"
5689,ae10b33c34066f45a94e35acac1b2e3b302a828a,/xen-orchestra/Dockerfile,"# https://github.com/vatesfr/xen-orchestra/releases
"
5690,ae10b33c34066f45a94e35acac1b2e3b302a828a,/xen-orchestra/Dockerfile,"#		-e ""s!#'/' = '/path/to/xo-web/dist/'!'/' = '../xo-web/dist/'!"" \
"
5691,ae10b33c34066f45a94e35acac1b2e3b302a828a,/xen-orchestra/Dockerfile,"#uri = 'redis://.*'!uri = 'redis://redis:6379'!"" \
"
5692,ae10b33c34066f45a94e35acac1b2e3b302a828a,/xen-orchestra/Dockerfile,"#' config.toml | grep '../xo-web/dist'; \
"
5693,a9c203e1dd11a03f344a3394d92ca143aebf10b8,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5694,0f90322cdcba865c131a9ca4c568aa7ba4e7b80c,/sbin-init/ubuntu/12.10/Dockerfile,"# much of this was gleaned from https://github.com/lxc/lxc/blob/lxc-0.8.0/templates/lxc-ubuntu.in

# we're going to want this bad boy installed so we can connect :)
"
5695,0f90322cdcba865c131a9ca4c568aa7ba4e7b80c,/sbin-init/ubuntu/12.10/Dockerfile,"# undo some leet hax of the base image
"
5696,0f90322cdcba865c131a9ca4c568aa7ba4e7b80c,/sbin-init/ubuntu/12.10/Dockerfile,"# generate a nice UTF-8 locale for our use
"
5697,0f90322cdcba865c131a9ca4c568aa7ba4e7b80c,/sbin-init/ubuntu/12.10/Dockerfile,"# remove some pointless services
"
5698,0f90322cdcba865c131a9ca4c568aa7ba4e7b80c,/sbin-init/ubuntu/12.10/Dockerfile,"# /lib/init/fstab: cleared out for bare-bones lxc' > /lib/init/fstab

# small fix for SSH in 13.10 (that's harmless everywhere else)
"
5699,0f90322cdcba865c131a9ca4c568aa7ba4e7b80c,/sbin-init/ubuntu/12.10/Dockerfile,"# set a cheap, simple password for great convenience
"
5700,0f90322cdcba865c131a9ca4c568aa7ba4e7b80c,/sbin-init/ubuntu/12.10/Dockerfile,"# we can has SSH
"
5701,0f90322cdcba865c131a9ca4c568aa7ba4e7b80c,/sbin-init/ubuntu/12.10/Dockerfile,"# pepare for takeoff
"
5702,0feb5200ad32ffd51eb4e1e8592d08948f0812af,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5703,56421eb2ff460123ad7ad647a8c69ee0099b15a4,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5704,56421eb2ff460123ad7ad647a8c69ee0099b15a4,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5705,56421eb2ff460123ad7ad647a8c69ee0099b15a4,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5706,56421eb2ff460123ad7ad647a8c69ee0099b15a4,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5707,56421eb2ff460123ad7ad647a8c69ee0099b15a4,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5708,f35aaa0f0d264c4a60608e9e65c625146408e1cb,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5709,91267d9de69b0752be171975864cf5f444dc3a98,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
5710,91267d9de69b0752be171975864cf5f444dc3a98,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
5711,91267d9de69b0752be171975864cf5f444dc3a98,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
5712,013061b164378e8ae3a4ec5d24db140460888bad,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
5713,013061b164378e8ae3a4ec5d24db140460888bad,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
5714,fc470b4916b0698e16421fafb40edc8413482808,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
5715,fc470b4916b0698e16421fafb40edc8413482808,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
5716,fc470b4916b0698e16421fafb40edc8413482808,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
5717,fc470b4916b0698e16421fafb40edc8413482808,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
5718,fc470b4916b0698e16421fafb40edc8413482808,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
5719,40c2b8fbe48295eba56b4c39115b405efa6f81d7,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5720,40c2b8fbe48295eba56b4c39115b405efa6f81d7,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5721,40c2b8fbe48295eba56b4c39115b405efa6f81d7,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5722,40c2b8fbe48295eba56b4c39115b405efa6f81d7,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5723,40c2b8fbe48295eba56b4c39115b405efa6f81d7,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5724,1933e0f2d4e0be99c8920665ea04e8006f460572,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
5725,1933e0f2d4e0be99c8920665ea04e8006f460572,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
5726,ca95c79bbbf058cbc469f6982826651eaf930c5c,/mongodb-mms/Dockerfile,"# see https://mms.mongodb.com/settings/monitoring-agent
# click on ""Ubuntu 12.04+""
"
5727,8317349dbaddcb7b03564584f222f4a4e37d4879,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5728,5695aaa4d373a92d8931add1a25b2d5edf6bd5ad,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5729,5695aaa4d373a92d8931add1a25b2d5edf6bd5ad,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5730,5695aaa4d373a92d8931add1a25b2d5edf6bd5ad,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5731,5695aaa4d373a92d8931add1a25b2d5edf6bd5ad,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5732,5695aaa4d373a92d8931add1a25b2d5edf6bd5ad,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5733,1d74b1779ff134fc3c48f5979f640d573d30b3d8,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
5734,1d74b1779ff134fc3c48f5979f640d573d30b3d8,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
5735,1d74b1779ff134fc3c48f5979f640d573d30b3d8,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
5736,1d74b1779ff134fc3c48f5979f640d573d30b3d8,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
5737,1d74b1779ff134fc3c48f5979f640d573d30b3d8,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
5738,9c9eed5a7a9d3d8c703b0dd92bcd51b907e1f3e0,/exim4/Dockerfile,"# grab tini for signal processing and zombie killing
"
5739,4f4d2243a309e0683c86c44df99634c964d47f53,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
5740,4f4d2243a309e0683c86c44df99634c964d47f53,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
5741,4f4d2243a309e0683c86c44df99634c964d47f53,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
5742,6f827776c98fb919f8e5dd906aef6fb2ba60a778,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5743,6f827776c98fb919f8e5dd906aef6fb2ba60a778,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5744,6f827776c98fb919f8e5dd906aef6fb2ba60a778,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5745,6f827776c98fb919f8e5dd906aef6fb2ba60a778,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5746,6f827776c98fb919f8e5dd906aef6fb2ba60a778,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5747,cfb8e1ec050cc0320bebb5c08126348c908a447a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5748,cfb8e1ec050cc0320bebb5c08126348c908a447a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5749,cfb8e1ec050cc0320bebb5c08126348c908a447a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5750,cfb8e1ec050cc0320bebb5c08126348c908a447a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5751,cfb8e1ec050cc0320bebb5c08126348c908a447a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5752,2682c095a24da1177f62ee145134e54905961d46,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5753,2682c095a24da1177f62ee145134e54905961d46,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5754,2682c095a24da1177f62ee145134e54905961d46,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5755,2682c095a24da1177f62ee145134e54905961d46,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5756,2682c095a24da1177f62ee145134e54905961d46,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5757,89206d08e80bc66c8768cf1aeeedb65d1e126736,/gmvault/Dockerfile,"# for Python 2
"
5758,22ef5495ae38d9f2e5c50ca59cd1123fc76944e6,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5759,aeb543e72e4688c8ec9a55e418102b70bb5ba5b3,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5760,057e67391a415cee25f119bcf4023cb4fd0e2365,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5761,c63395af342259fca0972373eb55cbae84075d9a,/debian/ubuntu-devel/Dockerfile,"# normal build deps
"
5762,c63395af342259fca0972373eb55cbae84075d9a,/debian/ubuntu-devel/Dockerfile,"# need an editor for ""dch -i""
"
5763,c63395af342259fca0972373eb55cbae84075d9a,/debian/ubuntu-devel/Dockerfile,"# a few extra little useful things
"
5764,c63395af342259fca0972373eb55cbae84075d9a,/debian/ubuntu-devel/Dockerfile,"# need deb-src for compiling packages
"
5765,c63395af342259fca0972373eb55cbae84075d9a,/debian/ubuntu-devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
5766,c63395af342259fca0972373eb55cbae84075d9a,/debian/ubuntu-devel/Dockerfile,"# for ssh to debian hosts, let's make sure we know their fingerprints <3
"
5767,c63395af342259fca0972373eb55cbae84075d9a,/debian/ubuntu-devel/Dockerfile,"# make sure things are pretty
"
5768,c63395af342259fca0972373eb55cbae84075d9a,/debian/ubuntu-devel/Dockerfile,"#(force_color_prompt=yes)/\1/' /root/.bashrc

"
5769,5e93cc395b3dfc9546eb9523044754c4cd9af669,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5770,5e93cc395b3dfc9546eb9523044754c4cd9af669,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5771,5e93cc395b3dfc9546eb9523044754c4cd9af669,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5772,5e93cc395b3dfc9546eb9523044754c4cd9af669,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5773,5e93cc395b3dfc9546eb9523044754c4cd9af669,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5774,ddf64adf1a6c26d5adf9c8fa1c895d01da9834ca,/network-toolbox/alpine/Dockerfile,"# TODO add ""nbtscan"" when we get to Alpine 3.12 (if it makes it out of edge)
# https://pkgs.alpinelinux.org/packages?name=nbtscan&branch=edge&arch=x86_64

"
5775,1a1caae81f9a9ea3b79fa65241ce0e1f5df5022e,/diffoscope/Dockerfile,"# xxd (xxd not available in path. Falling back to Python hexlify.)
"
5776,1a1caae81f9a9ea3b79fa65241ce0e1f5df5022e,/diffoscope/Dockerfile,"# readelf ('readelf' not available in path. Falling back to binary comparison.)
"
5777,1a1caae81f9a9ea3b79fa65241ce0e1f5df5022e,/diffoscope/Dockerfile,"# for ""diffoscope --progress""
"
5778,ef30e1a74a2208b78f6bea3c64201fd332d2bb86,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5779,7ab16829510457b5557b2d9b7d78ff3eb7430e63,/docker-master/dind/Dockerfile,"# https://github.com/docker/docker/blob/master/project/PACKAGERS.md#runtime-dependencies
"
5780,7ab16829510457b5557b2d9b7d78ff3eb7430e63,/docker-master/dind/Dockerfile,"# pigz: https://github.com/moby/moby/pull/35697 (faster gzip implementation)
"
5781,7ab16829510457b5557b2d9b7d78ff3eb7430e63,/docker-master/dind/Dockerfile,"# only install zfs if it's available for the current architecture
# https://git.alpinelinux.org/cgit/aports/tree/main/zfs/APKBUILD?h=3.6-stable#n9 (""all !armhf !ppc64le"" as of 2017-11-01)
# ""apk info XYZ"" exits with a zero exit code but no output when the package exists but not for this arch
"
5782,7ab16829510457b5557b2d9b7d78ff3eb7430e63,/docker-master/dind/Dockerfile,"# TODO aufs-tools

# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
"
5783,7ab16829510457b5557b2d9b7d78ff3eb7430e63,/docker-master/dind/Dockerfile,"# https://github.com/docker/docker/tree/master/hack/dind
"
5784,a621a562535dca04e6775535799a91d9e08603a1,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5785,a621a562535dca04e6775535799a91d9e08603a1,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5786,a621a562535dca04e6775535799a91d9e08603a1,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5787,a621a562535dca04e6775535799a91d9e08603a1,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5788,a621a562535dca04e6775535799a91d9e08603a1,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5789,02042c331baf96a01030574465fdb4f519108e06,/qemu/Dockerfile,"#		qemu-system \
#		qemu-utils \
"
5790,02042c331baf96a01030574465fdb4f519108e06,/qemu/Dockerfile,"# https://www.qemu.org/download/#source
"
5791,02042c331baf96a01030574465fdb4f519108e06,/qemu/Dockerfile,"# TODO verify signature
"
5792,f35287efd367f6742000547c297f24122cee8816,/apt-cacher-ng/Dockerfile,"# grab tini for signal processing and zombie killing
"
5793,4273e44a64c793266d94e2a811a9a52b5ab28fb3,/jenkins/lts/Dockerfile,"# grab gosu for easy step-down from root
"
5794,4273e44a64c793266d94e2a811a9a52b5ab28fb3,/jenkins/lts/Dockerfile,"# grab tini for signal processing and zombie killing
"
5795,4273e44a64c793266d94e2a811a9a52b5ab28fb3,/jenkins/lts/Dockerfile,"# https://groups.google.com/d/msg/jenkins-infra/c7m_72vUTXE/37zw9GXhAQAJ
"
5796,4273e44a64c793266d94e2a811a9a52b5ab28fb3,/jenkins/lts/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
5797,0cbcd9ce34cce9552175eebdbc7677222aec7fe7,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5798,ad11c20be75175d214165a75f01c366b010f08d8,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5799,ee73b48191b8c685fd3b2eba8f2891a70447a68c,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5800,ee73b48191b8c685fd3b2eba8f2891a70447a68c,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5801,ee73b48191b8c685fd3b2eba8f2891a70447a68c,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5802,ee73b48191b8c685fd3b2eba8f2891a70447a68c,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5803,ee73b48191b8c685fd3b2eba8f2891a70447a68c,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5804,533af93df928eece8240c2ae264aab298aed8109,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5805,533af93df928eece8240c2ae264aab298aed8109,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5806,533af93df928eece8240c2ae264aab298aed8109,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5807,533af93df928eece8240c2ae264aab298aed8109,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5808,533af93df928eece8240c2ae264aab298aed8109,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5809,3f5483ffa4f790d4a4da610421f0b62ee7c3cdca,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5810,b8d353d54485d02947f12dbc3e1ce9ada9e01ec6,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5811,b8d353d54485d02947f12dbc3e1ce9ada9e01ec6,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5812,b8d353d54485d02947f12dbc3e1ce9ada9e01ec6,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5813,b8d353d54485d02947f12dbc3e1ce9ada9e01ec6,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5814,b8d353d54485d02947f12dbc3e1ce9ada9e01ec6,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5815,bf73c530da22ad7985bbf9ade5d23be68a903fbb,/xen-orchestra/Dockerfile,"# see https://github.com/vatesfr/xo/blob/master/installation.md

"
5816,bf73c530da22ad7985bbf9ade5d23be68a903fbb,/xen-orchestra/Dockerfile,"# TODO use links to get a redis server/database instead (since that's where configuration actually goes)
"
5817,bf73c530da22ad7985bbf9ade5d23be68a903fbb,/xen-orchestra/Dockerfile,"# TODO see note above about redis
"
5818,07ab09c1195cae440f6bedd69c6f9f1a0286e710,/jenkins/lts/Dockerfile,"# grab gosu for easy step-down from root
"
5819,07ab09c1195cae440f6bedd69c6f9f1a0286e710,/jenkins/lts/Dockerfile,"# grab tini for signal processing and zombie killing
"
5820,07ab09c1195cae440f6bedd69c6f9f1a0286e710,/jenkins/lts/Dockerfile,"# https://groups.google.com/d/msg/jenkins-infra/c7m_72vUTXE/37zw9GXhAQAJ
"
5821,07ab09c1195cae440f6bedd69c6f9f1a0286e710,/jenkins/lts/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
5822,e82cab7b2df1469999675601c23243711f151890,/xen-orchestra/Dockerfile,"# see https://xen-orchestra.com/docs/from_the_sources.html

"
5823,e82cab7b2df1469999675601c23243711f151890,/xen-orchestra/Dockerfile,"# https://github.com/nodejs/node-gyp/releases
"
5824,e82cab7b2df1469999675601c23243711f151890,/xen-orchestra/Dockerfile,"# https://github.com/vatesfr/xen-orchestra/releases
"
5825,e82cab7b2df1469999675601c23243711f151890,/xen-orchestra/Dockerfile,"#		-e ""s!#'/' = '/path/to/xo-web/dist/'!'/' = '../xo-web/dist/'!"" \
"
5826,e82cab7b2df1469999675601c23243711f151890,/xen-orchestra/Dockerfile,"#uri = 'redis://.*'!uri = 'redis://redis:6379'!"" \
"
5827,e82cab7b2df1469999675601c23243711f151890,/xen-orchestra/Dockerfile,"#' config.toml | grep '../xo-web/dist'; \
"
5828,cfe86f8a9ef4ce69b0d56084dbe904b4b01cbbbe,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
5829,cfe86f8a9ef4ce69b0d56084dbe904b4b01cbbbe,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
5830,cfe86f8a9ef4ce69b0d56084dbe904b4b01cbbbe,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
5831,cfe86f8a9ef4ce69b0d56084dbe904b4b01cbbbe,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
5832,cfe86f8a9ef4ce69b0d56084dbe904b4b01cbbbe,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
5833,735d75f9f2383a2b09f133dd9e00551a51b48811,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5834,735d75f9f2383a2b09f133dd9e00551a51b48811,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5835,735d75f9f2383a2b09f133dd9e00551a51b48811,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5836,735d75f9f2383a2b09f133dd9e00551a51b48811,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5837,735d75f9f2383a2b09f133dd9e00551a51b48811,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5838,7bb7b72637a7c79aefe7e93ba98bb3f1fdeeaeeb,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
5839,7bb7b72637a7c79aefe7e93ba98bb3f1fdeeaeeb,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
5840,7bb7b72637a7c79aefe7e93ba98bb3f1fdeeaeeb,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
5841,7bb7b72637a7c79aefe7e93ba98bb3f1fdeeaeeb,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
5842,7bb7b72637a7c79aefe7e93ba98bb3f1fdeeaeeb,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
5843,968d6ab3e87045113fdae3bfd4f6c64883ed9e5e,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5844,3c10117b380c43e76f278def8182f1784b9d684d,/speedtest/Dockerfile,"# https://www.speedtest.net/apps/cli#download
"
5845,3c10117b380c43e76f278def8182f1784b9d684d,/speedtest/Dockerfile,"# Ookla's ""armhf"" is armv6 (just like Alpine's), which is fair game for ARMv7 devices
"
5846,3c10117b380c43e76f278def8182f1784b9d684d,/speedtest/Dockerfile,"# Ookla's bare ""arm"" arch is armv5, which Alpine doesn't support :(
"
5847,3c10117b380c43e76f278def8182f1784b9d684d,/speedtest/Dockerfile,"#download)""; exit 1 ;; \
"
5848,cf0761a37b5b172432e967ed9e8572652c6488a1,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5849,cf0761a37b5b172432e967ed9e8572652c6488a1,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5850,cf0761a37b5b172432e967ed9e8572652c6488a1,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5851,cf0761a37b5b172432e967ed9e8572652c6488a1,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5852,cf0761a37b5b172432e967ed9e8572652c6488a1,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5853,222640dc6f61e1ad5eaf2393c0e75e9229f30eb1,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5854,58ef8362978d2832c284d81bc2fd74469fc7fedc,/certbot/Dockerfile,"# Executable not found: can't find the executable for the dialog-like program
"
5855,58ef8362978d2832c284d81bc2fd74469fc7fedc,/certbot/Dockerfile,"#VOLUME /etc/letsencrypt
"
5856,58ef8362978d2832c284d81bc2fd74469fc7fedc,/certbot/Dockerfile,"#VOLUME /var/log/letsencrypt

"
5857,eb88aef25e6c923aeb854cef0a07bdc8f1fbddfa,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5858,eb88aef25e6c923aeb854cef0a07bdc8f1fbddfa,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5859,eb88aef25e6c923aeb854cef0a07bdc8f1fbddfa,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5860,eb88aef25e6c923aeb854cef0a07bdc8f1fbddfa,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5861,eb88aef25e6c923aeb854cef0a07bdc8f1fbddfa,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5862,20d156a6af8eef85582bca9649560583b967be14,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5863,20d156a6af8eef85582bca9649560583b967be14,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5864,20d156a6af8eef85582bca9649560583b967be14,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5865,20d156a6af8eef85582bca9649560583b967be14,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5866,20d156a6af8eef85582bca9649560583b967be14,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5867,3693913204220041aa3630d31a8552a635327549,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5868,3693913204220041aa3630d31a8552a635327549,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5869,3693913204220041aa3630d31a8552a635327549,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5870,3693913204220041aa3630d31a8552a635327549,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5871,3693913204220041aa3630d31a8552a635327549,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5872,3b290aa040ef99d88531e6b3127a787cd7a8212d,/xen-orchestra/Dockerfile,"# see https://github.com/vatesfr/xo/blob/master/installation.md

"
5873,3b290aa040ef99d88531e6b3127a787cd7a8212d,/xen-orchestra/Dockerfile,"#CMD [""./xo-server/xo-server""]
# see https://github.com/vatesfr/xo-server/pull/28
"
5874,848b89e8272c2689af1499cc7642d3f3c9a31337,/toybox/Dockerfile,"# ideally, we'd use official static binary releases from http://landley.net/toybox/downloads/binaries/ but they don't include the (pending) ""sh"" implementation so they're not quite enough for a full system yet

"
5875,848b89e8272c2689af1499cc7642d3f3c9a31337,/toybox/Dockerfile,"# https://landley.net/toybox/downloads/?C=M;O=D
# https://github.com/landley/toybox/releases
"
5876,848b89e8272c2689af1499cc7642d3f3c9a31337,/toybox/Dockerfile,"# TODO set ""TARGET"" appropriately based on ""apk --print-arch"" to avoid ""uname -m"" detection
"
5877,848b89e8272c2689af1499cc7642d3f3c9a31337,/toybox/Dockerfile,"# (we set ""BUILTIN=1"" to avoid cpio / initramfs creation)

"
5878,c436151c22782711051c7aac067689c9f58142f7,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
5879,c436151c22782711051c7aac067689c9f58142f7,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
5880,c436151c22782711051c7aac067689c9f58142f7,/plex/media-server/Dockerfile,"# the published deb has pre/post-inst scripts that don't really apply to Docker (so we'll skip ""install"" entirely)
# (as of 1.18.5.2309, they have bugs around Docker detection, which is mostly for avoiding init behavior)
"
5881,c436151c22782711051c7aac067689c9f58142f7,/plex/media-server/Dockerfile,"#	apt-get update; \
#	apt-get install /tmp/plex.deb; \
#	rm -rf /var/lib/apt/lists/*; \
"
5882,225bfed7e35bf9123f0e6c48fcb2df7964ee37bf,/docker/experimental/dind/Dockerfile,"# https://github.com/docker/docker/blob/master/project/PACKAGERS.md#runtime-dependencies
"
5883,225bfed7e35bf9123f0e6c48fcb2df7964ee37bf,/docker/experimental/dind/Dockerfile,"# TODO aufs-tools

"
5884,b839cad3cab77bf9f5234c55122cc819fe590386,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5885,b839cad3cab77bf9f5234c55122cc819fe590386,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5886,b839cad3cab77bf9f5234c55122cc819fe590386,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5887,b839cad3cab77bf9f5234c55122cc819fe590386,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5888,b839cad3cab77bf9f5234c55122cc819fe590386,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5889,24972b52a019afdd5ef26ef7cdf5f90d4381e6e2,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5890,24972b52a019afdd5ef26ef7cdf5f90d4381e6e2,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5891,24972b52a019afdd5ef26ef7cdf5f90d4381e6e2,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5892,24972b52a019afdd5ef26ef7cdf5f90d4381e6e2,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5893,24972b52a019afdd5ef26ef7cdf5f90d4381e6e2,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5894,687c04d09254703f07e099f500750bd15f0bb149,/makemkv/Dockerfile,"# This disc requires Java runtime (JRE), but none was found. Certain functions will fail, please install Java. See http://www.makemkv.com/bdjava/ for details.
"
5895,687c04d09254703f07e099f500750bd15f0bb149,/makemkv/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
5896,687c04d09254703f07e099f500750bd15f0bb149,/makemkv/Dockerfile,"# FPL_MainFeature detection only seemed to work with OpenJDK 9 (8 was insufficient)
"
5897,687c04d09254703f07e099f500750bd15f0bb149,/makemkv/Dockerfile,"# Unable to execute external program 'ccextractor' as its path is not set in preferences
# Failed to execute external program 'ccextractor' from location '/usr/local/bin/mmccextr'
# (but it doesn't exist in the perferences dialog...)
"
5898,687c04d09254703f07e099f500750bd15f0bb149,/makemkv/Dockerfile,"# http://www.makemkv.com/forum2/viewtopic.php?f=3&t=224
"
5899,687c04d09254703f07e099f500750bd15f0bb149,/makemkv/Dockerfile,"# beta code: http://www.makemkv.com/forum2/viewtopic.php?f=5&t=1053
"
5900,687c04d09254703f07e099f500750bd15f0bb149,/makemkv/Dockerfile,"# pub   dsa2048 2017-05-26 [SC]
#       2ECF 2330 5F1F C0B3 2001  6733 94E3 083A 1804 2697
# uid           [ unknown] MakeMKV (signature) <support@makemkv.com>
"
5901,055a805cbf08d4b81c5d892f18f39c89fd387aa6,/google-cloud-print-connector/Dockerfile,"# fetch dependencies
# format: import-path=strip-components=tarball-url
"
5902,055a805cbf08d4b81c5d892f18f39c89fd387aa6,/google-cloud-print-connector/Dockerfile,"# https://github.com/coreos/go-systemd/releases
"
5903,055a805cbf08d4b81c5d892f18f39c89fd387aa6,/google-cloud-print-connector/Dockerfile,"# https://github.com/satori/go.uuid/releases
"
5904,055a805cbf08d4b81c5d892f18f39c89fd387aa6,/google-cloud-print-connector/Dockerfile,"# https://github.com/urfave/cli/releases
"
5905,055a805cbf08d4b81c5d892f18f39c89fd387aa6,/google-cloud-print-connector/Dockerfile,"# https://github.com/golang/net/commits/master
"
5906,055a805cbf08d4b81c5d892f18f39c89fd387aa6,/google-cloud-print-connector/Dockerfile,"# https://github.com/golang/oauth2/commits/master
"
5907,055a805cbf08d4b81c5d892f18f39c89fd387aa6,/google-cloud-print-connector/Dockerfile,"# https://bazaar.launchpad.net/~chipaca/go-xdg/v0/files (""view revision"")
# https://bazaar.launchpad.net/~chipaca/go-xdg/v0/revision/10?start_revid=10 (""download tarball"")
"
5908,055a805cbf08d4b81c5d892f18f39c89fd387aa6,/google-cloud-print-connector/Dockerfile,"#*=}""; dep=""${dep%=$strip}""; \
"
5909,055a805cbf08d4b81c5d892f18f39c89fd387aa6,/google-cloud-print-connector/Dockerfile,"#*=}""; strip=""${strip%=$tarball}""; \
"
5910,055a805cbf08d4b81c5d892f18f39c89fd387aa6,/google-cloud-print-connector/Dockerfile,"# https://github.com/google/cloud-print-connector/releases
"
5911,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/14.04/Dockerfile,"# much of this was gleaned from https://github.com/lxc/lxc/blob/lxc-0.8.0/templates/lxc-ubuntu.in
# and then heavily modified and hacked like crazy

# we're going to want this bad boy installed so we can connect :)
"
5912,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/14.04/Dockerfile,"# undo some leet hax of the base image
"
5913,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/14.04/Dockerfile,"# generate a nice UTF-8 locale for our use
"
5914,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/14.04/Dockerfile,"# remove some pointless services
"
5915,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/14.04/Dockerfile,"# /lib/init/fstab: cleared out for bare-bones Docker' > /lib/init/fstab

# small fix for SSH in 13.10 (that's harmless everywhere else)
"
5916,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/14.04/Dockerfile,"# let Upstart know it's in a container
"
5917,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/14.04/Dockerfile,"# set a cheap, simple password for great convenience
"
5918,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/14.04/Dockerfile,"# we can has SSH
"
5919,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/14.04/Dockerfile,"# pepare for takeoff
"
5920,b68fff80a3fb051634d62e9eceff2fe910becfc9,/certbot/Dockerfile,"# Executable not found: can't find the executable for the dialog-like program
"
5921,b68fff80a3fb051634d62e9eceff2fe910becfc9,/certbot/Dockerfile,"#VOLUME /etc/letsencrypt
"
5922,b68fff80a3fb051634d62e9eceff2fe910becfc9,/certbot/Dockerfile,"#VOLUME /var/log/letsencrypt

"
5923,eec36249372608582d36ff397d5cc5121687d755,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5924,65ccc70123010247ec8e1a25b9ebd7f6412c0ba3,/skype/Dockerfile,"# see https://repo.skype.com

"
5925,65ccc70123010247ec8e1a25b9ebd7f6412c0ba3,/skype/Dockerfile,"# wget is invoked by skypeforlinux for crash reports
"
5926,65ccc70123010247ec8e1a25b9ebd7f6412c0ba3,/skype/Dockerfile,"# https://repo.skype.com/data/SKYPE-GPG-KEY
"
5927,65ccc70123010247ec8e1a25b9ebd7f6412c0ba3,/skype/Dockerfile,"# pub   2048R/DF7587C3 2016-06-22 [expires: 2021-06-21]
#       Key fingerprint = D404 0146 BE39 7250 9FD5  7FC7 1F30 45A5 DF75 87C3
# uid                  Skype Linux Client Repository <se-um@microsoft.com>
# sub   2048R/A4EBB320 2016-06-22 [expires: 2021-06-21]
"
5928,9c30a632b2fbc7d28d88d8266450ee8d34e3b2a1,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5929,babbe8e59860265db6cc27b93c10422aeac9e8ef,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
5930,babbe8e59860265db6cc27b93c10422aeac9e8ef,/plex/media-server/Dockerfile,"# the published deb has pre/post-inst scripts that don't really apply to Docker (so we'll skip ""install"" entirely)
# (as of 1.18.5.2309, they have bugs around Docker detection, which is mostly for avoiding init behavior)
"
5931,babbe8e59860265db6cc27b93c10422aeac9e8ef,/plex/media-server/Dockerfile,"#	apt-get update; \
#	apt-get install /tmp/plex.deb; \
#	rm -rf /var/lib/apt/lists/*; \
"
5932,babbe8e59860265db6cc27b93c10422aeac9e8ef,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
5933,1e2679daf5ab9015b0814299d980b62379494b51,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5934,35bb6340c0da83a3898c2e816b5948b3957be423,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5935,2838bca40e8972caf36d6a7c58ea08a499e61abf,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5936,2838bca40e8972caf36d6a7c58ea08a499e61abf,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5937,2838bca40e8972caf36d6a7c58ea08a499e61abf,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5938,2838bca40e8972caf36d6a7c58ea08a499e61abf,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5939,2838bca40e8972caf36d6a7c58ea08a499e61abf,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5940,ab48d733f52bf18641286c000c635b69cbd0ab98,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5941,ab48d733f52bf18641286c000c635b69cbd0ab98,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5942,ab48d733f52bf18641286c000c635b69cbd0ab98,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5943,ab48d733f52bf18641286c000c635b69cbd0ab98,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5944,ab48d733f52bf18641286c000c635b69cbd0ab98,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5945,017096d4b05bcdf7d9898209589297c382a546c3,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5946,017096d4b05bcdf7d9898209589297c382a546c3,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5947,017096d4b05bcdf7d9898209589297c382a546c3,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5948,017096d4b05bcdf7d9898209589297c382a546c3,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5949,017096d4b05bcdf7d9898209589297c382a546c3,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5950,2b139005df57c03e6a7f891deff824030538378e,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
5951,2b139005df57c03e6a7f891deff824030538378e,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
5952,2b139005df57c03e6a7f891deff824030538378e,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
5953,024de6a6e9bafa4fa55258cf3ccd185cfd8729c4,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5954,024de6a6e9bafa4fa55258cf3ccd185cfd8729c4,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5955,024de6a6e9bafa4fa55258cf3ccd185cfd8729c4,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5956,024de6a6e9bafa4fa55258cf3ccd185cfd8729c4,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5957,024de6a6e9bafa4fa55258cf3ccd185cfd8729c4,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5958,42ea42be4a458598eb150f1990c21d611715942c,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
5959,42ea42be4a458598eb150f1990c21d611715942c,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
5960,42ea42be4a458598eb150f1990c21d611715942c,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
5961,42ea42be4a458598eb150f1990c21d611715942c,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
5962,42ea42be4a458598eb150f1990c21d611715942c,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
5963,c731d30f76a765e35d79f92553a727bc531467b1,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5964,c731d30f76a765e35d79f92553a727bc531467b1,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5965,c731d30f76a765e35d79f92553a727bc531467b1,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5966,c731d30f76a765e35d79f92553a727bc531467b1,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5967,c731d30f76a765e35d79f92553a727bc531467b1,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5968,8778266e960777a923ea8e9be101f7851c27edda,/gmpydl/Dockerfile,"# https://pypi.org/project/gmusicapi/
"
5969,8778266e960777a923ea8e9be101f7851c27edda,/gmpydl/Dockerfile,"# https://github.com/stevenewbs/gmpydl/commits/master
# https://github.com/stevenewbs/gmpydl/releases
"
5970,7db83497c9fa5b74c2feab34b8c6acd36ed1b985,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5971,be12396d36c048a5f3c0b510f2a3c148263725c8,/diffoscope/Dockerfile,"# xxd (xxd not available in path. Falling back to Python hexlify.)
"
5972,be12396d36c048a5f3c0b510f2a3c148263725c8,/diffoscope/Dockerfile,"# readelf ('readelf' not available in path. Falling back to binary comparison.)
"
5973,be12396d36c048a5f3c0b510f2a3c148263725c8,/diffoscope/Dockerfile,"# for ""diffoscope --progress""
"
5974,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/Dockerfile.template,"# much of this was gleaned from https://github.com/lxc/lxc/blob/lxc-0.8.0/templates/lxc-ubuntu.in
# and then heavily modified and hacked like crazy

# we're going to want this bad boy installed so we can connect :)
"
5975,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/Dockerfile.template,"# undo some leet hax of the base image
"
5976,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/Dockerfile.template,"# generate a nice UTF-8 locale for our use
"
5977,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/Dockerfile.template,"# remove some pointless services
"
5978,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/Dockerfile.template,"# /lib/init/fstab: cleared out for bare-bones Docker' > /lib/init/fstab

# small fix for SSH in 13.10 (that's harmless everywhere else)
"
5979,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/Dockerfile.template,"# let Upstart know it's in a container
"
5980,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/Dockerfile.template,"# set a cheap, simple password for great convenience
"
5981,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/Dockerfile.template,"# we can has SSH
"
5982,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/Dockerfile.template,"# pepare for takeoff
"
5983,525015fb28dc52ca19bedfecad4460d271f6aee0,/makemkv/Dockerfile,"# TODO find some way to include ccextractor (currently buster-only)

# FPL_MainFeature detection only seemed to work with OpenJDK 9 (8 was insufficient)
"
5984,525015fb28dc52ca19bedfecad4460d271f6aee0,/makemkv/Dockerfile,"# This disc requires Java runtime (JRE), but none was found. Certain functions will fail, please install Java. See http://www.makemkv.com/bdjava/ for details.
"
5985,525015fb28dc52ca19bedfecad4460d271f6aee0,/makemkv/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
5986,525015fb28dc52ca19bedfecad4460d271f6aee0,/makemkv/Dockerfile,"# http://www.makemkv.com/forum2/viewtopic.php?f=3&t=224
"
5987,525015fb28dc52ca19bedfecad4460d271f6aee0,/makemkv/Dockerfile,"# beta code: http://www.makemkv.com/forum2/viewtopic.php?f=5&t=1053
"
5988,525015fb28dc52ca19bedfecad4460d271f6aee0,/makemkv/Dockerfile,"# pub   dsa2048 2017-05-26 [SC]
#       2ECF 2330 5F1F C0B3 2001  6733 94E3 083A 1804 2697
# uid           [ unknown] MakeMKV (signature) <support@makemkv.com>
"
5989,19bbac46d221f91f3e54cb4e95df20fc77f6b2d9,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5990,19bbac46d221f91f3e54cb4e95df20fc77f6b2d9,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5991,19bbac46d221f91f3e54cb4e95df20fc77f6b2d9,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5992,19bbac46d221f91f3e54cb4e95df20fc77f6b2d9,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5993,19bbac46d221f91f3e54cb4e95df20fc77f6b2d9,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5994,c08de462ca9d9c02bd715fe7fef6b8a51e2c204a,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
5995,c08de462ca9d9c02bd715fe7fef6b8a51e2c204a,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
5996,c08de462ca9d9c02bd715fe7fef6b8a51e2c204a,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
5997,d1cbfedbde2d11ba6130f6690bffb29273dccdc6,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5998,d1cbfedbde2d11ba6130f6690bffb29273dccdc6,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5999,d1cbfedbde2d11ba6130f6690bffb29273dccdc6,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6000,d1cbfedbde2d11ba6130f6690bffb29273dccdc6,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6001,d1cbfedbde2d11ba6130f6690bffb29273dccdc6,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6002,77635a3bd228bd053e82f83935aa6d1c8db55387,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
6003,52ad7a1e45f4f92477692d5f2982af599fdc5f7e,/speedtest/Dockerfile,"# https://www.speedtest.net/apps/cli#download
"
6004,52ad7a1e45f4f92477692d5f2982af599fdc5f7e,/speedtest/Dockerfile,"# Ookla's ""armhf"" is armv6 (just like Alpine's), which is fair game for ARMv7 devices
"
6005,52ad7a1e45f4f92477692d5f2982af599fdc5f7e,/speedtest/Dockerfile,"# Ookla's bare ""arm"" arch is armv5, which Alpine doesn't support :(
"
6006,52ad7a1e45f4f92477692d5f2982af599fdc5f7e,/speedtest/Dockerfile,"#download)""; exit 1 ;; \
"
6007,7b7fa29852537dfcb255e13ab3aa8648238b7169,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
6008,7b7fa29852537dfcb255e13ab3aa8648238b7169,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
6009,7b7fa29852537dfcb255e13ab3aa8648238b7169,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
6010,7b7fa29852537dfcb255e13ab3aa8648238b7169,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
6011,7b7fa29852537dfcb255e13ab3aa8648238b7169,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
6012,f35287efd367f6742000547c297f24122cee8816,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
6013,f35287efd367f6742000547c297f24122cee8816,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
6014,3aa9317235978f35e0c073d3077b0f792878b0e4,/mongodb-mms/Dockerfile,"# see https://mms.mongodb.com/settings/monitoring-agent
# click on ""Ubuntu 12.04+""
"
6015,dfb52b433a1965fd06cf8e7e5526685efa942262,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
6016,dfb52b433a1965fd06cf8e7e5526685efa942262,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
6017,b1f253c879c8a0a3e2d12621afd95338dd738fa8,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
6018,b1f253c879c8a0a3e2d12621afd95338dd738fa8,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
6019,b1f253c879c8a0a3e2d12621afd95338dd738fa8,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
6020,745b91b7a95066392e6d85fc0a986b6919fa724e,/docker-master/dind/Dockerfile,"# https://github.com/docker/docker/blob/master/project/PACKAGERS.md#runtime-dependencies
"
6021,745b91b7a95066392e6d85fc0a986b6919fa724e,/docker-master/dind/Dockerfile,"# pigz: https://github.com/moby/moby/pull/35697 (faster gzip implementation)
"
6022,745b91b7a95066392e6d85fc0a986b6919fa724e,/docker-master/dind/Dockerfile,"# only install zfs if it's available for the current architecture
# https://git.alpinelinux.org/cgit/aports/tree/main/zfs/APKBUILD?h=3.6-stable#n9 (""all !armhf !ppc64le"" as of 2017-11-01)
# ""apk info XYZ"" exits with a zero exit code but no output when the package exists but not for this arch
"
6023,745b91b7a95066392e6d85fc0a986b6919fa724e,/docker-master/dind/Dockerfile,"# TODO aufs-tools

# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
"
6024,745b91b7a95066392e6d85fc0a986b6919fa724e,/docker-master/dind/Dockerfile,"# https://github.com/docker/docker/tree/master/hack/dind
"
6025,e1377cec96e613b6d4c4375b3bc443dbbcfbd680,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
6026,e1377cec96e613b6d4c4375b3bc443dbbcfbd680,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
6027,e1377cec96e613b6d4c4375b3bc443dbbcfbd680,/plex/media-server/Dockerfile,"# the published deb has pre/post-inst scripts that don't really apply to Docker (so we'll skip ""install"" entirely)
# (as of 1.18.5.2309, they have bugs around Docker detection, which is mostly for avoiding init behavior)
"
6028,e1377cec96e613b6d4c4375b3bc443dbbcfbd680,/plex/media-server/Dockerfile,"#	apt-get update; \
#	apt-get install /tmp/plex.deb; \
#	rm -rf /var/lib/apt/lists/*; \
"
6029,2b3b9ed7ad5e76ff28e78b0d4736760dfc4124e6,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6030,aadd653ef6bed40c2bb0d6c4aa6d5bf76a835892,/moosefs/Dockerfile,"# mfscli (and cgi) are Python-based
"
6031,aadd653ef6bed40c2bb0d6c4aa6d5bf76a835892,/moosefs/Dockerfile,"# mfsmount needs ""fusermount""
"
6032,aadd653ef6bed40c2bb0d6c4aa6d5bf76a835892,/moosefs/Dockerfile,"# allow running mfsmount as non-root
"
6033,aadd653ef6bed40c2bb0d6c4aa6d5bf76a835892,/moosefs/Dockerfile,"#user_allow_other$/user_allow_other/' /etc/fuse.conf

"
6034,aadd653ef6bed40c2bb0d6c4aa6d5bf76a835892,/moosefs/Dockerfile,"# https://github.com/moosefs/moosefs/releases
"
6035,aadd653ef6bed40c2bb0d6c4aa6d5bf76a835892,/moosefs/Dockerfile,"# prep the default configuration so things generally work Out-of-the-Box
"
6036,aadd653ef6bed40c2bb0d6c4aa6d5bf76a835892,/moosefs/Dockerfile,"# allow us to run as an arbitrary user but still modify configuration
"
6037,aadd653ef6bed40c2bb0d6c4aa6d5bf76a835892,/moosefs/Dockerfile,"# prep a scratch space with appropriate permissions to be able to do quick prototyping Out-of-the-Box
"
6038,aadd653ef6bed40c2bb0d6c4aa6d5bf76a835892,/moosefs/Dockerfile,"# without this, the Python-based mfscli ""-f"" flag refuses to use UTF-8 box-drawing characters
"
6039,fac051467a974e15e14869bc3ff14c709c8994e6,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6040,fac051467a974e15e14869bc3ff14c709c8994e6,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6041,fac051467a974e15e14869bc3ff14c709c8994e6,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6042,fac051467a974e15e14869bc3ff14c709c8994e6,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6043,fac051467a974e15e14869bc3ff14c709c8994e6,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6044,019e3dafeac4116b4547194b6452de9de76610dd,/docker-master/dind/Dockerfile,"# https://github.com/docker/docker/blob/master/project/PACKAGERS.md#runtime-dependencies
"
6045,019e3dafeac4116b4547194b6452de9de76610dd,/docker-master/dind/Dockerfile,"# pigz: https://github.com/moby/moby/pull/35697 (faster gzip implementation)
"
6046,019e3dafeac4116b4547194b6452de9de76610dd,/docker-master/dind/Dockerfile,"# only install zfs if it's available for the current architecture
# https://git.alpinelinux.org/cgit/aports/tree/main/zfs/APKBUILD?h=3.6-stable#n9 (""all !armhf !ppc64le"" as of 2017-11-01)
# ""apk info XYZ"" exits with a zero exit code but no output when the package exists but not for this arch
"
6047,019e3dafeac4116b4547194b6452de9de76610dd,/docker-master/dind/Dockerfile,"# TODO aufs-tools

# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
"
6048,019e3dafeac4116b4547194b6452de9de76610dd,/docker-master/dind/Dockerfile,"# https://github.com/docker/docker/tree/master/hack/dind
"
6049,9c19333ee4084e54c7ad34af7728d0863152e0b1,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6050,9c19333ee4084e54c7ad34af7728d0863152e0b1,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6051,9c19333ee4084e54c7ad34af7728d0863152e0b1,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6052,9c19333ee4084e54c7ad34af7728d0863152e0b1,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6053,9c19333ee4084e54c7ad34af7728d0863152e0b1,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6054,96b9245ab1c352c4fb3063185f09534fb53079ca,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6055,96b9245ab1c352c4fb3063185f09534fb53079ca,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6056,96b9245ab1c352c4fb3063185f09534fb53079ca,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6057,96b9245ab1c352c4fb3063185f09534fb53079ca,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6058,96b9245ab1c352c4fb3063185f09534fb53079ca,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6059,bbdfa31baeeefdddd9d49bed6a4cc4d47ddcb37c,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6060,45d8e4ab5b00616f531c93c0bc835a60357a6e8a,/docker/master/dind/Dockerfile,"# https://github.com/docker/docker/blob/master/project/PACKAGERS.md#runtime-dependencies
"
6061,45d8e4ab5b00616f531c93c0bc835a60357a6e8a,/docker/master/dind/Dockerfile,"# TODO aufs-tools

# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
"
6062,56a0d5d7759e6af44c0d3579f18ea1ab1c5c1eab,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6063,03318e27a81a29e230a2e48821c90022cc4fa918,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6064,03318e27a81a29e230a2e48821c90022cc4fa918,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6065,03318e27a81a29e230a2e48821c90022cc4fa918,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6066,03318e27a81a29e230a2e48821c90022cc4fa918,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6067,03318e27a81a29e230a2e48821c90022cc4fa918,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6068,ce77490b94072399efd35b857a844a49049a9d8a,/apt-cacher-ng/Dockerfile,"# grab tini for signal processing and zombie killing
"
6069,ef9cf9438d12236072488bc6768c0504d53636ba,/vultr-cli/Dockerfile,"# https://github.com/vultr/vultr-cli/releases
"
6070,26e7709d4d607ba5d75d653ce30357f2777bb81a,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6071,7e9b9cd0fc7251b8eae3797f6c2386c8b5819400,/containerd/Dockerfile,"# runtime deps
"
6072,7e9b9cd0fc7251b8eae3797f6c2386c8b5819400,/containerd/Dockerfile,"# https://github.com/opencontainers/runc/releases
"
6073,7e9b9cd0fc7251b8eae3797f6c2386c8b5819400,/containerd/Dockerfile,"# TODO .asc / .sha256sum
"
6074,7e9b9cd0fc7251b8eae3797f6c2386c8b5819400,/containerd/Dockerfile,"# https://github.com/containerd/containerd/releases
"
6075,ad2bc3161453a16a1ddea9b503eddd7373c359c9,/syncthing/Dockerfile,"# gpg: key BCE524C7: public key ""Jakob Borg (calmh) <jakob@nym.se>"" imported
"
6076,78421daf6271cf08dba86d9595492faf96857ff5,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
6077,78421daf6271cf08dba86d9595492faf96857ff5,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
6078,06c08e65063f739bc4090e7682ddcb7938223bfa,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6079,06c08e65063f739bc4090e7682ddcb7938223bfa,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6080,06c08e65063f739bc4090e7682ddcb7938223bfa,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6081,06c08e65063f739bc4090e7682ddcb7938223bfa,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6082,06c08e65063f739bc4090e7682ddcb7938223bfa,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6083,8b4a24f4aa131f73c031b04abeb64042aa921c64,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6084,8b4a24f4aa131f73c031b04abeb64042aa921c64,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6085,8b4a24f4aa131f73c031b04abeb64042aa921c64,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6086,8b4a24f4aa131f73c031b04abeb64042aa921c64,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6087,8b4a24f4aa131f73c031b04abeb64042aa921c64,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6088,43efa06d4cb32ed6250e25f4d91931c91d0c4d51,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6089,43efa06d4cb32ed6250e25f4d91931c91d0c4d51,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6090,43efa06d4cb32ed6250e25f4d91931c91d0c4d51,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6091,43efa06d4cb32ed6250e25f4d91931c91d0c4d51,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6092,43efa06d4cb32ed6250e25f4d91931c91d0c4d51,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6093,d219b1af41fd8c21dc4c826f9bde992b55626f36,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
6094,d219b1af41fd8c21dc4c826f9bde992b55626f36,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
6095,d219b1af41fd8c21dc4c826f9bde992b55626f36,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
6096,a73aae08eba3a496ef293b4edb3cda8efdab8f14,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6097,5c3ca334caa1e71f0c92803c000220e706b83550,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
6098,5c3ca334caa1e71f0c92803c000220e706b83550,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
6099,5c3ca334caa1e71f0c92803c000220e706b83550,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
6100,5c3ca334caa1e71f0c92803c000220e706b83550,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
6101,5c3ca334caa1e71f0c92803c000220e706b83550,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
6102,386fe7fba3f211dc4c2e75c186ddbec823af0c3b,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6103,386fe7fba3f211dc4c2e75c186ddbec823af0c3b,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6104,386fe7fba3f211dc4c2e75c186ddbec823af0c3b,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6105,386fe7fba3f211dc4c2e75c186ddbec823af0c3b,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6106,386fe7fba3f211dc4c2e75c186ddbec823af0c3b,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6107,f76442cee0e3ec934672643a72aeca61244bb789,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6108,f76442cee0e3ec934672643a72aeca61244bb789,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6109,f76442cee0e3ec934672643a72aeca61244bb789,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6110,f76442cee0e3ec934672643a72aeca61244bb789,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6111,f76442cee0e3ec934672643a72aeca61244bb789,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6112,0ecd51e33b9558cc5e3cb76ef6c4d151ae49fcde,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
6113,28a0c426de765f75b4d4c306ba01855d50fb407d,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6114,28a0c426de765f75b4d4c306ba01855d50fb407d,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6115,28a0c426de765f75b4d4c306ba01855d50fb407d,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6116,28a0c426de765f75b4d4c306ba01855d50fb407d,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6117,28a0c426de765f75b4d4c306ba01855d50fb407d,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6118,104703669dbf11d2076cbd3d22ecc685de1d7e1e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6119,104703669dbf11d2076cbd3d22ecc685de1d7e1e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6120,104703669dbf11d2076cbd3d22ecc685de1d7e1e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6121,104703669dbf11d2076cbd3d22ecc685de1d7e1e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6122,104703669dbf11d2076cbd3d22ecc685de1d7e1e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6123,13704609d96fa166614c61074e03d51dd1a90db4,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6124,ae401714a4566dc52493ea14474ac60b49890cb2,/vultr-cli/Dockerfile,"# https://github.com/vultr/vultr-cli/releases
"
6125,c208bb459c193c8e69f54159bd488753f733ea13,/diffoscope/Dockerfile,"# xxd (xxd not available in path. Falling back to Python hexlify.)
"
6126,c208bb459c193c8e69f54159bd488753f733ea13,/diffoscope/Dockerfile,"# readelf ('readelf' not available in path. Falling back to binary comparison.)
"
6127,c208bb459c193c8e69f54159bd488753f733ea13,/diffoscope/Dockerfile,"# for ""diffoscope --progress""
"
6128,b4f763299cef9cfd66ec1cd670e9629535b47799,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6129,b4f763299cef9cfd66ec1cd670e9629535b47799,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6130,b4f763299cef9cfd66ec1cd670e9629535b47799,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6131,b4f763299cef9cfd66ec1cd670e9629535b47799,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6132,b4f763299cef9cfd66ec1cd670e9629535b47799,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6133,2b139005df57c03e6a7f891deff824030538378e,/xen-orchestra/Dockerfile,"# see https://xen-orchestra.com/docs/from_the_sources.html

"
6134,2b139005df57c03e6a7f891deff824030538378e,/xen-orchestra/Dockerfile,"# https://github.com/nodejs/node-gyp/releases
"
6135,2b139005df57c03e6a7f891deff824030538378e,/xen-orchestra/Dockerfile,"# https://github.com/vatesfr/xen-orchestra/releases
"
6136,2b139005df57c03e6a7f891deff824030538378e,/xen-orchestra/Dockerfile,"#		-e ""s!#'/' = '/path/to/xo-web/dist/'!'/' = '../xo-web/dist/'!"" \
"
6137,2b139005df57c03e6a7f891deff824030538378e,/xen-orchestra/Dockerfile,"#uri = 'redis://.*'!uri = 'redis://redis:6379'!"" \
"
6138,2b139005df57c03e6a7f891deff824030538378e,/xen-orchestra/Dockerfile,"#' config.toml | grep '../xo-web/dist'; \
"
6139,126a5c8932a314e87e97b11dc492f7b54bd6cc4c,/skype/Dockerfile,"# see https://repo.skype.com

"
6140,126a5c8932a314e87e97b11dc492f7b54bd6cc4c,/skype/Dockerfile,"# wget is invoked by skypeforlinux for crash reports
"
6141,126a5c8932a314e87e97b11dc492f7b54bd6cc4c,/skype/Dockerfile,"# https://repo.skype.com/data/SKYPE-GPG-KEY
"
6142,126a5c8932a314e87e97b11dc492f7b54bd6cc4c,/skype/Dockerfile,"# pub   2048R/DF7587C3 2016-06-22 [expires: 2021-06-21]
#       Key fingerprint = D404 0146 BE39 7250 9FD5  7FC7 1F30 45A5 DF75 87C3
# uid                  Skype Linux Client Repository <se-um@microsoft.com>
# sub   2048R/A4EBB320 2016-06-22 [expires: 2021-06-21]
"
6143,13307b8cc5be215cd5b8b1b5e80be8249b81080b,/moosefs/Dockerfile,"# mfscli (and cgi) are Python-based
"
6144,13307b8cc5be215cd5b8b1b5e80be8249b81080b,/moosefs/Dockerfile,"# mfsmount needs ""fusermount""
"
6145,13307b8cc5be215cd5b8b1b5e80be8249b81080b,/moosefs/Dockerfile,"# allow running mfsmount as non-root
"
6146,13307b8cc5be215cd5b8b1b5e80be8249b81080b,/moosefs/Dockerfile,"#user_allow_other$/user_allow_other/' /etc/fuse.conf

"
6147,13307b8cc5be215cd5b8b1b5e80be8249b81080b,/moosefs/Dockerfile,"# https://github.com/moosefs/moosefs/releases
"
6148,13307b8cc5be215cd5b8b1b5e80be8249b81080b,/moosefs/Dockerfile,"# prep the default configuration so things generally work Out-of-the-Box
"
6149,13307b8cc5be215cd5b8b1b5e80be8249b81080b,/moosefs/Dockerfile,"# allow us to run as an arbitrary user but still modify configuration
"
6150,13307b8cc5be215cd5b8b1b5e80be8249b81080b,/moosefs/Dockerfile,"# prep a scratch space with appropriate permissions to be able to do quick prototyping Out-of-the-Box
"
6151,13307b8cc5be215cd5b8b1b5e80be8249b81080b,/moosefs/Dockerfile,"# without this, the Python-based mfscli ""-f"" flag refuses to use UTF-8 box-drawing characters
"
6152,564ae5120f13f8b011e5a106267d23d79695b02f,/vultr-cli/Dockerfile,"# https://github.com/vultr/vultr-cli/releases
"
6153,5d53bdf16fdd3b61c71e3240c8ed0523b996777f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6154,5d53bdf16fdd3b61c71e3240c8ed0523b996777f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6155,5d53bdf16fdd3b61c71e3240c8ed0523b996777f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6156,5d53bdf16fdd3b61c71e3240c8ed0523b996777f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6157,5d53bdf16fdd3b61c71e3240c8ed0523b996777f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6158,594d002fe0451e273b6bde774cb56365e305e70e,/github-pages/Dockerfile,"# https://pages.github.com/versions/
"
6159,99cb360a3bb2e208729a714d567c0013ff3552d8,/gmpydl/Dockerfile,"# https://pypi.org/project/gmusicapi/
"
6160,99cb360a3bb2e208729a714d567c0013ff3552d8,/gmpydl/Dockerfile,"# https://github.com/stevenewbs/gmpydl/commits/master
# https://github.com/stevenewbs/gmpydl/releases
"
6161,1cf46b50e4ffa46e968de9c4c7eaec0c843d67f0,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
6162,1cf46b50e4ffa46e968de9c4c7eaec0c843d67f0,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
6163,1cf46b50e4ffa46e968de9c4c7eaec0c843d67f0,/jenkins/Dockerfile,"# workaround ""apt-key adv --recv-keys"" hanging in stretch and above
"
6164,d23c96ecf116e2c72716eec4efb5cc663a902a2c,/ehour/Dockerfile,"# https://ehour.nl/download/downloadfile.php?get=ehour-latest-standalone-unix.sh
# https://ehour.nl/download/downloadfile.php?get=ehour-1.4.3-standalone-unix.sh
"
6165,d11dd1b935625c4834c4acc5ee83901062bf94c7,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
6166,d11dd1b935625c4834c4acc5ee83901062bf94c7,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
6167,d11dd1b935625c4834c4acc5ee83901062bf94c7,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
6168,d11dd1b935625c4834c4acc5ee83901062bf94c7,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
6169,d11dd1b935625c4834c4acc5ee83901062bf94c7,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
6170,991e715fd1ec26d6b3314aa38018c730d38508c3,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6171,4a704ddafdc175f11990a0f1acb1dd5aae9b198c,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
6172,4a704ddafdc175f11990a0f1acb1dd5aae9b198c,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
6173,4a704ddafdc175f11990a0f1acb1dd5aae9b198c,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
6174,cb0178c9a060b87904a436d0a82ca87c25558cfe,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6175,cb0178c9a060b87904a436d0a82ca87c25558cfe,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6176,cb0178c9a060b87904a436d0a82ca87c25558cfe,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6177,cb0178c9a060b87904a436d0a82ca87c25558cfe,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6178,cb0178c9a060b87904a436d0a82ca87c25558cfe,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6179,5725f76184b10bc1e8b461dc893432129852675d,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
6180,bab64b2783388a10aef2eba3574791f58635b962,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6181,bab64b2783388a10aef2eba3574791f58635b962,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6182,bab64b2783388a10aef2eba3574791f58635b962,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6183,bab64b2783388a10aef2eba3574791f58635b962,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6184,bab64b2783388a10aef2eba3574791f58635b962,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6185,b4faa1b18678b0655b236d87bf9b61f66617d1db,/sbuild/Dockerfile,"# run with ""--cap-add SYS_ADMIN"" so that sbuild can ""mount"" in the chroots it creates

"
6186,b4faa1b18678b0655b236d87bf9b61f66617d1db,/sbuild/Dockerfile,"# https://gist.github.com/tianon/a0080cbca558e4b907fe
# (useful sbuild-related scripts)
"
6187,b4faa1b18678b0655b236d87bf9b61f66617d1db,/sbuild/Dockerfile,"# usage: download-debuerreotype-tarball.sh suite [arch]
#    ie: download-debuerreotype-tarball.sh stretch
#        download-debuerreotype-tarball.sh sid i386
"
6188,5abdc4200c4317adeef4f09935fd73c5848a0dad,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6189,7d2c0ed3f348c98317a14fe2ef0b9e0b8b1c96f9,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6190,f6579df406fa81ecdcf158b4fc9e3e31cd9cef67,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
6191,f6579df406fa81ecdcf158b4fc9e3e31cd9cef67,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
6192,f6579df406fa81ecdcf158b4fc9e3e31cd9cef67,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
6193,f6579df406fa81ecdcf158b4fc9e3e31cd9cef67,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
6194,f6579df406fa81ecdcf158b4fc9e3e31cd9cef67,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
6195,fa4bfac997276fc31ce23a8b1c2d62ab507bbb06,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
6196,dd36567895230b2ed3da303aaaabcf289b3208e3,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
6197,dd36567895230b2ed3da303aaaabcf289b3208e3,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
"
6198,b32f332699ed7527daadf868e43eed3733316168,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6199,b32f332699ed7527daadf868e43eed3733316168,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6200,b32f332699ed7527daadf868e43eed3733316168,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6201,b32f332699ed7527daadf868e43eed3733316168,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6202,b32f332699ed7527daadf868e43eed3733316168,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6203,b81069ae5c37fe94962f82ae50bf004d760c396f,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6204,4a23d04f96aa0de3e9dcea31e4f9b82c9192886d,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6205,b09752397d170fa90d308e08b9cf387fff2c5523,/prometheus/Dockerfile,"# https://github.com/prometheus/prometheus/releases
"
6206,1fdee9302c8901a16601199614ff8cb5cf9b8825,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6207,1fdee9302c8901a16601199614ff8cb5cf9b8825,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6208,1fdee9302c8901a16601199614ff8cb5cf9b8825,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6209,1fdee9302c8901a16601199614ff8cb5cf9b8825,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6210,1fdee9302c8901a16601199614ff8cb5cf9b8825,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6211,6619904eb134c734d3b7f0b3b8433b883e3a4f32,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6212,6619904eb134c734d3b7f0b3b8433b883e3a4f32,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6213,6619904eb134c734d3b7f0b3b8433b883e3a4f32,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6214,6619904eb134c734d3b7f0b3b8433b883e3a4f32,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6215,6619904eb134c734d3b7f0b3b8433b883e3a4f32,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6216,4ac2c621acb7e822103632ee4a488c09023d644c,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6217,4ac2c621acb7e822103632ee4a488c09023d644c,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6218,4ac2c621acb7e822103632ee4a488c09023d644c,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6219,4ac2c621acb7e822103632ee4a488c09023d644c,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6220,4ac2c621acb7e822103632ee4a488c09023d644c,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6221,5ef0739094fdb8b187e986e95f4372111a14342e,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6222,d219b1af41fd8c21dc4c826f9bde992b55626f36,/moosefs/Dockerfile,"# mfscli (and cgi) are Python-based
"
6223,d219b1af41fd8c21dc4c826f9bde992b55626f36,/moosefs/Dockerfile,"# mfsmount needs ""fusermount""
"
6224,d219b1af41fd8c21dc4c826f9bde992b55626f36,/moosefs/Dockerfile,"# allow running mfsmount as non-root
"
6225,d219b1af41fd8c21dc4c826f9bde992b55626f36,/moosefs/Dockerfile,"#user_allow_other$/user_allow_other/' /etc/fuse.conf

"
6226,d219b1af41fd8c21dc4c826f9bde992b55626f36,/moosefs/Dockerfile,"# https://github.com/moosefs/moosefs/releases
"
6227,d219b1af41fd8c21dc4c826f9bde992b55626f36,/moosefs/Dockerfile,"# prep the default configuration so things generally work Out-of-the-Box
"
6228,d219b1af41fd8c21dc4c826f9bde992b55626f36,/moosefs/Dockerfile,"# allow us to run as an arbitrary user but still modify configuration
"
6229,d219b1af41fd8c21dc4c826f9bde992b55626f36,/moosefs/Dockerfile,"# prep a scratch space with appropriate permissions to be able to do quick prototyping Out-of-the-Box
"
6230,d219b1af41fd8c21dc4c826f9bde992b55626f36,/moosefs/Dockerfile,"# without this, the Python-based mfscli ""-f"" flag refuses to use UTF-8 box-drawing characters
"
6231,de5a284c574116b0ca899c93f50d307037ed755e,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
6232,de5a284c574116b0ca899c93f50d307037ed755e,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
6233,de5a284c574116b0ca899c93f50d307037ed755e,/jenkins/Dockerfile,"# workaround ""apt-key adv --recv-keys"" hanging in stretch and above
"
6234,1c96fba804c65c9ba9559fe3dffd91d83bc376a0,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6235,1c96fba804c65c9ba9559fe3dffd91d83bc376a0,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6236,1c96fba804c65c9ba9559fe3dffd91d83bc376a0,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6237,1c96fba804c65c9ba9559fe3dffd91d83bc376a0,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6238,1c96fba804c65c9ba9559fe3dffd91d83bc376a0,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6239,2d73ca022b8eca61f70bf15fb489cb87edaed870,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6240,2d73ca022b8eca61f70bf15fb489cb87edaed870,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6241,2d73ca022b8eca61f70bf15fb489cb87edaed870,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6242,2d73ca022b8eca61f70bf15fb489cb87edaed870,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6243,2d73ca022b8eca61f70bf15fb489cb87edaed870,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6244,1011bc890d51975889e23002378190d79dd05092,/skype/Dockerfile,"# see https://repo.skype.com

"
6245,1011bc890d51975889e23002378190d79dd05092,/skype/Dockerfile,"# https://repo.skype.com/data/SKYPE-GPG-KEY
"
6246,1011bc890d51975889e23002378190d79dd05092,/skype/Dockerfile,"# pub   2048R/DF7587C3 2016-06-22 [expires: 2021-06-21]
#       Key fingerprint = D404 0146 BE39 7250 9FD5  7FC7 1F30 45A5 DF75 87C3
# uid                  Skype Linux Client Repository <se-um@microsoft.com>
# sub   2048R/A4EBB320 2016-06-22 [expires: 2021-06-21]
"
6247,5ba81c50ce3eea2303b2f249f278f00789efa594,/github-pages/Dockerfile,"# https://pages.github.com/versions/
"
6248,419cb3229b081e530d91e7c025a3782621772b26,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
6249,419cb3229b081e530d91e7c025a3782621772b26,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
6250,419cb3229b081e530d91e7c025a3782621772b26,/jenkins/Dockerfile,"# workaround ""apt-key adv --recv-keys"" hanging in stretch and above
"
6251,c42418329661fb6cc280f4278f90bb47a55aca6b,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6252,c42418329661fb6cc280f4278f90bb47a55aca6b,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6253,c42418329661fb6cc280f4278f90bb47a55aca6b,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6254,c42418329661fb6cc280f4278f90bb47a55aca6b,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6255,c42418329661fb6cc280f4278f90bb47a55aca6b,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6256,efcfeb51674d19406b8f89496336decb2cf13b07,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6257,9acbd78c4f4f669332e96719056c34ee1c9be3ab,/debian/devel/Dockerfile,"# normal build deps
"
6258,9acbd78c4f4f669332e96719056c34ee1c9be3ab,/debian/devel/Dockerfile,"# need an editor for ""dch -i""
"
6259,9acbd78c4f4f669332e96719056c34ee1c9be3ab,/debian/devel/Dockerfile,"# a few extra little useful things
"
6260,9acbd78c4f4f669332e96719056c34ee1c9be3ab,/debian/devel/Dockerfile,"# need deb-src for compiling packages
"
6261,9acbd78c4f4f669332e96719056c34ee1c9be3ab,/debian/devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
6262,aadd653ef6bed40c2bb0d6c4aa6d5bf76a835892,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
6263,aadd653ef6bed40c2bb0d6c4aa6d5bf76a835892,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
6264,aadd653ef6bed40c2bb0d6c4aa6d5bf76a835892,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
6265,ed744df645272aa5d7e55d11a7f2da1245fe1b48,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6266,2f26bca1f8ce8677ee4dbbe82f173dfd47349d4a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6267,2f26bca1f8ce8677ee4dbbe82f173dfd47349d4a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6268,2f26bca1f8ce8677ee4dbbe82f173dfd47349d4a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6269,2f26bca1f8ce8677ee4dbbe82f173dfd47349d4a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6270,2f26bca1f8ce8677ee4dbbe82f173dfd47349d4a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6271,9ebc2d8feac9e211d481e5a81d22e2852351c0e8,/moosefs/Dockerfile,"# mfscli (and cgi) are Python-based
"
6272,9ebc2d8feac9e211d481e5a81d22e2852351c0e8,/moosefs/Dockerfile,"# mfsmount needs ""fusermount""
"
6273,9ebc2d8feac9e211d481e5a81d22e2852351c0e8,/moosefs/Dockerfile,"# allow running mfsmount as non-root
"
6274,9ebc2d8feac9e211d481e5a81d22e2852351c0e8,/moosefs/Dockerfile,"#user_allow_other$/user_allow_other/' /etc/fuse.conf

"
6275,9ebc2d8feac9e211d481e5a81d22e2852351c0e8,/moosefs/Dockerfile,"# https://github.com/moosefs/moosefs/releases
"
6276,9ebc2d8feac9e211d481e5a81d22e2852351c0e8,/moosefs/Dockerfile,"# prep the default configuration so things generally work Out-of-the-Box
"
6277,9ebc2d8feac9e211d481e5a81d22e2852351c0e8,/moosefs/Dockerfile,"# allow us to run as an arbitrary user but still modify configuration
"
6278,9ebc2d8feac9e211d481e5a81d22e2852351c0e8,/moosefs/Dockerfile,"# prep a scratch space with appropriate permissions to be able to do quick prototyping Out-of-the-Box
"
6279,9ebc2d8feac9e211d481e5a81d22e2852351c0e8,/moosefs/Dockerfile,"# without this, the Python-based mfscli ""-f"" flag refuses to use UTF-8 box-drawing characters
"
6280,24ce8518ff33dca4a4196539a4cc0044b78d9091,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6281,0ca59d4a4fc15e6752d9d258e45a69c3911416db,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6282,0ca59d4a4fc15e6752d9d258e45a69c3911416db,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6283,0ca59d4a4fc15e6752d9d258e45a69c3911416db,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6284,0ca59d4a4fc15e6752d9d258e45a69c3911416db,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6285,0ca59d4a4fc15e6752d9d258e45a69c3911416db,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6286,f9e1ef067753e0833bb1448f802fa62f73c81732,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6287,79472611978592fab5c9da4b25aea0b36b774804,/slack/Dockerfile,"# the .deb file linked at https://slack.com/downloads/instructions/debian includes ""/etc/cron.daily/slack"" which sets up an APT repo entry as in the following installation

# pub   rsa4096 2016-02-18 [SCEA]
#       DB08 5A08 CA13 B8AC B917  E0F6 D938 EC0D 0386 51BD
# uid           [ unknown] https://packagecloud.io/slacktechnologies/slack (https://packagecloud.io/docs#gpg_signing) <support@packagecloud.io>
# sub   rsa4096 2016-02-18 [SEA]
"
6288,79472611978592fab5c9da4b25aea0b36b774804,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libX11-xcb.so.1: cannot open shared object file: No such file or directory
"
6289,79472611978592fab5c9da4b25aea0b36b774804,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libasound.so.2: cannot open shared object file: No such file or directory
"
6290,d62085ef9d3615060f8eba94d4d3de99f904577e,/sbuild/Dockerfile,"# run with ""--cap-add SYS_ADMIN"" so that sbuild can ""mount"" in the chroots it creates

"
6291,d62085ef9d3615060f8eba94d4d3de99f904577e,/sbuild/Dockerfile,"# https://github.com/tianon/debian-bin
# useful debian-related (esp. sbuild) scripts
"
6292,d62085ef9d3615060f8eba94d4d3de99f904577e,/sbuild/Dockerfile,"# usage: download-debuerreotype-tarball.sh suite [arch]
#    ie: download-debuerreotype-tarball.sh stretch
#        download-debuerreotype-tarball.sh sid i386
"
6293,5e9f314c98dc9613228c4c178ebeef76376a34b4,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6294,457708d5019166d98353ac0790107b78a6f52ce1,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6295,613e2bc07c88e0e0b9f834cfb94c44eba9a702cb,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
6296,d1322e7278f12a22755eacffd21cc2a49ca79a46,/nginx/Dockerfile,"# prevent backgrounding (for Docker)\ndaemon off;' >> /etc/nginx/nginx.conf

"
6297,0afd0ce81d1a3c7331896299d6a5265739c4df5b,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6298,3ba083adcc3388902614fe60467240c7839b0ca1,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
6299,3ba083adcc3388902614fe60467240c7839b0ca1,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
6300,f7ef7446498a095b03a7680144ce4af304171d1d,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6301,f7ef7446498a095b03a7680144ce4af304171d1d,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6302,f7ef7446498a095b03a7680144ce4af304171d1d,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6303,f7ef7446498a095b03a7680144ce4af304171d1d,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6304,f7ef7446498a095b03a7680144ce4af304171d1d,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6305,03a8272a06f76fa23512ccb7083d45f0bd71aefb,/qemu/Dockerfile,"#		qemu-system \
#		qemu-utils \
"
6306,03a8272a06f76fa23512ccb7083d45f0bd71aefb,/qemu/Dockerfile,"# https://www.qemu.org/download/#source
"
6307,03a8272a06f76fa23512ccb7083d45f0bd71aefb,/qemu/Dockerfile,"# TODO verify signature
"
6308,03a8272a06f76fa23512ccb7083d45f0bd71aefb,/qemu/Dockerfile,"# system targets
# (https://sources.debian.org/src/qemu/stretch/debian/rules/#L57-L61, slimmed)
"
6309,03a8272a06f76fa23512ccb7083d45f0bd71aefb,/qemu/Dockerfile,"# user targets
# (https://sources.debian.org/src/qemu/stretch/debian/rules/#L81-L86, slimmed)
"
6310,03a8272a06f76fa23512ccb7083d45f0bd71aefb,/qemu/Dockerfile,"#		--enable-rbd \
#		--enable-vde \
"
6311,2c000404ff4a156dd605e7f181bf29ede4497e97,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6312,2c000404ff4a156dd605e7f181bf29ede4497e97,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6313,2c000404ff4a156dd605e7f181bf29ede4497e97,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6314,2c000404ff4a156dd605e7f181bf29ede4497e97,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6315,2c000404ff4a156dd605e7f181bf29ede4497e97,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6316,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/14.04/Dockerfile,"# much of this was gleaned from https://github.com/lxc/lxc/blob/lxc-0.8.0/templates/lxc-ubuntu.in

# we're going to want this bad boy installed so we can connect :)
"
6317,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/14.04/Dockerfile,"# undo some leet hax of the base image
"
6318,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/14.04/Dockerfile,"# generate a nice UTF-8 locale for our use
"
6319,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/14.04/Dockerfile,"# remove some pointless services
"
6320,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/14.04/Dockerfile,"# /lib/init/fstab: cleared out for bare-bones lxc' > /lib/init/fstab

# small fix for SSH in 13.10 (that's harmless everywhere else)
"
6321,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/14.04/Dockerfile,"# set a cheap, simple password for great convenience
"
6322,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/14.04/Dockerfile,"# we can has SSH
"
6323,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/14.04/Dockerfile,"# pepare for takeoff
"
6324,83a5100a9b45f22cc4cde2e84e55e84e2a20b122,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6325,83a5100a9b45f22cc4cde2e84e55e84e2a20b122,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6326,83a5100a9b45f22cc4cde2e84e55e84e2a20b122,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6327,83a5100a9b45f22cc4cde2e84e55e84e2a20b122,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6328,83a5100a9b45f22cc4cde2e84e55e84e2a20b122,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6329,f114da72c2fef9965301ca6fc8c0edbfdb7565db,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6330,f114da72c2fef9965301ca6fc8c0edbfdb7565db,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6331,f114da72c2fef9965301ca6fc8c0edbfdb7565db,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6332,f114da72c2fef9965301ca6fc8c0edbfdb7565db,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6333,f114da72c2fef9965301ca6fc8c0edbfdb7565db,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6334,7070c4ed21790c8cab1284668ebac0b9d12195a1,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6335,7070c4ed21790c8cab1284668ebac0b9d12195a1,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6336,7070c4ed21790c8cab1284668ebac0b9d12195a1,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6337,7070c4ed21790c8cab1284668ebac0b9d12195a1,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6338,7070c4ed21790c8cab1284668ebac0b9d12195a1,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6339,daf6eac3cd5c8a0f31b7b18f5889eba2f89a8d1c,/gmpydl/Dockerfile,"# https://pypi.org/project/gmusicapi/
"
6340,daf6eac3cd5c8a0f31b7b18f5889eba2f89a8d1c,/gmpydl/Dockerfile,"# https://github.com/stevenewbs/gmpydl/commits/master
# https://github.com/stevenewbs/gmpydl/releases
"
6341,a63e2edf4c374d357d6010920b6bdd85545d6bfe,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6342,a63e2edf4c374d357d6010920b6bdd85545d6bfe,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6343,a63e2edf4c374d357d6010920b6bdd85545d6bfe,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6344,a63e2edf4c374d357d6010920b6bdd85545d6bfe,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6345,a63e2edf4c374d357d6010920b6bdd85545d6bfe,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6346,ad001d447cded94b7095d86a54d1bacd7bfa01b4,/xen-orchestra/Dockerfile,"# see https://xen-orchestra.com/docs/from_the_sources.html

"
6347,ad001d447cded94b7095d86a54d1bacd7bfa01b4,/xen-orchestra/Dockerfile,"# https://github.com/nodejs/node-gyp/releases
"
6348,ad001d447cded94b7095d86a54d1bacd7bfa01b4,/xen-orchestra/Dockerfile,"# https://github.com/vatesfr/xen-orchestra/releases
"
6349,ad001d447cded94b7095d86a54d1bacd7bfa01b4,/xen-orchestra/Dockerfile,"#		-e ""s!#'/' = '/path/to/xo-web/dist/'!'/' = '../xo-web/dist/'!"" \
"
6350,ad001d447cded94b7095d86a54d1bacd7bfa01b4,/xen-orchestra/Dockerfile,"#uri = 'redis://.*'!uri = 'redis://redis:6379'!"" \
"
6351,ad001d447cded94b7095d86a54d1bacd7bfa01b4,/xen-orchestra/Dockerfile,"#' config.toml | grep '../xo-web/dist'; \
"
6352,dc2425bc640e3fc6c081e72346bcbbaf770eed3e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6353,dc2425bc640e3fc6c081e72346bcbbaf770eed3e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6354,dc2425bc640e3fc6c081e72346bcbbaf770eed3e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6355,dc2425bc640e3fc6c081e72346bcbbaf770eed3e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6356,dc2425bc640e3fc6c081e72346bcbbaf770eed3e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6357,9b80bf2e769ce3bc55bc12fcb070361cdfb510da,/debian/devel/Dockerfile,"# normal build deps
"
6358,9b80bf2e769ce3bc55bc12fcb070361cdfb510da,/debian/devel/Dockerfile,"# need deb-src for compiling packages
"
6359,9b80bf2e769ce3bc55bc12fcb070361cdfb510da,/debian/devel/Dockerfile,"# let's make apt list package versions, since those are handy during devel
"
6360,9b80bf2e769ce3bc55bc12fcb070361cdfb510da,/debian/devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
6361,9b80bf2e769ce3bc55bc12fcb070361cdfb510da,/debian/devel/Dockerfile,"# for ssh to debian hosts, let's make sure we know their fingerprints <3
"
6362,9b80bf2e769ce3bc55bc12fcb070361cdfb510da,/debian/devel/Dockerfile,"# make sure things are pretty
"
6363,9b80bf2e769ce3bc55bc12fcb070361cdfb510da,/debian/devel/Dockerfile,"#(force_color_prompt=yes)/\1/' ~/.bashrc

# quilt is much amaze: https://wiki.debian.org/UsingQuilt#Using_quilt_with_Debian_source_packages
"
6364,4eb57d6f2014bd5eb7fce2bc56e19ccccc36bf0c,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6365,4eb57d6f2014bd5eb7fce2bc56e19ccccc36bf0c,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6366,4eb57d6f2014bd5eb7fce2bc56e19ccccc36bf0c,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6367,4eb57d6f2014bd5eb7fce2bc56e19ccccc36bf0c,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6368,4eb57d6f2014bd5eb7fce2bc56e19ccccc36bf0c,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6369,02d99fe65b851d11f8a6393d8048b7f394a9520f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6370,02d99fe65b851d11f8a6393d8048b7f394a9520f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6371,02d99fe65b851d11f8a6393d8048b7f394a9520f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6372,02d99fe65b851d11f8a6393d8048b7f394a9520f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6373,02d99fe65b851d11f8a6393d8048b7f394a9520f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6374,c42418329661fb6cc280f4278f90bb47a55aca6b,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6375,a36d07cf0899b9e381eaed0b19449dd1dfa4366f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6376,a36d07cf0899b9e381eaed0b19449dd1dfa4366f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6377,a36d07cf0899b9e381eaed0b19449dd1dfa4366f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6378,a36d07cf0899b9e381eaed0b19449dd1dfa4366f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6379,a36d07cf0899b9e381eaed0b19449dd1dfa4366f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6380,24b957d5ace76d2b7bb23842cf31405ecc59ebd2,/certbot/Dockerfile,"# Executable not found: can't find the executable for the dialog-like program
"
6381,24b957d5ace76d2b7bb23842cf31405ecc59ebd2,/certbot/Dockerfile,"#VOLUME /etc/letsencrypt
"
6382,24b957d5ace76d2b7bb23842cf31405ecc59ebd2,/certbot/Dockerfile,"#VOLUME /var/log/letsencrypt

"
6383,2855c025e1158e96fd8d973a6b1cf85fb6f0452f,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6384,63d7d19b28f74e119f64260a6cb67df0d55a8d71,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6385,01b4fda7ce367930a68689b5bd5fa4f45a6f7a7d,/debian/ubuntu-devel/Dockerfile,"# let's make apt list package versions, since those are handy during devel
"
6386,01b4fda7ce367930a68689b5bd5fa4f45a6f7a7d,/debian/ubuntu-devel/Dockerfile,"# normal build deps
"
6387,01b4fda7ce367930a68689b5bd5fa4f45a6f7a7d,/debian/ubuntu-devel/Dockerfile,"# for some reason ""tzdata"" is prompting via debconf via Readline, which hangs
"
6388,01b4fda7ce367930a68689b5bd5fa4f45a6f7a7d,/debian/ubuntu-devel/Dockerfile,"# get dh-make-golang from Git since it's so rapidly changing
"
6389,01b4fda7ce367930a68689b5bd5fa4f45a6f7a7d,/debian/ubuntu-devel/Dockerfile,"# need deb-src for compiling packages
"
6390,01b4fda7ce367930a68689b5bd5fa4f45a6f7a7d,/debian/ubuntu-devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
6391,01b4fda7ce367930a68689b5bd5fa4f45a6f7a7d,/debian/ubuntu-devel/Dockerfile,"# for ssh to debian hosts, let's make sure we know their fingerprints <3
"
6392,01b4fda7ce367930a68689b5bd5fa4f45a6f7a7d,/debian/ubuntu-devel/Dockerfile,"# make sure things are pretty
"
6393,01b4fda7ce367930a68689b5bd5fa4f45a6f7a7d,/debian/ubuntu-devel/Dockerfile,"#(force_color_prompt=yes)/\1/' ~/.bashrc

# quilt is much amaze: https://wiki.debian.org/UsingQuilt#Using_quilt_with_Debian_source_packages
"
6394,01b4fda7ce367930a68689b5bd5fa4f45a6f7a7d,/debian/ubuntu-devel/Dockerfile,"# make sure pbuilder-dist uses a sane default mirror
"
6395,ac63b33bfe5da5cbcb00505ea474a3f9a2cf6f0f,/debian/devel/Dockerfile,"# let's make apt list package versions, since those are handy during devel
"
6396,ac63b33bfe5da5cbcb00505ea474a3f9a2cf6f0f,/debian/devel/Dockerfile,"# normal build deps
"
6397,ac63b33bfe5da5cbcb00505ea474a3f9a2cf6f0f,/debian/devel/Dockerfile,"# need deb-src for compiling packages
"
6398,ac63b33bfe5da5cbcb00505ea474a3f9a2cf6f0f,/debian/devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
6399,ac63b33bfe5da5cbcb00505ea474a3f9a2cf6f0f,/debian/devel/Dockerfile,"# for ssh to debian hosts, let's make sure we know their fingerprints <3
"
6400,ac63b33bfe5da5cbcb00505ea474a3f9a2cf6f0f,/debian/devel/Dockerfile,"# make sure things are pretty
"
6401,ac63b33bfe5da5cbcb00505ea474a3f9a2cf6f0f,/debian/devel/Dockerfile,"#(force_color_prompt=yes)/\1/' ~/.bashrc

# quilt is much amaze: https://wiki.debian.org/UsingQuilt#Using_quilt_with_Debian_source_packages
"
6402,ac63b33bfe5da5cbcb00505ea474a3f9a2cf6f0f,/debian/devel/Dockerfile,"# make sure pbuilder-dist uses a sane default mirror
"
6403,545a7dda246933112c4e9a0fdf07392b1dfdf482,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6404,452a6706dcad8040ad598533463df86b38a71178,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6405,452a6706dcad8040ad598533463df86b38a71178,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6406,452a6706dcad8040ad598533463df86b38a71178,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6407,452a6706dcad8040ad598533463df86b38a71178,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6408,452a6706dcad8040ad598533463df86b38a71178,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6409,427907dc3330195188c9b6995f096bb42810d139,/vultr-cli/Dockerfile,"# https://github.com/vultr/vultr-cli/releases
"
6410,84096e77d40dd5adddd7ae1c260a6d7410ab572c,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6411,84096e77d40dd5adddd7ae1c260a6d7410ab572c,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6412,84096e77d40dd5adddd7ae1c260a6d7410ab572c,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6413,84096e77d40dd5adddd7ae1c260a6d7410ab572c,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6414,84096e77d40dd5adddd7ae1c260a6d7410ab572c,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6415,58d526208c66ebc23e7e64169f7508bec96b031e,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
6416,58d526208c66ebc23e7e64169f7508bec96b031e,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
6417,58d526208c66ebc23e7e64169f7508bec96b031e,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
6418,58d526208c66ebc23e7e64169f7508bec96b031e,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
6419,58d526208c66ebc23e7e64169f7508bec96b031e,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
6420,f45a984d5a2621bf73968ffdc0e1a242fb5be1d2,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6421,f45a984d5a2621bf73968ffdc0e1a242fb5be1d2,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6422,f45a984d5a2621bf73968ffdc0e1a242fb5be1d2,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6423,f45a984d5a2621bf73968ffdc0e1a242fb5be1d2,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6424,f45a984d5a2621bf73968ffdc0e1a242fb5be1d2,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6425,d7cb60495ab60f9eea1f5b54ff21ebe577f599ca,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6426,d7cb60495ab60f9eea1f5b54ff21ebe577f599ca,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6427,d7cb60495ab60f9eea1f5b54ff21ebe577f599ca,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6428,d7cb60495ab60f9eea1f5b54ff21ebe577f599ca,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6429,d7cb60495ab60f9eea1f5b54ff21ebe577f599ca,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6430,af670abf164116ae10da0f0712dce67132ded08c,/diffoscope/Dockerfile,"# xxd (xxd not available in path. Falling back to Python hexlify.)
"
6431,af670abf164116ae10da0f0712dce67132ded08c,/diffoscope/Dockerfile,"# readelf ('readelf' not available in path. Falling back to binary comparison.)
"
6432,af670abf164116ae10da0f0712dce67132ded08c,/diffoscope/Dockerfile,"# for ""diffoscope --progress""
"
6433,db346082a1737771c8d52faa2ff7f55c71e2002c,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6434,db346082a1737771c8d52faa2ff7f55c71e2002c,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6435,db346082a1737771c8d52faa2ff7f55c71e2002c,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6436,db346082a1737771c8d52faa2ff7f55c71e2002c,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6437,db346082a1737771c8d52faa2ff7f55c71e2002c,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6438,8deeccf4f55ec7272edc03fab764469583e0f6c1,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
6439,8deeccf4f55ec7272edc03fab764469583e0f6c1,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
6440,8deeccf4f55ec7272edc03fab764469583e0f6c1,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
6441,8deeccf4f55ec7272edc03fab764469583e0f6c1,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
6442,8deeccf4f55ec7272edc03fab764469583e0f6c1,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
6443,c6f1320c42c5faa745eb4f139aa1e9564bdadc47,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6444,309fa94a94fdf1fa73b3159d18e2e8c086a14b27,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
6445,30bb127dd4ccd7865e537f6204df40a9af437cf6,/certbot/Dockerfile,"# Executable not found: can't find the executable for the dialog-like program
"
6446,30bb127dd4ccd7865e537f6204df40a9af437cf6,/certbot/Dockerfile,"#VOLUME /etc/letsencrypt
"
6447,30bb127dd4ccd7865e537f6204df40a9af437cf6,/certbot/Dockerfile,"#VOLUME /var/log/letsencrypt

"
6448,04eea46aff60c9c54b58cb8e1926ff4c42285a04,/debian/devel/Dockerfile,"# normal build deps
"
6449,04eea46aff60c9c54b58cb8e1926ff4c42285a04,/debian/devel/Dockerfile,"# need an editor for ""dch -i""
"
6450,04eea46aff60c9c54b58cb8e1926ff4c42285a04,/debian/devel/Dockerfile,"# a few extra little useful things
"
6451,04eea46aff60c9c54b58cb8e1926ff4c42285a04,/debian/devel/Dockerfile,"# need deb-src for compiling packages
"
6452,04eea46aff60c9c54b58cb8e1926ff4c42285a04,/debian/devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
6453,edc5fcd2e5512a9e8dc062cab2eb0622714e43a7,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6454,edc5fcd2e5512a9e8dc062cab2eb0622714e43a7,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6455,edc5fcd2e5512a9e8dc062cab2eb0622714e43a7,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6456,edc5fcd2e5512a9e8dc062cab2eb0622714e43a7,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6457,edc5fcd2e5512a9e8dc062cab2eb0622714e43a7,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6458,ab44499d8915c74329a1c44ed54f4bf8c3720e82,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6459,ab44499d8915c74329a1c44ed54f4bf8c3720e82,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6460,ab44499d8915c74329a1c44ed54f4bf8c3720e82,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6461,ab44499d8915c74329a1c44ed54f4bf8c3720e82,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6462,ab44499d8915c74329a1c44ed54f4bf8c3720e82,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6463,baf89e3d27cd633c593b85762c7640e11b179560,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6464,baf89e3d27cd633c593b85762c7640e11b179560,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6465,baf89e3d27cd633c593b85762c7640e11b179560,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6466,baf89e3d27cd633c593b85762c7640e11b179560,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6467,baf89e3d27cd633c593b85762c7640e11b179560,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6468,9e2e7adc3bb030b68883d8eebd0f110b7c94e6c1,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6469,9e2e7adc3bb030b68883d8eebd0f110b7c94e6c1,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6470,9e2e7adc3bb030b68883d8eebd0f110b7c94e6c1,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6471,9e2e7adc3bb030b68883d8eebd0f110b7c94e6c1,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6472,9e2e7adc3bb030b68883d8eebd0f110b7c94e6c1,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6473,42ef7fb249b813242de3f8727b2d37469c19edc8,/vultr-cli/Dockerfile,"# https://github.com/vultr/vultr-cli/releases
"
6474,b1f253c879c8a0a3e2d12621afd95338dd738fa8,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
6475,b1f253c879c8a0a3e2d12621afd95338dd738fa8,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
6476,b1f253c879c8a0a3e2d12621afd95338dd738fa8,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
6477,78a0d3bd7e4171bc6ce4c89820f1ce2004721e46,/ymlfmt/Dockerfile,"# https://pypi.org/project/ruamel.yaml/
"
6478,24fdfaf6b40ee45507365fe429845767f942a731,/exim4/Dockerfile,"# grab tini for signal processing and zombie killing
"
6479,24fdfaf6b40ee45507365fe429845767f942a731,/exim4/Dockerfile,"# https://blog.dhampir.no/content/exim4-line-length-in-debian-stretch-mail-delivery-failed-returning-message-to-sender
# https://serverfault.com/a/881197
# https://bugs.debian.org/828801
"
6480,5072bd76d8b74c0e430cff74c8ebbb01eefbc781,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6481,5072bd76d8b74c0e430cff74c8ebbb01eefbc781,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6482,5072bd76d8b74c0e430cff74c8ebbb01eefbc781,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6483,5072bd76d8b74c0e430cff74c8ebbb01eefbc781,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6484,5072bd76d8b74c0e430cff74c8ebbb01eefbc781,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6485,34b92ffae172dcfad64fce5a203c8386faea92f0,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
6486,34b92ffae172dcfad64fce5a203c8386faea92f0,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
6487,aab9c36959706989b268bb0a2f1edaa91dff08b8,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6488,aab9c36959706989b268bb0a2f1edaa91dff08b8,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6489,aab9c36959706989b268bb0a2f1edaa91dff08b8,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6490,aab9c36959706989b268bb0a2f1edaa91dff08b8,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6491,aab9c36959706989b268bb0a2f1edaa91dff08b8,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6492,8d232535bd0923422beb8b98604a274d5f8f72ce,/phpmyadmin/Dockerfile,"# https://www.phpmyadmin.net/downloads/
"
6493,8d232535bd0923422beb8b98604a274d5f8f72ce,/phpmyadmin/Dockerfile,"# https://docs.phpmyadmin.net/en/latest/setup.html#verifying-phpmyadmin-releases
"
6494,8d232535bd0923422beb8b98604a274d5f8f72ce,/phpmyadmin/Dockerfile,"# Since July 2015 all phpMyAdmin releases are cryptographically signed by the releasing developer, who through January 2016 was Marc Delisle.
"
6495,8d232535bd0923422beb8b98604a274d5f8f72ce,/phpmyadmin/Dockerfile,"# Beginning in January 2016, the release manager is Isaac Bennetch.
"
6496,8d232535bd0923422beb8b98604a274d5f8f72ce,/phpmyadmin/Dockerfile,"# Some additional downloads (for example themes) might be signed by Michal Čihař.
"
6497,48f3f9a3a5961548c8cda7272b93387d6f9e5332,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
6498,48f3f9a3a5961548c8cda7272b93387d6f9e5332,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
6499,48f3f9a3a5961548c8cda7272b93387d6f9e5332,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
6500,48f3f9a3a5961548c8cda7272b93387d6f9e5332,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
6501,48f3f9a3a5961548c8cda7272b93387d6f9e5332,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
6502,344e887fd79840b920b857f7f9b9dcc098c758cf,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6503,344e887fd79840b920b857f7f9b9dcc098c758cf,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6504,344e887fd79840b920b857f7f9b9dcc098c758cf,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6505,344e887fd79840b920b857f7f9b9dcc098c758cf,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6506,344e887fd79840b920b857f7f9b9dcc098c758cf,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6507,0ef6f5be8438d0788278fedfc3383eba0767a574,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6508,0ef6f5be8438d0788278fedfc3383eba0767a574,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6509,0ef6f5be8438d0788278fedfc3383eba0767a574,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6510,0ef6f5be8438d0788278fedfc3383eba0767a574,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6511,0ef6f5be8438d0788278fedfc3383eba0767a574,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6512,b09752397d170fa90d308e08b9cf387fff2c5523,/ymlfmt/Dockerfile,"# https://pypi.org/project/ruamel.yaml/
"
6513,870730a2f53f72bccc4b16a98907ef8070f888e3,/docker/master/dind/Dockerfile,"# https://github.com/docker/docker/blob/master/project/PACKAGERS.md#runtime-dependencies
"
6514,870730a2f53f72bccc4b16a98907ef8070f888e3,/docker/master/dind/Dockerfile,"# TODO aufs-tools

"
6515,83a4e8dfc8f2cd610a20da2a9191d24f4534310f,/syncthing/Dockerfile,"# gpg: key BCE524C7: public key ""Jakob Borg (calmh) <jakob@nym.se>"" imported
"
6516,5fec4eb06440d21fad0641e1d544457da823cfd9,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6517,5fec4eb06440d21fad0641e1d544457da823cfd9,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6518,5fec4eb06440d21fad0641e1d544457da823cfd9,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6519,5fec4eb06440d21fad0641e1d544457da823cfd9,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6520,5fec4eb06440d21fad0641e1d544457da823cfd9,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6521,b81069ae5c37fe94962f82ae50bf004d760c396f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6522,b81069ae5c37fe94962f82ae50bf004d760c396f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6523,b81069ae5c37fe94962f82ae50bf004d760c396f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6524,b81069ae5c37fe94962f82ae50bf004d760c396f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6525,b81069ae5c37fe94962f82ae50bf004d760c396f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6526,af8839282d3364de82f6a7fc1ed17526216b0cff,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6527,af8839282d3364de82f6a7fc1ed17526216b0cff,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6528,af8839282d3364de82f6a7fc1ed17526216b0cff,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6529,af8839282d3364de82f6a7fc1ed17526216b0cff,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6530,af8839282d3364de82f6a7fc1ed17526216b0cff,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6531,952f3431f910f7eac2b7d398aba3634174c25a62,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6532,952f3431f910f7eac2b7d398aba3634174c25a62,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6533,952f3431f910f7eac2b7d398aba3634174c25a62,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6534,952f3431f910f7eac2b7d398aba3634174c25a62,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6535,952f3431f910f7eac2b7d398aba3634174c25a62,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6536,16a206d40a80ccc737b3088f570f327a66f963c4,/makemkv/Dockerfile,"# http://www.makemkv.com/forum2/viewtopic.php?f=3&t=224
"
6537,16a206d40a80ccc737b3088f570f327a66f963c4,/makemkv/Dockerfile,"# beta code: http://www.makemkv.com/forum2/viewtopic.php?f=5&t=1053
"
6538,a17ee588759f9e4b1f8d5ae3738bdc4e727c034f,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6539,ae289e48e76e24482f2976f2cac116f2a3ab14e5,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6540,ae289e48e76e24482f2976f2cac116f2a3ab14e5,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6541,ae289e48e76e24482f2976f2cac116f2a3ab14e5,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6542,ae289e48e76e24482f2976f2cac116f2a3ab14e5,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6543,ae289e48e76e24482f2976f2cac116f2a3ab14e5,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6544,f776d3ee1a1642b8fc7cdda3335e29d0bc45a94c,/skype/Dockerfile,"# see https://repo.skype.com

"
6545,f776d3ee1a1642b8fc7cdda3335e29d0bc45a94c,/skype/Dockerfile,"# wget is invoked by skypeforlinux for crash reports
"
6546,f776d3ee1a1642b8fc7cdda3335e29d0bc45a94c,/skype/Dockerfile,"# https://repo.skype.com/data/SKYPE-GPG-KEY
"
6547,f776d3ee1a1642b8fc7cdda3335e29d0bc45a94c,/skype/Dockerfile,"# pub   2048R/DF7587C3 2016-06-22 [expires: 2021-06-21]
#       Key fingerprint = D404 0146 BE39 7250 9FD5  7FC7 1F30 45A5 DF75 87C3
# uid                  Skype Linux Client Repository <se-um@microsoft.com>
# sub   2048R/A4EBB320 2016-06-22 [expires: 2021-06-21]
"
6548,12411baa44a0ae2f0aa0e0a909333f85f417672f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6549,12411baa44a0ae2f0aa0e0a909333f85f417672f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6550,12411baa44a0ae2f0aa0e0a909333f85f417672f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6551,12411baa44a0ae2f0aa0e0a909333f85f417672f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6552,12411baa44a0ae2f0aa0e0a909333f85f417672f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6553,58fe414db3ce38355fe641941ed2f2c557584fb4,/exim4/Dockerfile,"# grab tini for signal processing and zombie killing
"
6554,58fe414db3ce38355fe641941ed2f2c557584fb4,/exim4/Dockerfile,"# https://blog.dhampir.no/content/exim4-line-length-in-debian-stretch-mail-delivery-failed-returning-message-to-sender
# https://serverfault.com/a/881197
# https://bugs.debian.org/828801
"
6555,802fae90e6457d81bc19f7582446d86792273e7e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6556,802fae90e6457d81bc19f7582446d86792273e7e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6557,802fae90e6457d81bc19f7582446d86792273e7e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6558,802fae90e6457d81bc19f7582446d86792273e7e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6559,802fae90e6457d81bc19f7582446d86792273e7e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6560,7a74519e3243ecfba7e50f06f0e6a2dcf1f2655f,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
6561,7a74519e3243ecfba7e50f06f0e6a2dcf1f2655f,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
6562,7a74519e3243ecfba7e50f06f0e6a2dcf1f2655f,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
6563,ce8e1f6ce5266b3044a876b473e97e6377b10bef,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6564,ce8e1f6ce5266b3044a876b473e97e6377b10bef,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6565,ce8e1f6ce5266b3044a876b473e97e6377b10bef,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6566,ce8e1f6ce5266b3044a876b473e97e6377b10bef,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6567,ce8e1f6ce5266b3044a876b473e97e6377b10bef,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6568,d972ce15dfdccb763fccf6896fc0269662eb952f,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6569,afa0e0f4de0661da78620f2d9d201a4431c096e1,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6570,e3872662187caddf9bf72536532a2e197df12b51,/makemkv/Dockerfile,"# TODO find some way to include ccextractor (currently buster-only)

# FPL_MainFeature detection only seemed to work with OpenJDK 9 (8 was insufficient)
"
6571,e3872662187caddf9bf72536532a2e197df12b51,/makemkv/Dockerfile,"# This disc requires Java runtime (JRE), but none was found. Certain functions will fail, please install Java. See http://www.makemkv.com/bdjava/ for details.
"
6572,e3872662187caddf9bf72536532a2e197df12b51,/makemkv/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
6573,e3872662187caddf9bf72536532a2e197df12b51,/makemkv/Dockerfile,"# http://www.makemkv.com/forum2/viewtopic.php?f=3&t=224
"
6574,e3872662187caddf9bf72536532a2e197df12b51,/makemkv/Dockerfile,"# beta code: http://www.makemkv.com/forum2/viewtopic.php?f=5&t=1053
"
6575,e3872662187caddf9bf72536532a2e197df12b51,/makemkv/Dockerfile,"# pub   dsa2048 2017-05-26 [SC]
#       2ECF 2330 5F1F C0B3 2001  6733 94E3 083A 1804 2697
# uid           [ unknown] MakeMKV (signature) <support@makemkv.com>
"
6576,e0704457007309c8a1684ea0906367b4bcb7ad6f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6577,e0704457007309c8a1684ea0906367b4bcb7ad6f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6578,e0704457007309c8a1684ea0906367b4bcb7ad6f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6579,e0704457007309c8a1684ea0906367b4bcb7ad6f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6580,e0704457007309c8a1684ea0906367b4bcb7ad6f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6581,d17b242c3198b6be8174beaf33fb5a1a865960dd,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6582,ab9f49e4731ab2c00e86f73e955389dc736f0970,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6583,22ecdf9c9e19529f7796fc5872f99f370fd11092,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6584,22ecdf9c9e19529f7796fc5872f99f370fd11092,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6585,22ecdf9c9e19529f7796fc5872f99f370fd11092,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6586,22ecdf9c9e19529f7796fc5872f99f370fd11092,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6587,22ecdf9c9e19529f7796fc5872f99f370fd11092,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6588,b95a86fc8274cee0eb03192c6591f53ca86e20db,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6589,71c380557e0aa5c3ac14c8b6523ba6301d71e963,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6590,71c380557e0aa5c3ac14c8b6523ba6301d71e963,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6591,71c380557e0aa5c3ac14c8b6523ba6301d71e963,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6592,71c380557e0aa5c3ac14c8b6523ba6301d71e963,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6593,71c380557e0aa5c3ac14c8b6523ba6301d71e963,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6594,42485a6aa684db6fd0ef9ebe8c80d85fac435c6e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6595,42485a6aa684db6fd0ef9ebe8c80d85fac435c6e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6596,42485a6aa684db6fd0ef9ebe8c80d85fac435c6e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6597,42485a6aa684db6fd0ef9ebe8c80d85fac435c6e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6598,42485a6aa684db6fd0ef9ebe8c80d85fac435c6e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6599,ba3540870fbfa8f36263e4ae497ab250c61953cb,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6600,ba3540870fbfa8f36263e4ae497ab250c61953cb,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6601,ba3540870fbfa8f36263e4ae497ab250c61953cb,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6602,ba3540870fbfa8f36263e4ae497ab250c61953cb,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6603,ba3540870fbfa8f36263e4ae497ab250c61953cb,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6604,5261523130ed903d812693fe68cd2aa623e3a49a,/diffoscope/Dockerfile,"# xxd (xxd not available in path. Falling back to Python hexlify.)
"
6605,5261523130ed903d812693fe68cd2aa623e3a49a,/diffoscope/Dockerfile,"# readelf ('readelf' not available in path. Falling back to binary comparison.)
"
6606,2a6981d496b0420d976fb5c182b58d0975862b7a,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6607,b63789818ddcd494d1d845f9cfd225c34c0159dd,/jenkins/weekly/Dockerfile,"# grab gosu for easy step-down from root
"
6608,b63789818ddcd494d1d845f9cfd225c34c0159dd,/jenkins/weekly/Dockerfile,"# grab tini for signal processing and zombie killing
"
6609,b63789818ddcd494d1d845f9cfd225c34c0159dd,/jenkins/weekly/Dockerfile,"# https://groups.google.com/d/msg/jenkins-infra/c7m_72vUTXE/37zw9GXhAQAJ
"
6610,b63789818ddcd494d1d845f9cfd225c34c0159dd,/jenkins/weekly/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
6611,9e81dfefef25592dfa1c486ab82148a1d6037aab,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6612,9e81dfefef25592dfa1c486ab82148a1d6037aab,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6613,9e81dfefef25592dfa1c486ab82148a1d6037aab,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6614,9e81dfefef25592dfa1c486ab82148a1d6037aab,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6615,9e81dfefef25592dfa1c486ab82148a1d6037aab,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6616,4f36b6b08f2a622dd38f7250a12cd7d400b4a051,/jenkins/Dockerfile,"#RUN groupadd user && useradd --create-home --home-dir /home/user -g user user

"
6617,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/Dockerfile.template,"# much of this was gleaned from https://github.com/lxc/lxc/blob/lxc-0.8.0/templates/lxc-ubuntu.in

# we're going to want this bad boy installed so we can connect :)
"
6618,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/Dockerfile.template,"# undo some leet hax of the base image
"
6619,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/Dockerfile.template,"# generate a nice UTF-8 locale for our use
"
6620,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/Dockerfile.template,"# remove some pointless services
"
6621,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/Dockerfile.template,"# /lib/init/fstab: cleared out for bare-bones lxc' > /lib/init/fstab

# small fix for SSH in 13.10 (that's harmless everywhere else)
"
6622,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/Dockerfile.template,"# set a cheap, simple password for great convenience
"
6623,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/Dockerfile.template,"# we can has SSH
"
6624,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/Dockerfile.template,"# pepare for takeoff
"
6625,2623d23d6ee282239796d9a632b2f6f5e567a0a8,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6626,2623d23d6ee282239796d9a632b2f6f5e567a0a8,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6627,2623d23d6ee282239796d9a632b2f6f5e567a0a8,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6628,2623d23d6ee282239796d9a632b2f6f5e567a0a8,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6629,2623d23d6ee282239796d9a632b2f6f5e567a0a8,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6630,9c2af355db170417d896572355cf0ab5a7408335,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6631,9c2af355db170417d896572355cf0ab5a7408335,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6632,9c2af355db170417d896572355cf0ab5a7408335,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6633,9c2af355db170417d896572355cf0ab5a7408335,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6634,9c2af355db170417d896572355cf0ab5a7408335,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6635,fc87bade551fcc37c5c536a34af8eea25e5880cc,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6636,fc87bade551fcc37c5c536a34af8eea25e5880cc,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6637,fc87bade551fcc37c5c536a34af8eea25e5880cc,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6638,fc87bade551fcc37c5c536a34af8eea25e5880cc,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6639,fc87bade551fcc37c5c536a34af8eea25e5880cc,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6640,ebc211fa8208807e942826b8e89214445bfe79b5,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6641,ebc211fa8208807e942826b8e89214445bfe79b5,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6642,ebc211fa8208807e942826b8e89214445bfe79b5,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6643,ebc211fa8208807e942826b8e89214445bfe79b5,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6644,ebc211fa8208807e942826b8e89214445bfe79b5,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6645,e435b192e3ba964601581168ab1c27945712cc8b,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6646,e435b192e3ba964601581168ab1c27945712cc8b,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6647,e435b192e3ba964601581168ab1c27945712cc8b,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6648,e435b192e3ba964601581168ab1c27945712cc8b,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6649,e435b192e3ba964601581168ab1c27945712cc8b,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6650,56a0d5d7759e6af44c0d3579f18ea1ab1c5c1eab,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6651,56a0d5d7759e6af44c0d3579f18ea1ab1c5c1eab,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6652,56a0d5d7759e6af44c0d3579f18ea1ab1c5c1eab,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6653,56a0d5d7759e6af44c0d3579f18ea1ab1c5c1eab,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6654,56a0d5d7759e6af44c0d3579f18ea1ab1c5c1eab,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6655,b3ec7b06a7cc501e975eb8ceaced2c7e45c59175,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6656,505dbe9c1047f8716560045e97f909442629123b,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6657,505dbe9c1047f8716560045e97f909442629123b,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6658,505dbe9c1047f8716560045e97f909442629123b,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6659,505dbe9c1047f8716560045e97f909442629123b,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6660,505dbe9c1047f8716560045e97f909442629123b,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6661,1de0cdc7f5402384d2f4bbdacd3fc234de2ef9b5,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6662,63c70d0871f93ec8604cf71c9f1524f650b0cf49,/diffoscope/Dockerfile,"# xxd (xxd not available in path. Falling back to Python hexlify.)
"
6663,63c70d0871f93ec8604cf71c9f1524f650b0cf49,/diffoscope/Dockerfile,"# readelf ('readelf' not available in path. Falling back to binary comparison.)
"
6664,63c70d0871f93ec8604cf71c9f1524f650b0cf49,/diffoscope/Dockerfile,"# for ""diffoscope --progress""
"
6665,2b139005df57c03e6a7f891deff824030538378e,/moosefs/Dockerfile,"# mfscli (and cgi) are Python-based
"
6666,2b139005df57c03e6a7f891deff824030538378e,/moosefs/Dockerfile,"# mfsmount needs ""fusermount""
"
6667,2b139005df57c03e6a7f891deff824030538378e,/moosefs/Dockerfile,"# allow running mfsmount as non-root
"
6668,2b139005df57c03e6a7f891deff824030538378e,/moosefs/Dockerfile,"#user_allow_other$/user_allow_other/' /etc/fuse.conf

"
6669,2b139005df57c03e6a7f891deff824030538378e,/moosefs/Dockerfile,"# https://github.com/moosefs/moosefs/releases
"
6670,2b139005df57c03e6a7f891deff824030538378e,/moosefs/Dockerfile,"# prep the default configuration so things generally work Out-of-the-Box
"
6671,2b139005df57c03e6a7f891deff824030538378e,/moosefs/Dockerfile,"# allow us to run as an arbitrary user but still modify configuration
"
6672,2b139005df57c03e6a7f891deff824030538378e,/moosefs/Dockerfile,"# prep a scratch space with appropriate permissions to be able to do quick prototyping Out-of-the-Box
"
6673,2b139005df57c03e6a7f891deff824030538378e,/moosefs/Dockerfile,"# without this, the Python-based mfscli ""-f"" flag refuses to use UTF-8 box-drawing characters
"
6674,c5a8707b4263ccb5a623a09e4b9da425f627b5a2,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6675,c5a8707b4263ccb5a623a09e4b9da425f627b5a2,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6676,c5a8707b4263ccb5a623a09e4b9da425f627b5a2,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6677,c5a8707b4263ccb5a623a09e4b9da425f627b5a2,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6678,c5a8707b4263ccb5a623a09e4b9da425f627b5a2,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6679,cf4c6c1ec420212e5378b877516aeddee0bb078f,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6680,d3ec404ff094fc80bf2159dc6717b1745eb8a0e8,/debian/devel/Dockerfile,"# let's make apt list package versions, since those are handy during devel
"
6681,d3ec404ff094fc80bf2159dc6717b1745eb8a0e8,/debian/devel/Dockerfile,"# normal build deps
"
6682,d3ec404ff094fc80bf2159dc6717b1745eb8a0e8,/debian/devel/Dockerfile,"# get dh-make-golang from Git since it's so rapidly changing
"
6683,d3ec404ff094fc80bf2159dc6717b1745eb8a0e8,/debian/devel/Dockerfile,"# need deb-src for compiling packages
"
6684,d3ec404ff094fc80bf2159dc6717b1745eb8a0e8,/debian/devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
6685,d3ec404ff094fc80bf2159dc6717b1745eb8a0e8,/debian/devel/Dockerfile,"# for ssh to debian hosts, let's make sure we know their fingerprints <3
"
6686,d3ec404ff094fc80bf2159dc6717b1745eb8a0e8,/debian/devel/Dockerfile,"# make sure things are pretty
"
6687,d3ec404ff094fc80bf2159dc6717b1745eb8a0e8,/debian/devel/Dockerfile,"#(force_color_prompt=yes)/\1/' ~/.bashrc

# quilt is much amaze: https://wiki.debian.org/UsingQuilt#Using_quilt_with_Debian_source_packages
"
6688,d3ec404ff094fc80bf2159dc6717b1745eb8a0e8,/debian/devel/Dockerfile,"# make sure pbuilder-dist uses a sane default mirror
"
6689,36a3b7b3d7aaf28d573191dc2cad889a0a9518e8,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6690,36a3b7b3d7aaf28d573191dc2cad889a0a9518e8,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6691,36a3b7b3d7aaf28d573191dc2cad889a0a9518e8,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6692,36a3b7b3d7aaf28d573191dc2cad889a0a9518e8,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6693,36a3b7b3d7aaf28d573191dc2cad889a0a9518e8,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6694,cae04cf800de7599d8aacc64bf7a775c26440e1a,/makemkv/Dockerfile,"# This disc requires Java runtime (JRE), but none was found. Certain functions will fail, please install Java. See http://www.makemkv.com/bdjava/ for details.
"
6695,cae04cf800de7599d8aacc64bf7a775c26440e1a,/makemkv/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
6696,cae04cf800de7599d8aacc64bf7a775c26440e1a,/makemkv/Dockerfile,"# FPL_MainFeature detection only seemed to work with OpenJDK 9 (8 was insufficient)
"
6697,cae04cf800de7599d8aacc64bf7a775c26440e1a,/makemkv/Dockerfile,"# Unable to execute external program 'ccextractor' as its path is not set in preferences
# Failed to execute external program 'ccextractor' from location '/usr/local/bin/mmccextr'
# (but it doesn't exist in the perferences dialog...)
"
6698,cae04cf800de7599d8aacc64bf7a775c26440e1a,/makemkv/Dockerfile,"# http://www.makemkv.com/forum2/viewtopic.php?f=3&t=224
"
6699,cae04cf800de7599d8aacc64bf7a775c26440e1a,/makemkv/Dockerfile,"# beta code: http://www.makemkv.com/forum2/viewtopic.php?f=5&t=1053
"
6700,cae04cf800de7599d8aacc64bf7a775c26440e1a,/makemkv/Dockerfile,"# pub   dsa2048 2017-05-26 [SC]
#       2ECF 2330 5F1F C0B3 2001  6733 94E3 083A 1804 2697
# uid           [ unknown] MakeMKV (signature) <support@makemkv.com>
"
6701,dcb548158911cadfd58c84a0235f05f22e557510,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6702,dcb548158911cadfd58c84a0235f05f22e557510,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6703,dcb548158911cadfd58c84a0235f05f22e557510,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6704,dcb548158911cadfd58c84a0235f05f22e557510,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6705,dcb548158911cadfd58c84a0235f05f22e557510,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6706,b09752397d170fa90d308e08b9cf387fff2c5523,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6707,b09752397d170fa90d308e08b9cf387fff2c5523,/docker-master/Dockerfile,"# (no SHA file artifacts on download.docker.com yet as of 2017-06-07)

"
6708,b09752397d170fa90d308e08b9cf387fff2c5523,/docker-master/Dockerfile,"# https://github.com/docker-library/docker/pull/166
#   dockerd-entrypoint.sh uses DOCKER_TLS_CERTDIR for auto-generating TLS certificates
#   docker-entrypoint.sh uses DOCKER_TLS_CERTDIR for auto-setting DOCKER_TLS_VERIFY and DOCKER_CERT_PATH
# (For this to work, at least the ""client"" subdirectory of this path needs to be shared between the client and server containers via a volume, ""docker cp"", or other means of data sharing.)
"
6709,b09752397d170fa90d308e08b9cf387fff2c5523,/docker-master/Dockerfile,"# also, ensure the directory pre-exists and has wide enough permissions for ""dockerd-entrypoint.sh"" to create subdirectories, even when run in ""rootless"" mode
"
6710,b09752397d170fa90d308e08b9cf387fff2c5523,/docker-master/Dockerfile,"# (doing both /certs and /certs/client so that if Docker does a ""copy-up"" into a volume defined on /certs/client, it will ""do the right thing"" by default in a way that still works for rootless users)

"
6711,0343e6676b9a4a9d3d1aaa0cee52f87a1a389678,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6712,0343e6676b9a4a9d3d1aaa0cee52f87a1a389678,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6713,0343e6676b9a4a9d3d1aaa0cee52f87a1a389678,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6714,0343e6676b9a4a9d3d1aaa0cee52f87a1a389678,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6715,0343e6676b9a4a9d3d1aaa0cee52f87a1a389678,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6716,3cf2725c67d088f5ad9adbbd456caccfbbcda788,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6717,3cf2725c67d088f5ad9adbbd456caccfbbcda788,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6718,3cf2725c67d088f5ad9adbbd456caccfbbcda788,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6719,3cf2725c67d088f5ad9adbbd456caccfbbcda788,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6720,3cf2725c67d088f5ad9adbbd456caccfbbcda788,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6721,9280fda90d1b0c128ff3b55dcd6a9da8121fb1e5,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
6722,735d75f9f2383a2b09f133dd9e00551a51b48811,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6723,babbe8e59860265db6cc27b93c10422aeac9e8ef,/makemkv/Dockerfile,"# This disc requires Java runtime (JRE), but none was found. Certain functions will fail, please install Java. See http://www.makemkv.com/bdjava/ for details.
"
6724,babbe8e59860265db6cc27b93c10422aeac9e8ef,/makemkv/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
6725,babbe8e59860265db6cc27b93c10422aeac9e8ef,/makemkv/Dockerfile,"# FPL_MainFeature detection only seemed to work with OpenJDK 9 (8 was insufficient)
"
6726,babbe8e59860265db6cc27b93c10422aeac9e8ef,/makemkv/Dockerfile,"# Unable to execute external program 'ccextractor' as its path is not set in preferences
# Failed to execute external program 'ccextractor' from location '/usr/local/bin/mmccextr'
# (but it doesn't exist in the perferences dialog...)
"
6727,babbe8e59860265db6cc27b93c10422aeac9e8ef,/makemkv/Dockerfile,"# http://www.makemkv.com/forum2/viewtopic.php?f=3&t=224
"
6728,babbe8e59860265db6cc27b93c10422aeac9e8ef,/makemkv/Dockerfile,"# beta code: http://www.makemkv.com/forum2/viewtopic.php?f=5&t=1053
"
6729,babbe8e59860265db6cc27b93c10422aeac9e8ef,/makemkv/Dockerfile,"# pub   dsa2048 2017-05-26 [SC]
#       2ECF 2330 5F1F C0B3 2001  6733 94E3 083A 1804 2697
# uid           [ unknown] MakeMKV (signature) <support@makemkv.com>
"
6730,0feb5200ad32ffd51eb4e1e8592d08948f0812af,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6731,0feb5200ad32ffd51eb4e1e8592d08948f0812af,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6732,0feb5200ad32ffd51eb4e1e8592d08948f0812af,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6733,0feb5200ad32ffd51eb4e1e8592d08948f0812af,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6734,0feb5200ad32ffd51eb4e1e8592d08948f0812af,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6735,5494cafb185cc0bdc8739c6302b9083afcab052e,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6736,2d7a3feffce13c90fa5f44bde62ae10ae5f49227,/gmpydl/Dockerfile,"# https://pypi.org/project/gmusicapi/
"
6737,2d7a3feffce13c90fa5f44bde62ae10ae5f49227,/gmpydl/Dockerfile,"# https://github.com/stevenewbs/gmpydl/commits/master
# https://github.com/stevenewbs/gmpydl/releases
"
6738,5abdc4200c4317adeef4f09935fd73c5848a0dad,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6739,5abdc4200c4317adeef4f09935fd73c5848a0dad,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6740,5abdc4200c4317adeef4f09935fd73c5848a0dad,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6741,5abdc4200c4317adeef4f09935fd73c5848a0dad,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6742,5abdc4200c4317adeef4f09935fd73c5848a0dad,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6743,7be55256195ce693f35691a89e3ceec25a59aa8c,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
6744,7be55256195ce693f35691a89e3ceec25a59aa8c,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
6745,7be55256195ce693f35691a89e3ceec25a59aa8c,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
6746,234292612eb51175b34cb6b4033783d2393cbc4d,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6747,234292612eb51175b34cb6b4033783d2393cbc4d,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6748,234292612eb51175b34cb6b4033783d2393cbc4d,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6749,234292612eb51175b34cb6b4033783d2393cbc4d,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6750,234292612eb51175b34cb6b4033783d2393cbc4d,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6751,912dd59359af49548c58260eb2d85e85603b66b3,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6752,912dd59359af49548c58260eb2d85e85603b66b3,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6753,912dd59359af49548c58260eb2d85e85603b66b3,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6754,912dd59359af49548c58260eb2d85e85603b66b3,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6755,912dd59359af49548c58260eb2d85e85603b66b3,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6756,c621e1ce3500963ce2b1937b3a74db2bcf4ebdfb,/bash/4.3/Dockerfile,"# gpg: key 64EA74AB: public key ""Chet Ramey <chet@cwru.edu>"" imported
"
6757,c621e1ce3500963ce2b1937b3a74db2bcf4ebdfb,/bash/4.3/Dockerfile,"# https://ftp.gnu.org/gnu/bash/?C=M;O=D
"
6758,c621e1ce3500963ce2b1937b3a74db2bcf4ebdfb,/bash/4.3/Dockerfile,"# https://ftp.gnu.org/gnu/bash/bash-4.3-patches/?C=M;O=D
"
6759,c621e1ce3500963ce2b1937b3a74db2bcf4ebdfb,/bash/4.3/Dockerfile,"# prefixed with ""_"" since ""$BASH..."" have meaning in Bash parlance

"
6760,c621e1ce3500963ce2b1937b3a74db2bcf4ebdfb,/bash/4.3/Dockerfile,"# delete a few installed bits for smaller image size
"
6761,08ab543517c4ad60fd0cd58d3abe8262d206854d,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6762,08ab543517c4ad60fd0cd58d3abe8262d206854d,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6763,08ab543517c4ad60fd0cd58d3abe8262d206854d,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6764,08ab543517c4ad60fd0cd58d3abe8262d206854d,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6765,08ab543517c4ad60fd0cd58d3abe8262d206854d,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6766,bb0dbda54e9999fd24dcd3f4481106940e4e2956,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
6767,bb0dbda54e9999fd24dcd3f4481106940e4e2956,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
6768,bb0dbda54e9999fd24dcd3f4481106940e4e2956,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
6769,d8c15e9e58579a077a026442f6e36c3ee60937f4,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6770,d8c15e9e58579a077a026442f6e36c3ee60937f4,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6771,d8c15e9e58579a077a026442f6e36c3ee60937f4,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6772,d8c15e9e58579a077a026442f6e36c3ee60937f4,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6773,d8c15e9e58579a077a026442f6e36c3ee60937f4,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6774,47bd1f67a9ea76095a5d1f8f6c5bf268ecadeba7,/apt-cacher-ng/Dockerfile,"# grab tini for signal processing and zombie killing
"
6775,627dd6824df765dd178a784d8eede4612a5b9f37,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6776,ed110f4e091209668fffe18d693d4fa0781814ac,/certbot/Dockerfile,"# Executable not found: can't find the executable for the dialog-like program
"
6777,ed110f4e091209668fffe18d693d4fa0781814ac,/certbot/Dockerfile,"#VOLUME /etc/letsencrypt
"
6778,ed110f4e091209668fffe18d693d4fa0781814ac,/certbot/Dockerfile,"#VOLUME /var/log/letsencrypt

"
6779,5d7a451b25d1817bb0dbb912ce7e09a7c91b46fe,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6780,5d7a451b25d1817bb0dbb912ce7e09a7c91b46fe,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6781,5d7a451b25d1817bb0dbb912ce7e09a7c91b46fe,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6782,5d7a451b25d1817bb0dbb912ce7e09a7c91b46fe,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6783,5d7a451b25d1817bb0dbb912ce7e09a7c91b46fe,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6784,91457a97da61f5dca8907f55d7c8b65be6cfc1d0,/tinygo/Dockerfile,"# the .deb (as of 0.6.0) installs to /usr/local/tinygo but doesn't add ""tinygo"" to PATH
"
6785,91457a97da61f5dca8907f55d7c8b65be6cfc1d0,/tinygo/Dockerfile,"# https://tinygo.org/getting-started/linux/

# https://github.com/tinygo-org/tinygo/releases
"
6786,78a0d3bd7e4171bc6ce4c89820f1ce2004721e46,/vultr-cli/Dockerfile,"# https://github.com/vultr/vultr-cli/releases
"
6787,c731d30f76a765e35d79f92553a727bc531467b1,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6788,c9e98dbeceabcc079642964d5fa63fe3f7132ac1,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6789,c9e98dbeceabcc079642964d5fa63fe3f7132ac1,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6790,c9e98dbeceabcc079642964d5fa63fe3f7132ac1,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6791,c9e98dbeceabcc079642964d5fa63fe3f7132ac1,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6792,c9e98dbeceabcc079642964d5fa63fe3f7132ac1,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6793,b9ad2c256c324cc75481a426dd2a259c86444456,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6794,b9ad2c256c324cc75481a426dd2a259c86444456,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6795,b9ad2c256c324cc75481a426dd2a259c86444456,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6796,b9ad2c256c324cc75481a426dd2a259c86444456,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6797,b9ad2c256c324cc75481a426dd2a259c86444456,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6798,8348bc504bb75f2d1be29445e4558f17a311a3c5,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
6799,6b97c9776eef0b411bf8f0b8971addfd7635c1f8,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
6800,6e7e2afef3cc8f4ebf52bd2439cc812d477dda3e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6801,6e7e2afef3cc8f4ebf52bd2439cc812d477dda3e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6802,6e7e2afef3cc8f4ebf52bd2439cc812d477dda3e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6803,6e7e2afef3cc8f4ebf52bd2439cc812d477dda3e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6804,6e7e2afef3cc8f4ebf52bd2439cc812d477dda3e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6805,6ec484fcad3364f13417f423fcda78e29c2d6cf0,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6806,ecc1d36cd90a59622a1d8e67acca30a304ef5624,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6807,fd353e63810e09e76b6b3aa7e8bdf3960fd8ec62,/vultr-cli/Dockerfile,"# https://github.com/vultr/vultr-cli/releases
"
6808,b8250a46d48969625118914982979d8cc0ebce71,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
6809,5c67b6fc4454a6f496aab767bde88036d121638a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6810,5c67b6fc4454a6f496aab767bde88036d121638a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6811,5c67b6fc4454a6f496aab767bde88036d121638a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6812,5c67b6fc4454a6f496aab767bde88036d121638a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6813,5c67b6fc4454a6f496aab767bde88036d121638a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6814,5bf54a718c9a133f2f6a93dfbe99faa541a3725a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6815,5bf54a718c9a133f2f6a93dfbe99faa541a3725a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6816,5bf54a718c9a133f2f6a93dfbe99faa541a3725a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6817,5bf54a718c9a133f2f6a93dfbe99faa541a3725a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6818,5bf54a718c9a133f2f6a93dfbe99faa541a3725a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6819,c3747f9cae8ddea7ab20678f9080404566c77b8b,/certbot/Dockerfile,"# Executable not found: can't find the executable for the dialog-like program
"
6820,c3747f9cae8ddea7ab20678f9080404566c77b8b,/certbot/Dockerfile,"#VOLUME /etc/letsencrypt
"
6821,c3747f9cae8ddea7ab20678f9080404566c77b8b,/certbot/Dockerfile,"#VOLUME /var/log/letsencrypt

"
6822,5072bd76d8b74c0e430cff74c8ebbb01eefbc781,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6823,f84280ef47393b585e38e86994de77d605f11028,/containerd/Dockerfile,"# runtime deps
"
6824,f84280ef47393b585e38e86994de77d605f11028,/containerd/Dockerfile,"# https://github.com/opencontainers/runc/releases
"
6825,f84280ef47393b585e38e86994de77d605f11028,/containerd/Dockerfile,"# TODO .asc / .sha256sum
"
6826,f84280ef47393b585e38e86994de77d605f11028,/containerd/Dockerfile,"# https://github.com/containerd/containerd/releases
"
6827,add656bf362f68ec56f780276e470499372b2509,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
6828,add656bf362f68ec56f780276e470499372b2509,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
6829,add656bf362f68ec56f780276e470499372b2509,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
6830,add656bf362f68ec56f780276e470499372b2509,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
6831,add656bf362f68ec56f780276e470499372b2509,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
6832,c3ef9168f1dce53ebbc24f3e017153aaaff8e9f1,/debian/devel/Dockerfile,"# normal build deps
"
6833,c3ef9168f1dce53ebbc24f3e017153aaaff8e9f1,/debian/devel/Dockerfile,"# need deb-src for compiling packages
"
6834,c3ef9168f1dce53ebbc24f3e017153aaaff8e9f1,/debian/devel/Dockerfile,"# let's make apt list package versions, since those are handy during devel
"
6835,c3ef9168f1dce53ebbc24f3e017153aaaff8e9f1,/debian/devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
6836,c3ef9168f1dce53ebbc24f3e017153aaaff8e9f1,/debian/devel/Dockerfile,"# for ssh to debian hosts, let's make sure we know their fingerprints <3
"
6837,c3ef9168f1dce53ebbc24f3e017153aaaff8e9f1,/debian/devel/Dockerfile,"# make sure things are pretty
"
6838,c3ef9168f1dce53ebbc24f3e017153aaaff8e9f1,/debian/devel/Dockerfile,"#(force_color_prompt=yes)/\1/' ~/.bashrc

# quilt is much amaze: https://wiki.debian.org/UsingQuilt#Using_quilt_with_Debian_source_packages
"
6839,8ee083d05997d166a7fa822d00df351589ebb41c,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
6840,8ee083d05997d166a7fa822d00df351589ebb41c,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
6841,8ee083d05997d166a7fa822d00df351589ebb41c,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
6842,5611ddf36001ca35d63e65b5b35d061ab4518c29,/google-cloud-print-connector/Dockerfile,"# fetch dependencies
# format: import-path=strip-components=tarball-url
"
6843,5611ddf36001ca35d63e65b5b35d061ab4518c29,/google-cloud-print-connector/Dockerfile,"# https://github.com/coreos/go-systemd/releases
"
6844,5611ddf36001ca35d63e65b5b35d061ab4518c29,/google-cloud-print-connector/Dockerfile,"# https://github.com/satori/go.uuid/releases
"
6845,5611ddf36001ca35d63e65b5b35d061ab4518c29,/google-cloud-print-connector/Dockerfile,"# https://github.com/urfave/cli/releases
"
6846,5611ddf36001ca35d63e65b5b35d061ab4518c29,/google-cloud-print-connector/Dockerfile,"# https://github.com/golang/net/commits/master
"
6847,5611ddf36001ca35d63e65b5b35d061ab4518c29,/google-cloud-print-connector/Dockerfile,"# https://github.com/golang/oauth2/commits/master
"
6848,5611ddf36001ca35d63e65b5b35d061ab4518c29,/google-cloud-print-connector/Dockerfile,"# https://bazaar.launchpad.net/~chipaca/go-xdg/v0/files (""view revision"")
# https://bazaar.launchpad.net/~chipaca/go-xdg/v0/revision/10?start_revid=10 (""download tarball"")
"
6849,5611ddf36001ca35d63e65b5b35d061ab4518c29,/google-cloud-print-connector/Dockerfile,"#*=}""; dep=""${dep%=$strip}""; \
"
6850,5611ddf36001ca35d63e65b5b35d061ab4518c29,/google-cloud-print-connector/Dockerfile,"#*=}""; strip=""${strip%=$tarball}""; \
"
6851,5611ddf36001ca35d63e65b5b35d061ab4518c29,/google-cloud-print-connector/Dockerfile,"# https://github.com/google/cloud-print-connector/releases
"
6852,5611ddf36001ca35d63e65b5b35d061ab4518c29,/google-cloud-print-connector/Dockerfile,"#ENV GOOGLE_CLOUD_PRINT_CONNECTOR_VERSION d353d01
# https://github.com/google/cloud-print-connector/commit/d353d01
"
6853,130c97d5ddb367b5617751b288cecd3f657e5a57,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
6854,130c97d5ddb367b5617751b288cecd3f657e5a57,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
6855,130c97d5ddb367b5617751b288cecd3f657e5a57,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
6856,7e2a9707b57ae2be72f74d8edea42fbf6b025414,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6857,7e2a9707b57ae2be72f74d8edea42fbf6b025414,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6858,7e2a9707b57ae2be72f74d8edea42fbf6b025414,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6859,7e2a9707b57ae2be72f74d8edea42fbf6b025414,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6860,7e2a9707b57ae2be72f74d8edea42fbf6b025414,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6861,ae4b9237b18a673275bbc64d16226be8bcd85f15,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6862,ae4b9237b18a673275bbc64d16226be8bcd85f15,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6863,ae4b9237b18a673275bbc64d16226be8bcd85f15,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6864,ae4b9237b18a673275bbc64d16226be8bcd85f15,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6865,ae4b9237b18a673275bbc64d16226be8bcd85f15,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6866,3555ad5aff785c05e2014aa4178c5b765d0f5355,/kafka/Dockerfile,"# https://kafka.apache.org/downloads.html
"
6867,20eda41a17ff694fd39df2f48ff0f25741b04639,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6868,20eda41a17ff694fd39df2f48ff0f25741b04639,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6869,20eda41a17ff694fd39df2f48ff0f25741b04639,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6870,20eda41a17ff694fd39df2f48ff0f25741b04639,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6871,20eda41a17ff694fd39df2f48ff0f25741b04639,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6872,16e3530560a285675e3ef794d9ffa1e62ca7ed98,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6873,16e3530560a285675e3ef794d9ffa1e62ca7ed98,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6874,16e3530560a285675e3ef794d9ffa1e62ca7ed98,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6875,16e3530560a285675e3ef794d9ffa1e62ca7ed98,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6876,16e3530560a285675e3ef794d9ffa1e62ca7ed98,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6877,019e3dafeac4116b4547194b6452de9de76610dd,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6878,afbc60fd74b62663f05eef51a01e39a22022d6d4,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6879,afbc60fd74b62663f05eef51a01e39a22022d6d4,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6880,afbc60fd74b62663f05eef51a01e39a22022d6d4,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6881,afbc60fd74b62663f05eef51a01e39a22022d6d4,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6882,afbc60fd74b62663f05eef51a01e39a22022d6d4,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6883,ba21df78746f83b82960e500a8024fc165a33fa6,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
6884,a9e884b0803de7f237c2b5d36a5f0c23d14467a5,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6885,a9e884b0803de7f237c2b5d36a5f0c23d14467a5,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6886,a9e884b0803de7f237c2b5d36a5f0c23d14467a5,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6887,a9e884b0803de7f237c2b5d36a5f0c23d14467a5,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6888,a9e884b0803de7f237c2b5d36a5f0c23d14467a5,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6889,99861d35fc0dc5e2a3ac91300c435987673d564e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6890,99861d35fc0dc5e2a3ac91300c435987673d564e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6891,99861d35fc0dc5e2a3ac91300c435987673d564e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6892,99861d35fc0dc5e2a3ac91300c435987673d564e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6893,99861d35fc0dc5e2a3ac91300c435987673d564e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6894,27f10740fc307dd0f847e4857981a612be34ba0f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6895,27f10740fc307dd0f847e4857981a612be34ba0f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6896,27f10740fc307dd0f847e4857981a612be34ba0f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6897,27f10740fc307dd0f847e4857981a612be34ba0f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6898,27f10740fc307dd0f847e4857981a612be34ba0f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6899,b6144573262026530b06e311ac1b62e3081e4ecb,/network-toolbox/alpine/Dockerfile,"# TODO add ""nbtscan"" when we get to Alpine 3.11 (if it makes it out of edge)
# https://pkgs.alpinelinux.org/packages?name=nbtscan&branch=edge&arch=x86_64

"
6900,6c6ff5d797a8db57548d81da0a146817ae493501,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
6901,6c6ff5d797a8db57548d81da0a146817ae493501,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
6902,6c6ff5d797a8db57548d81da0a146817ae493501,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
6903,6c6ff5d797a8db57548d81da0a146817ae493501,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
6904,6c6ff5d797a8db57548d81da0a146817ae493501,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
6905,b1f253c879c8a0a3e2d12621afd95338dd738fa8,/certbot/Dockerfile,"# Executable not found: can't find the executable for the dialog-like program
"
6906,b1f253c879c8a0a3e2d12621afd95338dd738fa8,/certbot/Dockerfile,"#VOLUME /etc/letsencrypt
"
6907,b1f253c879c8a0a3e2d12621afd95338dd738fa8,/certbot/Dockerfile,"#VOLUME /var/log/letsencrypt

"
6908,671d6fe58493eed2af553679b5d9315270e26900,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6909,671d6fe58493eed2af553679b5d9315270e26900,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6910,671d6fe58493eed2af553679b5d9315270e26900,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6911,671d6fe58493eed2af553679b5d9315270e26900,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6912,671d6fe58493eed2af553679b5d9315270e26900,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6913,0515241b31dd58ed8e6f4eb63311f160a0707014,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6914,0515241b31dd58ed8e6f4eb63311f160a0707014,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6915,0515241b31dd58ed8e6f4eb63311f160a0707014,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6916,0515241b31dd58ed8e6f4eb63311f160a0707014,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6917,0515241b31dd58ed8e6f4eb63311f160a0707014,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6918,e056e65a80ab89aa2e6e8e0a97b2a910a5a9c8de,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6919,81bd7e941e87d08790c95a104c33e1b54d1259f3,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
6920,81bd7e941e87d08790c95a104c33e1b54d1259f3,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
6921,81bd7e941e87d08790c95a104c33e1b54d1259f3,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
6922,2466479a462dd3d9abbf6f181967c5a5328f3db7,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
6923,e1bd7de6ca5f4d34a2cb9224e1521cf95b6e932e,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6924,6eb0341246f34d7f512167f91b674e6023013c1b,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6925,6eb0341246f34d7f512167f91b674e6023013c1b,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6926,6eb0341246f34d7f512167f91b674e6023013c1b,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6927,6eb0341246f34d7f512167f91b674e6023013c1b,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6928,6eb0341246f34d7f512167f91b674e6023013c1b,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6929,8f53c52c8ae91a5cdd82f4914560218b40fc52ae,/debian/ubuntu-devel/Dockerfile,"# let's make apt list package versions, since those are handy during devel
"
6930,8f53c52c8ae91a5cdd82f4914560218b40fc52ae,/debian/ubuntu-devel/Dockerfile,"# normal build deps
"
6931,8f53c52c8ae91a5cdd82f4914560218b40fc52ae,/debian/ubuntu-devel/Dockerfile,"# get dh-make-golang from Git since it's so rapidly changing
"
6932,8f53c52c8ae91a5cdd82f4914560218b40fc52ae,/debian/ubuntu-devel/Dockerfile,"# need deb-src for compiling packages
"
6933,8f53c52c8ae91a5cdd82f4914560218b40fc52ae,/debian/ubuntu-devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
6934,8f53c52c8ae91a5cdd82f4914560218b40fc52ae,/debian/ubuntu-devel/Dockerfile,"# for ssh to debian hosts, let's make sure we know their fingerprints <3
"
6935,8f53c52c8ae91a5cdd82f4914560218b40fc52ae,/debian/ubuntu-devel/Dockerfile,"# make sure things are pretty
"
6936,8f53c52c8ae91a5cdd82f4914560218b40fc52ae,/debian/ubuntu-devel/Dockerfile,"#(force_color_prompt=yes)/\1/' ~/.bashrc

# quilt is much amaze: https://wiki.debian.org/UsingQuilt#Using_quilt_with_Debian_source_packages
"
6937,8f53c52c8ae91a5cdd82f4914560218b40fc52ae,/debian/ubuntu-devel/Dockerfile,"# make sure pbuilder-dist uses a sane default mirror
"
6938,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/Dockerfile.template,"# much of this was gleaned from https://github.com/lxc/lxc/blob/lxc-0.8.0/templates/lxc-ubuntu.in
# and then heavily modified and hacked like crazy

# we're going to want this bad boy installed so we can connect :)
"
6939,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/Dockerfile.template,"# undo some leet hax of the base image
"
6940,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/Dockerfile.template,"# generate a nice UTF-8 locale for our use
"
6941,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/Dockerfile.template,"# remove some pointless services
"
6942,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/Dockerfile.template,"# /lib/init/fstab: cleared out for bare-bones Docker' > /lib/init/fstab

# small fix for SSH in 13.10 (that's harmless everywhere else)
"
6943,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/Dockerfile.template,"# let Upstart know it's in a container
"
6944,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/Dockerfile.template,"# set a cheap, simple password for great convenience
"
6945,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/Dockerfile.template,"# we can has SSH
"
6946,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/Dockerfile.template,"# prepare for takeoff
"
6947,774cdc2074ea02b413ada34e3466aa8ba33a41cc,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6948,87c3ef6e50dbc600b6775e1ca851d18b8a290d08,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6949,bab541eee2600239626c08aefc61a4bb8a0b9fc4,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6950,bab541eee2600239626c08aefc61a4bb8a0b9fc4,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6951,bab541eee2600239626c08aefc61a4bb8a0b9fc4,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6952,bab541eee2600239626c08aefc61a4bb8a0b9fc4,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6953,bab541eee2600239626c08aefc61a4bb8a0b9fc4,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6954,aadd653ef6bed40c2bb0d6c4aa6d5bf76a835892,/certbot/Dockerfile,"# Executable not found: can't find the executable for the dialog-like program
"
6955,aadd653ef6bed40c2bb0d6c4aa6d5bf76a835892,/certbot/Dockerfile,"#VOLUME /etc/letsencrypt
"
6956,aadd653ef6bed40c2bb0d6c4aa6d5bf76a835892,/certbot/Dockerfile,"#VOLUME /var/log/letsencrypt

"
6957,855d8fa15068fd51f8f42d59dc5b4859424f28b2,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6958,855d8fa15068fd51f8f42d59dc5b4859424f28b2,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6959,855d8fa15068fd51f8f42d59dc5b4859424f28b2,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6960,855d8fa15068fd51f8f42d59dc5b4859424f28b2,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6961,855d8fa15068fd51f8f42d59dc5b4859424f28b2,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6962,11602d45fd935ae346045097de9b345d8e2a66a1,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6963,11602d45fd935ae346045097de9b345d8e2a66a1,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6964,11602d45fd935ae346045097de9b345d8e2a66a1,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6965,11602d45fd935ae346045097de9b345d8e2a66a1,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6966,11602d45fd935ae346045097de9b345d8e2a66a1,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6967,608c10dca9eb4d2a413ec95aab84275225c7f523,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
6968,e24f02a877e65a800d108a53b1a3933672d6af90,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
6969,e24f02a877e65a800d108a53b1a3933672d6af90,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
"
6970,f42eba34e1c4f45c169193126cf965391da8ffe3,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6971,f42eba34e1c4f45c169193126cf965391da8ffe3,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6972,f42eba34e1c4f45c169193126cf965391da8ffe3,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6973,f42eba34e1c4f45c169193126cf965391da8ffe3,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6974,f42eba34e1c4f45c169193126cf965391da8ffe3,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6975,638419eadc962691d519852cce0cffbb35b51298,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6976,638419eadc962691d519852cce0cffbb35b51298,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6977,638419eadc962691d519852cce0cffbb35b51298,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6978,638419eadc962691d519852cce0cffbb35b51298,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6979,638419eadc962691d519852cce0cffbb35b51298,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6980,98df9cbde165576bf6bee980487d9fc1fd51e320,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
6981,af8839282d3364de82f6a7fc1ed17526216b0cff,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6982,f35287efd367f6742000547c297f24122cee8816,/jenkins/slave/Dockerfile,"#PermitRootLogin.*/PermitRootLogin yes/' /etc/ssh/sshd_config

"
6983,f35287efd367f6742000547c297f24122cee8816,/jenkins/slave/Dockerfile,"# let's make /root a volume so ~/.ssh/authorized_keys is easier to save
"
6984,0730449d5a13f92aeecadc2686f27dc2e446082d,/network-toolbox/debian/Dockerfile,"# dangit, wireshark-common!  *shakes fist*
"
6985,ae401714a4566dc52493ea14474ac60b49890cb2,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6986,ae401714a4566dc52493ea14474ac60b49890cb2,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6987,ae401714a4566dc52493ea14474ac60b49890cb2,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6988,ae401714a4566dc52493ea14474ac60b49890cb2,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6989,ae401714a4566dc52493ea14474ac60b49890cb2,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6990,80ff4a8190d78feb83ca94b907e266cadbab8da2,/bash/3.2/Dockerfile,"# gpg: key 64EA74AB: public key ""Chet Ramey <chet@cwru.edu>"" imported
"
6991,80ff4a8190d78feb83ca94b907e266cadbab8da2,/bash/3.2/Dockerfile,"# https://ftp.gnu.org/gnu/bash/?C=M;O=D
"
6992,80ff4a8190d78feb83ca94b907e266cadbab8da2,/bash/3.2/Dockerfile,"# https://ftp.gnu.org/gnu/bash/bash-3.2-patches/?C=M;O=D
"
6993,80ff4a8190d78feb83ca94b907e266cadbab8da2,/bash/3.2/Dockerfile,"# prefixed with ""_"" since ""$BASH..."" have meaning in Bash parlance

"
6994,80ff4a8190d78feb83ca94b907e266cadbab8da2,/bash/3.2/Dockerfile,"# parallel jobs workaround borrowed from Alpine :)
"
6995,80ff4a8190d78feb83ca94b907e266cadbab8da2,/bash/3.2/Dockerfile,"# delete a few installed bits for smaller image size
"
6996,ef9cf9438d12236072488bc6768c0504d53636ba,/google-cloud-print-connector/Dockerfile,"# fetch dependencies
# format: import-path=strip-components=tarball-url
"
6997,ef9cf9438d12236072488bc6768c0504d53636ba,/google-cloud-print-connector/Dockerfile,"# https://github.com/coreos/go-systemd/releases
"
6998,ef9cf9438d12236072488bc6768c0504d53636ba,/google-cloud-print-connector/Dockerfile,"# https://github.com/satori/go.uuid/releases
# (https://github.com/satori/go.uuid/commit/0ef6afb2f6cdd6cdaeee3885a95099c63f18fc8c -- hopefully we'll get a newer release than v1.2.0 soonish)
"
6999,ef9cf9438d12236072488bc6768c0504d53636ba,/google-cloud-print-connector/Dockerfile,"# https://github.com/urfave/cli/releases
"
7000,ef9cf9438d12236072488bc6768c0504d53636ba,/google-cloud-print-connector/Dockerfile,"# https://github.com/golang/net/commits/master
"
7001,ef9cf9438d12236072488bc6768c0504d53636ba,/google-cloud-print-connector/Dockerfile,"# https://github.com/golang/oauth2/commits/master
"
7002,ef9cf9438d12236072488bc6768c0504d53636ba,/google-cloud-print-connector/Dockerfile,"# https://bazaar.launchpad.net/~chipaca/go-xdg/v0/files (""view revision"")
# https://bazaar.launchpad.net/~chipaca/go-xdg/v0/revision/10?start_revid=10 (""download tarball"")
"
7003,ef9cf9438d12236072488bc6768c0504d53636ba,/google-cloud-print-connector/Dockerfile,"#*=}""; dep=""${dep%=$strip}""; \
"
7004,ef9cf9438d12236072488bc6768c0504d53636ba,/google-cloud-print-connector/Dockerfile,"#*=}""; strip=""${strip%=$tarball}""; \
"
7005,ef9cf9438d12236072488bc6768c0504d53636ba,/google-cloud-print-connector/Dockerfile,"# https://github.com/google/cloud-print-connector/releases
"
7006,387da35f43d148bc8e318712502c9886f4b32dff,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7007,387da35f43d148bc8e318712502c9886f4b32dff,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7008,387da35f43d148bc8e318712502c9886f4b32dff,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7009,387da35f43d148bc8e318712502c9886f4b32dff,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7010,387da35f43d148bc8e318712502c9886f4b32dff,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7011,95aef5802557ad25b2e39713cf8f176942a6772a,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7012,95aef5802557ad25b2e39713cf8f176942a6772a,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
7013,95aef5802557ad25b2e39713cf8f176942a6772a,/jenkins/Dockerfile,"# workaround ""apt-key adv --recv-keys"" hanging in stretch and above
"
7014,90aedceabf022231205123de6c5d0403809e190a,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7015,89ef27de1d575c0c031b682b5ccfe6778f85b761,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7016,afbc60fd74b62663f05eef51a01e39a22022d6d4,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7017,7e227e2ca062b32eb1f098724d8c70c2c7f6fe2e,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
7018,7e227e2ca062b32eb1f098724d8c70c2c7f6fe2e,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
7019,7e227e2ca062b32eb1f098724d8c70c2c7f6fe2e,/plex/media-server/Dockerfile,"# the published deb has pre/post-inst scripts that don't really apply to Docker (so we'll skip ""install"" entirely)
# (as of 1.18.5.2309, they have bugs around Docker detection, which is mostly for avoiding init behavior)
"
7020,7e227e2ca062b32eb1f098724d8c70c2c7f6fe2e,/plex/media-server/Dockerfile,"#	apt-get update; \
#	apt-get install /tmp/plex.deb; \
#	rm -rf /var/lib/apt/lists/*; \
"
7021,5ec89c6f5ac25040733739f34bab266c1618f83b,/network-toolbox/alpine/Dockerfile,"# TODO add ""nbtscan"" when we get to Alpine 3.9 (if it makes it out of edge for 3.9)

"
7022,bc02ee1af3ddd77ede2498d95d340a9de7feb176,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7023,d151a31169c17a9aefaae44bffb580b0e3132424,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
7024,263c6df064aed242fbd000e53887e62b693fd784,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7025,263c6df064aed242fbd000e53887e62b693fd784,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
7026,263c6df064aed242fbd000e53887e62b693fd784,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
7027,fd49d14b89d473bc4c509c4f4629be603c88d1e1,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7028,fd49d14b89d473bc4c509c4f4629be603c88d1e1,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7029,fd49d14b89d473bc4c509c4f4629be603c88d1e1,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7030,fd49d14b89d473bc4c509c4f4629be603c88d1e1,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7031,fd49d14b89d473bc4c509c4f4629be603c88d1e1,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7032,babbe8e59860265db6cc27b93c10422aeac9e8ef,/network-toolbox/alpine/Dockerfile,"# TODO add ""nbtscan"" when we get to Alpine 3.12 (if it makes it out of edge)
# https://pkgs.alpinelinux.org/packages?name=nbtscan&branch=edge&arch=x86_64

"
7033,40e728409e8c10696d6605cb712edb330a8eab18,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7034,40e728409e8c10696d6605cb712edb330a8eab18,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7035,40e728409e8c10696d6605cb712edb330a8eab18,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7036,40e728409e8c10696d6605cb712edb330a8eab18,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7037,40e728409e8c10696d6605cb712edb330a8eab18,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7038,30855cfdef3f7ea7e33e56ea8fad2e45df0064a1,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7039,30855cfdef3f7ea7e33e56ea8fad2e45df0064a1,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
7040,30855cfdef3f7ea7e33e56ea8fad2e45df0064a1,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
7041,30855cfdef3f7ea7e33e56ea8fad2e45df0064a1,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
7042,30855cfdef3f7ea7e33e56ea8fad2e45df0064a1,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
7043,c1610b96ffcea268495de6bc01aa9d72c59f9392,/prometheus/Dockerfile,"# https://github.com/prometheus/prometheus/releases
"
7044,57916a91748a5f96f1fa6840cdfc35971beca2a6,/gmpydl/Dockerfile,"# https://pypi.org/project/gmusicapi/
"
7045,57916a91748a5f96f1fa6840cdfc35971beca2a6,/gmpydl/Dockerfile,"# https://github.com/stevenewbs/gmpydl/commits/master
# https://github.com/stevenewbs/gmpydl/releases
"
7046,42402fd8187dbddb2f0ca8135c22121260070d16,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7047,42402fd8187dbddb2f0ca8135c22121260070d16,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7048,42402fd8187dbddb2f0ca8135c22121260070d16,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7049,42402fd8187dbddb2f0ca8135c22121260070d16,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7050,42402fd8187dbddb2f0ca8135c22121260070d16,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7051,bec18512011904f89e3c4c2b1e4106adec6eb80d,/xen-orchestra/Dockerfile,"# see https://xen-orchestra.com/docs/from_the_sources.html

"
7052,bec18512011904f89e3c4c2b1e4106adec6eb80d,/xen-orchestra/Dockerfile,"# https://github.com/vatesfr/xen-orchestra/releases
"
7053,bec18512011904f89e3c4c2b1e4106adec6eb80d,/xen-orchestra/Dockerfile,"# https://github.com/yarnpkg/yarn/issues/6312 -- error https://registry.yarnpkg.com/flatmap-stream/-/flatmap-stream-0.1.1.tgz: Extracting tar content of undefined failed, the file appears to be corrupt: ""Unexpected end of data""
"
7054,bec18512011904f89e3c4c2b1e4106adec6eb80d,/xen-orchestra/Dockerfile,"#'/': '/path/to/xo-web/dist/'!'/': '../xo-web/dist/'!"" \
"
7055,bec18512011904f89e3c4c2b1e4106adec6eb80d,/xen-orchestra/Dockerfile,"#uri: redis://.*!uri: 'redis://redis:6379'!"" \
"
7056,291449b9d10911a54c0483f60850d37ae9b2725e,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7057,8397cecb1297f11416fe87c202681e6e2819d0ad,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7058,8397cecb1297f11416fe87c202681e6e2819d0ad,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7059,8397cecb1297f11416fe87c202681e6e2819d0ad,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7060,8397cecb1297f11416fe87c202681e6e2819d0ad,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7061,8397cecb1297f11416fe87c202681e6e2819d0ad,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7062,db45c5cf13126f98da109412ded452e2047e54cf,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7063,e9344783aa8ffd95f2b748c834645ef9d0b1e45b,/makemkv/Dockerfile,"# FPL_MainFeature detection only seemed to work with OpenJDK 9 (8 was insufficient)
"
7064,e9344783aa8ffd95f2b748c834645ef9d0b1e45b,/makemkv/Dockerfile,"# This disc requires Java runtime (JRE), but none was found. Certain functions will fail, please install Java. See http://www.makemkv.com/bdjava/ for details.
"
7065,e9344783aa8ffd95f2b748c834645ef9d0b1e45b,/makemkv/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
7066,e9344783aa8ffd95f2b748c834645ef9d0b1e45b,/makemkv/Dockerfile,"# http://www.makemkv.com/forum2/viewtopic.php?f=3&t=224
"
7067,e9344783aa8ffd95f2b748c834645ef9d0b1e45b,/makemkv/Dockerfile,"# beta code: http://www.makemkv.com/forum2/viewtopic.php?f=5&t=1053
"
7068,e9344783aa8ffd95f2b748c834645ef9d0b1e45b,/makemkv/Dockerfile,"# pub   dsa2048 2017-05-26 [SC]
#       2ECF 2330 5F1F C0B3 2001  6733 94E3 083A 1804 2697
# uid           [ unknown] MakeMKV (signature) <support@makemkv.com>
"
7069,ab9eaaa9f95b7b98c206929afc0cd547613050bd,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7070,ab9eaaa9f95b7b98c206929afc0cd547613050bd,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7071,ab9eaaa9f95b7b98c206929afc0cd547613050bd,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7072,ab9eaaa9f95b7b98c206929afc0cd547613050bd,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7073,ab9eaaa9f95b7b98c206929afc0cd547613050bd,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7074,fe5b9a8b28e652fa7709deba5b42cb4f7b6276f2,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7075,ba7f83a99e18000475accf7caf785285d682ea26,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7076,3a6dbe6cca83ceb1a83a034644808c6a83397620,/gmpydl/Dockerfile,"# https://pypi.org/project/gmusicapi/
"
7077,3a6dbe6cca83ceb1a83a034644808c6a83397620,/gmpydl/Dockerfile,"# https://github.com/stevenewbs/gmpydl/commits/master
# https://github.com/stevenewbs/gmpydl/releases
"
7078,6d63a61871677c29630e6010aa7842e5d1202915,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7079,6d63a61871677c29630e6010aa7842e5d1202915,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7080,6d63a61871677c29630e6010aa7842e5d1202915,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7081,6d63a61871677c29630e6010aa7842e5d1202915,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7082,6d63a61871677c29630e6010aa7842e5d1202915,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7083,a4e8152f6afbe8ccbf65871882ff425a850921db,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7084,a4e8152f6afbe8ccbf65871882ff425a850921db,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7085,a4e8152f6afbe8ccbf65871882ff425a850921db,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7086,a4e8152f6afbe8ccbf65871882ff425a850921db,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7087,a4e8152f6afbe8ccbf65871882ff425a850921db,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7088,dccef11024ffd7f4fa2d22f93e404e4210a61008,/steam/Dockerfile,"# zenity is used during early startup for dialogs and progress bars
"
7089,dccef11024ffd7f4fa2d22f93e404e4210a61008,/steam/Dockerfile,"# wget is used for uploading crash dumps
"
7090,dccef11024ffd7f4fa2d22f93e404e4210a61008,/steam/Dockerfile,"# needed for ""dbus-launch"" (not sure what that's used for)
"
7091,dccef11024ffd7f4fa2d22f93e404e4210a61008,/steam/Dockerfile,"# needed for ""localedef"" below
"
7092,dccef11024ffd7f4fa2d22f93e404e4210a61008,/steam/Dockerfile,"# WARNING: setlocale('en_US.UTF-8') failed, using locale: 'C'. International characters may not work.
"
7093,dccef11024ffd7f4fa2d22f93e404e4210a61008,/steam/Dockerfile,"# create a default ""steam"" user for running the container without root privileges
"
7094,dccef11024ffd7f4fa2d22f93e404e4210a61008,/steam/Dockerfile,"# https://github.com/ValveSoftware/steam-for-linux#getting-started
# http://media.steampowered.com/client/installer/steam.deb redirects to https://repo.steampowered.com/steam/archive/precise/steam_latest.deb
# https://repo.steampowered.com/steam/archive/precise/?C=M&O=D
# https://repo.steampowered.com/steam/archive/precise/?C=N&O=D
# ""steam_latest.deb"" is a symlink to ""steam-launcher_X.X.X.X_all.deb""
# https://repo.steampowered.com/steam/dists/precise/steam/binary-amd64/Packages (current version, current SHA256)
"
7095,dccef11024ffd7f4fa2d22f93e404e4210a61008,/steam/Dockerfile,"# let's head off a few of the things steam will want to install immediately
"
7096,dccef11024ffd7f4fa2d22f93e404e4210a61008,/steam/Dockerfile,"# installing libfontconfig1 from Ubuntu stops some runtime-related fontconfig errors/warnings (https://github.com/ValveSoftware/steam-for-linux/issues/3307#issuecomment-506650268)
"
7097,dccef11024ffd7f4fa2d22f93e404e4210a61008,/steam/Dockerfile,"# useful when using ""--env DEBUGGER=gdb"" or ""--env DEBUGGER=strace"" to debug steam startup issues
#RUN set -eux; \
#	apt-get update; \
#	apt-get install -y --no-install-recommends \
#		gdb \
#		strace \
#	; \
#	rm -rf /var/lib/apt/lists/*

"
7098,cac420e4b61469caacfb99947d45f320ffe75019,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7099,cac420e4b61469caacfb99947d45f320ffe75019,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7100,cac420e4b61469caacfb99947d45f320ffe75019,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7101,cac420e4b61469caacfb99947d45f320ffe75019,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7102,cac420e4b61469caacfb99947d45f320ffe75019,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7103,4c2a17bf781c5fb5543afa1f5c6c0d440077178b,/handbrake/Dockerfile,"# https://handbrake.fr/downloads.php
# https://launchpad.net/~stebbins/+archive/ubuntu/handbrake-releases
"
7104,fda7a0db94f16fb463959ed44f123ae520a8c423,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7105,2ce23b58d2e875217aa5389fbc664f947beef0fd,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7106,2ce23b58d2e875217aa5389fbc664f947beef0fd,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7107,2ce23b58d2e875217aa5389fbc664f947beef0fd,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7108,2ce23b58d2e875217aa5389fbc664f947beef0fd,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7109,2ce23b58d2e875217aa5389fbc664f947beef0fd,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7110,924d3bc607044dfac90dff7f52fc0f17c770adcd,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7111,924d3bc607044dfac90dff7f52fc0f17c770adcd,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7112,924d3bc607044dfac90dff7f52fc0f17c770adcd,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7113,924d3bc607044dfac90dff7f52fc0f17c770adcd,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7114,924d3bc607044dfac90dff7f52fc0f17c770adcd,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7115,9621ded67a11c8c44eaf96c62fca429462c65870,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7116,9621ded67a11c8c44eaf96c62fca429462c65870,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
7117,9621ded67a11c8c44eaf96c62fca429462c65870,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
7118,9621ded67a11c8c44eaf96c62fca429462c65870,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
7119,9621ded67a11c8c44eaf96c62fca429462c65870,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
7120,8d26a641b3ada81edbf03c178190af88eea4805f,/apt-cacher-ng/Dockerfile,"# grab tini for signal processing and zombie killing
"
7121,b342ee74189a50f9b0ec3aab8da1f6e506f97b7a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7122,b342ee74189a50f9b0ec3aab8da1f6e506f97b7a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7123,b342ee74189a50f9b0ec3aab8da1f6e506f97b7a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7124,b342ee74189a50f9b0ec3aab8da1f6e506f97b7a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7125,b342ee74189a50f9b0ec3aab8da1f6e506f97b7a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7126,d47dc9327d3ca880a45d5e2a5246d3c215aca145,/google-cloud-print-connector/Dockerfile,"# fetch dependencies
# format: import-path=strip-components=tarball-url
"
7127,d47dc9327d3ca880a45d5e2a5246d3c215aca145,/google-cloud-print-connector/Dockerfile,"# https://github.com/coreos/go-systemd/releases
"
7128,d47dc9327d3ca880a45d5e2a5246d3c215aca145,/google-cloud-print-connector/Dockerfile,"# https://github.com/satori/go.uuid/releases
# (https://github.com/satori/go.uuid/commit/0ef6afb2f6cdd6cdaeee3885a95099c63f18fc8c -- hopefully we'll get a newer release than v1.2.0 soonish)
"
7129,d47dc9327d3ca880a45d5e2a5246d3c215aca145,/google-cloud-print-connector/Dockerfile,"# https://github.com/urfave/cli/releases
"
7130,d47dc9327d3ca880a45d5e2a5246d3c215aca145,/google-cloud-print-connector/Dockerfile,"# https://github.com/golang/net/commits/master
"
7131,d47dc9327d3ca880a45d5e2a5246d3c215aca145,/google-cloud-print-connector/Dockerfile,"# https://github.com/golang/oauth2/commits/master
"
7132,d47dc9327d3ca880a45d5e2a5246d3c215aca145,/google-cloud-print-connector/Dockerfile,"# https://bazaar.launchpad.net/~chipaca/go-xdg/v0/files (""view revision"")
# https://bazaar.launchpad.net/~chipaca/go-xdg/v0/revision/10?start_revid=10 (""download tarball"")
"
7133,d47dc9327d3ca880a45d5e2a5246d3c215aca145,/google-cloud-print-connector/Dockerfile,"#*=}""; dep=""${dep%=$strip}""; \
"
7134,d47dc9327d3ca880a45d5e2a5246d3c215aca145,/google-cloud-print-connector/Dockerfile,"#*=}""; strip=""${strip%=$tarball}""; \
"
7135,d47dc9327d3ca880a45d5e2a5246d3c215aca145,/google-cloud-print-connector/Dockerfile,"# https://github.com/google/cloud-print-connector/releases
"
7136,569ff6eb8da258997f0f5b25475ff0f3d20f3c3b,/nylas/sync-engine/Dockerfile,"# tell pynacl to use system libsodium
"
7137,569ff6eb8da258997f0f5b25475ff0f3d20f3c3b,/nylas/sync-engine/Dockerfile,"#ENV SYNC_VERSION v0.3.0 # 2014 :'(
"
7138,569ff6eb8da258997f0f5b25475ff0f3d20f3c3b,/nylas/sync-engine/Dockerfile,"# https://github.com/eventable/vobject/issues/2
"
7139,569ff6eb8da258997f0f5b25475ff0f3d20f3c3b,/nylas/sync-engine/Dockerfile,"# ugh, NameError: name 'PROTOCOL_SSLv3' is not defined
"
7140,569ff6eb8da258997f0f5b25475ff0f3d20f3c3b,/nylas/sync-engine/Dockerfile," # TODO inbox-api or inbox-start
"
7141,ad001d447cded94b7095d86a54d1bacd7bfa01b4,/vultr-cli/Dockerfile,"# https://github.com/vultr/vultr-cli/releases
"
7142,c18ee35b3930208073f5d2eab05eee410104608e,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7143,1c8615545aeb05ad39e722784e733b644eef66a9,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7144,2d4245b6106bd0356937a7a2aa0d5f8f55f3e7c6,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7145,2d4245b6106bd0356937a7a2aa0d5f8f55f3e7c6,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7146,2d4245b6106bd0356937a7a2aa0d5f8f55f3e7c6,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7147,2d4245b6106bd0356937a7a2aa0d5f8f55f3e7c6,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7148,2d4245b6106bd0356937a7a2aa0d5f8f55f3e7c6,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7149,55c7ecf67dcdf72249ef87400e31cea15071bf47,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7150,7af873e468a1a4e38acefe00df51a019ba45e148,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7151,4f60c1140542729bcc61ac53239778a602720ec3,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7152,4f60c1140542729bcc61ac53239778a602720ec3,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7153,4f60c1140542729bcc61ac53239778a602720ec3,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7154,4f60c1140542729bcc61ac53239778a602720ec3,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7155,4f60c1140542729bcc61ac53239778a602720ec3,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7156,5c891e6ec0fad445e2edf8a62396fd5a8ea96088,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7157,5c891e6ec0fad445e2edf8a62396fd5a8ea96088,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7158,5c891e6ec0fad445e2edf8a62396fd5a8ea96088,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7159,5c891e6ec0fad445e2edf8a62396fd5a8ea96088,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7160,5c891e6ec0fad445e2edf8a62396fd5a8ea96088,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7161,71a4e2db4348d1c87de20e86777647799dd373bc,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7162,71a4e2db4348d1c87de20e86777647799dd373bc,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7163,71a4e2db4348d1c87de20e86777647799dd373bc,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7164,71a4e2db4348d1c87de20e86777647799dd373bc,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7165,71a4e2db4348d1c87de20e86777647799dd373bc,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7166,12be212ad2942a0a6885f607bddfad0690cec078,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7167,12be212ad2942a0a6885f607bddfad0690cec078,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7168,12be212ad2942a0a6885f607bddfad0690cec078,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7169,12be212ad2942a0a6885f607bddfad0690cec078,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7170,12be212ad2942a0a6885f607bddfad0690cec078,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7171,4bc9e1a50ee138a12cef4333288ef4d8a1c16344,/network-toolbox/alpine/Dockerfile,"# TODO add ""nbtscan"" when we get to Alpine 3.10 (if it makes it out of edge for 3.10)

"
7172,4ae2b85f07236a0597a4b1d6992a11e9e2f8f7be,/docker-master/dind/Dockerfile,"# https://github.com/docker/docker/blob/master/project/PACKAGERS.md#runtime-dependencies
"
7173,4ae2b85f07236a0597a4b1d6992a11e9e2f8f7be,/docker-master/dind/Dockerfile,"# pigz: https://github.com/moby/moby/pull/35697 (faster gzip implementation)
"
7174,4ae2b85f07236a0597a4b1d6992a11e9e2f8f7be,/docker-master/dind/Dockerfile,"# only install zfs if it's available for the current architecture
# https://git.alpinelinux.org/cgit/aports/tree/main/zfs/APKBUILD?h=3.6-stable#n9 (""all !armhf !ppc64le"" as of 2017-11-01)
# ""apk info XYZ"" exits with a zero exit code but no output when the package exists but not for this arch
"
7175,4ae2b85f07236a0597a4b1d6992a11e9e2f8f7be,/docker-master/dind/Dockerfile,"# TODO aufs-tools

# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
"
7176,4ae2b85f07236a0597a4b1d6992a11e9e2f8f7be,/docker-master/dind/Dockerfile,"# https://github.com/docker/docker/tree/master/hack/dind
"
7177,e8d23c4ed71b3c6a56103beb59799aac657fe9a3,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7178,e8d23c4ed71b3c6a56103beb59799aac657fe9a3,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
7179,e8d23c4ed71b3c6a56103beb59799aac657fe9a3,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
7180,e8d23c4ed71b3c6a56103beb59799aac657fe9a3,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
7181,e8d23c4ed71b3c6a56103beb59799aac657fe9a3,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
7182,f808f780de6760bc7a9aab0209908337239ac134,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7183,f808f780de6760bc7a9aab0209908337239ac134,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7184,f808f780de6760bc7a9aab0209908337239ac134,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7185,f808f780de6760bc7a9aab0209908337239ac134,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7186,f808f780de6760bc7a9aab0209908337239ac134,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7187,8b2200c6618bf2e6dd0ca06a8cf14f4800d9d746,/certbot/Dockerfile,"# Executable not found: can't find the executable for the dialog-like program
"
7188,8b2200c6618bf2e6dd0ca06a8cf14f4800d9d746,/certbot/Dockerfile,"#VOLUME /etc/letsencrypt

"
7189,a6a54908654cf1b71e017edbf57e886a8e58a8dd,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7190,e91e346cd451a0ade2e993a31cb9bf6cdc6bffe4,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7191,e91e346cd451a0ade2e993a31cb9bf6cdc6bffe4,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7192,e91e346cd451a0ade2e993a31cb9bf6cdc6bffe4,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7193,e91e346cd451a0ade2e993a31cb9bf6cdc6bffe4,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7194,e91e346cd451a0ade2e993a31cb9bf6cdc6bffe4,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7195,ad11c20be75175d214165a75f01c366b010f08d8,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7196,ad11c20be75175d214165a75f01c366b010f08d8,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7197,ad11c20be75175d214165a75f01c366b010f08d8,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7198,ad11c20be75175d214165a75f01c366b010f08d8,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7199,ad11c20be75175d214165a75f01c366b010f08d8,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7200,52808176d508ba2566bb6874a006b77e61130e4f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7201,52808176d508ba2566bb6874a006b77e61130e4f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7202,52808176d508ba2566bb6874a006b77e61130e4f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7203,52808176d508ba2566bb6874a006b77e61130e4f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7204,52808176d508ba2566bb6874a006b77e61130e4f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7205,c590fb33e69194f8ef52a83a883e5c74ce748804,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7206,c590fb33e69194f8ef52a83a883e5c74ce748804,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7207,c590fb33e69194f8ef52a83a883e5c74ce748804,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7208,c590fb33e69194f8ef52a83a883e5c74ce748804,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7209,c590fb33e69194f8ef52a83a883e5c74ce748804,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7210,3a6dbe6cca83ceb1a83a034644808c6a83397620,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7211,3a6dbe6cca83ceb1a83a034644808c6a83397620,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7212,3a6dbe6cca83ceb1a83a034644808c6a83397620,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7213,3a6dbe6cca83ceb1a83a034644808c6a83397620,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7214,3a6dbe6cca83ceb1a83a034644808c6a83397620,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7215,59b7cb4b0b92ee19fec10ea7bb4ef6c1dca11626,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7216,59b7cb4b0b92ee19fec10ea7bb4ef6c1dca11626,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7217,59b7cb4b0b92ee19fec10ea7bb4ef6c1dca11626,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7218,59b7cb4b0b92ee19fec10ea7bb4ef6c1dca11626,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7219,59b7cb4b0b92ee19fec10ea7bb4ef6c1dca11626,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7220,48fd3664e2ea5ee07cb44e4aba693a4f98e4787f,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7221,48fd3664e2ea5ee07cb44e4aba693a4f98e4787f,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
7222,48fd3664e2ea5ee07cb44e4aba693a4f98e4787f,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
7223,48fd3664e2ea5ee07cb44e4aba693a4f98e4787f,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
7224,48fd3664e2ea5ee07cb44e4aba693a4f98e4787f,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
7225,5efda9f324d0ed43d84ea1079e8f9cd16af4b278,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7226,5efda9f324d0ed43d84ea1079e8f9cd16af4b278,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7227,5efda9f324d0ed43d84ea1079e8f9cd16af4b278,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7228,5efda9f324d0ed43d84ea1079e8f9cd16af4b278,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7229,5efda9f324d0ed43d84ea1079e8f9cd16af4b278,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7230,9d198d06feba57cd6e67b7af4133601319291a0e,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7231,a01a28ff89b0ffac82961d2ab0c641848aea46ee,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7232,a01a28ff89b0ffac82961d2ab0c641848aea46ee,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7233,a01a28ff89b0ffac82961d2ab0c641848aea46ee,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7234,a01a28ff89b0ffac82961d2ab0c641848aea46ee,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7235,a01a28ff89b0ffac82961d2ab0c641848aea46ee,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7236,89d647c71941a6aa16ac65e4f6d301daf474f87c,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7237,89d647c71941a6aa16ac65e4f6d301daf474f87c,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7238,89d647c71941a6aa16ac65e4f6d301daf474f87c,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7239,89d647c71941a6aa16ac65e4f6d301daf474f87c,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7240,89d647c71941a6aa16ac65e4f6d301daf474f87c,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7241,c38013d7313e17bfa1e0d187d850d58889e5b2ca,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
7242,c38013d7313e17bfa1e0d187d850d58889e5b2ca,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
"
7243,8c93250f43183de5253311cc159acc368cdaeac2,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7244,8c93250f43183de5253311cc159acc368cdaeac2,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
7245,8c93250f43183de5253311cc159acc368cdaeac2,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
7246,5078d9ea965e684b753d32086753b37ca85a4bc5,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7247,5078d9ea965e684b753d32086753b37ca85a4bc5,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7248,5078d9ea965e684b753d32086753b37ca85a4bc5,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7249,5078d9ea965e684b753d32086753b37ca85a4bc5,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7250,5078d9ea965e684b753d32086753b37ca85a4bc5,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7251,ad001d447cded94b7095d86a54d1bacd7bfa01b4,/github-pages/Dockerfile,"# https://pages.github.com/versions/
"
7252,b523f44a5fe86f40a6460096059da36f431a7e60,/skype/Dockerfile,"# see https://repo.skype.com

"
7253,b523f44a5fe86f40a6460096059da36f431a7e60,/skype/Dockerfile,"# wget is invoked by skypeforlinux for crash reports
"
7254,b523f44a5fe86f40a6460096059da36f431a7e60,/skype/Dockerfile,"# https://repo.skype.com/data/SKYPE-GPG-KEY
"
7255,b523f44a5fe86f40a6460096059da36f431a7e60,/skype/Dockerfile,"# pub   2048R/DF7587C3 2016-06-22 [expires: 2021-06-21]
#       Key fingerprint = D404 0146 BE39 7250 9FD5  7FC7 1F30 45A5 DF75 87C3
# uid                  Skype Linux Client Repository <se-um@microsoft.com>
# sub   2048R/A4EBB320 2016-06-22 [expires: 2021-06-21]
"
7256,ae10b33c34066f45a94e35acac1b2e3b302a828a,/moosefs/Dockerfile,"# mfscli (and cgi) are Python-based
"
7257,ae10b33c34066f45a94e35acac1b2e3b302a828a,/moosefs/Dockerfile,"# mfsmount needs ""fusermount""
"
7258,ae10b33c34066f45a94e35acac1b2e3b302a828a,/moosefs/Dockerfile,"# allow running mfsmount as non-root
"
7259,ae10b33c34066f45a94e35acac1b2e3b302a828a,/moosefs/Dockerfile,"#user_allow_other$/user_allow_other/' /etc/fuse.conf

"
7260,ae10b33c34066f45a94e35acac1b2e3b302a828a,/moosefs/Dockerfile,"# https://github.com/moosefs/moosefs/releases
"
7261,ae10b33c34066f45a94e35acac1b2e3b302a828a,/moosefs/Dockerfile,"# prep the default configuration so things generally work Out-of-the-Box
"
7262,ae10b33c34066f45a94e35acac1b2e3b302a828a,/moosefs/Dockerfile,"# allow us to run as an arbitrary user but still modify configuration
"
7263,ae10b33c34066f45a94e35acac1b2e3b302a828a,/moosefs/Dockerfile,"# prep a scratch space with appropriate permissions to be able to do quick prototyping Out-of-the-Box
"
7264,ae10b33c34066f45a94e35acac1b2e3b302a828a,/moosefs/Dockerfile,"# without this, the Python-based mfscli ""-f"" flag refuses to use UTF-8 box-drawing characters
"
7265,c3747f9cae8ddea7ab20678f9080404566c77b8b,/diffoscope/Dockerfile,"# xxd (xxd not available in path. Falling back to Python hexlify.)
"
7266,c3747f9cae8ddea7ab20678f9080404566c77b8b,/diffoscope/Dockerfile,"# readelf ('readelf' not available in path. Falling back to binary comparison.)
"
7267,c3747f9cae8ddea7ab20678f9080404566c77b8b,/diffoscope/Dockerfile,"# for ""diffoscope --progress""
"
7268,ea436ae814d27c907db77a079d5ab27fa7b8158b,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7269,ea436ae814d27c907db77a079d5ab27fa7b8158b,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7270,ea436ae814d27c907db77a079d5ab27fa7b8158b,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7271,ea436ae814d27c907db77a079d5ab27fa7b8158b,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7272,ea436ae814d27c907db77a079d5ab27fa7b8158b,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7273,f76625b25aacf0f04dd9f189b22db64411dbad10,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7274,f76625b25aacf0f04dd9f189b22db64411dbad10,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
7275,8d26a641b3ada81edbf03c178190af88eea4805f,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7276,8d26a641b3ada81edbf03c178190af88eea4805f,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
7277,8d26a641b3ada81edbf03c178190af88eea4805f,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
7278,8d26a641b3ada81edbf03c178190af88eea4805f,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
7279,8d26a641b3ada81edbf03c178190af88eea4805f,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
7280,67f35fb5415a6749eda6a8ce53cd54850e7204d2,/jenkins/lts/Dockerfile,"# grab gosu for easy step-down from root
"
7281,67f35fb5415a6749eda6a8ce53cd54850e7204d2,/jenkins/lts/Dockerfile,"# grab tini for signal processing and zombie killing
"
7282,67f35fb5415a6749eda6a8ce53cd54850e7204d2,/jenkins/lts/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
7283,f29962219b71baf9424ddf655fae1772eb794093,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7284,f29962219b71baf9424ddf655fae1772eb794093,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7285,f29962219b71baf9424ddf655fae1772eb794093,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7286,f29962219b71baf9424ddf655fae1772eb794093,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7287,f29962219b71baf9424ddf655fae1772eb794093,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7288,44284689dfcf38788c87d6b6cf1811113f4ce670,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7289,44284689dfcf38788c87d6b6cf1811113f4ce670,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7290,44284689dfcf38788c87d6b6cf1811113f4ce670,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7291,44284689dfcf38788c87d6b6cf1811113f4ce670,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7292,44284689dfcf38788c87d6b6cf1811113f4ce670,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7293,7bb7b72637a7c79aefe7e93ba98bb3f1fdeeaeeb,/google-musicmanager/Dockerfile,"# https://www.google.com/linuxrepositories/
"
7294,7bb7b72637a7c79aefe7e93ba98bb3f1fdeeaeeb,/google-musicmanager/Dockerfile,"# pub   rsa4096 2016-04-12 [SC]
#       EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796
# uid           [ unknown] Google Inc. (Linux Packages Signing Authority) <linux-packages-keymaster@google.com>
# sub   rsa4096 2016-04-12 [S] [expires: 2019-04-12]
"
7295,7bb7b72637a7c79aefe7e93ba98bb3f1fdeeaeeb,/google-musicmanager/Dockerfile,"# pub   dsa1024 2007-03-08 [SC]
#       4CCA 1EAF 950C EE4A B839  76DC A040 830F 7FAC 5991
# uid           [ unknown] Google, Inc. Linux Package Signing Key <linux-packages-keymaster@google.com>
# sub   elg2048 2007-03-08 [E]
#		4CCA1EAF950CEE4AB83976DCA040830F7FAC5991

"
7296,7bb7b72637a7c79aefe7e93ba98bb3f1fdeeaeeb,/google-musicmanager/Dockerfile,"# only stretch+ supports --armor in trusted.gpg.asc
#	gpg --batch --export --armor $GPG_KEYS | tee /etc/apt/trusted.gpg.d/google.gpg.asc; \
"
7297,37a9ceec83dd306f904f340809d97b89fea335c8,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
7298,c8c95b0e130d480b6203957a3be8b85dc238ede4,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7299,c8c95b0e130d480b6203957a3be8b85dc238ede4,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7300,c8c95b0e130d480b6203957a3be8b85dc238ede4,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7301,c8c95b0e130d480b6203957a3be8b85dc238ede4,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7302,c8c95b0e130d480b6203957a3be8b85dc238ede4,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7303,3918e63e2098f8f479953e4a69d5cf54af419bf8,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7304,23e8b00f9d9cc8812d613fe0099aba5e92cffa2c,/certbot/Dockerfile,"# Executable not found: can't find the executable for the dialog-like program
"
7305,23e8b00f9d9cc8812d613fe0099aba5e92cffa2c,/certbot/Dockerfile,"#VOLUME /etc/letsencrypt
"
7306,23e8b00f9d9cc8812d613fe0099aba5e92cffa2c,/certbot/Dockerfile,"#VOLUME /var/log/letsencrypt

"
7307,aadd653ef6bed40c2bb0d6c4aa6d5bf76a835892,/vultr-cli/Dockerfile,"# https://github.com/vultr/vultr-cli/releases
"
7308,a23e8a01709500441a66c44b348c30d4141671b0,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7309,a23e8a01709500441a66c44b348c30d4141671b0,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7310,a23e8a01709500441a66c44b348c30d4141671b0,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7311,a23e8a01709500441a66c44b348c30d4141671b0,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7312,a23e8a01709500441a66c44b348c30d4141671b0,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7313,b17ad0ffbbbff617457eb65f76ef413d43f1020a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7314,b17ad0ffbbbff617457eb65f76ef413d43f1020a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7315,b17ad0ffbbbff617457eb65f76ef413d43f1020a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7316,b17ad0ffbbbff617457eb65f76ef413d43f1020a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7317,b17ad0ffbbbff617457eb65f76ef413d43f1020a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7318,a5bfeeccd48e05cedfc1ff03326b582b63ecc335,/phpmyadmin/Dockerfile,"# https://docs.phpmyadmin.net/en/latest/setup.html#verifying-phpmyadmin-releases
"
7319,a5bfeeccd48e05cedfc1ff03326b582b63ecc335,/phpmyadmin/Dockerfile,"# Since July 2015 all phpMyAdmin releases are cryptographically signed by the releasing developer, who through January 2016 was Marc Delisle.
"
7320,a5bfeeccd48e05cedfc1ff03326b582b63ecc335,/phpmyadmin/Dockerfile,"# Beginning in January 2016, the release manager is Isaac Bennetch.
"
7321,a5bfeeccd48e05cedfc1ff03326b582b63ecc335,/phpmyadmin/Dockerfile,"# Some additional downloads (for example themes) might be signed by Michal Čihař.
"
7322,93114d0d08ae995531e6fbe7e75ebfe98fdfca70,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7323,93114d0d08ae995531e6fbe7e75ebfe98fdfca70,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
7324,93114d0d08ae995531e6fbe7e75ebfe98fdfca70,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
7325,fb143694a23510b119eb5f6107d6ef59eb453985,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7326,fb143694a23510b119eb5f6107d6ef59eb453985,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7327,fb143694a23510b119eb5f6107d6ef59eb453985,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7328,fb143694a23510b119eb5f6107d6ef59eb453985,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7329,fb143694a23510b119eb5f6107d6ef59eb453985,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7330,dc78cc220ac49c558570ba918c8d7cf9103a130f,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7331,8fb8ad2bf8d2b17b0167c67d58d18c4f14e89e51,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7332,8fb8ad2bf8d2b17b0167c67d58d18c4f14e89e51,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7333,8fb8ad2bf8d2b17b0167c67d58d18c4f14e89e51,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7334,8fb8ad2bf8d2b17b0167c67d58d18c4f14e89e51,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7335,8fb8ad2bf8d2b17b0167c67d58d18c4f14e89e51,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7336,b09752397d170fa90d308e08b9cf387fff2c5523,/bitwarden/cli/Dockerfile,"# https://www.npmjs.com/package/@bitwarden/cli?activeTab=versions
"
7337,ce4a34a6cfa4004bfbf7c49505791c88082da86a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7338,ce4a34a6cfa4004bfbf7c49505791c88082da86a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7339,ce4a34a6cfa4004bfbf7c49505791c88082da86a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7340,ce4a34a6cfa4004bfbf7c49505791c88082da86a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7341,ce4a34a6cfa4004bfbf7c49505791c88082da86a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7342,8a78007305dcc653f5df8d9556616c45fede0141,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7343,8a78007305dcc653f5df8d9556616c45fede0141,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7344,8a78007305dcc653f5df8d9556616c45fede0141,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7345,8a78007305dcc653f5df8d9556616c45fede0141,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7346,8a78007305dcc653f5df8d9556616c45fede0141,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7347,bc8e40e3082c2ab7edd67fc46ab99c4091cfdec5,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7348,bc8e40e3082c2ab7edd67fc46ab99c4091cfdec5,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7349,bc8e40e3082c2ab7edd67fc46ab99c4091cfdec5,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7350,bc8e40e3082c2ab7edd67fc46ab99c4091cfdec5,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7351,bc8e40e3082c2ab7edd67fc46ab99c4091cfdec5,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7352,dad1b703c9fd09007aa50d78528430ca89a80b65,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7353,dad1b703c9fd09007aa50d78528430ca89a80b65,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7354,dad1b703c9fd09007aa50d78528430ca89a80b65,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7355,dad1b703c9fd09007aa50d78528430ca89a80b65,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7356,dad1b703c9fd09007aa50d78528430ca89a80b65,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7357,558a93df9fe8552e60dee09803230e4b359968b6,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7358,3c1fb98438b1a3d00ad875012ad9ce33555be29e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7359,3c1fb98438b1a3d00ad875012ad9ce33555be29e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7360,3c1fb98438b1a3d00ad875012ad9ce33555be29e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7361,3c1fb98438b1a3d00ad875012ad9ce33555be29e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7362,3c1fb98438b1a3d00ad875012ad9ce33555be29e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7363,a85e514ba3857fe878aaae715328bf4e657b4e38,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7364,a85e514ba3857fe878aaae715328bf4e657b4e38,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
7365,a85e514ba3857fe878aaae715328bf4e657b4e38,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
7366,e70ed5c98aac048e665d18a3ff5d37cd673cf2e0,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7367,e70ed5c98aac048e665d18a3ff5d37cd673cf2e0,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
7368,e70ed5c98aac048e665d18a3ff5d37cd673cf2e0,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
7369,e70ed5c98aac048e665d18a3ff5d37cd673cf2e0,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
7370,e70ed5c98aac048e665d18a3ff5d37cd673cf2e0,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
7371,b5fb98cec4fab3647d4a1ddbe14aedf7427acbf4,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7372,fefa85a99123e22e2bd6057ddc6fab59214a2ea1,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7373,7bb7b72637a7c79aefe7e93ba98bb3f1fdeeaeeb,/phpmyadmin/Dockerfile,"# https://www.phpmyadmin.net/downloads/
"
7374,7bb7b72637a7c79aefe7e93ba98bb3f1fdeeaeeb,/phpmyadmin/Dockerfile,"# https://docs.phpmyadmin.net/en/latest/setup.html#verifying-phpmyadmin-releases
"
7375,7bb7b72637a7c79aefe7e93ba98bb3f1fdeeaeeb,/phpmyadmin/Dockerfile,"# Since July 2015 all phpMyAdmin releases are cryptographically signed by the releasing developer, who through January 2016 was Marc Delisle.
"
7376,7bb7b72637a7c79aefe7e93ba98bb3f1fdeeaeeb,/phpmyadmin/Dockerfile,"# Beginning in January 2016, the release manager is Isaac Bennetch.
"
7377,7bb7b72637a7c79aefe7e93ba98bb3f1fdeeaeeb,/phpmyadmin/Dockerfile,"# Some additional downloads (for example themes) might be signed by Michal Čihař.
"
7378,2f918683657a53d3ef1dfdbf193f623c9ee95378,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7379,4c31382218d786d782fc71c5d8b526ae301101f6,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7380,4c31382218d786d782fc71c5d8b526ae301101f6,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7381,4c31382218d786d782fc71c5d8b526ae301101f6,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7382,4c31382218d786d782fc71c5d8b526ae301101f6,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7383,4c31382218d786d782fc71c5d8b526ae301101f6,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7384,2c73f58336c499dd29efeed4edd8156894895d38,/mongodb-mms/Dockerfile,"# see https://mms.mongodb.com/settings/monitoring-agent
# click on ""Ubuntu 12.04+""
"
7385,2c73f58336c499dd29efeed4edd8156894895d38,/mongodb-mms/Dockerfile,"# missing dep in mms.deb
"
7386,6b664e388a678641867968bc16310e9acbc87f50,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7387,6b664e388a678641867968bc16310e9acbc87f50,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7388,6b664e388a678641867968bc16310e9acbc87f50,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7389,6b664e388a678641867968bc16310e9acbc87f50,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7390,6b664e388a678641867968bc16310e9acbc87f50,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7391,16cc287460a79f452b7fee2d3589736699797865,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7392,16cc287460a79f452b7fee2d3589736699797865,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7393,16cc287460a79f452b7fee2d3589736699797865,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7394,16cc287460a79f452b7fee2d3589736699797865,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7395,16cc287460a79f452b7fee2d3589736699797865,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7396,01d21e34e8cd7a2b0a6a9d5e92876006bbfe7dd5,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7397,01d21e34e8cd7a2b0a6a9d5e92876006bbfe7dd5,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7398,01d21e34e8cd7a2b0a6a9d5e92876006bbfe7dd5,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7399,01d21e34e8cd7a2b0a6a9d5e92876006bbfe7dd5,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7400,01d21e34e8cd7a2b0a6a9d5e92876006bbfe7dd5,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7401,b7f8b0079fb7f43cccf30e87f6a5eea30d993f5b,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7402,b09752397d170fa90d308e08b9cf387fff2c5523,/jenkins/lts/Dockerfile,"# grab gosu for easy step-down from root
"
7403,b09752397d170fa90d308e08b9cf387fff2c5523,/jenkins/lts/Dockerfile,"# grab tini for signal processing and zombie killing
"
7404,b09752397d170fa90d308e08b9cf387fff2c5523,/jenkins/lts/Dockerfile,"# https://groups.google.com/d/msg/jenkins-infra/c7m_72vUTXE/37zw9GXhAQAJ
"
7405,b09752397d170fa90d308e08b9cf387fff2c5523,/jenkins/lts/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
7406,4b4737e79fcb79160188596fa12c6bb997019c0a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7407,4b4737e79fcb79160188596fa12c6bb997019c0a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7408,4b4737e79fcb79160188596fa12c6bb997019c0a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7409,4b4737e79fcb79160188596fa12c6bb997019c0a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7410,4b4737e79fcb79160188596fa12c6bb997019c0a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7411,55d2592583fece054021d1725c221f228d03b499,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7412,55d2592583fece054021d1725c221f228d03b499,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7413,55d2592583fece054021d1725c221f228d03b499,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7414,55d2592583fece054021d1725c221f228d03b499,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7415,55d2592583fece054021d1725c221f228d03b499,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7416,1da9c5a78e1c4cbfcaf59b951f35bd7f2ab2b560,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7417,1da9c5a78e1c4cbfcaf59b951f35bd7f2ab2b560,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7418,1da9c5a78e1c4cbfcaf59b951f35bd7f2ab2b560,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7419,1da9c5a78e1c4cbfcaf59b951f35bd7f2ab2b560,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7420,1da9c5a78e1c4cbfcaf59b951f35bd7f2ab2b560,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7421,89ef27de1d575c0c031b682b5ccfe6778f85b761,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7422,89ef27de1d575c0c031b682b5ccfe6778f85b761,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7423,89ef27de1d575c0c031b682b5ccfe6778f85b761,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7424,89ef27de1d575c0c031b682b5ccfe6778f85b761,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7425,89ef27de1d575c0c031b682b5ccfe6778f85b761,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7426,443043d99ef379e7070a061f12af810c5263bfb0,/xen-orchestra/Dockerfile,"# see https://github.com/vatesfr/xo/blob/a269af702992616f67b7bcf066eac0a1124ac8bf/doc/installation/manual_installation.md

#RUN apt-get update && apt-get install -y ruby-compass

"
7427,443043d99ef379e7070a061f12af810c5263bfb0,/xen-orchestra/Dockerfile,"#'/': '/path/to/xo-web/dist/'!'/': '../web/dist/'!"" .xo-server.yaml

"
7428,bafe443f7db71cd24f6bbbe0aef49cd6011d418f,/diffoscope/Dockerfile,"# xxd (xxd not available in path. Falling back to Python hexlify.)
"
7429,bafe443f7db71cd24f6bbbe0aef49cd6011d418f,/diffoscope/Dockerfile,"# readelf ('readelf' not available in path. Falling back to binary comparison.)
"
7430,bafe443f7db71cd24f6bbbe0aef49cd6011d418f,/diffoscope/Dockerfile,"# for ""diffoscope --progress""
"
7431,4b41b8b5ae32b74ed0259897d6123010374d233b,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7432,b09752397d170fa90d308e08b9cf387fff2c5523,/vultr-cli/Dockerfile,"# https://github.com/vultr/vultr-cli/releases
"
7433,ef190231d8bccc078cdd14d150e935b87afa478d,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7434,ef190231d8bccc078cdd14d150e935b87afa478d,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7435,ef190231d8bccc078cdd14d150e935b87afa478d,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7436,ef190231d8bccc078cdd14d150e935b87afa478d,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7437,ef190231d8bccc078cdd14d150e935b87afa478d,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7438,be35a85e076599a7da83b7f4185fbfce7566ff43,/makemkv/Dockerfile,"# FPL_MainFeature detection only seemed to work with OpenJDK 9 (8 was insufficient)
"
7439,be35a85e076599a7da83b7f4185fbfce7566ff43,/makemkv/Dockerfile,"# This disc requires Java runtime (JRE), but none was found. Certain functions will fail, please install Java. See http://www.makemkv.com/bdjava/ for details.
"
7440,be35a85e076599a7da83b7f4185fbfce7566ff43,/makemkv/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
7441,be35a85e076599a7da83b7f4185fbfce7566ff43,/makemkv/Dockerfile,"# http://www.makemkv.com/forum2/viewtopic.php?f=3&t=224
"
7442,be35a85e076599a7da83b7f4185fbfce7566ff43,/makemkv/Dockerfile,"# beta code: http://www.makemkv.com/forum2/viewtopic.php?f=5&t=1053
"
7443,be35a85e076599a7da83b7f4185fbfce7566ff43,/makemkv/Dockerfile,"# pub   dsa2048 2017-05-26 [SC]
#       2ECF 2330 5F1F C0B3 2001  6733 94E3 083A 1804 2697
# uid           [ unknown] MakeMKV (signature) <support@makemkv.com>
"
7444,c76474c668922ea048344995e7e2de9debf0d809,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7445,b88639eee9395c6c7567ba8ea76231ab6391b924,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7446,b88639eee9395c6c7567ba8ea76231ab6391b924,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7447,b88639eee9395c6c7567ba8ea76231ab6391b924,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7448,b88639eee9395c6c7567ba8ea76231ab6391b924,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7449,b88639eee9395c6c7567ba8ea76231ab6391b924,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7450,f45ba3a9b9f5627c412beb10aa2cfda3c01b32a5,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7451,f45ba3a9b9f5627c412beb10aa2cfda3c01b32a5,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7452,f45ba3a9b9f5627c412beb10aa2cfda3c01b32a5,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7453,f45ba3a9b9f5627c412beb10aa2cfda3c01b32a5,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7454,f45ba3a9b9f5627c412beb10aa2cfda3c01b32a5,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7455,0a1e9a9598ac21b6b38d860b2b61864780aad387,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7456,0a1e9a9598ac21b6b38d860b2b61864780aad387,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
7457,0a1e9a9598ac21b6b38d860b2b61864780aad387,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
7458,0a1e9a9598ac21b6b38d860b2b61864780aad387,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
7459,0a1e9a9598ac21b6b38d860b2b61864780aad387,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
7460,a43c5d9e777f019fbd51948a1cf314da28bfcdfc,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7461,a43c5d9e777f019fbd51948a1cf314da28bfcdfc,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7462,a43c5d9e777f019fbd51948a1cf314da28bfcdfc,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7463,a43c5d9e777f019fbd51948a1cf314da28bfcdfc,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7464,a43c5d9e777f019fbd51948a1cf314da28bfcdfc,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7465,c318e967c039c0f9e1994b9571776b499a5f55ce,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7466,c318e967c039c0f9e1994b9571776b499a5f55ce,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7467,c318e967c039c0f9e1994b9571776b499a5f55ce,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7468,c318e967c039c0f9e1994b9571776b499a5f55ce,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7469,c318e967c039c0f9e1994b9571776b499a5f55ce,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7470,682bb2a2ad1b05d04fd1403c0171bc7f53aee6b0,/github-hub/Dockerfile,"# https://github.com/github/hub/releases
"
7471,d98acadacdcabbfc6a4ca0f4470bc2a9569eaa75,/github-pages/Dockerfile,"# https://pages.github.com/versions/
"
7472,2b139005df57c03e6a7f891deff824030538378e,/certbot/Dockerfile,"# Executable not found: can't find the executable for the dialog-like program
"
7473,2b139005df57c03e6a7f891deff824030538378e,/certbot/Dockerfile,"#VOLUME /etc/letsencrypt
"
7474,2b139005df57c03e6a7f891deff824030538378e,/certbot/Dockerfile,"#VOLUME /var/log/letsencrypt

"
7475,d9e83eda0e2aff62aa15c32e28519e0721d5c151,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7476,d9e83eda0e2aff62aa15c32e28519e0721d5c151,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
7477,d9e83eda0e2aff62aa15c32e28519e0721d5c151,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
7478,d9e83eda0e2aff62aa15c32e28519e0721d5c151,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
7479,d9e83eda0e2aff62aa15c32e28519e0721d5c151,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
7480,2ee4105b2c5a1adab8338adb21762603be41313f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7481,2ee4105b2c5a1adab8338adb21762603be41313f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7482,2ee4105b2c5a1adab8338adb21762603be41313f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7483,2ee4105b2c5a1adab8338adb21762603be41313f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7484,2ee4105b2c5a1adab8338adb21762603be41313f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7485,c5b385b8fe2cf998b34f3edba0101d92274a5173,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7486,b5156c871d15abaa217ac78314e1a0d2ea8c50d2,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7487,b5156c871d15abaa217ac78314e1a0d2ea8c50d2,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7488,b5156c871d15abaa217ac78314e1a0d2ea8c50d2,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7489,b5156c871d15abaa217ac78314e1a0d2ea8c50d2,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7490,b5156c871d15abaa217ac78314e1a0d2ea8c50d2,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7491,9bbfdc2a8abaf87edec42dff46095f5943395871,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7492,9bbfdc2a8abaf87edec42dff46095f5943395871,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7493,9bbfdc2a8abaf87edec42dff46095f5943395871,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7494,9bbfdc2a8abaf87edec42dff46095f5943395871,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7495,9bbfdc2a8abaf87edec42dff46095f5943395871,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7496,742aa57f5d6effcb0f74b5ea7a0e89cc813f89de,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
7497,742aa57f5d6effcb0f74b5ea7a0e89cc813f89de,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
"
7498,a537f78672e7ff092f6d573ab666aed2a67aa328,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7499,a537f78672e7ff092f6d573ab666aed2a67aa328,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
7500,a537f78672e7ff092f6d573ab666aed2a67aa328,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
7501,a537f78672e7ff092f6d573ab666aed2a67aa328,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
7502,a537f78672e7ff092f6d573ab666aed2a67aa328,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
7503,856b633ebeb76d846682adcf0e9a75251d9ee75c,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7504,856b633ebeb76d846682adcf0e9a75251d9ee75c,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7505,856b633ebeb76d846682adcf0e9a75251d9ee75c,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7506,856b633ebeb76d846682adcf0e9a75251d9ee75c,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7507,856b633ebeb76d846682adcf0e9a75251d9ee75c,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7508,de5c94e7bdb03da9481177e29a6f26ca55ded7a1,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7509,de5c94e7bdb03da9481177e29a6f26ca55ded7a1,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7510,de5c94e7bdb03da9481177e29a6f26ca55ded7a1,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7511,de5c94e7bdb03da9481177e29a6f26ca55ded7a1,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7512,de5c94e7bdb03da9481177e29a6f26ca55ded7a1,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7513,47c8b3b6c97e636cc18b43a56650759a76eb5230,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7514,47c8b3b6c97e636cc18b43a56650759a76eb5230,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
7515,47c8b3b6c97e636cc18b43a56650759a76eb5230,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
7516,47c8b3b6c97e636cc18b43a56650759a76eb5230,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
7517,47c8b3b6c97e636cc18b43a56650759a76eb5230,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
7518,c4a16fcccd060c0fc2c22e9ec77af05b6e8532b8,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7519,5b58c47c7bda28d60a4391360a51eb4d7236b408,/familysearch-indexing/Dockerfile,"# TODO add a very lightweight browser for opening help and/or registration
"
7520,4996cea4369c41780c5478f350d823acd73b0522,/sbuild/Dockerfile,"# run with ""--cap-add SYS_ADMIN"" so that sbuild can ""mount"" in the chroots it creates

"
7521,4996cea4369c41780c5478f350d823acd73b0522,/sbuild/Dockerfile,"# https://gist.github.com/tianon/a0080cbca558e4b907fe
# (useful sbuild-related scripts)
"
7522,4996cea4369c41780c5478f350d823acd73b0522,/sbuild/Dockerfile,"# usage: download-debuerreotype-tarball.sh suite [arch]
#    ie: download-debuerreotype-tarball.sh stretch
#        download-debuerreotype-tarball.sh sid i386
"
7523,13704609d96fa166614c61074e03d51dd1a90db4,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7524,13704609d96fa166614c61074e03d51dd1a90db4,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7525,13704609d96fa166614c61074e03d51dd1a90db4,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7526,13704609d96fa166614c61074e03d51dd1a90db4,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7527,13704609d96fa166614c61074e03d51dd1a90db4,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7528,d50f9b27f7180df087038088f7a384799149a7a8,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7529,88f64e871d3ce0239b23d6200968ffffb0b3577e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7530,88f64e871d3ce0239b23d6200968ffffb0b3577e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7531,88f64e871d3ce0239b23d6200968ffffb0b3577e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7532,88f64e871d3ce0239b23d6200968ffffb0b3577e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7533,88f64e871d3ce0239b23d6200968ffffb0b3577e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7534,d84e0dad8c8e8261a9f8fbadfd8e5e1fbe0d818d,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7535,d84e0dad8c8e8261a9f8fbadfd8e5e1fbe0d818d,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7536,d84e0dad8c8e8261a9f8fbadfd8e5e1fbe0d818d,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7537,d84e0dad8c8e8261a9f8fbadfd8e5e1fbe0d818d,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7538,d84e0dad8c8e8261a9f8fbadfd8e5e1fbe0d818d,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7539,93232ce4dc415091faf219d9797bf7b0c4192ad7,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7540,93232ce4dc415091faf219d9797bf7b0c4192ad7,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7541,93232ce4dc415091faf219d9797bf7b0c4192ad7,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7542,93232ce4dc415091faf219d9797bf7b0c4192ad7,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7543,93232ce4dc415091faf219d9797bf7b0c4192ad7,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7544,37b6af798174f569c38756c9cd469d7f43c8931e,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7545,b09752397d170fa90d308e08b9cf387fff2c5523,/speedtest/Dockerfile,"# https://www.speedtest.net/apps/cli#download
"
7546,b09752397d170fa90d308e08b9cf387fff2c5523,/speedtest/Dockerfile,"# TODO verify that ookla's ""armhf"" really is armv6
"
7547,b09752397d170fa90d308e08b9cf387fff2c5523,/speedtest/Dockerfile,"# TODO figure out what ookla means by their bare ""arm"" arch
"
7548,b09752397d170fa90d308e08b9cf387fff2c5523,/speedtest/Dockerfile,"#download)""; exit 1 ;; \
"
7549,b75192e738df95860b618be8effd4aeb7eb8b50c,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7550,b75192e738df95860b618be8effd4aeb7eb8b50c,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7551,b75192e738df95860b618be8effd4aeb7eb8b50c,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7552,b75192e738df95860b618be8effd4aeb7eb8b50c,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7553,b75192e738df95860b618be8effd4aeb7eb8b50c,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7554,5611ddf36001ca35d63e65b5b35d061ab4518c29,/robomongo/Dockerfile,"# install dependencies...
"
7555,b12db5306938484e757965961525a56fcc6f0b75,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7556,b12db5306938484e757965961525a56fcc6f0b75,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7557,b12db5306938484e757965961525a56fcc6f0b75,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7558,b12db5306938484e757965961525a56fcc6f0b75,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7559,b12db5306938484e757965961525a56fcc6f0b75,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7560,5d185b3d49bacb65687cfd6c1dee8876c969ee65,/vultr-cli/Dockerfile,"# https://github.com/vultr/vultr-cli/releases
"
7561,f45a984d5a2621bf73968ffdc0e1a242fb5be1d2,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7562,bc47e511bc2ad037db72b81ce9a63a99aeb4d4e5,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7563,bc47e511bc2ad037db72b81ce9a63a99aeb4d4e5,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7564,bc47e511bc2ad037db72b81ce9a63a99aeb4d4e5,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7565,bc47e511bc2ad037db72b81ce9a63a99aeb4d4e5,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7566,bc47e511bc2ad037db72b81ce9a63a99aeb4d4e5,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7567,cc5358a41f1a0f24bebcc0b9e94892c69ac0f323,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7568,cc5358a41f1a0f24bebcc0b9e94892c69ac0f323,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
7569,cc5358a41f1a0f24bebcc0b9e94892c69ac0f323,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
7570,97dc18fc618be136f305c8c2ef450046ed385e63,/diffoscope/Dockerfile,"# xxd (xxd not available in path. Falling back to Python hexlify.)
"
7571,97dc18fc618be136f305c8c2ef450046ed385e63,/diffoscope/Dockerfile,"# readelf ('readelf' not available in path. Falling back to binary comparison.)
"
7572,97dc18fc618be136f305c8c2ef450046ed385e63,/diffoscope/Dockerfile,"# for ""diffoscope --progress""
"
7573,861c5480a46ec27cd5c8b16db0e929bf6d943bfa,/snapcraft/Dockerfile,"# based initially on https://hub.docker.com/r/didrocks/snapcraft/
"
7574,861c5480a46ec27cd5c8b16db0e929bf6d943bfa,/snapcraft/Dockerfile,"# enable multiverse as snapcraft cleanbuild does
"
7575,861c5480a46ec27cd5c8b16db0e929bf6d943bfa,/snapcraft/Dockerfile,"# pin specific version so we can update with a natural cache bust
"
7576,11779a653be0467fca1792e7ac070279dad7b173,/slack/Dockerfile,"# the .deb file linked at https://slack.com/downloads/instructions/debian includes ""/etc/cron.daily/slack"" which sets up an APT repo entry as in the following installation

# pub   rsa4096 2016-02-18 [SCEA]
#       DB08 5A08 CA13 B8AC B917  E0F6 D938 EC0D 0386 51BD
# uid           [ unknown] https://packagecloud.io/slacktechnologies/slack (https://packagecloud.io/docs#gpg_signing) <support@packagecloud.io>
# sub   rsa4096 2016-02-18 [SEA]
"
7577,11779a653be0467fca1792e7ac070279dad7b173,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libX11-xcb.so.1: cannot open shared object file: No such file or directory
"
7578,11779a653be0467fca1792e7ac070279dad7b173,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libasound.so.2: cannot open shared object file: No such file or directory
"
7579,11779a653be0467fca1792e7ac070279dad7b173,/slack/Dockerfile,"# 3.3.3: slack: error while loading shared libraries: libgtk-3.so.0: cannot open shared object file: No such file or directory
"
7580,11779a653be0467fca1792e7ac070279dad7b173,/slack/Dockerfile,"# 4.4.0: Error: libxkbfile.so.1: cannot open shared object file: No such file or directory
"
7581,11779a653be0467fca1792e7ac070279dad7b173,/slack/Dockerfile,"# 4.4.0: libGL error: failed to load driver: (i915_dri.so, i194, i965, swrast_dir.so, swrast)
"
7582,f1261c9f45f1813b4a561b8de1f7c8c4d075cc96,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7583,b09752397d170fa90d308e08b9cf387fff2c5523,/tinygo/Dockerfile,"# the .deb (as of 0.6.0) installs to /usr/local/tinygo but doesn't add ""tinygo"" to PATH
"
7584,b09752397d170fa90d308e08b9cf387fff2c5523,/tinygo/Dockerfile,"# https://tinygo.org/getting-started/linux/

# https://github.com/tinygo-org/tinygo/releases
"
7585,c4c2812e3a0826f4689e3d32dfad6e3c09e4b29f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7586,c4c2812e3a0826f4689e3d32dfad6e3c09e4b29f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7587,c4c2812e3a0826f4689e3d32dfad6e3c09e4b29f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7588,c4c2812e3a0826f4689e3d32dfad6e3c09e4b29f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7589,c4c2812e3a0826f4689e3d32dfad6e3c09e4b29f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7590,4da669cd5935346825b021f8bd7d565e0c9033c4,/vultr-cli/Dockerfile,"# https://github.com/vultr/vultr-cli/releases
"
7591,ac4ccc232f72433ccb38d0d41fdf5b2740b00ce5,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7592,ac4ccc232f72433ccb38d0d41fdf5b2740b00ce5,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7593,ac4ccc232f72433ccb38d0d41fdf5b2740b00ce5,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7594,ac4ccc232f72433ccb38d0d41fdf5b2740b00ce5,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7595,ac4ccc232f72433ccb38d0d41fdf5b2740b00ce5,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7596,ba9d3c89bbe2d60e1a3974ef7e8c1caa95948dcc,/robomongo/Dockerfile,"# install dependencies...
"
7597,96c35807b88d9f5ca3320857d1bd04c3e5f05946,/vultr-cli/Dockerfile,"# https://github.com/vultr/vultr-cli/releases
"
7598,dd29c3fc1ca4109f21b70b9619c38a58d76aaa0c,/debian/ubuntu-devel/Dockerfile,"# let's make apt list package versions, since those are handy during devel
"
7599,dd29c3fc1ca4109f21b70b9619c38a58d76aaa0c,/debian/ubuntu-devel/Dockerfile,"# normal build deps
"
7600,dd29c3fc1ca4109f21b70b9619c38a58d76aaa0c,/debian/ubuntu-devel/Dockerfile,"# need deb-src for compiling packages
"
7601,dd29c3fc1ca4109f21b70b9619c38a58d76aaa0c,/debian/ubuntu-devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
7602,dd29c3fc1ca4109f21b70b9619c38a58d76aaa0c,/debian/ubuntu-devel/Dockerfile,"# for ssh to debian hosts, let's make sure we know their fingerprints <3
"
7603,dd29c3fc1ca4109f21b70b9619c38a58d76aaa0c,/debian/ubuntu-devel/Dockerfile,"# make sure things are pretty
"
7604,dd29c3fc1ca4109f21b70b9619c38a58d76aaa0c,/debian/ubuntu-devel/Dockerfile,"#(force_color_prompt=yes)/\1/' ~/.bashrc

# quilt is much amaze: https://wiki.debian.org/UsingQuilt#Using_quilt_with_Debian_source_packages
"
7605,dd29c3fc1ca4109f21b70b9619c38a58d76aaa0c,/debian/ubuntu-devel/Dockerfile,"# make sure pbuilder-dist uses a sane default mirror
"
7606,c5eb09017bb7303093659b1a062e3730f344188a,/makemkv/Dockerfile,"# This disc requires Java runtime (JRE), but none was found. Certain functions will fail, please install Java. See http://www.makemkv.com/bdjava/ for details.
"
7607,c5eb09017bb7303093659b1a062e3730f344188a,/makemkv/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
7608,c5eb09017bb7303093659b1a062e3730f344188a,/makemkv/Dockerfile,"# FPL_MainFeature detection only seemed to work with OpenJDK 9 (8 was insufficient)
"
7609,c5eb09017bb7303093659b1a062e3730f344188a,/makemkv/Dockerfile,"# Unable to execute external program 'ccextractor' as its path is not set in preferences
# Failed to execute external program 'ccextractor' from location '/usr/local/bin/mmccextr'
# (but it doesn't exist in the perferences dialog...)
"
7610,c5eb09017bb7303093659b1a062e3730f344188a,/makemkv/Dockerfile,"# http://www.makemkv.com/forum2/viewtopic.php?f=3&t=224
"
7611,c5eb09017bb7303093659b1a062e3730f344188a,/makemkv/Dockerfile,"# beta code: http://www.makemkv.com/forum2/viewtopic.php?f=5&t=1053
"
7612,c5eb09017bb7303093659b1a062e3730f344188a,/makemkv/Dockerfile,"# pub   dsa2048 2017-05-26 [SC]
#       2ECF 2330 5F1F C0B3 2001  6733 94E3 083A 1804 2697
# uid           [ unknown] MakeMKV (signature) <support@makemkv.com>
"
7613,ae10b33c34066f45a94e35acac1b2e3b302a828a,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7614,ae10b33c34066f45a94e35acac1b2e3b302a828a,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
7615,ae10b33c34066f45a94e35acac1b2e3b302a828a,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
7616,272d594b8604170cc1d41f88fe6bf146f897054c,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7617,272d594b8604170cc1d41f88fe6bf146f897054c,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7618,272d594b8604170cc1d41f88fe6bf146f897054c,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7619,272d594b8604170cc1d41f88fe6bf146f897054c,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7620,272d594b8604170cc1d41f88fe6bf146f897054c,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7621,1011bc890d51975889e23002378190d79dd05092,/phpmyadmin/Dockerfile,"# https://docs.phpmyadmin.net/en/latest/setup.html#verifying-phpmyadmin-releases
"
7622,1011bc890d51975889e23002378190d79dd05092,/phpmyadmin/Dockerfile,"# Since July 2015 all phpMyAdmin releases are cryptographically signed by the releasing developer, who through January 2016 was Marc Delisle.
"
7623,1011bc890d51975889e23002378190d79dd05092,/phpmyadmin/Dockerfile,"# Beginning in January 2016, the release manager is Isaac Bennetch.
"
7624,1011bc890d51975889e23002378190d79dd05092,/phpmyadmin/Dockerfile,"# Some additional downloads (for example themes) might be signed by Michal Čihař.
"
7625,24d83725b7b01736da82b29516d9d18a027bcdcc,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7626,24d83725b7b01736da82b29516d9d18a027bcdcc,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7627,24d83725b7b01736da82b29516d9d18a027bcdcc,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7628,24d83725b7b01736da82b29516d9d18a027bcdcc,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7629,24d83725b7b01736da82b29516d9d18a027bcdcc,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7630,a7fe179d2013cc04daed6eea84c010f9053283b4,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7631,a7fe179d2013cc04daed6eea84c010f9053283b4,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
7632,a7fe179d2013cc04daed6eea84c010f9053283b4,/jenkins/Dockerfile,"# workaround ""apt-key adv --recv-keys"" hanging in stretch and above
"
7633,ee9f313c3ccbaa7832f9fee07b720175c73d3347,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7634,41956a5c14ff889f17bf31e77bdd841c840866c9,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7635,0a5b58d7b2857f96bcbbff2f176a9766cdbddcd9,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
7636,2de6ba8428ca3a5c2d992152f8d798f5d18cdc01,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7637,b75f19d02df461f58160fc11827bfc4615e4f347,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7638,bfa84464c847b4d3c4a06d354885d40a1cd12a5d,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7639,bfa84464c847b4d3c4a06d354885d40a1cd12a5d,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
7640,bfa84464c847b4d3c4a06d354885d40a1cd12a5d,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
7641,bfa84464c847b4d3c4a06d354885d40a1cd12a5d,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
7642,bfa84464c847b4d3c4a06d354885d40a1cd12a5d,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
7643,9c1b2d8ec519cd9a4730f33e9acc3cf088092998,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7644,9c1b2d8ec519cd9a4730f33e9acc3cf088092998,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7645,9c1b2d8ec519cd9a4730f33e9acc3cf088092998,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7646,9c1b2d8ec519cd9a4730f33e9acc3cf088092998,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7647,9c1b2d8ec519cd9a4730f33e9acc3cf088092998,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7648,048cc30ab14d5f3a9b09a3c36260b9a680a76c3d,/steam/Dockerfile,"# zenity is used during early startup for dialogs and progress bars
"
7649,048cc30ab14d5f3a9b09a3c36260b9a680a76c3d,/steam/Dockerfile,"# wget is used for uploading crash dumps
"
7650,048cc30ab14d5f3a9b09a3c36260b9a680a76c3d,/steam/Dockerfile,"# needed for ""dbus-launch"" (not sure what that's used for)
"
7651,048cc30ab14d5f3a9b09a3c36260b9a680a76c3d,/steam/Dockerfile,"# needed for ""localedef"" below
"
7652,048cc30ab14d5f3a9b09a3c36260b9a680a76c3d,/steam/Dockerfile,"# WARNING: setlocale('en_US.UTF-8') failed, using locale: 'C'. International characters may not work.
"
7653,048cc30ab14d5f3a9b09a3c36260b9a680a76c3d,/steam/Dockerfile,"# create a default ""steam"" user for running the container without root privileges
"
7654,048cc30ab14d5f3a9b09a3c36260b9a680a76c3d,/steam/Dockerfile,"# https://github.com/ValveSoftware/steam-for-linux#getting-started
# http://media.steampowered.com/client/installer/steam.deb redirects to https://repo.steampowered.com/steam/archive/precise/steam_latest.deb
# https://repo.steampowered.com/steam/archive/precise/?C=M&O=D
# https://repo.steampowered.com/steam/archive/precise/?C=N&O=D
# ""steam_latest.deb"" is a symlink to ""steam-launcher_X.X.X.X_all.deb""
# https://repo.steampowered.com/steam/dists/precise/steam/binary-amd64/Packages (current version, current SHA256)
"
7655,048cc30ab14d5f3a9b09a3c36260b9a680a76c3d,/steam/Dockerfile,"# let's head off a few of the things steam will want to install immediately
"
7656,048cc30ab14d5f3a9b09a3c36260b9a680a76c3d,/steam/Dockerfile,"# installing libfontconfig1 from Ubuntu stops some runtime-related fontconfig errors/warnings (https://github.com/ValveSoftware/steam-for-linux/issues/3307#issuecomment-506650268)
"
7657,048cc30ab14d5f3a9b09a3c36260b9a680a76c3d,/steam/Dockerfile,"# useful when using ""--env DEBUGGER=gdb"" or ""--env DEBUGGER=strace"" to debug steam startup issues
#RUN set -eux; \
#	apt-get update; \
#	apt-get install -y --no-install-recommends \
#		gdb \
#		strace \
#	; \
#	rm -rf /var/lib/apt/lists/*

"
7658,7b7bbc1f1e1fdf2f604f3c46522e80afe88ecf2f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7659,7b7bbc1f1e1fdf2f604f3c46522e80afe88ecf2f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7660,7b7bbc1f1e1fdf2f604f3c46522e80afe88ecf2f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7661,7b7bbc1f1e1fdf2f604f3c46522e80afe88ecf2f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7662,7b7bbc1f1e1fdf2f604f3c46522e80afe88ecf2f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7663,7f29ea6024e89afb03c6be4f5c6f4cf339925808,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7664,7f29ea6024e89afb03c6be4f5c6f4cf339925808,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7665,7f29ea6024e89afb03c6be4f5c6f4cf339925808,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7666,7f29ea6024e89afb03c6be4f5c6f4cf339925808,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7667,7f29ea6024e89afb03c6be4f5c6f4cf339925808,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7668,287456c3c38cf5ca202c56b5da8b91e5d2ed3976,/docker-tianon/Dockerfile,"# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
"
7669,f1faa5ff7e266c9f683b52494ada25a2970fb475,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7670,39fbd36b3ab314692aadf188690597f4fee39303,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7671,32f6a5fe1f03d923a5e94f71a430159484d55490,/docker/master/dind/Dockerfile,"# https://github.com/docker/docker/blob/master/project/PACKAGERS.md#runtime-dependencies
"
7672,32f6a5fe1f03d923a5e94f71a430159484d55490,/docker/master/dind/Dockerfile,"# TODO aufs-tools

"
7673,0398d8c076fed924aa2aec87374aa7bed83d701c,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7674,7d4b40f4b98100f811fda3e7990226c46ce62e4f,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7675,7d4b40f4b98100f811fda3e7990226c46ce62e4f,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
7676,7d4b40f4b98100f811fda3e7990226c46ce62e4f,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
7677,7d4b40f4b98100f811fda3e7990226c46ce62e4f,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
7678,7d4b40f4b98100f811fda3e7990226c46ce62e4f,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
7679,61df5f9fb92c254b9c4918ef7bdf7aad8d7ba013,/vultr-cli/Dockerfile,"# https://github.com/vultr/vultr-cli/releases
"
7680,d3e3348dec6c01f11dfd109520a73ea2dd1c6871,/vultr-cli/Dockerfile,"# https://github.com/vultr/vultr-cli/releases
"
7681,9a6a1e3709dc029799ec367c5c0b4b75639cf4c6,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7682,9a6a1e3709dc029799ec367c5c0b4b75639cf4c6,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7683,9a6a1e3709dc029799ec367c5c0b4b75639cf4c6,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7684,9a6a1e3709dc029799ec367c5c0b4b75639cf4c6,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7685,9a6a1e3709dc029799ec367c5c0b4b75639cf4c6,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7686,9c0f5052431fdc0bc9f44764a3338acee6126a8e,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7687,fbef218e19026b860a47bdd79e306ea72fbc3a65,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7688,db3b0048aa8865c5a1a2c4d75ab0f2dcb639a9e6,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
7689,76b9beae0083b4eecb3ae291a0d5e64cba247aa9,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7690,76b9beae0083b4eecb3ae291a0d5e64cba247aa9,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7691,76b9beae0083b4eecb3ae291a0d5e64cba247aa9,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7692,76b9beae0083b4eecb3ae291a0d5e64cba247aa9,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7693,76b9beae0083b4eecb3ae291a0d5e64cba247aa9,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7694,6f8ed12e24c47887de6365f08dcbd0bd652a0749,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7695,8073dfc2af27b71298f0130acab2b3653b31907f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7696,8073dfc2af27b71298f0130acab2b3653b31907f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7697,8073dfc2af27b71298f0130acab2b3653b31907f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7698,8073dfc2af27b71298f0130acab2b3653b31907f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7699,8073dfc2af27b71298f0130acab2b3653b31907f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7700,bfc16e94062e82971d3c8f1a3586cd0cdb29daa3,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7701,bfc16e94062e82971d3c8f1a3586cd0cdb29daa3,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7702,bfc16e94062e82971d3c8f1a3586cd0cdb29daa3,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7703,bfc16e94062e82971d3c8f1a3586cd0cdb29daa3,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7704,bfc16e94062e82971d3c8f1a3586cd0cdb29daa3,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7705,907806bc888f65751b6d464ded31c0c610a1a014,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7706,907806bc888f65751b6d464ded31c0c610a1a014,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
7707,907806bc888f65751b6d464ded31c0c610a1a014,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
7708,907806bc888f65751b6d464ded31c0c610a1a014,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
7709,907806bc888f65751b6d464ded31c0c610a1a014,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
7710,bb91faee2b3009d724b0ab6489cd793f0a8319cf,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7711,ee6b42952e48ec1caa45a6dde2bd83efdbd4e227,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7712,419de1e1e3c4b7af575cf099bc2bfd17d3db41d7,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7713,419de1e1e3c4b7af575cf099bc2bfd17d3db41d7,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7714,419de1e1e3c4b7af575cf099bc2bfd17d3db41d7,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7715,419de1e1e3c4b7af575cf099bc2bfd17d3db41d7,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7716,419de1e1e3c4b7af575cf099bc2bfd17d3db41d7,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7717,304779cec09bd297dfc5b3ab421ba240f6be9b92,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7718,304779cec09bd297dfc5b3ab421ba240f6be9b92,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7719,304779cec09bd297dfc5b3ab421ba240f6be9b92,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7720,304779cec09bd297dfc5b3ab421ba240f6be9b92,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7721,304779cec09bd297dfc5b3ab421ba240f6be9b92,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7722,26468c8cd5ecdc81baa889e3c54dd730ebc23f2e,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7723,1de0cdc7f5402384d2f4bbdacd3fc234de2ef9b5,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7724,1de0cdc7f5402384d2f4bbdacd3fc234de2ef9b5,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7725,1de0cdc7f5402384d2f4bbdacd3fc234de2ef9b5,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7726,1de0cdc7f5402384d2f4bbdacd3fc234de2ef9b5,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7727,1de0cdc7f5402384d2f4bbdacd3fc234de2ef9b5,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7728,924ceb0932cdee536b4c384806970ac44a1c8886,/debian/devel/Dockerfile,"# normal build deps
"
7729,924ceb0932cdee536b4c384806970ac44a1c8886,/debian/devel/Dockerfile,"# need an editor for ""dch -i""
"
7730,924ceb0932cdee536b4c384806970ac44a1c8886,/debian/devel/Dockerfile,"# a few extra little useful things
"
7731,924ceb0932cdee536b4c384806970ac44a1c8886,/debian/devel/Dockerfile,"# need deb-src for compiling packages
"
7732,924ceb0932cdee536b4c384806970ac44a1c8886,/debian/devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
7733,924ceb0932cdee536b4c384806970ac44a1c8886,/debian/devel/Dockerfile,"# for ssh to debian hosts, let's make sure we know their fingerprints <3
"
7734,924ceb0932cdee536b4c384806970ac44a1c8886,/debian/devel/Dockerfile,"# make sure things are pretty
"
7735,924ceb0932cdee536b4c384806970ac44a1c8886,/debian/devel/Dockerfile,"#(force_color_prompt=yes)/\1/' /root/.bashrc

# quilt is much amaze: https://wiki.debian.org/UsingQuilt#Using_quilt_with_Debian_source_packages
"
7736,e1bd7de6ca5f4d34a2cb9224e1521cf95b6e932e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7737,e1bd7de6ca5f4d34a2cb9224e1521cf95b6e932e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7738,e1bd7de6ca5f4d34a2cb9224e1521cf95b6e932e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7739,e1bd7de6ca5f4d34a2cb9224e1521cf95b6e932e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7740,e1bd7de6ca5f4d34a2cb9224e1521cf95b6e932e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7741,e24ac976873626061c2489fc643225cfd70bc9cb,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7742,e24ac976873626061c2489fc643225cfd70bc9cb,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7743,e24ac976873626061c2489fc643225cfd70bc9cb,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7744,e24ac976873626061c2489fc643225cfd70bc9cb,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7745,e24ac976873626061c2489fc643225cfd70bc9cb,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7746,3eb65a851f7179f12b34b61182657e59c0700cdd,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7747,9e9ebd039a7af7e3ae6b0ffd773ecac5cc56bf0e,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7748,5a734dddbc5242cf37782c4dcec4343a928b34c7,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7749,5a734dddbc5242cf37782c4dcec4343a928b34c7,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7750,5a734dddbc5242cf37782c4dcec4343a928b34c7,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7751,5a734dddbc5242cf37782c4dcec4343a928b34c7,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7752,5a734dddbc5242cf37782c4dcec4343a928b34c7,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7753,9e7be54a8368f1069b3e2547a76a1f3dac08f971,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7754,9e7be54a8368f1069b3e2547a76a1f3dac08f971,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
7755,9e7be54a8368f1069b3e2547a76a1f3dac08f971,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
7756,9884bab8ee98a10858eb3d53b9a1db2ae3d33271,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7757,9884bab8ee98a10858eb3d53b9a1db2ae3d33271,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7758,9884bab8ee98a10858eb3d53b9a1db2ae3d33271,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7759,9884bab8ee98a10858eb3d53b9a1db2ae3d33271,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7760,9884bab8ee98a10858eb3d53b9a1db2ae3d33271,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7761,791f4978024f6190b8c626e76379978a05627f46,/tinygo/Dockerfile,"# the .deb (as of 0.6.0) installs to /usr/local/tinygo but doesn't add ""tinygo"" to PATH
"
7762,791f4978024f6190b8c626e76379978a05627f46,/tinygo/Dockerfile,"# https://tinygo.org/getting-started/linux/

# https://github.com/tinygo-org/tinygo/releases
"
7763,c2b4f974f44bc4aed93c4db48e7a46e8179a3ce8,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7764,8ccce1d747d1f5a9f366bdb283da9f723efd8522,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7765,8ccce1d747d1f5a9f366bdb283da9f723efd8522,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7766,8ccce1d747d1f5a9f366bdb283da9f723efd8522,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7767,8ccce1d747d1f5a9f366bdb283da9f723efd8522,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7768,8ccce1d747d1f5a9f366bdb283da9f723efd8522,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7769,53ce9371559772dbff3d3fb4cd65877f2d8b6a05,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7770,cb9d0f76483cdbbbfaf9b23b92cde53500571cd6,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7771,cb9d0f76483cdbbbfaf9b23b92cde53500571cd6,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7772,cb9d0f76483cdbbbfaf9b23b92cde53500571cd6,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7773,cb9d0f76483cdbbbfaf9b23b92cde53500571cd6,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7774,cb9d0f76483cdbbbfaf9b23b92cde53500571cd6,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7775,abfb759eb858d5a294dd60678e4b736b13abd3b1,/certbot/Dockerfile,"# Executable not found: can't find the executable for the dialog-like program
"
7776,abfb759eb858d5a294dd60678e4b736b13abd3b1,/certbot/Dockerfile,"#VOLUME /etc/letsencrypt
"
7777,abfb759eb858d5a294dd60678e4b736b13abd3b1,/certbot/Dockerfile,"#VOLUME /var/log/letsencrypt

"
7778,d56de3a48e38bfcb4186e16dc2a6efceb9ed9964,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7779,d56de3a48e38bfcb4186e16dc2a6efceb9ed9964,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7780,d56de3a48e38bfcb4186e16dc2a6efceb9ed9964,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7781,d56de3a48e38bfcb4186e16dc2a6efceb9ed9964,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7782,d56de3a48e38bfcb4186e16dc2a6efceb9ed9964,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7783,fb39b3ae027ef1ecba0d0d9408d9d072be1fd838,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7784,fb39b3ae027ef1ecba0d0d9408d9d072be1fd838,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7785,fb39b3ae027ef1ecba0d0d9408d9d072be1fd838,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7786,fb39b3ae027ef1ecba0d0d9408d9d072be1fd838,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7787,fb39b3ae027ef1ecba0d0d9408d9d072be1fd838,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7788,6fedb8959ccb915dcef35e1be68e11e0bf87e255,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7789,6fedb8959ccb915dcef35e1be68e11e0bf87e255,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
7790,6fedb8959ccb915dcef35e1be68e11e0bf87e255,/jenkins/Dockerfile,"# workaround ""apt-key adv --recv-keys"" hanging in stretch and above
"
7791,9eaa1f31dfdff8fcfe9204f9bdce8bdec8a8977c,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
7792,9eaa1f31dfdff8fcfe9204f9bdce8bdec8a8977c,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
7793,9eaa1f31dfdff8fcfe9204f9bdce8bdec8a8977c,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
7794,d9ad93722f3cb117acad653becfb576c187183f2,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7795,8878fa82ac434e3a22304ae650fd72953b44f739,/dind/Dockerfile,"#RUN curl -sLS https://get.docker.io | sh

# let's grab the lastest ""master"" version of the install.sh script >:)
"
7796,e1d4516ab3ac0158e3a6900426561a27d5066646,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7797,e1d4516ab3ac0158e3a6900426561a27d5066646,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
7798,e1d4516ab3ac0158e3a6900426561a27d5066646,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
7799,e1d4516ab3ac0158e3a6900426561a27d5066646,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
7800,e1d4516ab3ac0158e3a6900426561a27d5066646,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
7801,9d918afa63d589fc295e3c8d1bb943d109c25335,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7802,9d918afa63d589fc295e3c8d1bb943d109c25335,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7803,9d918afa63d589fc295e3c8d1bb943d109c25335,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7804,9d918afa63d589fc295e3c8d1bb943d109c25335,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7805,9d918afa63d589fc295e3c8d1bb943d109c25335,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7806,d84221d6efa2fd7958e23cbc2f2cd2ad638ff320,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7807,20891713de91a8b592a5d008165d0a126149757a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7808,20891713de91a8b592a5d008165d0a126149757a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7809,20891713de91a8b592a5d008165d0a126149757a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7810,20891713de91a8b592a5d008165d0a126149757a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7811,20891713de91a8b592a5d008165d0a126149757a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7812,cdef14b2017d86bf06b3efb7eac9434d15547cef,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7813,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/12.04/Dockerfile,"# much of this was gleaned from https://github.com/lxc/lxc/blob/lxc-0.8.0/templates/lxc-ubuntu.in
# and then heavily modified and hacked like crazy

# we're going to want this bad boy installed so we can connect :)
"
7814,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/12.04/Dockerfile,"# undo some leet hax of the base image
"
7815,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/12.04/Dockerfile,"# generate a nice UTF-8 locale for our use
"
7816,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/12.04/Dockerfile,"# remove some pointless services
"
7817,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/12.04/Dockerfile,"# /lib/init/fstab: cleared out for bare-bones Docker' > /lib/init/fstab

# small fix for SSH in 13.10 (that's harmless everywhere else)
"
7818,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/12.04/Dockerfile,"# let Upstart know it's in a container
"
7819,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/12.04/Dockerfile,"# set a cheap, simple password for great convenience
"
7820,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/12.04/Dockerfile,"# we can has SSH
"
7821,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/12.04/Dockerfile,"# prepare for takeoff
"
7822,a4774fecff6c4df78e07a310f579b6889dc28f75,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7823,a4774fecff6c4df78e07a310f579b6889dc28f75,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7824,a4774fecff6c4df78e07a310f579b6889dc28f75,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7825,a4774fecff6c4df78e07a310f579b6889dc28f75,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7826,a4774fecff6c4df78e07a310f579b6889dc28f75,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7827,8d9a55265741f411de3766f136746f1231a74ac8,/diffoscope/Dockerfile,"# xxd (xxd not available in path. Falling back to Python hexlify.)
"
7828,8d9a55265741f411de3766f136746f1231a74ac8,/diffoscope/Dockerfile,"# readelf ('readelf' not available in path. Falling back to binary comparison.)
"
7829,8d9a55265741f411de3766f136746f1231a74ac8,/diffoscope/Dockerfile,"# for ""diffoscope --progress""
"
7830,9c1b2d8ec519cd9a4730f33e9acc3cf088092998,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7831,2c5f720d107e67827fc622b3c6d8a4c84d78d870,/bash/4.1/Dockerfile,"# gpg: key 64EA74AB: public key ""Chet Ramey <chet@cwru.edu>"" imported
"
7832,2c5f720d107e67827fc622b3c6d8a4c84d78d870,/bash/4.1/Dockerfile,"# https://ftp.gnu.org/gnu/bash/?C=M;O=D
"
7833,2c5f720d107e67827fc622b3c6d8a4c84d78d870,/bash/4.1/Dockerfile,"# https://ftp.gnu.org/gnu/bash/bash-4.1-patches/?C=M;O=D
"
7834,2c5f720d107e67827fc622b3c6d8a4c84d78d870,/bash/4.1/Dockerfile,"# prefixed with ""_"" since ""$BASH..."" have meaning in Bash parlance

"
7835,2c5f720d107e67827fc622b3c6d8a4c84d78d870,/bash/4.1/Dockerfile,"# delete a few installed bits for smaller image size
"
7836,38a3c66e1604bcb54b017edbc149d9e3be27250a,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7837,370d6d8dfdfb227cfb845236b12adabab0621c6b,/mutt-gmail/Dockerfile,"# a browser is necessary!
"
7838,370d6d8dfdfb227cfb845236b12adabab0621c6b,/mutt-gmail/Dockerfile,"# my preferred editor :) (see also muttrc)
"
7839,370d6d8dfdfb227cfb845236b12adabab0621c6b,/mutt-gmail/Dockerfile,"# ""No authenticators available""
"
7840,370d6d8dfdfb227cfb845236b12adabab0621c6b,/mutt-gmail/Dockerfile,"# ""GPGME: CMS protocol not available""
"
7841,df966bd85ec8ee2d918eef64d6a93eeee3cf4930,/docker/experimental/dind/Dockerfile,"# https://github.com/docker/docker/blob/master/project/PACKAGERS.md#runtime-dependencies
"
7842,df966bd85ec8ee2d918eef64d6a93eeee3cf4930,/docker/experimental/dind/Dockerfile,"# TODO aufs-tools

"
7843,dbf9c84e433a47065f96a477fc3c604cf0249edc,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7844,dbf9c84e433a47065f96a477fc3c604cf0249edc,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7845,dbf9c84e433a47065f96a477fc3c604cf0249edc,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7846,dbf9c84e433a47065f96a477fc3c604cf0249edc,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7847,dbf9c84e433a47065f96a477fc3c604cf0249edc,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7848,820c2d591c6cdad056e77dcc8f4d51366dff4b13,/mongodb-mms/Dockerfile,"# see https://mms.mongodb.com/settings/monitoring-agent
# click on ""Ubuntu 12.04+""
"
7849,fcc818131c9706ed7545ca952768dbe16f2d5673,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7850,fcc818131c9706ed7545ca952768dbe16f2d5673,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7851,fcc818131c9706ed7545ca952768dbe16f2d5673,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7852,fcc818131c9706ed7545ca952768dbe16f2d5673,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7853,fcc818131c9706ed7545ca952768dbe16f2d5673,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7854,eff16dd2c9dc8d5d3456cb6c6a8d25105949a772,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7855,eff16dd2c9dc8d5d3456cb6c6a8d25105949a772,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
7856,eff16dd2c9dc8d5d3456cb6c6a8d25105949a772,/jenkins/Dockerfile,"# workaround ""apt-key adv --recv-keys"" hanging in stretch and above
"
7857,217170cf047605cd6919b5382a8af6476431d607,/mojo/Dockerfile,"# TODO pin a version
"
7858,217170cf047605cd6919b5382a8af6476431d607,/mojo/Dockerfile,"# TODO pin versions
"
7859,217170cf047605cd6919b5382a8af6476431d607,/mojo/Dockerfile,"# the tests for IO::Socket::SSL like to hang... :(

# https://metacpan.org/pod/release/SRI/Mojolicious-7.94/lib/Mojo/IOLoop.pm#DESCRIPTION
"
7860,217170cf047605cd6919b5382a8af6476431d607,/mojo/Dockerfile,"# epoll (Linux)
"
7861,957cfe67bb94c4f0794f7b3c91740fdc88bb3596,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7862,957cfe67bb94c4f0794f7b3c91740fdc88bb3596,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
7863,957cfe67bb94c4f0794f7b3c91740fdc88bb3596,/jenkins/Dockerfile,"# https://groups.google.com/d/msg/jenkins-infra/c7m_72vUTXE/37zw9GXhAQAJ
"
7864,957cfe67bb94c4f0794f7b3c91740fdc88bb3596,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
7865,960e2f131ba7a80bf022991938ffa7f1fb70c135,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7866,2bcfb62d2faacf99cc4524d9de5561f110fbee0a,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7867,48a97250c07689e9069c26441258482025004154,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7868,48a97250c07689e9069c26441258482025004154,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7869,48a97250c07689e9069c26441258482025004154,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7870,48a97250c07689e9069c26441258482025004154,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7871,48a97250c07689e9069c26441258482025004154,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7872,d6e6b49ee2a4102101e65540500b62066699532c,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7873,d6e6b49ee2a4102101e65540500b62066699532c,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7874,d6e6b49ee2a4102101e65540500b62066699532c,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7875,d6e6b49ee2a4102101e65540500b62066699532c,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7876,d6e6b49ee2a4102101e65540500b62066699532c,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7877,5d8d1325f974ae536a079fb3bff04bf701261f22,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7878,5d8d1325f974ae536a079fb3bff04bf701261f22,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7879,5d8d1325f974ae536a079fb3bff04bf701261f22,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7880,5d8d1325f974ae536a079fb3bff04bf701261f22,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7881,5d8d1325f974ae536a079fb3bff04bf701261f22,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7882,4c753abe59121a35349e62f0c5b00af2e1529654,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7883,4c753abe59121a35349e62f0c5b00af2e1529654,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7884,4c753abe59121a35349e62f0c5b00af2e1529654,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7885,4c753abe59121a35349e62f0c5b00af2e1529654,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7886,4c753abe59121a35349e62f0c5b00af2e1529654,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7887,d4f3fb040fc30fadf43ccbd2a75799bf00862ecf,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7888,d4f3fb040fc30fadf43ccbd2a75799bf00862ecf,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7889,d4f3fb040fc30fadf43ccbd2a75799bf00862ecf,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7890,d4f3fb040fc30fadf43ccbd2a75799bf00862ecf,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7891,d4f3fb040fc30fadf43ccbd2a75799bf00862ecf,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7892,c3747f9cae8ddea7ab20678f9080404566c77b8b,/ymlfmt/Dockerfile,"# https://pypi.org/project/ruamel.yaml/
"
7893,8e0d023c5caa4901566c59a4a5079c7f646d609b,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7894,8e0d023c5caa4901566c59a4a5079c7f646d609b,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7895,8e0d023c5caa4901566c59a4a5079c7f646d609b,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7896,8e0d023c5caa4901566c59a4a5079c7f646d609b,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7897,8e0d023c5caa4901566c59a4a5079c7f646d609b,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7898,f47529c182330448e8aab49fa00cf3642c95ccb2,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7899,f47529c182330448e8aab49fa00cf3642c95ccb2,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
7900,f47529c182330448e8aab49fa00cf3642c95ccb2,/jenkins/Dockerfile,"# workaround ""apt-key adv --recv-keys"" hanging in stretch and above
"
7901,43cc3715310f0a844dd8ba118ee3ad5e3f1958e6,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7902,43cc3715310f0a844dd8ba118ee3ad5e3f1958e6,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7903,43cc3715310f0a844dd8ba118ee3ad5e3f1958e6,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7904,43cc3715310f0a844dd8ba118ee3ad5e3f1958e6,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7905,43cc3715310f0a844dd8ba118ee3ad5e3f1958e6,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7906,dd4a53aa2e13e827e8e02a43056b678b99238b9c,/syncthing/Dockerfile,"# gpg: key BCE524C7: public key ""Jakob Borg (calmh) <jakob@nym.se>"" imported
"
7907,b4e3d3cf7a98d179762696e5a4f4661abf22e785,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7908,b4e3d3cf7a98d179762696e5a4f4661abf22e785,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7909,b4e3d3cf7a98d179762696e5a4f4661abf22e785,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7910,b4e3d3cf7a98d179762696e5a4f4661abf22e785,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7911,b4e3d3cf7a98d179762696e5a4f4661abf22e785,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7912,e0c66d9512fff829c6eb5ec02869ba77fd58bdbe,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
7913,b95a86fc8274cee0eb03192c6591f53ca86e20db,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7914,b95a86fc8274cee0eb03192c6591f53ca86e20db,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7915,b95a86fc8274cee0eb03192c6591f53ca86e20db,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7916,b95a86fc8274cee0eb03192c6591f53ca86e20db,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7917,b95a86fc8274cee0eb03192c6591f53ca86e20db,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7918,ac78e01e4644d123f93f2c794b94b79f473b450d,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7919,991e715fd1ec26d6b3314aa38018c730d38508c3,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7920,991e715fd1ec26d6b3314aa38018c730d38508c3,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7921,991e715fd1ec26d6b3314aa38018c730d38508c3,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7922,991e715fd1ec26d6b3314aa38018c730d38508c3,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7923,991e715fd1ec26d6b3314aa38018c730d38508c3,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7924,59886f0f8156f05a4b05f4b2b8782e2175ca4a76,/skype/Dockerfile,"# see https://repo.skype.com

"
7925,59886f0f8156f05a4b05f4b2b8782e2175ca4a76,/skype/Dockerfile,"# https://repo.skype.com/data/SKYPE-GPG-KEY
"
7926,59886f0f8156f05a4b05f4b2b8782e2175ca4a76,/skype/Dockerfile,"# pub   2048R/DF7587C3 2016-06-22 [expires: 2021-06-21]
#       Key fingerprint = D404 0146 BE39 7250 9FD5  7FC7 1F30 45A5 DF75 87C3
# uid                  Skype Linux Client Repository <se-um@microsoft.com>
# sub   2048R/A4EBB320 2016-06-22 [expires: 2021-06-21]
"
7927,d3dce85b40bba79314681a2125b372087107c079,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7928,d3dce85b40bba79314681a2125b372087107c079,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7929,d3dce85b40bba79314681a2125b372087107c079,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7930,d3dce85b40bba79314681a2125b372087107c079,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7931,d3dce85b40bba79314681a2125b372087107c079,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7932,bd7e1e03eb34641263ad8dcdc0e6eef010712f03,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7933,bd7e1e03eb34641263ad8dcdc0e6eef010712f03,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
7934,bd7e1e03eb34641263ad8dcdc0e6eef010712f03,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
7935,bd7e1e03eb34641263ad8dcdc0e6eef010712f03,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
7936,bd7e1e03eb34641263ad8dcdc0e6eef010712f03,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
7937,fc3466630344745d980338134ae89d8988fe72d3,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7938,fc3466630344745d980338134ae89d8988fe72d3,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7939,fc3466630344745d980338134ae89d8988fe72d3,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7940,fc3466630344745d980338134ae89d8988fe72d3,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7941,fc3466630344745d980338134ae89d8988fe72d3,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7942,57d61884ee8ea9898cad13c77b4292e26de2079f,/moosefs/Dockerfile,"# mfscli (and cgi) are Python-based
"
7943,57d61884ee8ea9898cad13c77b4292e26de2079f,/moosefs/Dockerfile,"# mfsmount needs ""fusermount""
"
7944,57d61884ee8ea9898cad13c77b4292e26de2079f,/moosefs/Dockerfile,"# allow running mfsmount as non-root
"
7945,57d61884ee8ea9898cad13c77b4292e26de2079f,/moosefs/Dockerfile,"#user_allow_other$/user_allow_other/' /etc/fuse.conf

"
7946,57d61884ee8ea9898cad13c77b4292e26de2079f,/moosefs/Dockerfile,"# https://github.com/moosefs/moosefs/releases
"
7947,57d61884ee8ea9898cad13c77b4292e26de2079f,/moosefs/Dockerfile,"# prep the default configuration so things generally work Out-of-the-Box
"
7948,57d61884ee8ea9898cad13c77b4292e26de2079f,/moosefs/Dockerfile,"# allow us to run as an arbitrary user but still modify configuration
"
7949,57d61884ee8ea9898cad13c77b4292e26de2079f,/moosefs/Dockerfile,"# prep a scratch space with appropriate permissions to be able to do quick prototyping Out-of-the-Box
"
7950,57d61884ee8ea9898cad13c77b4292e26de2079f,/moosefs/Dockerfile,"# without this, the Python-based mfscli ""-f"" flag refuses to use UTF-8 box-drawing characters
"
7951,69a8d295fd451a8430721d0881c08d3e2f051ca5,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7952,69a8d295fd451a8430721d0881c08d3e2f051ca5,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7953,69a8d295fd451a8430721d0881c08d3e2f051ca5,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7954,69a8d295fd451a8430721d0881c08d3e2f051ca5,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7955,69a8d295fd451a8430721d0881c08d3e2f051ca5,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7956,1a0d23caca1c4e3de43e5b76cb62deb14ccece17,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7957,1a0d23caca1c4e3de43e5b76cb62deb14ccece17,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7958,1a0d23caca1c4e3de43e5b76cb62deb14ccece17,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7959,1a0d23caca1c4e3de43e5b76cb62deb14ccece17,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7960,1a0d23caca1c4e3de43e5b76cb62deb14ccece17,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7961,ad001d447cded94b7095d86a54d1bacd7bfa01b4,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7962,ad001d447cded94b7095d86a54d1bacd7bfa01b4,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7963,ad001d447cded94b7095d86a54d1bacd7bfa01b4,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7964,ad001d447cded94b7095d86a54d1bacd7bfa01b4,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7965,ad001d447cded94b7095d86a54d1bacd7bfa01b4,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7966,0459e55dafaec66e18d15fedee8d68b36a5f4d38,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7967,0459e55dafaec66e18d15fedee8d68b36a5f4d38,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7968,0459e55dafaec66e18d15fedee8d68b36a5f4d38,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7969,0459e55dafaec66e18d15fedee8d68b36a5f4d38,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7970,0459e55dafaec66e18d15fedee8d68b36a5f4d38,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7971,7bb7b72637a7c79aefe7e93ba98bb3f1fdeeaeeb,/exim4/Dockerfile,"# grab tini for signal processing and zombie killing
"
7972,7bb7b72637a7c79aefe7e93ba98bb3f1fdeeaeeb,/exim4/Dockerfile,"# https://blog.dhampir.no/content/exim4-line-length-in-debian-stretch-mail-delivery-failed-returning-message-to-sender
# https://serverfault.com/a/881197
# https://bugs.debian.org/828801
"
7973,888a53ef4ad2d1d56ff16d0d572b2ddc072c7748,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7974,888a53ef4ad2d1d56ff16d0d572b2ddc072c7748,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
7975,888a53ef4ad2d1d56ff16d0d572b2ddc072c7748,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
7976,888a53ef4ad2d1d56ff16d0d572b2ddc072c7748,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
7977,888a53ef4ad2d1d56ff16d0d572b2ddc072c7748,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
7978,5335006dc1ec19760337b5194f1d747f39777cf2,/skype/Dockerfile,"# see https://repo.skype.com

"
7979,5335006dc1ec19760337b5194f1d747f39777cf2,/skype/Dockerfile,"# https://repo.skype.com/data/SKYPE-GPG-KEY
"
7980,5335006dc1ec19760337b5194f1d747f39777cf2,/skype/Dockerfile,"# pub   2048R/DF7587C3 2016-06-22 [expires: 2021-06-21]
#       Key fingerprint = D404 0146 BE39 7250 9FD5  7FC7 1F30 45A5 DF75 87C3
# uid                  Skype Linux Client Repository <se-um@microsoft.com>
# sub   2048R/A4EBB320 2016-06-22 [expires: 2021-06-21]
"
7981,90d86ad63c4a06b7d04d14ad830381b876183b3c,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
7982,d56de3a48e38bfcb4186e16dc2a6efceb9ed9964,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7983,2eef0a96f3a390fc5709a7aa236628cbbdac9c53,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7984,2eef0a96f3a390fc5709a7aa236628cbbdac9c53,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7985,2eef0a96f3a390fc5709a7aa236628cbbdac9c53,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7986,2eef0a96f3a390fc5709a7aa236628cbbdac9c53,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7987,2eef0a96f3a390fc5709a7aa236628cbbdac9c53,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7988,3e0d50cc2a629f7eaa546d05022479375a573162,/google-musicmanager/Dockerfile,"# https://www.google.com/linuxrepositories/
"
7989,3e0d50cc2a629f7eaa546d05022479375a573162,/google-musicmanager/Dockerfile,"# pub   rsa4096 2016-04-12 [SC]
#       EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796
# uid           [ unknown] Google Inc. (Linux Packages Signing Authority) <linux-packages-keymaster@google.com>
# sub   rsa4096 2016-04-12 [S] [expires: 2019-04-12]
"
7990,3e0d50cc2a629f7eaa546d05022479375a573162,/google-musicmanager/Dockerfile,"# pub   dsa1024 2007-03-08 [SC]
#       4CCA 1EAF 950C EE4A B839  76DC A040 830F 7FAC 5991
# uid           [ unknown] Google, Inc. Linux Package Signing Key <linux-packages-keymaster@google.com>
# sub   elg2048 2007-03-08 [E]
#		4CCA1EAF950CEE4AB83976DCA040830F7FAC5991

"
7991,3e0d50cc2a629f7eaa546d05022479375a573162,/google-musicmanager/Dockerfile,"# only stretch+ supports --armor in trusted.gpg.asc
#	gpg --export --armor $GPG_KEYS | tee /etc/apt/trusted.gpg.d/google.gpg.asc; \
"
7992,3839f20948900084dfb766ca6bf34bed458af812,/makemkv/Dockerfile,"# This disc requires Java runtime (JRE), but none was found. Certain functions will fail, please install Java. See http://www.makemkv.com/bdjava/ for details.
"
7993,3839f20948900084dfb766ca6bf34bed458af812,/makemkv/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
7994,3839f20948900084dfb766ca6bf34bed458af812,/makemkv/Dockerfile,"# FPL_MainFeature detection only seemed to work with OpenJDK 9 (8 was insufficient)
"
7995,3839f20948900084dfb766ca6bf34bed458af812,/makemkv/Dockerfile,"# http://www.makemkv.com/forum2/viewtopic.php?f=3&t=224
"
7996,3839f20948900084dfb766ca6bf34bed458af812,/makemkv/Dockerfile,"# beta code: http://www.makemkv.com/forum2/viewtopic.php?f=5&t=1053
"
7997,3839f20948900084dfb766ca6bf34bed458af812,/makemkv/Dockerfile,"# pub   dsa2048 2017-05-26 [SC]
#       2ECF 2330 5F1F C0B3 2001  6733 94E3 083A 1804 2697
# uid           [ unknown] MakeMKV (signature) <support@makemkv.com>
"
7998,293dea5a804eccd6508cf60fc8a121b693f652de,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7999,cf588d32013982d7b9a37f7ecd5052168b29b933,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8000,cf588d32013982d7b9a37f7ecd5052168b29b933,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8001,cf588d32013982d7b9a37f7ecd5052168b29b933,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8002,cf588d32013982d7b9a37f7ecd5052168b29b933,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8003,cf588d32013982d7b9a37f7ecd5052168b29b933,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8004,62cf23c2b8f38a650f4d2bf6291260596ed9f952,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8005,62cf23c2b8f38a650f4d2bf6291260596ed9f952,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8006,62cf23c2b8f38a650f4d2bf6291260596ed9f952,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8007,62cf23c2b8f38a650f4d2bf6291260596ed9f952,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8008,62cf23c2b8f38a650f4d2bf6291260596ed9f952,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8009,7eaebf64865f70f9ddf958e053a1b183a662df04,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8010,7eaebf64865f70f9ddf958e053a1b183a662df04,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8011,7eaebf64865f70f9ddf958e053a1b183a662df04,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8012,7eaebf64865f70f9ddf958e053a1b183a662df04,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8013,7eaebf64865f70f9ddf958e053a1b183a662df04,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8014,ac158e710ebec223929f54c873114b80878678b7,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8015,ac158e710ebec223929f54c873114b80878678b7,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8016,ac158e710ebec223929f54c873114b80878678b7,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8017,ac158e710ebec223929f54c873114b80878678b7,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8018,ac158e710ebec223929f54c873114b80878678b7,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8019,5a62d280cd13b5cba677eee152e8842cffe60248,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8020,5a62d280cd13b5cba677eee152e8842cffe60248,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8021,5a62d280cd13b5cba677eee152e8842cffe60248,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8022,5a62d280cd13b5cba677eee152e8842cffe60248,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8023,5a62d280cd13b5cba677eee152e8842cffe60248,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8024,72f1b5b516034813e4060a177e6af9e766020129,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8025,72f1b5b516034813e4060a177e6af9e766020129,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8026,72f1b5b516034813e4060a177e6af9e766020129,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8027,72f1b5b516034813e4060a177e6af9e766020129,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8028,72f1b5b516034813e4060a177e6af9e766020129,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8029,bf65ddace6124612045f163fdbb4fa740ebb3ae3,/docker-tianon/Dockerfile,"# https://github.com/docker-library/docker/pull/166
#   dockerd-entrypoint.sh uses DOCKER_TLS_CERTDIR for auto-generating TLS certificates
#   docker-entrypoint.sh uses DOCKER_TLS_CERTDIR for auto-setting DOCKER_TLS_VERIFY and DOCKER_CERT_PATH
# (For this to work, at least the ""client"" subdirectory of this path needs to be shared between the client and server containers via a volume, ""docker cp"", or other means of data sharing.)
"
8030,bf65ddace6124612045f163fdbb4fa740ebb3ae3,/docker-tianon/Dockerfile,"# also, ensure the directory pre-exists and has wide enough permissions for ""dockerd-entrypoint.sh"" to create subdirectories, even when run in ""rootless"" mode
"
8031,bf65ddace6124612045f163fdbb4fa740ebb3ae3,/docker-tianon/Dockerfile,"# (doing both /certs and /certs/client so that if Docker does a ""copy-up"" into a volume defined on /certs/client, it will ""do the right thing"" by default in a way that still works for rootless users)

"
8032,bf65ddace6124612045f163fdbb4fa740ebb3ae3,/docker-tianon/Dockerfile,"# dind

"
8033,bf65ddace6124612045f163fdbb4fa740ebb3ae3,/docker-tianon/Dockerfile,"# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
"
8034,a925d11edaf928b50c833de8a5ba9088551e4c17,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8035,a925d11edaf928b50c833de8a5ba9088551e4c17,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8036,a925d11edaf928b50c833de8a5ba9088551e4c17,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8037,a925d11edaf928b50c833de8a5ba9088551e4c17,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8038,a925d11edaf928b50c833de8a5ba9088551e4c17,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8039,d88f028897e528e47ab15d8e3b75e2e1457c45d6,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8040,d88f028897e528e47ab15d8e3b75e2e1457c45d6,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8041,d88f028897e528e47ab15d8e3b75e2e1457c45d6,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8042,d88f028897e528e47ab15d8e3b75e2e1457c45d6,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8043,d88f028897e528e47ab15d8e3b75e2e1457c45d6,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8044,eb38827fca1496b909ee80134589d5850cc4a5a1,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
8045,eb38827fca1496b909ee80134589d5850cc4a5a1,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
8046,eb38827fca1496b909ee80134589d5850cc4a5a1,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
8047,d7b3d4178857cfb88019e1d09784a2f4372583b7,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
8048,e6a3343fbca49365f1a64cca88574b1299293ed7,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
8049,8e12d01c4ceebf305705c18a16e39989b16e0089,/syncthing/Dockerfile,"# gpg: key BCE524C7: public key ""Jakob Borg (calmh) <jakob@nym.se>"" imported
"
8050,e446f979a74c09765b5c880d103a44dd7758f3fe,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
8051,0fd96789e65637f482593aa050586a7e00fd3760,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
8052,954af8b86629e5d3954a1fd6efe807f2dc2399ac,/tinygo/Dockerfile,"# the .deb (as of 0.6.0) installs to /usr/local/tinygo but doesn't add ""tinygo"" to PATH
"
8053,954af8b86629e5d3954a1fd6efe807f2dc2399ac,/tinygo/Dockerfile,"# https://tinygo.org/getting-started/linux/

# https://github.com/tinygo-org/tinygo/releases
"
8054,d3085887288ee4329036d05b10b4d8823a1e0c4d,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
8055,e5bc34b6ffad0926e3f89b9e7ff2aa85fae112f0,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
8056,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/14.04/Dockerfile,"# much of this was gleaned from https://github.com/lxc/lxc/blob/lxc-0.8.0/templates/lxc-ubuntu.in
# and then heavily modified and hacked like crazy

# we're going to want this bad boy installed so we can connect :)
"
8057,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/14.04/Dockerfile,"# undo some leet hax of the base image
"
8058,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/14.04/Dockerfile,"# generate a nice UTF-8 locale for our use
"
8059,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/14.04/Dockerfile,"# remove some pointless services
"
8060,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/14.04/Dockerfile,"# /lib/init/fstab: cleared out for bare-bones Docker' > /lib/init/fstab

# small fix for SSH in 13.10 (that's harmless everywhere else)
"
8061,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/14.04/Dockerfile,"# let Upstart know it's in a container
"
8062,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/14.04/Dockerfile,"# set a cheap, simple password for great convenience
"
8063,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/14.04/Dockerfile,"# we can has SSH
"
8064,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/14.04/Dockerfile,"# prepare for takeoff
"
8065,8c08cd3e829dc48494c3567b3c8706cc29389ba6,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
8066,799e49e0531d26bfc992bc2bbd4429c1de297f29,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
8067,56f879f14bdc88baefd533c73cb688b9d4f1a987,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8068,56f879f14bdc88baefd533c73cb688b9d4f1a987,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8069,56f879f14bdc88baefd533c73cb688b9d4f1a987,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8070,56f879f14bdc88baefd533c73cb688b9d4f1a987,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8071,56f879f14bdc88baefd533c73cb688b9d4f1a987,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8072,42193871834fe996b021a5b8129abe3bd6b4e4b2,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
8073,a6d29deac5f3dde1182c08ac80314d2b8643697f,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
8074,a6d29deac5f3dde1182c08ac80314d2b8643697f,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
8075,a6d29deac5f3dde1182c08ac80314d2b8643697f,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
8076,a6d29deac5f3dde1182c08ac80314d2b8643697f,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
8077,a6d29deac5f3dde1182c08ac80314d2b8643697f,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
8078,5d8abfae130c52b1dac0156c6794fe5ca2a92b76,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
8079,60f592f73144aeb547bd4e51d4682291fc9c305c,/mongodb-mms/Dockerfile,"# see https://mms.mongodb.com/settings/monitoring-agent
# click on ""Ubuntu 12.04+""
"
8080,60f592f73144aeb547bd4e51d4682291fc9c305c,/mongodb-mms/Dockerfile,"# missing dep in mms.deb
"
8081,7f532cfbc201fc4c67393c25e44a468ab763cb32,/kafka/Dockerfile,"# https://kafka.apache.org/downloads.html
"
8082,7f532cfbc201fc4c67393c25e44a468ab763cb32,/kafka/Dockerfile,"# https://issues.apache.org/jira/browse/INFRA-8753?focusedCommentId=14735394#comment-14735394
"
8083,7f532cfbc201fc4c67393c25e44a468ab763cb32,/kafka/Dockerfile,"# if the version is outdated, we might have to pull from the dist/archive :/
"
8084,7f532cfbc201fc4c67393c25e44a468ab763cb32,/kafka/Dockerfile,"# not all the mirrors actually carry the .asc files :'(
"
8085,e03db50a504e4c2d9754273a2967f6ce8bdd2154,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8086,e03db50a504e4c2d9754273a2967f6ce8bdd2154,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8087,e03db50a504e4c2d9754273a2967f6ce8bdd2154,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8088,e03db50a504e4c2d9754273a2967f6ce8bdd2154,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8089,e03db50a504e4c2d9754273a2967f6ce8bdd2154,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8090,3c7c7bed404009ee7aeac9421c521000017cd5cc,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
8091,5ed05dc153e6c0e39ef049df029cb11264de6553,/makemkv/Dockerfile,"# This disc requires Java runtime (JRE), but none was found. Certain functions will fail, please install Java. See http://www.makemkv.com/bdjava/ for details.
"
8092,5ed05dc153e6c0e39ef049df029cb11264de6553,/makemkv/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
8093,5ed05dc153e6c0e39ef049df029cb11264de6553,/makemkv/Dockerfile,"# FPL_MainFeature detection only seemed to work with OpenJDK 9 (8 was insufficient)
"
8094,5ed05dc153e6c0e39ef049df029cb11264de6553,/makemkv/Dockerfile,"# Unable to execute external program 'ccextractor' as its path is not set in preferences
# Failed to execute external program 'ccextractor' from location '/usr/local/bin/mmccextr'
# (but it doesn't exist in the perferences dialog...)
"
8095,5ed05dc153e6c0e39ef049df029cb11264de6553,/makemkv/Dockerfile,"# http://www.makemkv.com/forum2/viewtopic.php?f=3&t=224
"
8096,5ed05dc153e6c0e39ef049df029cb11264de6553,/makemkv/Dockerfile,"# beta code: http://www.makemkv.com/forum2/viewtopic.php?f=5&t=1053
"
8097,5ed05dc153e6c0e39ef049df029cb11264de6553,/makemkv/Dockerfile,"# pub   dsa2048 2017-05-26 [SC]
#       2ECF 2330 5F1F C0B3 2001  6733 94E3 083A 1804 2697
# uid           [ unknown] MakeMKV (signature) <support@makemkv.com>
"
8098,774333c69fa8b03703356bb92346866287098c8f,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
8099,774333c69fa8b03703356bb92346866287098c8f,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
8100,774333c69fa8b03703356bb92346866287098c8f,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
8101,ad001d447cded94b7095d86a54d1bacd7bfa01b4,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
8102,ad001d447cded94b7095d86a54d1bacd7bfa01b4,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
8103,ad001d447cded94b7095d86a54d1bacd7bfa01b4,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
8104,80f1e6f3331de8c1dc0a82e90c43c9a1efc07383,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8105,80f1e6f3331de8c1dc0a82e90c43c9a1efc07383,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8106,80f1e6f3331de8c1dc0a82e90c43c9a1efc07383,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8107,80f1e6f3331de8c1dc0a82e90c43c9a1efc07383,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8108,80f1e6f3331de8c1dc0a82e90c43c9a1efc07383,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8109,dc2aac00c92b56ff4e00eb832260daca8ac80161,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
8110,27c3ac724e24f69dd52ee9991dcf726f2cb94c22,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
8111,aad3391472c1e25612c3486643d08de9dd4d1876,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8112,aad3391472c1e25612c3486643d08de9dd4d1876,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8113,aad3391472c1e25612c3486643d08de9dd4d1876,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8114,aad3391472c1e25612c3486643d08de9dd4d1876,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8115,aad3391472c1e25612c3486643d08de9dd4d1876,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8116,7260b59db86ff29c5a9e604ba857795362003071,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8117,7260b59db86ff29c5a9e604ba857795362003071,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8118,7260b59db86ff29c5a9e604ba857795362003071,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8119,7260b59db86ff29c5a9e604ba857795362003071,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8120,7260b59db86ff29c5a9e604ba857795362003071,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8121,f6b063a9f4ff5d746ee8a440958ea2ce4bf670c7,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
8122,f6b063a9f4ff5d746ee8a440958ea2ce4bf670c7,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
8123,f6b063a9f4ff5d746ee8a440958ea2ce4bf670c7,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
8124,f6b063a9f4ff5d746ee8a440958ea2ce4bf670c7,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
8125,f6b063a9f4ff5d746ee8a440958ea2ce4bf670c7,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
8126,bf280dd05298c804b7aeb674b5019c6be51f4a16,/google-cloud-print-connector/Dockerfile,"# fetch dependencies
# format: import-path=strip-components=tarball-url
"
8127,bf280dd05298c804b7aeb674b5019c6be51f4a16,/google-cloud-print-connector/Dockerfile,"# https://github.com/coreos/go-systemd/releases
"
8128,bf280dd05298c804b7aeb674b5019c6be51f4a16,/google-cloud-print-connector/Dockerfile,"# https://github.com/satori/go.uuid/releases
"
8129,bf280dd05298c804b7aeb674b5019c6be51f4a16,/google-cloud-print-connector/Dockerfile,"# https://github.com/urfave/cli/releases
"
8130,bf280dd05298c804b7aeb674b5019c6be51f4a16,/google-cloud-print-connector/Dockerfile,"# https://github.com/golang/net/commits/master
"
8131,bf280dd05298c804b7aeb674b5019c6be51f4a16,/google-cloud-print-connector/Dockerfile,"# https://github.com/golang/oauth2/commits/master
"
8132,bf280dd05298c804b7aeb674b5019c6be51f4a16,/google-cloud-print-connector/Dockerfile,"# https://bazaar.launchpad.net/~chipaca/go-xdg/v0/files (""view revision"")
# https://bazaar.launchpad.net/~chipaca/go-xdg/v0/revision/10?start_revid=10 (""download tarball"")
"
8133,bf280dd05298c804b7aeb674b5019c6be51f4a16,/google-cloud-print-connector/Dockerfile,"#*=}""; dep=""${dep%=$strip}""; \
"
8134,bf280dd05298c804b7aeb674b5019c6be51f4a16,/google-cloud-print-connector/Dockerfile,"#*=}""; strip=""${strip%=$tarball}""; \
"
8135,bf280dd05298c804b7aeb674b5019c6be51f4a16,/google-cloud-print-connector/Dockerfile,"# https://github.com/google/cloud-print-connector/releases
"
8136,fcc0aad9df0539b398bf2822147eb4aeab5cb005,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
8137,d219b1af41fd8c21dc4c826f9bde992b55626f36,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8138,d219b1af41fd8c21dc4c826f9bde992b55626f36,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8139,d219b1af41fd8c21dc4c826f9bde992b55626f36,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8140,d219b1af41fd8c21dc4c826f9bde992b55626f36,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8141,d219b1af41fd8c21dc4c826f9bde992b55626f36,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8142,411047ef1ca2cc9ad07033680475386c31500e1f,/toybox/Dockerfile,"# ideally, we'd use official static binary releases from http://landley.net/toybox/downloads/binaries/ but they don't include the (pending) ""sh"" implementation so they're not quite enough for a full system yet

"
8143,411047ef1ca2cc9ad07033680475386c31500e1f,/toybox/Dockerfile,"# https://landley.net/toybox/downloads/?C=M;O=D
# https://github.com/landley/toybox/releases
"
8144,411047ef1ca2cc9ad07033680475386c31500e1f,/toybox/Dockerfile,"# (we set ""BUILTIN=1"" to avoid cpio / initramfs creation because we aren't building / don't need a kernel)

"
8145,a2f473344d194f756d4ce3aaeed3a1d8a74af59e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8146,a2f473344d194f756d4ce3aaeed3a1d8a74af59e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8147,a2f473344d194f756d4ce3aaeed3a1d8a74af59e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8148,a2f473344d194f756d4ce3aaeed3a1d8a74af59e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8149,a2f473344d194f756d4ce3aaeed3a1d8a74af59e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8150,8c9a6085a5048c34002576a2fa6a0df5ff0ddb5d,/diffoscope/Dockerfile,"# xxd (xxd not available in path. Falling back to Python hexlify.)
"
8151,8c9a6085a5048c34002576a2fa6a0df5ff0ddb5d,/diffoscope/Dockerfile,"# readelf ('readelf' not available in path. Falling back to binary comparison.)
"
8152,8c9a6085a5048c34002576a2fa6a0df5ff0ddb5d,/diffoscope/Dockerfile,"# for ""diffoscope --progress""
"
8153,674b7dec4ade68cfa4719e2c5e7fbeda36a5963a,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
8154,674b7dec4ade68cfa4719e2c5e7fbeda36a5963a,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
8155,674b7dec4ade68cfa4719e2c5e7fbeda36a5963a,/plex/media-server/Dockerfile,"# the published deb has pre/post-inst scripts that don't really apply to Docker (so we'll skip ""install"" entirely)
# (as of 1.18.5.2309, they have bugs around Docker detection, which is mostly for avoiding init behavior)
"
8156,674b7dec4ade68cfa4719e2c5e7fbeda36a5963a,/plex/media-server/Dockerfile,"#	apt-get update; \
#	apt-get install /tmp/plex.deb; \
#	rm -rf /var/lib/apt/lists/*; \
"
8157,9bbfdc2a8abaf87edec42dff46095f5943395871,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
8158,40665c2d2de92ebc99c9542807ace5832c6a627b,/lutris/Dockerfile,"# install Wine
#   https://github.com/lutris/docs/blob/f2bf5ca14f280e3c58d2306581294d57650c0cc2/WineDependencies.md
#   https://wiki.winehq.org/Ubuntu
"
8159,40665c2d2de92ebc99c9542807ace5832c6a627b,/lutris/Dockerfile,"# https://dl.winehq.org/wine-builds/ubuntu/dists/focal/main/binary-amd64/?C=N;O=D
# https://www.winehq.org/news/
"
8160,40665c2d2de92ebc99c9542807ace5832c6a627b,/lutris/Dockerfile,"# ""Add SDL2 Backports PPA (for Faudio package):""
"
8161,40665c2d2de92ebc99c9542807ace5832c6a627b,/lutris/Dockerfile,"# ""For compatibility reasons, install these additional libraries:""
"
8162,40665c2d2de92ebc99c9542807ace5832c6a627b,/lutris/Dockerfile,"# https://github.com/Winetricks/winetricks/releases
"
8163,40665c2d2de92ebc99c9542807ace5832c6a627b,/lutris/Dockerfile,"# https://launchpad.net/~lutris-team/+archive/ubuntu/lutris?field.series_filter=focal
"
8164,40665c2d2de92ebc99c9542807ace5832c6a627b,/lutris/Dockerfile,"# https://github.com/lutris/docs/blob/f2bf5ca14f280e3c58d2306581294d57650c0cc2/InstallingDrivers.md
"
8165,40665c2d2de92ebc99c9542807ace5832c6a627b,/lutris/Dockerfile,"# gi.repository.GLib.Error: g-exec-error-quark: Failed to execute child process “dbus-launch” (No such file or directory) (8)
"
8166,40665c2d2de92ebc99c9542807ace5832c6a627b,/lutris/Dockerfile,"# /lutris-home/games/battle.net/state-cache-merge/state-cache-update.sh: line 8: zenity: command not found
"
8167,900c6bee0810ab4dbe36e76b55a9b647f4a4f780,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8168,900c6bee0810ab4dbe36e76b55a9b647f4a4f780,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8169,900c6bee0810ab4dbe36e76b55a9b647f4a4f780,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8170,900c6bee0810ab4dbe36e76b55a9b647f4a4f780,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8171,900c6bee0810ab4dbe36e76b55a9b647f4a4f780,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8172,91a465cf6f27da45f8d907db0f1640a2eecea53b,/dind/Dockerfile,"#RUN curl -sLS https://get.docker.io | sh

# let's grab the lastest ""master"" version of the install.sh script >:)
"
8173,ec9497f2742ff8def990c10d214194de145b9319,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
8174,600905de4e5ccc241154b1495a18b8f26677240b,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
8175,7f6b804c988447bf3fdb461b9719f51036366dd7,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8176,7f6b804c988447bf3fdb461b9719f51036366dd7,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8177,7f6b804c988447bf3fdb461b9719f51036366dd7,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8178,7f6b804c988447bf3fdb461b9719f51036366dd7,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8179,7f6b804c988447bf3fdb461b9719f51036366dd7,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8180,f1261c9f45f1813b4a561b8de1f7c8c4d075cc96,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8181,f1261c9f45f1813b4a561b8de1f7c8c4d075cc96,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8182,f1261c9f45f1813b4a561b8de1f7c8c4d075cc96,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8183,f1261c9f45f1813b4a561b8de1f7c8c4d075cc96,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8184,f1261c9f45f1813b4a561b8de1f7c8c4d075cc96,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8185,8606236d585af4e1cbae27e0ca05cb68af32dce0,/exim4/Dockerfile,"# grab tini for signal processing and zombie killing
"
8186,8606236d585af4e1cbae27e0ca05cb68af32dce0,/exim4/Dockerfile,"# https://blog.dhampir.no/content/exim4-line-length-in-debian-stretch-mail-delivery-failed-returning-message-to-sender
# https://serverfault.com/a/881197
# https://bugs.debian.org/828801
"
8187,2b3b9ed7ad5e76ff28e78b0d4736760dfc4124e6,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8188,2b3b9ed7ad5e76ff28e78b0d4736760dfc4124e6,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8189,2b3b9ed7ad5e76ff28e78b0d4736760dfc4124e6,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8190,2b3b9ed7ad5e76ff28e78b0d4736760dfc4124e6,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8191,2b3b9ed7ad5e76ff28e78b0d4736760dfc4124e6,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8192,53584982fc2064909657bf4c5ec814f7579812af,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8193,53584982fc2064909657bf4c5ec814f7579812af,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8194,53584982fc2064909657bf4c5ec814f7579812af,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8195,53584982fc2064909657bf4c5ec814f7579812af,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8196,53584982fc2064909657bf4c5ec814f7579812af,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8197,3f40a2d259c5dec76803e4f8fb6bc8f8013d9b84,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
8198,3f40a2d259c5dec76803e4f8fb6bc8f8013d9b84,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
8199,3f40a2d259c5dec76803e4f8fb6bc8f8013d9b84,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
8200,3f40a2d259c5dec76803e4f8fb6bc8f8013d9b84,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
8201,3f40a2d259c5dec76803e4f8fb6bc8f8013d9b84,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
8202,06cdf029bdfc9de17550d26989d5a365fa48128b,/makemkv/Dockerfile,"# http://www.makemkv.com/forum2/viewtopic.php?f=3&t=224
"
8203,06cdf029bdfc9de17550d26989d5a365fa48128b,/makemkv/Dockerfile,"# beta code: http://www.makemkv.com/forum2/viewtopic.php?f=5&t=1053
"
8204,e8ff394e8f8040bb55d0d34f1df6a2ebac60be38,/qemu/Dockerfile,"#		qemu-system \
#		qemu-utils \
"
8205,e8ff394e8f8040bb55d0d34f1df6a2ebac60be38,/qemu/Dockerfile,"# https://www.qemu.org/download/#source
"
8206,e8ff394e8f8040bb55d0d34f1df6a2ebac60be38,/qemu/Dockerfile,"# TODO verify signature
"
8207,e8ff394e8f8040bb55d0d34f1df6a2ebac60be38,/qemu/Dockerfile,"# system targets
# (https://sources.debian.org/src/qemu/stretch/debian/rules/#L57-L61, slimmed)
"
8208,e8ff394e8f8040bb55d0d34f1df6a2ebac60be38,/qemu/Dockerfile,"# user targets
# (https://sources.debian.org/src/qemu/stretch/debian/rules/#L81-L86, slimmed)
"
8209,e8ff394e8f8040bb55d0d34f1df6a2ebac60be38,/qemu/Dockerfile,"#		--enable-rbd \
#		--enable-vde \
"
8210,f08eb0a72c7cdc67f48d0e3b02325dac20def159,/jenkins/weekly/Dockerfile,"# grab gosu for easy step-down from root
"
8211,f08eb0a72c7cdc67f48d0e3b02325dac20def159,/jenkins/weekly/Dockerfile,"# grab tini for signal processing and zombie killing
"
8212,f08eb0a72c7cdc67f48d0e3b02325dac20def159,/jenkins/weekly/Dockerfile,"# https://groups.google.com/d/msg/jenkins-infra/c7m_72vUTXE/37zw9GXhAQAJ
"
8213,f08eb0a72c7cdc67f48d0e3b02325dac20def159,/jenkins/weekly/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
8214,73c0c656a0a02276fc85ef342b73ab5e8c6542d3,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8215,73c0c656a0a02276fc85ef342b73ab5e8c6542d3,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8216,73c0c656a0a02276fc85ef342b73ab5e8c6542d3,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8217,73c0c656a0a02276fc85ef342b73ab5e8c6542d3,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8218,73c0c656a0a02276fc85ef342b73ab5e8c6542d3,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8219,63959176d777fabd87b34391df22eeccef520422,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8220,63959176d777fabd87b34391df22eeccef520422,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8221,63959176d777fabd87b34391df22eeccef520422,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8222,63959176d777fabd87b34391df22eeccef520422,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8223,63959176d777fabd87b34391df22eeccef520422,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8224,398aaa6cbd911c4c788ac2f5f187e4afe40b3dc0,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8225,398aaa6cbd911c4c788ac2f5f187e4afe40b3dc0,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8226,398aaa6cbd911c4c788ac2f5f187e4afe40b3dc0,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8227,398aaa6cbd911c4c788ac2f5f187e4afe40b3dc0,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8228,398aaa6cbd911c4c788ac2f5f187e4afe40b3dc0,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8229,7732b1f22b125108bfad4e6e5e7f5a8d959b072c,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
8230,c59841623f23a3064bad4a0cf000ff01cad41f42,/debian/devel/Dockerfile,"# let's make apt list package versions, since those are handy during devel
"
8231,c59841623f23a3064bad4a0cf000ff01cad41f42,/debian/devel/Dockerfile,"# normal build deps
"
8232,c59841623f23a3064bad4a0cf000ff01cad41f42,/debian/devel/Dockerfile,"# get dh-make-golang from Git since it's so rapidly changing
"
8233,c59841623f23a3064bad4a0cf000ff01cad41f42,/debian/devel/Dockerfile,"# need deb-src for compiling packages
"
8234,c59841623f23a3064bad4a0cf000ff01cad41f42,/debian/devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
8235,c59841623f23a3064bad4a0cf000ff01cad41f42,/debian/devel/Dockerfile,"# for ssh to debian hosts, let's make sure we know their fingerprints <3
"
8236,c59841623f23a3064bad4a0cf000ff01cad41f42,/debian/devel/Dockerfile,"# make sure things are pretty
"
8237,c59841623f23a3064bad4a0cf000ff01cad41f42,/debian/devel/Dockerfile,"#(force_color_prompt=yes)/\1/' ~/.bashrc

# quilt is much amaze: https://wiki.debian.org/UsingQuilt#Using_quilt_with_Debian_source_packages
"
8238,c59841623f23a3064bad4a0cf000ff01cad41f42,/debian/devel/Dockerfile,"# make sure pbuilder-dist uses a sane default mirror
"
8239,b33fcf6823e681845b08740af38e989117c42dd6,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
8240,b33fcf6823e681845b08740af38e989117c42dd6,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
8241,b33fcf6823e681845b08740af38e989117c42dd6,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
8242,b33fcf6823e681845b08740af38e989117c42dd6,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
8243,b33fcf6823e681845b08740af38e989117c42dd6,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
8244,dd69664f5fa50efbb5a328e3bb80f0a9a6fe4ced,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8245,dd69664f5fa50efbb5a328e3bb80f0a9a6fe4ced,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8246,dd69664f5fa50efbb5a328e3bb80f0a9a6fe4ced,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8247,dd69664f5fa50efbb5a328e3bb80f0a9a6fe4ced,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8248,dd69664f5fa50efbb5a328e3bb80f0a9a6fe4ced,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8249,200c6c0ec2fe3b3f609599816d67df1b59f7d43f,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
8250,1011bc890d51975889e23002378190d79dd05092,/snapcraft/Dockerfile,"# based initially on https://hub.docker.com/r/didrocks/snapcraft/
"
8251,1011bc890d51975889e23002378190d79dd05092,/snapcraft/Dockerfile,"# enable multiverse as snapcraft cleanbuild does
"
8252,1011bc890d51975889e23002378190d79dd05092,/snapcraft/Dockerfile,"# pin specific version so we can update with a natural cache bust
"
8253,441bfeb2caffa3b66cfcfcdfe76b13149e2527ed,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
8254,441bfeb2caffa3b66cfcfcdfe76b13149e2527ed,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
8255,441bfeb2caffa3b66cfcfcdfe76b13149e2527ed,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
8256,bfed2767f3e52dde34a62f03294d71346859a7b5,/network-toolbox/alpine/Dockerfile,"# TODO add ""nbtscan"" when we get to Alpine 3.11 (if it makes it out of edge)
# https://pkgs.alpinelinux.org/packages?name=nbtscan&branch=edge&arch=x86_64

"
8257,683b8535bdd4dd7208f4f90386e6a8911acee8e6,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8258,683b8535bdd4dd7208f4f90386e6a8911acee8e6,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8259,683b8535bdd4dd7208f4f90386e6a8911acee8e6,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8260,683b8535bdd4dd7208f4f90386e6a8911acee8e6,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8261,683b8535bdd4dd7208f4f90386e6a8911acee8e6,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8262,5b2ba61e2241b22c89786d73ab47216160b89b36,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
8263,dfb51563fe0b5080dba06b12bbe9e120268058a0,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8264,dfb51563fe0b5080dba06b12bbe9e120268058a0,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8265,dfb51563fe0b5080dba06b12bbe9e120268058a0,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8266,dfb51563fe0b5080dba06b12bbe9e120268058a0,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8267,dfb51563fe0b5080dba06b12bbe9e120268058a0,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8268,835fe9b8fc264be2002fd26c1c0c34cc712a3881,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
8269,835fe9b8fc264be2002fd26c1c0c34cc712a3881,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
8270,49f2b3d98a72eb075f0a66749d80e1922a253961,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
8271,5d0b4491cc087a01d30c8ae84f29fafd486ee206,/ehour/Dockerfile,"# https://ehour.nl/download/downloadfile.php?get=ehour-latest-standalone-unix.sh
# https://ehour.nl/download/downloadfile.php?get=ehour-1.4.3-standalone-unix.sh
"
8272,d36642051d421ca96da60272cde8e7df40b7ed25,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
8273,ef9cf9438d12236072488bc6768c0504d53636ba,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
8274,ef9cf9438d12236072488bc6768c0504d53636ba,/docker-master/Dockerfile,"# (no SHA file artifacts on download.docker.com yet as of 2017-06-07)

"
8275,ef9cf9438d12236072488bc6768c0504d53636ba,/docker-master/Dockerfile,"# https://github.com/docker-library/docker/pull/166
#   dockerd-entrypoint.sh uses DOCKER_TLS_CERTDIR for auto-generating TLS certificates
#   docker-entrypoint.sh uses DOCKER_TLS_CERTDIR for auto-setting DOCKER_TLS_VERIFY and DOCKER_CERT_PATH
# (For this to work, at least the ""client"" subdirectory of this path needs to be shared between the client and server containers via a volume, ""docker cp"", or other means of data sharing.)
"
8276,ef9cf9438d12236072488bc6768c0504d53636ba,/docker-master/Dockerfile,"# also, ensure the directory pre-exists and has wide enough permissions for ""dockerd-entrypoint.sh"" to create subdirectories, even when run in ""rootless"" mode
"
8277,ef9cf9438d12236072488bc6768c0504d53636ba,/docker-master/Dockerfile,"# (doing both /certs and /certs/client so that if Docker does a ""copy-up"" into a volume defined on /certs/client, it will ""do the right thing"" by default in a way that still works for rootless users)

"
8278,169a8f582b142bad00c03c0d22c449515bcf340d,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8279,169a8f582b142bad00c03c0d22c449515bcf340d,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8280,169a8f582b142bad00c03c0d22c449515bcf340d,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8281,169a8f582b142bad00c03c0d22c449515bcf340d,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8282,169a8f582b142bad00c03c0d22c449515bcf340d,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8283,ed4a6828a071f48b524098558a19021ec7cb9b0b,/mongodb-server/Dockerfile,"# we need stdout logging and binding on 0.0.0.0
"
8284,ed4a6828a071f48b524098558a19021ec7cb9b0b,/mongodb-server/Dockerfile,"#logpath/g; \
"
8285,08d36ebbea5d8c12ede1fac2086eba88c28320cb,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
8286,08d36ebbea5d8c12ede1fac2086eba88c28320cb,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
8287,08d36ebbea5d8c12ede1fac2086eba88c28320cb,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
8288,3b0e925eb46d6ade792879f610b1d59ce4ed9bfe,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
8289,c50bb1272a2f5ff5f1990018bb96038874c2f041,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8290,c50bb1272a2f5ff5f1990018bb96038874c2f041,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8291,c50bb1272a2f5ff5f1990018bb96038874c2f041,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8292,c50bb1272a2f5ff5f1990018bb96038874c2f041,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8293,c50bb1272a2f5ff5f1990018bb96038874c2f041,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8294,e3872662187caddf9bf72536532a2e197df12b51,/google-musicmanager/Dockerfile,"# https://www.google.com/linuxrepositories/
"
8295,e3872662187caddf9bf72536532a2e197df12b51,/google-musicmanager/Dockerfile,"# pub   rsa4096 2016-04-12 [SC]
#       EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796
# uid           [ unknown] Google Inc. (Linux Packages Signing Authority) <linux-packages-keymaster@google.com>
# sub   rsa4096 2016-04-12 [S] [expires: 2019-04-12]
"
8296,e3872662187caddf9bf72536532a2e197df12b51,/google-musicmanager/Dockerfile,"# pub   dsa1024 2007-03-08 [SC]
#       4CCA 1EAF 950C EE4A B839  76DC A040 830F 7FAC 5991
# uid           [ unknown] Google, Inc. Linux Package Signing Key <linux-packages-keymaster@google.com>
# sub   elg2048 2007-03-08 [E]
#		4CCA1EAF950CEE4AB83976DCA040830F7FAC5991

"
8297,43ecd12ca97a7c92651ad3d706f86903416f171a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8298,43ecd12ca97a7c92651ad3d706f86903416f171a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8299,43ecd12ca97a7c92651ad3d706f86903416f171a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8300,43ecd12ca97a7c92651ad3d706f86903416f171a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8301,43ecd12ca97a7c92651ad3d706f86903416f171a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8302,96302d4c1cf6ab69dda1b7bd106f22e5e995a3ce,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8303,96302d4c1cf6ab69dda1b7bd106f22e5e995a3ce,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8304,96302d4c1cf6ab69dda1b7bd106f22e5e995a3ce,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8305,96302d4c1cf6ab69dda1b7bd106f22e5e995a3ce,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8306,96302d4c1cf6ab69dda1b7bd106f22e5e995a3ce,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8307,a252864bafd25b3776b5ab61b4c3f0c2a94de441,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8308,a252864bafd25b3776b5ab61b4c3f0c2a94de441,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8309,a252864bafd25b3776b5ab61b4c3f0c2a94de441,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8310,a252864bafd25b3776b5ab61b4c3f0c2a94de441,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8311,a252864bafd25b3776b5ab61b4c3f0c2a94de441,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8312,90e8e9af32b27a45937f6b823b8776502b938556,/jenkins/weekly/Dockerfile,"# grab gosu for easy step-down from root
"
8313,90e8e9af32b27a45937f6b823b8776502b938556,/jenkins/weekly/Dockerfile,"# grab tini for signal processing and zombie killing
"
8314,90e8e9af32b27a45937f6b823b8776502b938556,/jenkins/weekly/Dockerfile,"# https://groups.google.com/d/msg/jenkins-infra/c7m_72vUTXE/37zw9GXhAQAJ
"
8315,90e8e9af32b27a45937f6b823b8776502b938556,/jenkins/weekly/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
8316,8a770950c03bdea2d6525fa169cc097765160391,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8317,8a770950c03bdea2d6525fa169cc097765160391,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8318,8a770950c03bdea2d6525fa169cc097765160391,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8319,8a770950c03bdea2d6525fa169cc097765160391,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8320,8a770950c03bdea2d6525fa169cc097765160391,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8321,007825e7a78bd969bf9b9e3b80859f965691ce40,/phpmyadmin/Dockerfile,"# https://www.phpmyadmin.net/downloads/
"
8322,007825e7a78bd969bf9b9e3b80859f965691ce40,/phpmyadmin/Dockerfile,"# https://docs.phpmyadmin.net/en/latest/setup.html#verifying-phpmyadmin-releases
"
8323,007825e7a78bd969bf9b9e3b80859f965691ce40,/phpmyadmin/Dockerfile,"# Since July 2015 all phpMyAdmin releases are cryptographically signed by the releasing developer, who through January 2016 was Marc Delisle.
"
8324,007825e7a78bd969bf9b9e3b80859f965691ce40,/phpmyadmin/Dockerfile,"# Beginning in January 2016, the release manager is Isaac Bennetch.
"
8325,007825e7a78bd969bf9b9e3b80859f965691ce40,/phpmyadmin/Dockerfile,"# Some additional downloads (for example themes) might be signed by Michal Čihař.
"
8326,b949be7e7afb1e97686f36b3ea995bade77f53a0,/diffoscope/Dockerfile,"# xxd (xxd not available in path. Falling back to Python hexlify.)
"
8327,b949be7e7afb1e97686f36b3ea995bade77f53a0,/diffoscope/Dockerfile,"# readelf ('readelf' not available in path. Falling back to binary comparison.)
"
8328,b949be7e7afb1e97686f36b3ea995bade77f53a0,/diffoscope/Dockerfile,"# for ""diffoscope --progress""
"
8329,120073662b9e94af8d826cc550aeb049397066cc,/diffoscope/Dockerfile,"# xxd (xxd not available in path. Falling back to Python hexlify.)
"
8330,120073662b9e94af8d826cc550aeb049397066cc,/diffoscope/Dockerfile,"# readelf ('readelf' not available in path. Falling back to binary comparison.)
"
8331,4b88b56aab8867e65cd22f15cb158f231a6c935d,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
8332,412da3e76717481dd793b269dd1a1b6e3ee0b51a,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
8333,412da3e76717481dd793b269dd1a1b6e3ee0b51a,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
8334,412da3e76717481dd793b269dd1a1b6e3ee0b51a,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
8335,a621a562535dca04e6775535799a91d9e08603a1,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
8336,4f90341582d6d4c101e198fe073ff93812740a0f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8337,4f90341582d6d4c101e198fe073ff93812740a0f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8338,4f90341582d6d4c101e198fe073ff93812740a0f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8339,4f90341582d6d4c101e198fe073ff93812740a0f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8340,4f90341582d6d4c101e198fe073ff93812740a0f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8341,513cd96049b6730f1164b565dfb6554ae8a10bce,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
8342,513cd96049b6730f1164b565dfb6554ae8a10bce,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
8343,513cd96049b6730f1164b565dfb6554ae8a10bce,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
8344,2aaf3fcaf59bc6d98b04c85bf01bc574c5d818a1,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
8345,6fed6c458e929113a000c9192496f370c19bf862,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8346,6fed6c458e929113a000c9192496f370c19bf862,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8347,6fed6c458e929113a000c9192496f370c19bf862,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8348,6fed6c458e929113a000c9192496f370c19bf862,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8349,6fed6c458e929113a000c9192496f370c19bf862,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8350,40de22777daa5cefe4176fb29031f3e07f77c60c,/mutt-gmail/Dockerfile,"# a browser is necessary!
"
8351,40de22777daa5cefe4176fb29031f3e07f77c60c,/mutt-gmail/Dockerfile,"# my preferred editor :) (see also muttrc)
"
8352,498396b336a7f4afe42072bc48bf77410ecfa969,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8353,498396b336a7f4afe42072bc48bf77410ecfa969,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8354,498396b336a7f4afe42072bc48bf77410ecfa969,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8355,498396b336a7f4afe42072bc48bf77410ecfa969,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8356,498396b336a7f4afe42072bc48bf77410ecfa969,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8357,6f8ed12e24c47887de6365f08dcbd0bd652a0749,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8358,6f8ed12e24c47887de6365f08dcbd0bd652a0749,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8359,6f8ed12e24c47887de6365f08dcbd0bd652a0749,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8360,6f8ed12e24c47887de6365f08dcbd0bd652a0749,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8361,6f8ed12e24c47887de6365f08dcbd0bd652a0749,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8362,c1610b96ffcea268495de6bc01aa9d72c59f9392,/certbot/Dockerfile,"# Executable not found: can't find the executable for the dialog-like program
"
8363,c1610b96ffcea268495de6bc01aa9d72c59f9392,/certbot/Dockerfile,"#VOLUME /etc/letsencrypt
"
8364,c1610b96ffcea268495de6bc01aa9d72c59f9392,/certbot/Dockerfile,"#VOLUME /var/log/letsencrypt

"
8365,351d3fe5e470ef1b75e810f2dfba38c836c716f1,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8366,351d3fe5e470ef1b75e810f2dfba38c836c716f1,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8367,351d3fe5e470ef1b75e810f2dfba38c836c716f1,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8368,351d3fe5e470ef1b75e810f2dfba38c836c716f1,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8369,351d3fe5e470ef1b75e810f2dfba38c836c716f1,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8370,c0092cbdbf387a838a3944b8f95001c26e6601c8,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
8371,adaa95f093734795175b24bc3a3c6a8ec4cba912,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8372,adaa95f093734795175b24bc3a3c6a8ec4cba912,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8373,adaa95f093734795175b24bc3a3c6a8ec4cba912,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8374,adaa95f093734795175b24bc3a3c6a8ec4cba912,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8375,adaa95f093734795175b24bc3a3c6a8ec4cba912,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8376,1e2679daf5ab9015b0814299d980b62379494b51,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8377,1e2679daf5ab9015b0814299d980b62379494b51,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8378,1e2679daf5ab9015b0814299d980b62379494b51,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8379,1e2679daf5ab9015b0814299d980b62379494b51,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8380,1e2679daf5ab9015b0814299d980b62379494b51,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8381,bb516f45da70aaa6f247d903f28cd6513e7087f3,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
8382,bb516f45da70aaa6f247d903f28cd6513e7087f3,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
8383,bb516f45da70aaa6f247d903f28cd6513e7087f3,/jenkins/Dockerfile,"# https://groups.google.com/d/msg/jenkins-infra/c7m_72vUTXE/37zw9GXhAQAJ
"
8384,bb516f45da70aaa6f247d903f28cd6513e7087f3,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
8385,cf7a10d5d124f13854af7452d7a3a3df3b376c4a,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
8386,cf7a10d5d124f13854af7452d7a3a3df3b376c4a,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
8387,cf7a10d5d124f13854af7452d7a3a3df3b376c4a,/plex/media-server/Dockerfile,"# the published deb has pre/post-inst scripts that don't really apply to Docker (so we'll skip ""install"" entirely)
# (as of 1.18.5.2309, they have bugs around Docker detection, which is mostly for avoiding init behavior)
"
8388,cf7a10d5d124f13854af7452d7a3a3df3b376c4a,/plex/media-server/Dockerfile,"#	apt-get update; \
#	apt-get install /tmp/plex.deb; \
#	rm -rf /var/lib/apt/lists/*; \
"
8389,dff1a5455ae128fc4295e647aa04f1d1c15de0a1,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
8390,dff1a5455ae128fc4295e647aa04f1d1c15de0a1,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
"
8391,df6eebd693f0c283deddf1373b93349a22366cff,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8392,df6eebd693f0c283deddf1373b93349a22366cff,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8393,df6eebd693f0c283deddf1373b93349a22366cff,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8394,df6eebd693f0c283deddf1373b93349a22366cff,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8395,df6eebd693f0c283deddf1373b93349a22366cff,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8396,440d438ffb78fc31778ba2a3c7d60359ae4c0e11,/sbuild/Dockerfile,"# run with ""--cap-add SYS_ADMIN"" so that sbuild can ""mount"" in the chroots it creates

"
8397,440d438ffb78fc31778ba2a3c7d60359ae4c0e11,/sbuild/Dockerfile,"# https://github.com/tianon/debian-bin
# useful debian-related (esp. sbuild) scripts
"
8398,440d438ffb78fc31778ba2a3c7d60359ae4c0e11,/sbuild/Dockerfile,"# usage: download-debuerreotype-tarball.sh suite [arch]
#    ie: download-debuerreotype-tarball.sh stretch
#        download-debuerreotype-tarball.sh sid i386
"
8399,eeb6b78ca3b45e065941fe4d97dea8e01714fc46,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8400,eeb6b78ca3b45e065941fe4d97dea8e01714fc46,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8401,eeb6b78ca3b45e065941fe4d97dea8e01714fc46,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8402,eeb6b78ca3b45e065941fe4d97dea8e01714fc46,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8403,eeb6b78ca3b45e065941fe4d97dea8e01714fc46,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8404,03a9d14489e6bd0e958cc7081536784eee11008a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8405,03a9d14489e6bd0e958cc7081536784eee11008a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8406,03a9d14489e6bd0e958cc7081536784eee11008a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8407,03a9d14489e6bd0e958cc7081536784eee11008a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8408,03a9d14489e6bd0e958cc7081536784eee11008a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8409,c338e5d6d98b124a45ad16e06ca3d7f0ca7c4908,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8410,c338e5d6d98b124a45ad16e06ca3d7f0ca7c4908,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8411,c338e5d6d98b124a45ad16e06ca3d7f0ca7c4908,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8412,c338e5d6d98b124a45ad16e06ca3d7f0ca7c4908,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8413,c338e5d6d98b124a45ad16e06ca3d7f0ca7c4908,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8414,af013103ede09d56f60d0c4287402f767ab4dc12,/containerd/Dockerfile,"# runtime deps
"
8415,af013103ede09d56f60d0c4287402f767ab4dc12,/containerd/Dockerfile,"# https://github.com/opencontainers/runc/releases
"
8416,af013103ede09d56f60d0c4287402f767ab4dc12,/containerd/Dockerfile,"# TODO .asc / .sha256sum
"
8417,af013103ede09d56f60d0c4287402f767ab4dc12,/containerd/Dockerfile,"# https://github.com/containerd/containerd/releases
"
8418,720f492a57116c7d0300e70d5b491384dbcb8c50,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8419,720f492a57116c7d0300e70d5b491384dbcb8c50,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8420,720f492a57116c7d0300e70d5b491384dbcb8c50,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8421,720f492a57116c7d0300e70d5b491384dbcb8c50,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8422,720f492a57116c7d0300e70d5b491384dbcb8c50,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8423,a925d11edaf928b50c833de8a5ba9088551e4c17,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
8424,9bcd03e0322b5d30e71f4fbc69563ed586802b19,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
8425,9bcd03e0322b5d30e71f4fbc69563ed586802b19,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
8426,9bcd03e0322b5d30e71f4fbc69563ed586802b19,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
8427,9bcd03e0322b5d30e71f4fbc69563ed586802b19,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
8428,9bcd03e0322b5d30e71f4fbc69563ed586802b19,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
8429,ccf056b7fe79c67dea619c7a35e343bb6c575a15,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
8430,ccf056b7fe79c67dea619c7a35e343bb6c575a15,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
8431,ccf056b7fe79c67dea619c7a35e343bb6c575a15,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
8432,ccf056b7fe79c67dea619c7a35e343bb6c575a15,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
8433,ccf056b7fe79c67dea619c7a35e343bb6c575a15,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
8434,6890a71e73c1be0ce47e0278e0eabc28eb50bf19,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8435,6890a71e73c1be0ce47e0278e0eabc28eb50bf19,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8436,6890a71e73c1be0ce47e0278e0eabc28eb50bf19,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8437,6890a71e73c1be0ce47e0278e0eabc28eb50bf19,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8438,6890a71e73c1be0ce47e0278e0eabc28eb50bf19,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8439,8ef075012ed34e552adc8a1a25734bca08782d1f,/slack/Dockerfile,"# used as a fake browser so clicked URLs (and internal Slack behavior that wants to open a browser) pop up with a URL + clipboard instead of silently doing nothing
"
8440,8ef075012ed34e552adc8a1a25734bca08782d1f,/slack/Dockerfile,"# the .deb file linked at https://slack.com/downloads/instructions/debian includes ""/etc/cron.daily/slack"" which sets up an APT repo entry as in the following installation

# pub   rsa4096 2016-02-18 [SCEA]
#       DB08 5A08 CA13 B8AC B917  E0F6 D938 EC0D 0386 51BD
# uid           [ unknown] https://packagecloud.io/slacktechnologies/slack (https://packagecloud.io/docs#gpg_signing) <support@packagecloud.io>
# sub   rsa4096 2016-02-18 [SEA]
"
8441,8ef075012ed34e552adc8a1a25734bca08782d1f,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libX11-xcb.so.1: cannot open shared object file: No such file or directory
"
8442,8ef075012ed34e552adc8a1a25734bca08782d1f,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libasound.so.2: cannot open shared object file: No such file or directory
"
8443,8ef075012ed34e552adc8a1a25734bca08782d1f,/slack/Dockerfile,"# 3.3.3: slack: error while loading shared libraries: libgtk-3.so.0: cannot open shared object file: No such file or directory
"
8444,8ef075012ed34e552adc8a1a25734bca08782d1f,/slack/Dockerfile,"# 4.4.0: Error: libxkbfile.so.1: cannot open shared object file: No such file or directory
"
8445,8ef075012ed34e552adc8a1a25734bca08782d1f,/slack/Dockerfile,"# 4.4.0: libGL error: failed to load driver: (i915_dri.so, i194, i965, swrast_dir.so, swrast)
"
8446,74c1c756573654f424e7d50dd104e149900d15a7,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
8447,5611ddf36001ca35d63e65b5b35d061ab4518c29,/mongodb-mms/Dockerfile,"# see https://mms.mongodb.com/settings/monitoring-agent
# click on ""Ubuntu 12.04+""
"
8448,5611ddf36001ca35d63e65b5b35d061ab4518c29,/mongodb-mms/Dockerfile,"# missing dep in mms.deb
"
8449,7cc0727bc035751798399e3efc29d2ecdb1e6223,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
8450,7cc0727bc035751798399e3efc29d2ecdb1e6223,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
8451,7cc0727bc035751798399e3efc29d2ecdb1e6223,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
8452,2692bacca1472d4e541d868a081010cd52a5d9c2,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
8453,2e5377c34d1ac0f577f4bdfaf561e94df55dede1,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
8454,bc7006bad1c3cbf5ffbc71b4de743d78f83bd8d6,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
8455,8f268166258d2826574a987130a0eafe1f34223d,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8456,8f268166258d2826574a987130a0eafe1f34223d,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8457,8f268166258d2826574a987130a0eafe1f34223d,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8458,8f268166258d2826574a987130a0eafe1f34223d,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8459,8f268166258d2826574a987130a0eafe1f34223d,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8460,4f3c297e3d694f4033315d4f9e5b5248c0a0aadc,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8461,4f3c297e3d694f4033315d4f9e5b5248c0a0aadc,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8462,4f3c297e3d694f4033315d4f9e5b5248c0a0aadc,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8463,4f3c297e3d694f4033315d4f9e5b5248c0a0aadc,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8464,4f3c297e3d694f4033315d4f9e5b5248c0a0aadc,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8465,b15eec0e5dadf480a7b1ad3ba05ba7c2c176c802,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8466,b15eec0e5dadf480a7b1ad3ba05ba7c2c176c802,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8467,b15eec0e5dadf480a7b1ad3ba05ba7c2c176c802,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8468,b15eec0e5dadf480a7b1ad3ba05ba7c2c176c802,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8469,b15eec0e5dadf480a7b1ad3ba05ba7c2c176c802,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8470,d3c2d2a87a3a5678cc992895b4ac4d6d92523bc2,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
8471,16243eae94d9f611d158fb2dc03a0393630c47cc,/speedtest/Dockerfile,"# https://www.speedtest.net/apps/cli#download
"
8472,16243eae94d9f611d158fb2dc03a0393630c47cc,/speedtest/Dockerfile,"# TODO verify that ookla's ""armhf"" really is armv6
"
8473,16243eae94d9f611d158fb2dc03a0393630c47cc,/speedtest/Dockerfile,"# TODO figure out what ookla means by their bare ""arm"" arch
"
8474,16243eae94d9f611d158fb2dc03a0393630c47cc,/speedtest/Dockerfile,"#download)""; exit 1 ;; \
"
8475,e31916679af1168acca03df0e237863a7751b00b,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8476,e31916679af1168acca03df0e237863a7751b00b,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8477,e31916679af1168acca03df0e237863a7751b00b,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8478,e31916679af1168acca03df0e237863a7751b00b,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8479,e31916679af1168acca03df0e237863a7751b00b,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8480,aeb6e22348109a52a08f3fe8071fbb2afd2cea30,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8481,aeb6e22348109a52a08f3fe8071fbb2afd2cea30,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8482,aeb6e22348109a52a08f3fe8071fbb2afd2cea30,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8483,aeb6e22348109a52a08f3fe8071fbb2afd2cea30,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8484,aeb6e22348109a52a08f3fe8071fbb2afd2cea30,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8485,e854b648841f28e11087c810a4588fbf5e71f244,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
8486,49de7440a88e2ab634cdeddc685b74b0de71e3c7,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
8487,49de7440a88e2ab634cdeddc685b74b0de71e3c7,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
8488,49de7440a88e2ab634cdeddc685b74b0de71e3c7,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
8489,49de7440a88e2ab634cdeddc685b74b0de71e3c7,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
8490,49de7440a88e2ab634cdeddc685b74b0de71e3c7,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
8491,04c8eb2f94d4694b4f330b178eb959225b1f9e2b,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
8492,04c8eb2f94d4694b4f330b178eb959225b1f9e2b,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
"
8493,03dc862238ad35e438da873c8a8eeba13f933b39,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8494,03dc862238ad35e438da873c8a8eeba13f933b39,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8495,03dc862238ad35e438da873c8a8eeba13f933b39,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8496,03dc862238ad35e438da873c8a8eeba13f933b39,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8497,03dc862238ad35e438da873c8a8eeba13f933b39,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8498,90f2557271b550326d206a70cf3e7af86fac0b21,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8499,90f2557271b550326d206a70cf3e7af86fac0b21,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8500,90f2557271b550326d206a70cf3e7af86fac0b21,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8501,90f2557271b550326d206a70cf3e7af86fac0b21,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8502,90f2557271b550326d206a70cf3e7af86fac0b21,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8503,b5a8c636092cd472f94365f19ac47cd7a341cb1d,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
8504,1f1f802ffd39beaa33eb67b78db6f5b158c9f965,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8505,1f1f802ffd39beaa33eb67b78db6f5b158c9f965,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8506,1f1f802ffd39beaa33eb67b78db6f5b158c9f965,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8507,1f1f802ffd39beaa33eb67b78db6f5b158c9f965,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8508,1f1f802ffd39beaa33eb67b78db6f5b158c9f965,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8509,ffdbf1c1c08068890a46565907c160be7b06d86f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8510,ffdbf1c1c08068890a46565907c160be7b06d86f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8511,ffdbf1c1c08068890a46565907c160be7b06d86f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8512,ffdbf1c1c08068890a46565907c160be7b06d86f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8513,ffdbf1c1c08068890a46565907c160be7b06d86f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8514,b8eb67b19b1cc6548d3ce2d7e1f46e9053405295,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8515,b8eb67b19b1cc6548d3ce2d7e1f46e9053405295,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8516,b8eb67b19b1cc6548d3ce2d7e1f46e9053405295,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8517,b8eb67b19b1cc6548d3ce2d7e1f46e9053405295,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8518,b8eb67b19b1cc6548d3ce2d7e1f46e9053405295,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8519,81748916bea22af13edf1de9de54d4c367f0b5e6,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8520,81748916bea22af13edf1de9de54d4c367f0b5e6,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8521,81748916bea22af13edf1de9de54d4c367f0b5e6,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8522,81748916bea22af13edf1de9de54d4c367f0b5e6,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8523,81748916bea22af13edf1de9de54d4c367f0b5e6,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8524,90564c0d3ffb5f707f2d3c49d4a9f871b5b24511,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8525,90564c0d3ffb5f707f2d3c49d4a9f871b5b24511,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8526,90564c0d3ffb5f707f2d3c49d4a9f871b5b24511,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8527,90564c0d3ffb5f707f2d3c49d4a9f871b5b24511,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8528,90564c0d3ffb5f707f2d3c49d4a9f871b5b24511,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8529,37151e603dc92562d781dec3e88bdebf2b013c14,/mutt-gmail/Dockerfile,"# a browser is necessary!
"
8530,37151e603dc92562d781dec3e88bdebf2b013c14,/mutt-gmail/Dockerfile,"# my preferred editor :) (see also muttrc)
"
8531,2733bf5befe88d52b6e4126956499f97441871a6,/docker-tianon/Dockerfile,"# DOCKER_HOST=ssh://... -- https://github.com/docker/cli/pull/1014
"
8532,2733bf5befe88d52b6e4126956499f97441871a6,/docker-tianon/Dockerfile,"# https://doi-janky.infosiftr.net/job/tianon/job/docker-deb/job/repo/lastSuccessfulBuild/artifact/pool/buster/main/amd64/
"
8533,2733bf5befe88d52b6e4126956499f97441871a6,/docker-tianon/Dockerfile,"# https://github.com/docker-library/docker/pull/166
#   dockerd-entrypoint.sh uses DOCKER_TLS_CERTDIR for auto-generating TLS certificates
#   docker-entrypoint.sh uses DOCKER_TLS_CERTDIR for auto-setting DOCKER_TLS_VERIFY and DOCKER_CERT_PATH
# (For this to work, at least the ""client"" subdirectory of this path needs to be shared between the client and server containers via a volume, ""docker cp"", or other means of data sharing.)
"
8534,2733bf5befe88d52b6e4126956499f97441871a6,/docker-tianon/Dockerfile,"# also, ensure the directory pre-exists and has wide enough permissions for ""dockerd-entrypoint.sh"" to create subdirectories, even when run in ""rootless"" mode
"
8535,2733bf5befe88d52b6e4126956499f97441871a6,/docker-tianon/Dockerfile,"# (doing both /certs and /certs/client so that if Docker does a ""copy-up"" into a volume defined on /certs/client, it will ""do the right thing"" by default in a way that still works for rootless users)

# dind

"
8536,2733bf5befe88d52b6e4126956499f97441871a6,/docker-tianon/Dockerfile,"# pigz: https://github.com/moby/moby/pull/35697 (faster gzip implementation)
"
8537,2733bf5befe88d52b6e4126956499f97441871a6,/docker-tianon/Dockerfile,"# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
"
8538,2733bf5befe88d52b6e4126956499f97441871a6,/docker-tianon/Dockerfile,"# https://github.com/docker/docker/tree/master/hack/dind
#ENV DIND_COMMIT 130b0bc6032cc675d064e1cc62626cacc9c07a57

#RUN set -eux; \
#	wget -O /usr/local/bin/dind ""https://raw.githubusercontent.com/docker/docker/${DIND_COMMIT}/hack/dind""; \
#	chmod +x /usr/local/bin/dind

"
8539,f9ea39bf92b32b3a66e204c089e5a014f89f6b30,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8540,f9ea39bf92b32b3a66e204c089e5a014f89f6b30,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8541,f9ea39bf92b32b3a66e204c089e5a014f89f6b30,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8542,f9ea39bf92b32b3a66e204c089e5a014f89f6b30,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8543,f9ea39bf92b32b3a66e204c089e5a014f89f6b30,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8544,3e9d1801ed0979555a279368c13e217a495eef1d,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
8545,3e9d1801ed0979555a279368c13e217a495eef1d,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
8546,3e9d1801ed0979555a279368c13e217a495eef1d,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
8547,cc2775314f1a13a31a7286eef5f3cb564653df6c,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8548,cc2775314f1a13a31a7286eef5f3cb564653df6c,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8549,cc2775314f1a13a31a7286eef5f3cb564653df6c,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8550,cc2775314f1a13a31a7286eef5f3cb564653df6c,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8551,cc2775314f1a13a31a7286eef5f3cb564653df6c,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8552,d90178645cd2ed4c6af84b48d9fae1fa415d5499,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8553,d90178645cd2ed4c6af84b48d9fae1fa415d5499,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8554,d90178645cd2ed4c6af84b48d9fae1fa415d5499,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8555,d90178645cd2ed4c6af84b48d9fae1fa415d5499,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8556,d90178645cd2ed4c6af84b48d9fae1fa415d5499,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8557,4a956a012803e3fabcfef5a50a4fd2e7d97215d7,/mongodb-mms/Dockerfile,"# see https://mms.mongodb.com/settings/monitoring-agent
# click on ""Ubuntu 12.04+""
"
8558,b4b3cdc75f689854e7c72b86dc451e9f4051bf29,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8559,b4b3cdc75f689854e7c72b86dc451e9f4051bf29,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8560,b4b3cdc75f689854e7c72b86dc451e9f4051bf29,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8561,b4b3cdc75f689854e7c72b86dc451e9f4051bf29,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8562,b4b3cdc75f689854e7c72b86dc451e9f4051bf29,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8563,1dad3650f05b0ed6e6dd5b59e0e0542a0b2c54b6,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8564,1dad3650f05b0ed6e6dd5b59e0e0542a0b2c54b6,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8565,1dad3650f05b0ed6e6dd5b59e0e0542a0b2c54b6,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8566,1dad3650f05b0ed6e6dd5b59e0e0542a0b2c54b6,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8567,1dad3650f05b0ed6e6dd5b59e0e0542a0b2c54b6,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8568,3c83094a14225692f4709d6d98bf6a36e1c4f4ab,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8569,3c83094a14225692f4709d6d98bf6a36e1c4f4ab,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8570,3c83094a14225692f4709d6d98bf6a36e1c4f4ab,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8571,3c83094a14225692f4709d6d98bf6a36e1c4f4ab,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8572,3c83094a14225692f4709d6d98bf6a36e1c4f4ab,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8573,f6f2bfe595695f2b3225f39181bac5da7293f1de,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
8574,f6f2bfe595695f2b3225f39181bac5da7293f1de,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
8575,f6f2bfe595695f2b3225f39181bac5da7293f1de,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
8576,f6f2bfe595695f2b3225f39181bac5da7293f1de,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
8577,f6f2bfe595695f2b3225f39181bac5da7293f1de,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
8578,45f1f4eefb32425eafb85687ec4487d4f961d37f,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
8579,45f1f4eefb32425eafb85687ec4487d4f961d37f,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
8580,45f1f4eefb32425eafb85687ec4487d4f961d37f,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
8581,45f1f4eefb32425eafb85687ec4487d4f961d37f,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
8582,45f1f4eefb32425eafb85687ec4487d4f961d37f,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
8583,55e78daa486ed60795236483470ee9563a6f9c57,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8584,55e78daa486ed60795236483470ee9563a6f9c57,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8585,55e78daa486ed60795236483470ee9563a6f9c57,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8586,55e78daa486ed60795236483470ee9563a6f9c57,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8587,55e78daa486ed60795236483470ee9563a6f9c57,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8588,ebdf7b69268218249c50749d16ae5f2d415dc2fd,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8589,ebdf7b69268218249c50749d16ae5f2d415dc2fd,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8590,ebdf7b69268218249c50749d16ae5f2d415dc2fd,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8591,ebdf7b69268218249c50749d16ae5f2d415dc2fd,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8592,ebdf7b69268218249c50749d16ae5f2d415dc2fd,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8593,1010881875924ee9b5bdc8443dd4d31b14151369,/vultr-cli/Dockerfile,"# https://github.com/vultr/vultr-cli/releases
"
8594,baf2dfc13afcee35d9b2e8e5779b79947ba6bf31,/nylas/sync-engine/Dockerfile,"# install pip from upstream (since ""python-pip"" is too old)
"
8595,baf2dfc13afcee35d9b2e8e5779b79947ba6bf31,/nylas/sync-engine/Dockerfile,"# tell pynacl to use system libsodium
"
8596,baf2dfc13afcee35d9b2e8e5779b79947ba6bf31,/nylas/sync-engine/Dockerfile,"#ENV SYNC_VERSION v0.3.0 # 2014 :'(
"
8597,baf2dfc13afcee35d9b2e8e5779b79947ba6bf31,/nylas/sync-engine/Dockerfile,"# ugh, NameError: name 'PROTOCOL_SSLv3' is not defined
"
8598,baf2dfc13afcee35d9b2e8e5779b79947ba6bf31,/nylas/sync-engine/Dockerfile," # TODO inbox-api or inbox-start
"
8599,7601adf23cf659c4e22962f89f518333e8a3b775,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
8600,7601adf23cf659c4e22962f89f518333e8a3b775,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
8601,7601adf23cf659c4e22962f89f518333e8a3b775,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
8602,37ed313954dcca783b8eb9f119ca84dcc6deff0d,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
8603,37ed313954dcca783b8eb9f119ca84dcc6deff0d,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
8604,37ed313954dcca783b8eb9f119ca84dcc6deff0d,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
8605,37ed313954dcca783b8eb9f119ca84dcc6deff0d,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
8606,37ed313954dcca783b8eb9f119ca84dcc6deff0d,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
8607,aa1660fb5057a32e7461a350605bbe9bd6e151ca,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8608,aa1660fb5057a32e7461a350605bbe9bd6e151ca,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8609,aa1660fb5057a32e7461a350605bbe9bd6e151ca,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8610,aa1660fb5057a32e7461a350605bbe9bd6e151ca,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8611,aa1660fb5057a32e7461a350605bbe9bd6e151ca,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8612,0496c92f87947fad432e3703162d3f6751017c45,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8613,0496c92f87947fad432e3703162d3f6751017c45,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8614,0496c92f87947fad432e3703162d3f6751017c45,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8615,0496c92f87947fad432e3703162d3f6751017c45,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8616,0496c92f87947fad432e3703162d3f6751017c45,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8617,08246e7be5b33bf8fb300e30804a8433af06e32f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8618,08246e7be5b33bf8fb300e30804a8433af06e32f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8619,08246e7be5b33bf8fb300e30804a8433af06e32f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8620,08246e7be5b33bf8fb300e30804a8433af06e32f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8621,08246e7be5b33bf8fb300e30804a8433af06e32f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8622,99a40d9de27c39fca06e52ee58e26f4b3f568c90,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8623,99a40d9de27c39fca06e52ee58e26f4b3f568c90,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8624,99a40d9de27c39fca06e52ee58e26f4b3f568c90,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8625,99a40d9de27c39fca06e52ee58e26f4b3f568c90,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8626,99a40d9de27c39fca06e52ee58e26f4b3f568c90,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8627,5bdba260837cbf327c69e12c01987999892a5b3c,/debian/devel/Dockerfile,"# normal build deps
"
8628,5bdba260837cbf327c69e12c01987999892a5b3c,/debian/devel/Dockerfile,"# need an editor for ""dch -i""
"
8629,5bdba260837cbf327c69e12c01987999892a5b3c,/debian/devel/Dockerfile,"# a few extra little useful things
"
8630,5bdba260837cbf327c69e12c01987999892a5b3c,/debian/devel/Dockerfile,"# need deb-src for compiling packages
"
8631,5bdba260837cbf327c69e12c01987999892a5b3c,/debian/devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
8632,dbb9c6e65d9deb72f752b55be588f05a5ddf2670,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
8633,dbb9c6e65d9deb72f752b55be588f05a5ddf2670,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
8634,dbb9c6e65d9deb72f752b55be588f05a5ddf2670,/jenkins/Dockerfile,"# https://groups.google.com/d/msg/jenkins-infra/c7m_72vUTXE/37zw9GXhAQAJ
"
8635,dbb9c6e65d9deb72f752b55be588f05a5ddf2670,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
8636,8622c00b55a34a6eeb3335961426b75ed116f841,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8637,8622c00b55a34a6eeb3335961426b75ed116f841,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8638,8622c00b55a34a6eeb3335961426b75ed116f841,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8639,8622c00b55a34a6eeb3335961426b75ed116f841,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8640,8622c00b55a34a6eeb3335961426b75ed116f841,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8641,4c22416e1fd21a492a979e9f0481f55f3dc55542,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8642,4c22416e1fd21a492a979e9f0481f55f3dc55542,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8643,4c22416e1fd21a492a979e9f0481f55f3dc55542,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8644,4c22416e1fd21a492a979e9f0481f55f3dc55542,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8645,4c22416e1fd21a492a979e9f0481f55f3dc55542,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8646,031ab9c4d5121ebf91d32ff0700141435b61acfa,/jenkins/slave/Dockerfile,"# let's make /root a volume so ~/.ssh/authorized_keys is easier to save
"
8647,b634e6439b66bd639ca7605cf339d3ac60aa229d,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8648,b634e6439b66bd639ca7605cf339d3ac60aa229d,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8649,b634e6439b66bd639ca7605cf339d3ac60aa229d,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8650,b634e6439b66bd639ca7605cf339d3ac60aa229d,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8651,b634e6439b66bd639ca7605cf339d3ac60aa229d,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8652,4ba012d7a786aa2445075b7638ee5103d8ce6f8a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8653,4ba012d7a786aa2445075b7638ee5103d8ce6f8a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8654,4ba012d7a786aa2445075b7638ee5103d8ce6f8a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8655,4ba012d7a786aa2445075b7638ee5103d8ce6f8a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8656,4ba012d7a786aa2445075b7638ee5103d8ce6f8a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8657,13276e7f7db6987293c50a577366c06ab8a31426,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8658,13276e7f7db6987293c50a577366c06ab8a31426,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8659,13276e7f7db6987293c50a577366c06ab8a31426,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8660,13276e7f7db6987293c50a577366c06ab8a31426,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8661,13276e7f7db6987293c50a577366c06ab8a31426,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8662,7f3591d1ea9726b9cc3e4c322302e01997bf1c20,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8663,7f3591d1ea9726b9cc3e4c322302e01997bf1c20,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8664,7f3591d1ea9726b9cc3e4c322302e01997bf1c20,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8665,7f3591d1ea9726b9cc3e4c322302e01997bf1c20,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8666,7f3591d1ea9726b9cc3e4c322302e01997bf1c20,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8667,a53b2acec16b12915fc134f0362dadf3977960af,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8668,a53b2acec16b12915fc134f0362dadf3977960af,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8669,a53b2acec16b12915fc134f0362dadf3977960af,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8670,a53b2acec16b12915fc134f0362dadf3977960af,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8671,a53b2acec16b12915fc134f0362dadf3977960af,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8672,382fc87134265f58231d55943c5906d7ae23bf84,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
8673,d75f3ec3b8aafd286b9e1626f823cc8d46e4df84,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
8674,d75f3ec3b8aafd286b9e1626f823cc8d46e4df84,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
8675,f080a8392b8bf780524e05c12dcd30bab7b23215,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
8676,f080a8392b8bf780524e05c12dcd30bab7b23215,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
8677,f080a8392b8bf780524e05c12dcd30bab7b23215,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
8678,f35287efd367f6742000547c297f24122cee8816,/debian/ubuntu-devel/Dockerfile,"# let's make apt list package versions, since those are handy during devel
"
8679,f35287efd367f6742000547c297f24122cee8816,/debian/ubuntu-devel/Dockerfile,"# normal build deps
"
8680,f35287efd367f6742000547c297f24122cee8816,/debian/ubuntu-devel/Dockerfile,"# get dh-make-golang from Git since it's so rapidly changing
"
8681,f35287efd367f6742000547c297f24122cee8816,/debian/ubuntu-devel/Dockerfile,"# need deb-src for compiling packages
"
8682,f35287efd367f6742000547c297f24122cee8816,/debian/ubuntu-devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
8683,f35287efd367f6742000547c297f24122cee8816,/debian/ubuntu-devel/Dockerfile,"# for ssh to debian hosts, let's make sure we know their fingerprints <3
"
8684,f35287efd367f6742000547c297f24122cee8816,/debian/ubuntu-devel/Dockerfile,"# make sure things are pretty
"
8685,f35287efd367f6742000547c297f24122cee8816,/debian/ubuntu-devel/Dockerfile,"#(force_color_prompt=yes)/\1/' ~/.bashrc

# quilt is much amaze: https://wiki.debian.org/UsingQuilt#Using_quilt_with_Debian_source_packages
"
8686,f35287efd367f6742000547c297f24122cee8816,/debian/ubuntu-devel/Dockerfile,"# make sure pbuilder-dist uses a sane default mirror
"
8687,75832a853002c33aa6f31271d791ee1387bcd82c,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
8688,75832a853002c33aa6f31271d791ee1387bcd82c,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
8689,75832a853002c33aa6f31271d791ee1387bcd82c,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
8690,75832a853002c33aa6f31271d791ee1387bcd82c,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
8691,75832a853002c33aa6f31271d791ee1387bcd82c,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
8692,78a0d3bd7e4171bc6ce4c89820f1ce2004721e46,/certbot/Dockerfile,"# Executable not found: can't find the executable for the dialog-like program
"
8693,78a0d3bd7e4171bc6ce4c89820f1ce2004721e46,/certbot/Dockerfile,"#VOLUME /etc/letsencrypt
"
8694,78a0d3bd7e4171bc6ce4c89820f1ce2004721e46,/certbot/Dockerfile,"#VOLUME /var/log/letsencrypt

"
8695,63b221527cef069f599c0c26c2c8fd7dcf19ae2b,/mutt-gmail/Dockerfile,"# a browser is necessary!
"
8696,63b221527cef069f599c0c26c2c8fd7dcf19ae2b,/mutt-gmail/Dockerfile,"# my preferred editor :) (see also muttrc)
"
8697,406c8826b224c3ff85b680e5a633f645f4bd9d4e,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
8698,ed97960022a26799538a922d7a676d4042f5dbe4,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8699,ed97960022a26799538a922d7a676d4042f5dbe4,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8700,ed97960022a26799538a922d7a676d4042f5dbe4,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8701,ed97960022a26799538a922d7a676d4042f5dbe4,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8702,ed97960022a26799538a922d7a676d4042f5dbe4,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8703,75fd81711b651841d5b92df878bc30aed4049d81,/snapcraft/Dockerfile,"# based initially on https://hub.docker.com/r/didrocks/snapcraft/
"
8704,75fd81711b651841d5b92df878bc30aed4049d81,/snapcraft/Dockerfile,"# enable multiverse as snapcraft cleanbuild does
#RUN sed -i 's/ universe$/ universe multiverse/' /etc/apt/sources.list

# pin specific version so we can update with a natural cache bust
"
8705,e2093ac1dea42bebfc7bae338ee2284b2dc65ec5,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
8706,e2093ac1dea42bebfc7bae338ee2284b2dc65ec5,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
8707,e2093ac1dea42bebfc7bae338ee2284b2dc65ec5,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
8708,0e2ed99ca10a264d30789a0ba90148f49cbb24a1,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
8709,cb0a3b27ecc5f6884abbb98e9e4556774d9822ac,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8710,cb0a3b27ecc5f6884abbb98e9e4556774d9822ac,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8711,cb0a3b27ecc5f6884abbb98e9e4556774d9822ac,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8712,cb0a3b27ecc5f6884abbb98e9e4556774d9822ac,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8713,cb0a3b27ecc5f6884abbb98e9e4556774d9822ac,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8714,b794552d352925b41fba3eb2afed2065a26fa5e2,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8715,b794552d352925b41fba3eb2afed2065a26fa5e2,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8716,b794552d352925b41fba3eb2afed2065a26fa5e2,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8717,b794552d352925b41fba3eb2afed2065a26fa5e2,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8718,b794552d352925b41fba3eb2afed2065a26fa5e2,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8719,8aedded45fa015f2c81a31b60c6311948a83286f,/phpmyadmin/Dockerfile,"# https://docs.phpmyadmin.net/en/latest/setup.html#verifying-phpmyadmin-releases
"
8720,8aedded45fa015f2c81a31b60c6311948a83286f,/phpmyadmin/Dockerfile,"# Since July 2015 all phpMyAdmin releases are cryptographically signed by the releasing developer, who through January 2016 was Marc Delisle.
"
8721,8aedded45fa015f2c81a31b60c6311948a83286f,/phpmyadmin/Dockerfile,"# Beginning in January 2016, the release manager is Isaac Bennetch.
"
8722,8aedded45fa015f2c81a31b60c6311948a83286f,/phpmyadmin/Dockerfile,"# Some additional downloads (for example themes) might be signed by Michal Čihař.
"
8723,2a0032361a235f054573d7f889bfdf8a50eddd1e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8724,2a0032361a235f054573d7f889bfdf8a50eddd1e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8725,2a0032361a235f054573d7f889bfdf8a50eddd1e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8726,2a0032361a235f054573d7f889bfdf8a50eddd1e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8727,2a0032361a235f054573d7f889bfdf8a50eddd1e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8728,6e5d54c2abf3b2029040a21f6ef6dadc22729aaa,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8729,6e5d54c2abf3b2029040a21f6ef6dadc22729aaa,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8730,6e5d54c2abf3b2029040a21f6ef6dadc22729aaa,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8731,6e5d54c2abf3b2029040a21f6ef6dadc22729aaa,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8732,6e5d54c2abf3b2029040a21f6ef6dadc22729aaa,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8733,be504a501a56a71086b1a9b03e048408346f27b7,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8734,be504a501a56a71086b1a9b03e048408346f27b7,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8735,be504a501a56a71086b1a9b03e048408346f27b7,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8736,be504a501a56a71086b1a9b03e048408346f27b7,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8737,be504a501a56a71086b1a9b03e048408346f27b7,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8738,1fb47acae53dd87ca04b0625007e3f23998bd1a5,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8739,1fb47acae53dd87ca04b0625007e3f23998bd1a5,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8740,1fb47acae53dd87ca04b0625007e3f23998bd1a5,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8741,1fb47acae53dd87ca04b0625007e3f23998bd1a5,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8742,1fb47acae53dd87ca04b0625007e3f23998bd1a5,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8743,1807a8b8a0e66565df08b0f80a08c3ed7a16ef93,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
8744,7d1c1f1a31e8eee52f2d55c307b903fad63a6276,/diffoscope/Dockerfile,"# xxd (xxd not available in path. Falling back to Python hexlify.)
"
8745,7d1c1f1a31e8eee52f2d55c307b903fad63a6276,/diffoscope/Dockerfile,"# readelf ('readelf' not available in path. Falling back to binary comparison.)
"
8746,7d1c1f1a31e8eee52f2d55c307b903fad63a6276,/diffoscope/Dockerfile,"# for ""diffoscope --progress""
"
8747,c9a06451d60f2ff8a474a22503788473158830bb,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
8748,8958a3234a454a27c8782a1b809e3c697055eae5,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
8749,10ee6457fd191a7c089d8c2508f9c77b8193dfcc,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8750,10ee6457fd191a7c089d8c2508f9c77b8193dfcc,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8751,10ee6457fd191a7c089d8c2508f9c77b8193dfcc,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8752,10ee6457fd191a7c089d8c2508f9c77b8193dfcc,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8753,10ee6457fd191a7c089d8c2508f9c77b8193dfcc,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8754,6c16af2dbf1fdeb06380aa2c7db70202112281e5,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8755,6c16af2dbf1fdeb06380aa2c7db70202112281e5,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8756,6c16af2dbf1fdeb06380aa2c7db70202112281e5,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8757,6c16af2dbf1fdeb06380aa2c7db70202112281e5,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8758,6c16af2dbf1fdeb06380aa2c7db70202112281e5,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8759,712c61b2313e863262d7a553d3a98a3dbc788256,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
8760,712c61b2313e863262d7a553d3a98a3dbc788256,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
8761,712c61b2313e863262d7a553d3a98a3dbc788256,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
8762,e9b437ea5b5bc1d5a8b54fd35f45e951aa0004c4,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
8763,19a53357b83652c32b6d9e66383efaccca33dda1,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8764,19a53357b83652c32b6d9e66383efaccca33dda1,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8765,19a53357b83652c32b6d9e66383efaccca33dda1,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8766,19a53357b83652c32b6d9e66383efaccca33dda1,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8767,19a53357b83652c32b6d9e66383efaccca33dda1,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8768,abb5e963aa3282b6ead848b7dd8f8026946a3244,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8769,abb5e963aa3282b6ead848b7dd8f8026946a3244,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8770,abb5e963aa3282b6ead848b7dd8f8026946a3244,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8771,abb5e963aa3282b6ead848b7dd8f8026946a3244,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8772,abb5e963aa3282b6ead848b7dd8f8026946a3244,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8773,b09752397d170fa90d308e08b9cf387fff2c5523,/jenkins/weekly/Dockerfile,"# grab gosu for easy step-down from root
"
8774,b09752397d170fa90d308e08b9cf387fff2c5523,/jenkins/weekly/Dockerfile,"# grab tini for signal processing and zombie killing
"
8775,b09752397d170fa90d308e08b9cf387fff2c5523,/jenkins/weekly/Dockerfile,"# https://groups.google.com/d/msg/jenkins-infra/c7m_72vUTXE/37zw9GXhAQAJ
"
8776,b09752397d170fa90d308e08b9cf387fff2c5523,/jenkins/weekly/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
8777,57d61884ee8ea9898cad13c77b4292e26de2079f,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
8778,57d61884ee8ea9898cad13c77b4292e26de2079f,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
8779,57d61884ee8ea9898cad13c77b4292e26de2079f,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
8780,7a5effd185cfed1f692a406f72b3d7cb5bf3b990,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
8781,99bdc8b0f1c1fdb7b71e4554ac7fa8de6d79fc50,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8782,99bdc8b0f1c1fdb7b71e4554ac7fa8de6d79fc50,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8783,99bdc8b0f1c1fdb7b71e4554ac7fa8de6d79fc50,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8784,99bdc8b0f1c1fdb7b71e4554ac7fa8de6d79fc50,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8785,99bdc8b0f1c1fdb7b71e4554ac7fa8de6d79fc50,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8786,b9e9e51a2c613527c409da8b15c7caf944337a77,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
8787,c15499a2dfe982cb6b3f1d08a66b71a9c43acda1,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8788,c15499a2dfe982cb6b3f1d08a66b71a9c43acda1,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8789,c15499a2dfe982cb6b3f1d08a66b71a9c43acda1,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8790,c15499a2dfe982cb6b3f1d08a66b71a9c43acda1,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8791,c15499a2dfe982cb6b3f1d08a66b71a9c43acda1,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8792,339ee7340a05dbf5257051b76bd1d0139e38a408,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
8793,cf0761a37b5b172432e967ed9e8572652c6488a1,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
8794,919efab91947c7c50ce51e30aabe98c3105eb442,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8795,919efab91947c7c50ce51e30aabe98c3105eb442,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8796,919efab91947c7c50ce51e30aabe98c3105eb442,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8797,919efab91947c7c50ce51e30aabe98c3105eb442,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8798,919efab91947c7c50ce51e30aabe98c3105eb442,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8799,85d14ab3a4cc464b6d9610b91224cad02b97ac12,/lutris/Dockerfile,"# install Wine
#   https://github.com/lutris/docs/blob/f2bf5ca14f280e3c58d2306581294d57650c0cc2/WineDependencies.md
#   https://wiki.winehq.org/Ubuntu
"
8800,85d14ab3a4cc464b6d9610b91224cad02b97ac12,/lutris/Dockerfile,"# https://dl.winehq.org/wine-builds/ubuntu/dists/focal/main/binary-amd64/?C=N;O=D
# https://www.winehq.org/news/
"
8801,85d14ab3a4cc464b6d9610b91224cad02b97ac12,/lutris/Dockerfile,"# ""Add SDL2 Backports PPA (for Faudio package):""
"
8802,85d14ab3a4cc464b6d9610b91224cad02b97ac12,/lutris/Dockerfile,"# ""For compatibility reasons, install these additional libraries:""
"
8803,85d14ab3a4cc464b6d9610b91224cad02b97ac12,/lutris/Dockerfile,"# https://github.com/Winetricks/winetricks/releases
"
8804,85d14ab3a4cc464b6d9610b91224cad02b97ac12,/lutris/Dockerfile,"# https://launchpad.net/~lutris-team/+archive/ubuntu/lutris?field.series_filter=focal
"
8805,85d14ab3a4cc464b6d9610b91224cad02b97ac12,/lutris/Dockerfile,"# https://github.com/lutris/docs/blob/f2bf5ca14f280e3c58d2306581294d57650c0cc2/InstallingDrivers.md
"
8806,85d14ab3a4cc464b6d9610b91224cad02b97ac12,/lutris/Dockerfile,"# gi.repository.GLib.Error: g-exec-error-quark: Failed to execute child process “dbus-launch” (No such file or directory) (8)
"
8807,85d14ab3a4cc464b6d9610b91224cad02b97ac12,/lutris/Dockerfile,"# /lutris-home/games/battle.net/state-cache-merge/state-cache-update.sh: line 8: zenity: command not found
"
8808,ef9cf9438d12236072488bc6768c0504d53636ba,/github-pages/Dockerfile,"# https://pages.github.com/versions/
"
8809,0e026f49f9a897f2d64af7fb1d6decddbbce57a1,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8810,0e026f49f9a897f2d64af7fb1d6decddbbce57a1,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8811,0e026f49f9a897f2d64af7fb1d6decddbbce57a1,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8812,0e026f49f9a897f2d64af7fb1d6decddbbce57a1,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8813,0e026f49f9a897f2d64af7fb1d6decddbbce57a1,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8814,bb91faee2b3009d724b0ab6489cd793f0a8319cf,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8815,bb91faee2b3009d724b0ab6489cd793f0a8319cf,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8816,bb91faee2b3009d724b0ab6489cd793f0a8319cf,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8817,bb91faee2b3009d724b0ab6489cd793f0a8319cf,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8818,bb91faee2b3009d724b0ab6489cd793f0a8319cf,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8819,cb0546ca8d7e43c5555c7333a52ace92051a5d71,/makemkv/Dockerfile,"# This disc requires Java runtime (JRE), but none was found. Certain functions will fail, please install Java. See http://www.makemkv.com/bdjava/ for details.
"
8820,cb0546ca8d7e43c5555c7333a52ace92051a5d71,/makemkv/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
8821,cb0546ca8d7e43c5555c7333a52ace92051a5d71,/makemkv/Dockerfile,"# FPL_MainFeature detection only seemed to work with OpenJDK 9 (8 was insufficient)
"
8822,cb0546ca8d7e43c5555c7333a52ace92051a5d71,/makemkv/Dockerfile,"# Unable to execute external program 'ccextractor' as its path is not set in preferences
# Failed to execute external program 'ccextractor' from location '/usr/local/bin/mmccextr'
# (but it doesn't exist in the perferences dialog...)
"
8823,cb0546ca8d7e43c5555c7333a52ace92051a5d71,/makemkv/Dockerfile,"# http://www.makemkv.com/forum2/viewtopic.php?f=3&t=224
"
8824,cb0546ca8d7e43c5555c7333a52ace92051a5d71,/makemkv/Dockerfile,"# beta code: http://www.makemkv.com/forum2/viewtopic.php?f=5&t=1053
"
8825,cb0546ca8d7e43c5555c7333a52ace92051a5d71,/makemkv/Dockerfile,"# pub   dsa2048 2017-05-26 [SC]
#       2ECF 2330 5F1F C0B3 2001  6733 94E3 083A 1804 2697
# uid           [ unknown] MakeMKV (signature) <support@makemkv.com>
"
8826,800f9dedfdae89fa514be56c37adeb1376132c5d,/docker-tianon/Dockerfile,"# DOCKER_HOST=ssh://... -- https://github.com/docker/cli/pull/1014
"
8827,800f9dedfdae89fa514be56c37adeb1376132c5d,/docker-tianon/Dockerfile,"# https://github.com/debuerreotype/docker-debian-artifacts/issues/97#issuecomment-658469709
"
8828,800f9dedfdae89fa514be56c37adeb1376132c5d,/docker-tianon/Dockerfile,"# https://doi-janky.infosiftr.net/job/tianon/job/docker-deb/job/repo/lastSuccessfulBuild/artifact/pool/buster/main/amd64/
"
8829,800f9dedfdae89fa514be56c37adeb1376132c5d,/docker-tianon/Dockerfile,"# https://github.com/docker-library/docker/pull/166
#   dockerd-entrypoint.sh uses DOCKER_TLS_CERTDIR for auto-generating TLS certificates
#   docker-entrypoint.sh uses DOCKER_TLS_CERTDIR for auto-setting DOCKER_TLS_VERIFY and DOCKER_CERT_PATH
# (For this to work, at least the ""client"" subdirectory of this path needs to be shared between the client and server containers via a volume, ""docker cp"", or other means of data sharing.)
"
8830,800f9dedfdae89fa514be56c37adeb1376132c5d,/docker-tianon/Dockerfile,"# also, ensure the directory pre-exists and has wide enough permissions for ""dockerd-entrypoint.sh"" to create subdirectories, even when run in ""rootless"" mode
"
8831,800f9dedfdae89fa514be56c37adeb1376132c5d,/docker-tianon/Dockerfile,"# (doing both /certs and /certs/client so that if Docker does a ""copy-up"" into a volume defined on /certs/client, it will ""do the right thing"" by default in a way that still works for rootless users)

# dind

"
8832,800f9dedfdae89fa514be56c37adeb1376132c5d,/docker-tianon/Dockerfile,"# pigz: https://github.com/moby/moby/pull/35697 (faster gzip implementation)
"
8833,800f9dedfdae89fa514be56c37adeb1376132c5d,/docker-tianon/Dockerfile,"# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
"
8834,800f9dedfdae89fa514be56c37adeb1376132c5d,/docker-tianon/Dockerfile,"# https://github.com/docker/docker/tree/master/hack/dind
#ENV DIND_COMMIT 130b0bc6032cc675d064e1cc62626cacc9c07a57

#RUN set -eux; \
#	wget -O /usr/local/bin/dind ""https://raw.githubusercontent.com/docker/docker/${DIND_COMMIT}/hack/dind""; \
#	chmod +x /usr/local/bin/dind

"
8835,421cff097eb1a151fa4caa8fd6ee5a42dad9a720,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8836,421cff097eb1a151fa4caa8fd6ee5a42dad9a720,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8837,421cff097eb1a151fa4caa8fd6ee5a42dad9a720,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8838,421cff097eb1a151fa4caa8fd6ee5a42dad9a720,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8839,421cff097eb1a151fa4caa8fd6ee5a42dad9a720,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8840,4a3da018c2c2c05962594d9ce34788e43bc1dc50,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8841,4a3da018c2c2c05962594d9ce34788e43bc1dc50,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8842,4a3da018c2c2c05962594d9ce34788e43bc1dc50,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8843,4a3da018c2c2c05962594d9ce34788e43bc1dc50,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8844,4a3da018c2c2c05962594d9ce34788e43bc1dc50,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8845,ad001d447cded94b7095d86a54d1bacd7bfa01b4,/moosefs/Dockerfile,"# mfscli (and cgi) are Python-based
"
8846,ad001d447cded94b7095d86a54d1bacd7bfa01b4,/moosefs/Dockerfile,"# mfsmount needs ""fusermount""
"
8847,ad001d447cded94b7095d86a54d1bacd7bfa01b4,/moosefs/Dockerfile,"# allow running mfsmount as non-root
"
8848,ad001d447cded94b7095d86a54d1bacd7bfa01b4,/moosefs/Dockerfile,"#user_allow_other$/user_allow_other/' /etc/fuse.conf

"
8849,ad001d447cded94b7095d86a54d1bacd7bfa01b4,/moosefs/Dockerfile,"# https://github.com/moosefs/moosefs/releases
"
8850,ad001d447cded94b7095d86a54d1bacd7bfa01b4,/moosefs/Dockerfile,"# prep the default configuration so things generally work Out-of-the-Box
"
8851,ad001d447cded94b7095d86a54d1bacd7bfa01b4,/moosefs/Dockerfile,"# allow us to run as an arbitrary user but still modify configuration
"
8852,ad001d447cded94b7095d86a54d1bacd7bfa01b4,/moosefs/Dockerfile,"# prep a scratch space with appropriate permissions to be able to do quick prototyping Out-of-the-Box
"
8853,ad001d447cded94b7095d86a54d1bacd7bfa01b4,/moosefs/Dockerfile,"# without this, the Python-based mfscli ""-f"" flag refuses to use UTF-8 box-drawing characters
"
8854,928f9a00e3ee198f61b771951c09bb53ab487677,/debian/ubuntu-devel/Dockerfile,"# let's make apt list package versions, since those are handy during devel
"
8855,928f9a00e3ee198f61b771951c09bb53ab487677,/debian/ubuntu-devel/Dockerfile,"# normal build deps
"
8856,928f9a00e3ee198f61b771951c09bb53ab487677,/debian/ubuntu-devel/Dockerfile,"# get dh-make-golang from Git since it's so rapidly changing
"
8857,928f9a00e3ee198f61b771951c09bb53ab487677,/debian/ubuntu-devel/Dockerfile,"# need deb-src for compiling packages
"
8858,928f9a00e3ee198f61b771951c09bb53ab487677,/debian/ubuntu-devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
8859,928f9a00e3ee198f61b771951c09bb53ab487677,/debian/ubuntu-devel/Dockerfile,"# for ssh to debian hosts, let's make sure we know their fingerprints <3
"
8860,928f9a00e3ee198f61b771951c09bb53ab487677,/debian/ubuntu-devel/Dockerfile,"# make sure things are pretty
"
8861,928f9a00e3ee198f61b771951c09bb53ab487677,/debian/ubuntu-devel/Dockerfile,"#(force_color_prompt=yes)/\1/' ~/.bashrc

# quilt is much amaze: https://wiki.debian.org/UsingQuilt#Using_quilt_with_Debian_source_packages
"
8862,928f9a00e3ee198f61b771951c09bb53ab487677,/debian/ubuntu-devel/Dockerfile,"# make sure pbuilder-dist uses a sane default mirror
"
8863,d0c2b08b20563644f1c0c2714540dba0cb2d8163,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
8864,d0c2b08b20563644f1c0c2714540dba0cb2d8163,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
8865,d0c2b08b20563644f1c0c2714540dba0cb2d8163,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
8866,35a32cea1bda119e2a46d3ea88c5b412c6092d97,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
8867,e3872662187caddf9bf72536532a2e197df12b51,/exim4/Dockerfile,"# grab tini for signal processing and zombie killing
"
8868,e3872662187caddf9bf72536532a2e197df12b51,/exim4/Dockerfile,"# https://blog.dhampir.no/content/exim4-line-length-in-debian-stretch-mail-delivery-failed-returning-message-to-sender
# https://serverfault.com/a/881197
# https://bugs.debian.org/828801
"
8869,486f5821a1b56261390e3d4a74cbc526c8ceeae9,/debian/devel/Dockerfile,"# normal build deps
"
8870,486f5821a1b56261390e3d4a74cbc526c8ceeae9,/debian/devel/Dockerfile,"# need deb-src for compiling packages
"
8871,486f5821a1b56261390e3d4a74cbc526c8ceeae9,/debian/devel/Dockerfile,"# let's make apt list package versions, since those are handy during devel
"
8872,486f5821a1b56261390e3d4a74cbc526c8ceeae9,/debian/devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
8873,486f5821a1b56261390e3d4a74cbc526c8ceeae9,/debian/devel/Dockerfile,"# for ssh to debian hosts, let's make sure we know their fingerprints <3
"
8874,486f5821a1b56261390e3d4a74cbc526c8ceeae9,/debian/devel/Dockerfile,"# make sure things are pretty
"
8875,486f5821a1b56261390e3d4a74cbc526c8ceeae9,/debian/devel/Dockerfile,"#(force_color_prompt=yes)/\1/' ~/.bashrc

# quilt is much amaze: https://wiki.debian.org/UsingQuilt#Using_quilt_with_Debian_source_packages
"
8876,c2321200d9a882657356e9d248dcce8618de5c25,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
8877,c2321200d9a882657356e9d248dcce8618de5c25,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
8878,c2321200d9a882657356e9d248dcce8618de5c25,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
8879,6e63172259c09e77c93dfa339c7be07fae441956,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8880,6e63172259c09e77c93dfa339c7be07fae441956,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8881,6e63172259c09e77c93dfa339c7be07fae441956,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8882,6e63172259c09e77c93dfa339c7be07fae441956,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8883,6e63172259c09e77c93dfa339c7be07fae441956,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8884,1e494c773b444bc48b5c5b148ddabff5b072698f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8885,1e494c773b444bc48b5c5b148ddabff5b072698f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8886,1e494c773b444bc48b5c5b148ddabff5b072698f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8887,1e494c773b444bc48b5c5b148ddabff5b072698f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8888,1e494c773b444bc48b5c5b148ddabff5b072698f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8889,1ed32018b4bef488317c9a899674548a8248d4ce,/dell-netextender/Dockerfile,"# https://aur.archlinux.org/cgit/aur.git/tree/PKGBUILD?h=netextender
"
8890,1ed32018b4bef488317c9a899674548a8248d4ce,/dell-netextender/Dockerfile,"# NetExtender connected successfully. Type ""Ctrl-c"" to disconnect...
"
8891,f7b855af158bc256be5609d8a7e047b9614052bb,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
8892,9af080ede03197415217824e3db5b8b457115065,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8893,9af080ede03197415217824e3db5b8b457115065,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8894,9af080ede03197415217824e3db5b8b457115065,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8895,9af080ede03197415217824e3db5b8b457115065,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8896,9af080ede03197415217824e3db5b8b457115065,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8897,74642215097e67acae76c62184829b014c9ea932,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8898,74642215097e67acae76c62184829b014c9ea932,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8899,74642215097e67acae76c62184829b014c9ea932,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8900,74642215097e67acae76c62184829b014c9ea932,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8901,74642215097e67acae76c62184829b014c9ea932,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8902,2a7a405d9f21c641d90c73d7caf56778e0d929b0,/debian/devel/Dockerfile,"# normal build deps
"
8903,2a7a405d9f21c641d90c73d7caf56778e0d929b0,/debian/devel/Dockerfile,"# need deb-src for compiling packages
"
8904,2a7a405d9f21c641d90c73d7caf56778e0d929b0,/debian/devel/Dockerfile,"# let's make apt list package versions, since those are handy during devel
"
8905,2a7a405d9f21c641d90c73d7caf56778e0d929b0,/debian/devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
8906,2a7a405d9f21c641d90c73d7caf56778e0d929b0,/debian/devel/Dockerfile,"# for ssh to debian hosts, let's make sure we know their fingerprints <3
"
8907,2a7a405d9f21c641d90c73d7caf56778e0d929b0,/debian/devel/Dockerfile,"# make sure things are pretty
"
8908,2a7a405d9f21c641d90c73d7caf56778e0d929b0,/debian/devel/Dockerfile,"#(force_color_prompt=yes)/\1/' ~/.bashrc

# quilt is much amaze: https://wiki.debian.org/UsingQuilt#Using_quilt_with_Debian_source_packages
"
8909,37b9b528a318c94cd8b1d8204a30a0b6b16d11dc,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
8910,37b9b528a318c94cd8b1d8204a30a0b6b16d11dc,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
8911,37b9b528a318c94cd8b1d8204a30a0b6b16d11dc,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
8912,37b9b528a318c94cd8b1d8204a30a0b6b16d11dc,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
8913,37b9b528a318c94cd8b1d8204a30a0b6b16d11dc,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
8914,51786eebfcd2ab174a3803a882cb8f1df855f179,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8915,51786eebfcd2ab174a3803a882cb8f1df855f179,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8916,51786eebfcd2ab174a3803a882cb8f1df855f179,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8917,51786eebfcd2ab174a3803a882cb8f1df855f179,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8918,51786eebfcd2ab174a3803a882cb8f1df855f179,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8919,a6eec9ab857ed44dc8733131ee916b2160a7fdf5,/phpmyadmin/Dockerfile,"# https://docs.phpmyadmin.net/en/latest/setup.html#verifying-phpmyadmin-releases
"
8920,a6eec9ab857ed44dc8733131ee916b2160a7fdf5,/phpmyadmin/Dockerfile,"# Since July 2015 all phpMyAdmin releases are cryptographically signed by the releasing developer, who through January 2016 was Marc Delisle.
"
8921,a6eec9ab857ed44dc8733131ee916b2160a7fdf5,/phpmyadmin/Dockerfile,"# Beginning in January 2016, the release manager is Isaac Bennetch.
"
8922,a6eec9ab857ed44dc8733131ee916b2160a7fdf5,/phpmyadmin/Dockerfile,"# Some additional downloads (for example themes) might be signed by Michal Čihař.
"
8923,6b41a4cbe8d7217dc0a9cf0d4f2632e5a010ac10,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
8924,d109360e7c96efe13ee70aea8ad78ccd8cf43921,/google-cloud-print-connector/Dockerfile,"# fetch dependencies
# format: import-path=strip-components=tarball-url
"
8925,d109360e7c96efe13ee70aea8ad78ccd8cf43921,/google-cloud-print-connector/Dockerfile,"# https://github.com/coreos/go-systemd/releases
"
8926,d109360e7c96efe13ee70aea8ad78ccd8cf43921,/google-cloud-print-connector/Dockerfile,"# https://github.com/satori/go.uuid/releases
# (https://github.com/satori/go.uuid/commit/0ef6afb2f6cdd6cdaeee3885a95099c63f18fc8c -- hopefully we'll get a newer release than v1.2.0 soonish)
"
8927,d109360e7c96efe13ee70aea8ad78ccd8cf43921,/google-cloud-print-connector/Dockerfile,"# https://github.com/urfave/cli/releases
"
8928,d109360e7c96efe13ee70aea8ad78ccd8cf43921,/google-cloud-print-connector/Dockerfile,"# https://github.com/golang/net/commits/master
"
8929,d109360e7c96efe13ee70aea8ad78ccd8cf43921,/google-cloud-print-connector/Dockerfile,"# https://github.com/golang/oauth2/commits/master
"
8930,d109360e7c96efe13ee70aea8ad78ccd8cf43921,/google-cloud-print-connector/Dockerfile,"# https://bazaar.launchpad.net/~chipaca/go-xdg/v0/files (""view revision"")
# https://bazaar.launchpad.net/~chipaca/go-xdg/v0/revision/10?start_revid=10 (""download tarball"")
"
8931,d109360e7c96efe13ee70aea8ad78ccd8cf43921,/google-cloud-print-connector/Dockerfile,"#*=}""; dep=""${dep%=$strip}""; \
"
8932,d109360e7c96efe13ee70aea8ad78ccd8cf43921,/google-cloud-print-connector/Dockerfile,"#*=}""; strip=""${strip%=$tarball}""; \
"
8933,d109360e7c96efe13ee70aea8ad78ccd8cf43921,/google-cloud-print-connector/Dockerfile,"# https://github.com/google/cloud-print-connector/releases
"
8934,445a62a972816c8e64679641f31000676afd7371,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8935,445a62a972816c8e64679641f31000676afd7371,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8936,445a62a972816c8e64679641f31000676afd7371,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8937,445a62a972816c8e64679641f31000676afd7371,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8938,445a62a972816c8e64679641f31000676afd7371,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8939,b1f253c879c8a0a3e2d12621afd95338dd738fa8,/tinygo/Dockerfile,"# the .deb (as of 0.6.0) installs to /usr/local/tinygo but doesn't add ""tinygo"" to PATH
"
8940,b1f253c879c8a0a3e2d12621afd95338dd738fa8,/tinygo/Dockerfile,"# https://tinygo.org/getting-started/linux/

# https://github.com/tinygo-org/tinygo/releases
"
8941,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/14.10/Dockerfile,"# much of this was gleaned from https://github.com/lxc/lxc/blob/lxc-0.8.0/templates/lxc-ubuntu.in
# and then heavily modified and hacked like crazy

# we're going to want this bad boy installed so we can connect :)
"
8942,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/14.10/Dockerfile,"# undo some leet hax of the base image
"
8943,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/14.10/Dockerfile,"# generate a nice UTF-8 locale for our use
"
8944,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/14.10/Dockerfile,"# remove some pointless services
"
8945,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/14.10/Dockerfile,"# /lib/init/fstab: cleared out for bare-bones Docker' > /lib/init/fstab

# small fix for SSH in 13.10 (that's harmless everywhere else)
"
8946,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/14.10/Dockerfile,"# let Upstart know it's in a container
"
8947,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/14.10/Dockerfile,"# set a cheap, simple password for great convenience
"
8948,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/14.10/Dockerfile,"# we can has SSH
"
8949,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/14.10/Dockerfile,"# prepare for takeoff
"
8950,711d9dd0238536b4af67146b52067b94633db64f,/vultr-cli/Dockerfile,"# https://github.com/vultr/vultr-cli/releases
"
8951,3c1a5212c1bc75202a2b328153cca2e2c4029dff,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8952,3c1a5212c1bc75202a2b328153cca2e2c4029dff,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8953,3c1a5212c1bc75202a2b328153cca2e2c4029dff,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8954,3c1a5212c1bc75202a2b328153cca2e2c4029dff,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8955,3c1a5212c1bc75202a2b328153cca2e2c4029dff,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8956,8f53c52c8ae91a5cdd82f4914560218b40fc52ae,/debian/devel/Dockerfile,"# let's make apt list package versions, since those are handy during devel
"
8957,8f53c52c8ae91a5cdd82f4914560218b40fc52ae,/debian/devel/Dockerfile,"# normal build deps
"
8958,8f53c52c8ae91a5cdd82f4914560218b40fc52ae,/debian/devel/Dockerfile,"# get dh-make-golang from Git since it's so rapidly changing
"
8959,8f53c52c8ae91a5cdd82f4914560218b40fc52ae,/debian/devel/Dockerfile,"# need deb-src for compiling packages
"
8960,8f53c52c8ae91a5cdd82f4914560218b40fc52ae,/debian/devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
8961,8f53c52c8ae91a5cdd82f4914560218b40fc52ae,/debian/devel/Dockerfile,"# for ssh to debian hosts, let's make sure we know their fingerprints <3
"
8962,8f53c52c8ae91a5cdd82f4914560218b40fc52ae,/debian/devel/Dockerfile,"# make sure things are pretty
"
8963,8f53c52c8ae91a5cdd82f4914560218b40fc52ae,/debian/devel/Dockerfile,"#(force_color_prompt=yes)/\1/' ~/.bashrc

# quilt is much amaze: https://wiki.debian.org/UsingQuilt#Using_quilt_with_Debian_source_packages
"
8964,8f53c52c8ae91a5cdd82f4914560218b40fc52ae,/debian/devel/Dockerfile,"# make sure pbuilder-dist uses a sane default mirror
"
8965,37015b4b0a27ce0e54f4bfd4fff2829cccf9791e,/golang/Dockerfile,"# (set an explicit GOARM of 5 for maximum ARM compatibility)
"
8966,37015b4b0a27ce0e54f4bfd4fff2829cccf9791e,/golang/Dockerfile,"##*/} \
"
8967,37015b4b0a27ce0e54f4bfd4fff2829cccf9791e,/golang/Dockerfile,"# these are useful for ""go get""
"
8968,37015b4b0a27ce0e54f4bfd4fff2829cccf9791e,/golang/Dockerfile,"/*} \
			GOARCH=${platform##*/"
8969,2f4efa5c6f4e6a2adef94c240988370b30513664,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8970,2f4efa5c6f4e6a2adef94c240988370b30513664,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8971,2f4efa5c6f4e6a2adef94c240988370b30513664,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8972,2f4efa5c6f4e6a2adef94c240988370b30513664,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8973,2f4efa5c6f4e6a2adef94c240988370b30513664,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8974,e03db50a504e4c2d9754273a2967f6ce8bdd2154,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
8975,248b8c2824eb7e06b0061d2e2e3128fa366e8f31,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8976,248b8c2824eb7e06b0061d2e2e3128fa366e8f31,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8977,248b8c2824eb7e06b0061d2e2e3128fa366e8f31,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8978,248b8c2824eb7e06b0061d2e2e3128fa366e8f31,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8979,248b8c2824eb7e06b0061d2e2e3128fa366e8f31,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8980,f9ea39bf92b32b3a66e204c089e5a014f89f6b30,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
8981,753a97f8afca8094d6e74e3426c5935f73799fe3,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8982,753a97f8afca8094d6e74e3426c5935f73799fe3,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8983,753a97f8afca8094d6e74e3426c5935f73799fe3,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8984,753a97f8afca8094d6e74e3426c5935f73799fe3,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8985,753a97f8afca8094d6e74e3426c5935f73799fe3,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8986,073429016ac68a03fa2758a4a2d686e3adf0c01c,/golang/Dockerfile,"# (set an explicit GOARM of 5 for maximum ARM compatibility)
"
8987,073429016ac68a03fa2758a4a2d686e3adf0c01c,/golang/Dockerfile,"##*/} \
"
8988,073429016ac68a03fa2758a4a2d686e3adf0c01c,/golang/Dockerfile,"/*} \
			GOARCH=${platform##*/"
8989,c1610b96ffcea268495de6bc01aa9d72c59f9392,/network-toolbox/alpine/Dockerfile,"# TODO add ""nbtscan"" when we get to Alpine 3.12 (if it makes it out of edge)
# https://pkgs.alpinelinux.org/packages?name=nbtscan&branch=edge&arch=x86_64

"
8990,3dd6d4cf32579aa329cc7821206c4a82736c2843,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
8991,3dd6d4cf32579aa329cc7821206c4a82736c2843,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
8992,3dd6d4cf32579aa329cc7821206c4a82736c2843,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
8993,3dd6d4cf32579aa329cc7821206c4a82736c2843,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
8994,3dd6d4cf32579aa329cc7821206c4a82736c2843,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
8995,0b82d451ec17541cd73ad415c2a65ff33ca87b39,/jenkins/lts/Dockerfile,"# grab gosu for easy step-down from root
"
8996,0b82d451ec17541cd73ad415c2a65ff33ca87b39,/jenkins/lts/Dockerfile,"# grab tini for signal processing and zombie killing
"
8997,0b82d451ec17541cd73ad415c2a65ff33ca87b39,/jenkins/lts/Dockerfile,"# https://groups.google.com/d/msg/jenkins-infra/c7m_72vUTXE/37zw9GXhAQAJ
"
8998,0b82d451ec17541cd73ad415c2a65ff33ca87b39,/jenkins/lts/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
8999,73551160638ba0d8ca120fa8888489b4cefd12d0,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
9000,73551160638ba0d8ca120fa8888489b4cefd12d0,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
9001,73551160638ba0d8ca120fa8888489b4cefd12d0,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
9002,73551160638ba0d8ca120fa8888489b4cefd12d0,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
9003,73551160638ba0d8ca120fa8888489b4cefd12d0,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
9004,89fa61933bd1dfa5101b1523428e2b9a84b2edfb,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
9005,89fa61933bd1dfa5101b1523428e2b9a84b2edfb,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
9006,89fa61933bd1dfa5101b1523428e2b9a84b2edfb,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
9007,89fa61933bd1dfa5101b1523428e2b9a84b2edfb,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
9008,89fa61933bd1dfa5101b1523428e2b9a84b2edfb,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
