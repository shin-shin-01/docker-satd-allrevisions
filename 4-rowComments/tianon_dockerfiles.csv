,CommitID,Dockerfiles,Comments
0,d9ad93722f3cb117acad653becfb576c187183f2,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1,d9ad93722f3cb117acad653becfb576c187183f2,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2,d9ad93722f3cb117acad653becfb576c187183f2,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3,d9ad93722f3cb117acad653becfb576c187183f2,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4,d9ad93722f3cb117acad653becfb576c187183f2,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5,228aa1c8e9732a1e3319ecb5c8b845ec2be506cb,/prometheus/Dockerfile,"# https://github.com/prometheus/prometheus/releases
"
6,55be001cb78f22c3eb065bdd50ceeda7c8f04874,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7,55be001cb78f22c3eb065bdd50ceeda7c8f04874,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
8,55be001cb78f22c3eb065bdd50ceeda7c8f04874,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
9,29ce988e421ae653b9422e625570e50cc26e93aa,/docker-tianon/Dockerfile,"# https://doi-janky.infosiftr.net/job/tianon/job/docker-deb/job/repo/lastSuccessfulBuild/artifact/pool/buster/main/amd64/
"
10,29ce988e421ae653b9422e625570e50cc26e93aa,/docker-tianon/Dockerfile,"# https://github.com/docker-library/docker/pull/166
#   dockerd-entrypoint.sh uses DOCKER_TLS_CERTDIR for auto-generating TLS certificates
#   docker-entrypoint.sh uses DOCKER_TLS_CERTDIR for auto-setting DOCKER_TLS_VERIFY and DOCKER_CERT_PATH
# (For this to work, at least the ""client"" subdirectory of this path needs to be shared between the client and server containers via a volume, ""docker cp"", or other means of data sharing.)
"
11,29ce988e421ae653b9422e625570e50cc26e93aa,/docker-tianon/Dockerfile,"# also, ensure the directory pre-exists and has wide enough permissions for ""dockerd-entrypoint.sh"" to create subdirectories, even when run in ""rootless"" mode
"
12,29ce988e421ae653b9422e625570e50cc26e93aa,/docker-tianon/Dockerfile,"# (doing both /certs and /certs/client so that if Docker does a ""copy-up"" into a volume defined on /certs/client, it will ""do the right thing"" by default in a way that still works for rootless users)

"
13,29ce988e421ae653b9422e625570e50cc26e93aa,/docker-tianon/Dockerfile,"# dind

"
14,29ce988e421ae653b9422e625570e50cc26e93aa,/docker-tianon/Dockerfile,"# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
"
15,347ff6704c63f1d3cbdbae81b8f44571229d606f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
16,347ff6704c63f1d3cbdbae81b8f44571229d606f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
17,347ff6704c63f1d3cbdbae81b8f44571229d606f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
18,347ff6704c63f1d3cbdbae81b8f44571229d606f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
19,347ff6704c63f1d3cbdbae81b8f44571229d606f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
20,1c091bb3fa0b957525477ce89261d6da67dd0972,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
21,1c091bb3fa0b957525477ce89261d6da67dd0972,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
22,1c091bb3fa0b957525477ce89261d6da67dd0972,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
23,1c091bb3fa0b957525477ce89261d6da67dd0972,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
24,1c091bb3fa0b957525477ce89261d6da67dd0972,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
25,7632cab35b17b56fccc7ab3740e5451229ac7813,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
26,7632cab35b17b56fccc7ab3740e5451229ac7813,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
27,7632cab35b17b56fccc7ab3740e5451229ac7813,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
28,7ac078092e6e247b4df508c4838f314a3f749b94,/perl/Dockerfile,"# secure by default ♥ (thanks to sri!)
"
29,7ac078092e6e247b4df508c4838f314a3f749b94,/perl/Dockerfile,"# reinstall cpanm itself, for good measure
"
30,ace3cedda4df540c1f730387d4fa5ff33ec62d0d,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
31,27c3ac724e24f69dd52ee9991dcf726f2cb94c22,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
32,27c3ac724e24f69dd52ee9991dcf726f2cb94c22,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
33,27c3ac724e24f69dd52ee9991dcf726f2cb94c22,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
34,27c3ac724e24f69dd52ee9991dcf726f2cb94c22,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
35,27c3ac724e24f69dd52ee9991dcf726f2cb94c22,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
36,f5595db8806c68de390138f17a455b32172e28c9,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
37,3167ed88079e2a5c630b50ffc403bba850391219,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
38,3167ed88079e2a5c630b50ffc403bba850391219,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
39,3167ed88079e2a5c630b50ffc403bba850391219,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
40,3167ed88079e2a5c630b50ffc403bba850391219,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
41,3167ed88079e2a5c630b50ffc403bba850391219,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
42,91f141ce652cd1c2bc8534c03e9c303c844f9acd,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
43,91f141ce652cd1c2bc8534c03e9c303c844f9acd,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
44,91f141ce652cd1c2bc8534c03e9c303c844f9acd,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
45,91f141ce652cd1c2bc8534c03e9c303c844f9acd,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
46,91f141ce652cd1c2bc8534c03e9c303c844f9acd,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
47,fbfec1914a83bf6deb441df95514a7d729acda7f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
48,fbfec1914a83bf6deb441df95514a7d729acda7f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
49,fbfec1914a83bf6deb441df95514a7d729acda7f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
50,fbfec1914a83bf6deb441df95514a7d729acda7f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
51,fbfec1914a83bf6deb441df95514a7d729acda7f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
52,554e781ed509ccb958b32ab05ea2629e16fc1ca1,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
53,554e781ed509ccb958b32ab05ea2629e16fc1ca1,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
54,554e781ed509ccb958b32ab05ea2629e16fc1ca1,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
55,554e781ed509ccb958b32ab05ea2629e16fc1ca1,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
56,554e781ed509ccb958b32ab05ea2629e16fc1ca1,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
57,1b02ed12219583bec8451dfe4907a43e5c288a30,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
58,1b02ed12219583bec8451dfe4907a43e5c288a30,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
59,1b02ed12219583bec8451dfe4907a43e5c288a30,/jenkins/Dockerfile,"# workaround ""apt-key adv --recv-keys"" hanging in stretch and above
"
60,93526420b9b9d51efb4c1c812dbf74304c9e75e6,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
61,93526420b9b9d51efb4c1c812dbf74304c9e75e6,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
62,93526420b9b9d51efb4c1c812dbf74304c9e75e6,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
63,93526420b9b9d51efb4c1c812dbf74304c9e75e6,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
64,93526420b9b9d51efb4c1c812dbf74304c9e75e6,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
65,2e5377c34d1ac0f577f4bdfaf561e94df55dede1,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
66,2e5377c34d1ac0f577f4bdfaf561e94df55dede1,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
67,2e5377c34d1ac0f577f4bdfaf561e94df55dede1,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
68,2e5377c34d1ac0f577f4bdfaf561e94df55dede1,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
69,2e5377c34d1ac0f577f4bdfaf561e94df55dede1,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
70,ce98e133d61a94be539b90a1d79ea4dad94678ce,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
71,a59a26b8c680a26a55b8d88210ebeae6ac8f6722,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
72,a59a26b8c680a26a55b8d88210ebeae6ac8f6722,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
73,a59a26b8c680a26a55b8d88210ebeae6ac8f6722,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
74,a59a26b8c680a26a55b8d88210ebeae6ac8f6722,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
75,a59a26b8c680a26a55b8d88210ebeae6ac8f6722,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
76,5baf4ce6cc1f142f748c9847cb8cdea059f80482,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
77,5baf4ce6cc1f142f748c9847cb8cdea059f80482,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
78,5baf4ce6cc1f142f748c9847cb8cdea059f80482,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
79,5baf4ce6cc1f142f748c9847cb8cdea059f80482,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
80,5baf4ce6cc1f142f748c9847cb8cdea059f80482,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
81,b65c1307c347cbb560c90258dacb3f61683caf48,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
82,b65c1307c347cbb560c90258dacb3f61683caf48,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
83,b65c1307c347cbb560c90258dacb3f61683caf48,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
84,6e4b2d362970d21ece7cce8478c30f37be54397c,/prometheus/Dockerfile,"# https://github.com/prometheus/prometheus/releases
"
85,aadad7125460f83323f824f294469e0b088dfd1d,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
86,aadad7125460f83323f824f294469e0b088dfd1d,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
87,aadad7125460f83323f824f294469e0b088dfd1d,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
88,aadad7125460f83323f824f294469e0b088dfd1d,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
89,aadad7125460f83323f824f294469e0b088dfd1d,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
90,cffe3a3654bdf45a24348eee93bf755c3bb91a8d,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
91,cffe3a3654bdf45a24348eee93bf755c3bb91a8d,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
92,cffe3a3654bdf45a24348eee93bf755c3bb91a8d,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
93,cffe3a3654bdf45a24348eee93bf755c3bb91a8d,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
94,cffe3a3654bdf45a24348eee93bf755c3bb91a8d,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
95,9e5af03e3a17f6a1006436d4b4774feb32c7d536,/jenkins/weekly/Dockerfile,"# grab gosu for easy step-down from root
"
96,9e5af03e3a17f6a1006436d4b4774feb32c7d536,/jenkins/weekly/Dockerfile,"# grab tini for signal processing and zombie killing
"
97,9e5af03e3a17f6a1006436d4b4774feb32c7d536,/jenkins/weekly/Dockerfile,"# https://groups.google.com/d/msg/jenkins-infra/c7m_72vUTXE/37zw9GXhAQAJ
"
98,9e5af03e3a17f6a1006436d4b4774feb32c7d536,/jenkins/weekly/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
99,c0f692dc9e6725af2fcd8cff61224fc9900c0e06,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
100,c0f692dc9e6725af2fcd8cff61224fc9900c0e06,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
101,c0f692dc9e6725af2fcd8cff61224fc9900c0e06,/jenkins/Dockerfile,"# https://groups.google.com/d/msg/jenkins-infra/c7m_72vUTXE/37zw9GXhAQAJ
"
102,c0f692dc9e6725af2fcd8cff61224fc9900c0e06,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
103,2dd80fd277530a262c4629f8b13579572a54bfcf,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
104,6c0615ba535e7a04f401feaacdb48fe2bd0fb79c,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
105,6c0615ba535e7a04f401feaacdb48fe2bd0fb79c,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
106,6c0615ba535e7a04f401feaacdb48fe2bd0fb79c,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
107,6c0615ba535e7a04f401feaacdb48fe2bd0fb79c,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
108,6c0615ba535e7a04f401feaacdb48fe2bd0fb79c,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
109,82e2ea23f58cd1f650dee8850de07806434dbf55,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
110,82e2ea23f58cd1f650dee8850de07806434dbf55,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
111,82e2ea23f58cd1f650dee8850de07806434dbf55,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
112,82e2ea23f58cd1f650dee8850de07806434dbf55,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
113,82e2ea23f58cd1f650dee8850de07806434dbf55,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
114,5b79c734a3913c5ec896504472fc53d2a5549909,/debian/devel/Dockerfile,"# normal build deps
"
115,5b79c734a3913c5ec896504472fc53d2a5549909,/debian/devel/Dockerfile,"# need an editor for ""dch -i""
"
116,5b79c734a3913c5ec896504472fc53d2a5549909,/debian/devel/Dockerfile,"# a few extra little useful things
"
117,5b79c734a3913c5ec896504472fc53d2a5549909,/debian/devel/Dockerfile,"# need deb-src for compiling packages
"
118,5b79c734a3913c5ec896504472fc53d2a5549909,/debian/devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
119,564e7215cb664b0ec7d1fade8fe40db95ebdabd0,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
120,2cff416d32d68519f71e9d77ffcdf4e08fb5b206,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
121,2cff416d32d68519f71e9d77ffcdf4e08fb5b206,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
122,2cff416d32d68519f71e9d77ffcdf4e08fb5b206,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
123,2cff416d32d68519f71e9d77ffcdf4e08fb5b206,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
124,2cff416d32d68519f71e9d77ffcdf4e08fb5b206,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
125,e38016f3a7c012496f0aa95ca9b0f96567e8aeef,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
126,e38016f3a7c012496f0aa95ca9b0f96567e8aeef,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
127,e38016f3a7c012496f0aa95ca9b0f96567e8aeef,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
128,c42d35605d0a9a3db6a7724725b1f2c8418504a2,/mongodb-mms/Dockerfile,"# see https://mms.mongodb.com/settings/monitoring-agent
# click on ""Ubuntu 12.04+""
"
129,5b10a3b8cf5010bac59ea5aeeef67f2ad67104b0,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
130,5b10a3b8cf5010bac59ea5aeeef67f2ad67104b0,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
131,5b10a3b8cf5010bac59ea5aeeef67f2ad67104b0,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
132,5b10a3b8cf5010bac59ea5aeeef67f2ad67104b0,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
133,5b10a3b8cf5010bac59ea5aeeef67f2ad67104b0,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
134,a612d3c8f852b349197ce679632c876fd8cb4765,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
135,92a4ac566e71eaebb123d08664e7dbabfac8a116,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
136,92a4ac566e71eaebb123d08664e7dbabfac8a116,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
137,92a4ac566e71eaebb123d08664e7dbabfac8a116,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
138,47583c4bb2e8db0a42f3f23f3fe54666a2d8606b,/sbin-init/ubuntu/12.04/Dockerfile,"# much of this was gleaned from https://github.com/lxc/lxc/blob/lxc-0.8.0/templates/lxc-ubuntu.in

# we're going to want this bad boy installed so we can connect :)
"
139,47583c4bb2e8db0a42f3f23f3fe54666a2d8606b,/sbin-init/ubuntu/12.04/Dockerfile,"# undo some leet hax of the base image
"
140,47583c4bb2e8db0a42f3f23f3fe54666a2d8606b,/sbin-init/ubuntu/12.04/Dockerfile,"# generate a nice UTF-8 locale for our use
"
141,47583c4bb2e8db0a42f3f23f3fe54666a2d8606b,/sbin-init/ubuntu/12.04/Dockerfile,"# remove some pointless services
"
142,47583c4bb2e8db0a42f3f23f3fe54666a2d8606b,/sbin-init/ubuntu/12.04/Dockerfile,"# /lib/init/fstab: cleared out for bare-bones lxc' > /lib/init/fstab

# small fix for SSH in 13.10 (that's harmless everywhere else)
"
143,47583c4bb2e8db0a42f3f23f3fe54666a2d8606b,/sbin-init/ubuntu/12.04/Dockerfile,"# set a cheap, simple password for great convenience
"
144,47583c4bb2e8db0a42f3f23f3fe54666a2d8606b,/sbin-init/ubuntu/12.04/Dockerfile,"# we can has SSH
"
145,47583c4bb2e8db0a42f3f23f3fe54666a2d8606b,/sbin-init/ubuntu/12.04/Dockerfile,"# pepare for takeoff
"
146,61854a8384fc6f9a2245b11ce27a425b93e31c86,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
147,61854a8384fc6f9a2245b11ce27a425b93e31c86,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
148,61854a8384fc6f9a2245b11ce27a425b93e31c86,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
149,61854a8384fc6f9a2245b11ce27a425b93e31c86,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
150,61854a8384fc6f9a2245b11ce27a425b93e31c86,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
151,29930f944855e52a338407b7923f4a9bfb918523,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
152,29930f944855e52a338407b7923f4a9bfb918523,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
153,29930f944855e52a338407b7923f4a9bfb918523,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
154,29930f944855e52a338407b7923f4a9bfb918523,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
155,29930f944855e52a338407b7923f4a9bfb918523,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
156,96e7aeb722852e3beab21d692895440b3a835dbf,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
157,96e7aeb722852e3beab21d692895440b3a835dbf,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
158,96e7aeb722852e3beab21d692895440b3a835dbf,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
159,96e7aeb722852e3beab21d692895440b3a835dbf,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
160,96e7aeb722852e3beab21d692895440b3a835dbf,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
161,8729185176c063a66552a351644ae19c88bc5c46,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
162,8729185176c063a66552a351644ae19c88bc5c46,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
163,8729185176c063a66552a351644ae19c88bc5c46,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
164,8729185176c063a66552a351644ae19c88bc5c46,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
165,8729185176c063a66552a351644ae19c88bc5c46,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
166,972aaeb9aed61f33b9fc8441d4cde479a42fe897,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
167,972aaeb9aed61f33b9fc8441d4cde479a42fe897,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
168,972aaeb9aed61f33b9fc8441d4cde479a42fe897,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
169,972aaeb9aed61f33b9fc8441d4cde479a42fe897,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
170,972aaeb9aed61f33b9fc8441d4cde479a42fe897,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
171,5f8503098c5d10cfcec33a94fbd558ff4df6fd3b,/qemu/Dockerfile,"#		qemu-system \
#		qemu-utils \
"
172,5f8503098c5d10cfcec33a94fbd558ff4df6fd3b,/qemu/Dockerfile,"# https://www.qemu.org/download/#source
"
173,5f8503098c5d10cfcec33a94fbd558ff4df6fd3b,/qemu/Dockerfile,"# TODO verify signature
"
174,5f8503098c5d10cfcec33a94fbd558ff4df6fd3b,/qemu/Dockerfile,"# system targets
# (https://sources.debian.org/src/qemu/stretch/debian/rules/#L57-L61, slimmed)
"
175,5f8503098c5d10cfcec33a94fbd558ff4df6fd3b,/qemu/Dockerfile,"# user targets
# (https://sources.debian.org/src/qemu/stretch/debian/rules/#L81-L86, slimmed)
"
176,5f8503098c5d10cfcec33a94fbd558ff4df6fd3b,/qemu/Dockerfile,"#		--enable-rbd \
#		--enable-vde \
"
177,5ea5fed6b95f3f266e1bce2d70d6ac3dd4844bd3,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
178,dc483562ee9dd6eed3438e302daae603a5ff9207,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
179,dc483562ee9dd6eed3438e302daae603a5ff9207,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
180,dc483562ee9dd6eed3438e302daae603a5ff9207,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
181,dc483562ee9dd6eed3438e302daae603a5ff9207,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
182,dc483562ee9dd6eed3438e302daae603a5ff9207,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
183,3e3509ed3b28067e069885a9a52826548577919f,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
184,1a46a2e654833762ab2643666b4d34dee59a3749,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
185,1a46a2e654833762ab2643666b4d34dee59a3749,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
186,1a46a2e654833762ab2643666b4d34dee59a3749,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
187,1a46a2e654833762ab2643666b4d34dee59a3749,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
188,1a46a2e654833762ab2643666b4d34dee59a3749,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
189,9971f4f3e8620680da95cf60df5d7fbae3e89b0c,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
190,e15ed391ebdfb1a76d17d3aa19f2812d8d7b9699,/golang/tip/Dockerfile,"# gcc for cgo
"
191,5c1c1e13f0172670dd20aeceab7d32a33444f044,/wine/Dockerfile,"# https://wiki.winehq.org/Debian

"
192,1ea6a1454e28301462cfc5173dbe6e63a840bdd2,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
193,49b50ea53f72c25a96018251f0d26057b354076b,/slack/Dockerfile,"# the .deb file linked at https://slack.com/downloads/instructions/debian includes ""/etc/cron.daily/slack"" which sets up an APT repo entry as in the following installation

# pub   rsa4096 2016-02-18 [SCEA]
#       DB08 5A08 CA13 B8AC B917  E0F6 D938 EC0D 0386 51BD
# uid           [ unknown] https://packagecloud.io/slacktechnologies/slack (https://packagecloud.io/docs#gpg_signing) <support@packagecloud.io>
# sub   rsa4096 2016-02-18 [SEA]
"
194,49b50ea53f72c25a96018251f0d26057b354076b,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libX11-xcb.so.1: cannot open shared object file: No such file or directory
"
195,49b50ea53f72c25a96018251f0d26057b354076b,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libasound.so.2: cannot open shared object file: No such file or directory
"
196,49b50ea53f72c25a96018251f0d26057b354076b,/slack/Dockerfile,"# 3.3.3: slack: error while loading shared libraries: libgtk-3.so.0: cannot open shared object file: No such file or directory
"
197,0cab295d8a53bc16946d474d600eabc9a70ce8cb,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
198,5b2dd823c18c55520eb3248008b495c97c51c30a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
199,5b2dd823c18c55520eb3248008b495c97c51c30a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
200,5b2dd823c18c55520eb3248008b495c97c51c30a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
201,5b2dd823c18c55520eb3248008b495c97c51c30a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
202,5b2dd823c18c55520eb3248008b495c97c51c30a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
203,fb62a37d33a03d33794b16b2e04e762a9c076e2e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
204,fb62a37d33a03d33794b16b2e04e762a9c076e2e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
205,fb62a37d33a03d33794b16b2e04e762a9c076e2e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
206,fb62a37d33a03d33794b16b2e04e762a9c076e2e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
207,fb62a37d33a03d33794b16b2e04e762a9c076e2e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
208,382fc87134265f58231d55943c5906d7ae23bf84,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
209,382fc87134265f58231d55943c5906d7ae23bf84,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
210,382fc87134265f58231d55943c5906d7ae23bf84,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
211,382fc87134265f58231d55943c5906d7ae23bf84,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
212,382fc87134265f58231d55943c5906d7ae23bf84,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
213,21f1fb9b63d6fd28e59c622df6639005666c4d9c,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
214,21f1fb9b63d6fd28e59c622df6639005666c4d9c,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
215,21f1fb9b63d6fd28e59c622df6639005666c4d9c,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
216,21f1fb9b63d6fd28e59c622df6639005666c4d9c,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
217,21f1fb9b63d6fd28e59c622df6639005666c4d9c,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
218,b1a87ee98cec9069278482720bbb0cb9022ec8d1,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
219,b1a87ee98cec9069278482720bbb0cb9022ec8d1,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
220,b1a87ee98cec9069278482720bbb0cb9022ec8d1,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
221,b1a87ee98cec9069278482720bbb0cb9022ec8d1,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
222,b1a87ee98cec9069278482720bbb0cb9022ec8d1,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
223,3e2cb044cbe8c7b3ab18833fd86b73e12d541be0,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
224,3e2cb044cbe8c7b3ab18833fd86b73e12d541be0,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
225,3e2cb044cbe8c7b3ab18833fd86b73e12d541be0,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
226,3e2cb044cbe8c7b3ab18833fd86b73e12d541be0,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
227,3e2cb044cbe8c7b3ab18833fd86b73e12d541be0,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
228,85b3feb60e40982c3b1831938af115f3c92bd7e0,/network-toolbox/debian/Dockerfile,"# dangit, wireshark-common!  *shakes fist*
"
229,d1de16c587a9ce0672b28bae5cb7c6d18a71c011,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
230,799e49e0531d26bfc992bc2bbd4429c1de297f29,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
231,799e49e0531d26bfc992bc2bbd4429c1de297f29,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
232,799e49e0531d26bfc992bc2bbd4429c1de297f29,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
233,799e49e0531d26bfc992bc2bbd4429c1de297f29,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
234,799e49e0531d26bfc992bc2bbd4429c1de297f29,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
235,723c6aba442f6cbe9d0d443d85f40628c979f558,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
236,723c6aba442f6cbe9d0d443d85f40628c979f558,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
237,723c6aba442f6cbe9d0d443d85f40628c979f558,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
238,723c6aba442f6cbe9d0d443d85f40628c979f558,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
239,723c6aba442f6cbe9d0d443d85f40628c979f558,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
240,309a76cfeb082309132e0dee1518677ee9acef52,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
241,309a76cfeb082309132e0dee1518677ee9acef52,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
242,309a76cfeb082309132e0dee1518677ee9acef52,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
243,309a76cfeb082309132e0dee1518677ee9acef52,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
244,309a76cfeb082309132e0dee1518677ee9acef52,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
245,b937cb570df97dc2e9c644337ce1cadec1d7c012,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
246,b937cb570df97dc2e9c644337ce1cadec1d7c012,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
247,b937cb570df97dc2e9c644337ce1cadec1d7c012,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
248,b937cb570df97dc2e9c644337ce1cadec1d7c012,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
249,b937cb570df97dc2e9c644337ce1cadec1d7c012,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
250,0127bf8e4554ac9ec7922df196cf61a60ec4f182,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
251,533af93df928eece8240c2ae264aab298aed8109,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
252,bae268cd5be12d7e9c1a75dc9b6896f1b74d45be,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
253,bae268cd5be12d7e9c1a75dc9b6896f1b74d45be,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
254,bae268cd5be12d7e9c1a75dc9b6896f1b74d45be,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
255,bae268cd5be12d7e9c1a75dc9b6896f1b74d45be,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
256,bae268cd5be12d7e9c1a75dc9b6896f1b74d45be,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
257,deadd7f09f37090cff80acd16e6dca7ece2859ef,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
258,158c9324ca84a49036fff32f534591f9eaf2a725,/dell-netextender/Dockerfile,"# https://aur.archlinux.org/cgit/aur.git/tree/PKGBUILD?h=netextender
"
259,b1a8c07ce542a52d55e39b9ee18414d5bee69bfd,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
260,e6db07f706e8cd44496ea451b334797e4eec1ec7,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
261,e6db07f706e8cd44496ea451b334797e4eec1ec7,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
262,e6db07f706e8cd44496ea451b334797e4eec1ec7,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
263,e6db07f706e8cd44496ea451b334797e4eec1ec7,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
264,e6db07f706e8cd44496ea451b334797e4eec1ec7,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
265,e1f20fcf147c0dd9ac5f8c6afd80a98f12facada,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
266,e1f20fcf147c0dd9ac5f8c6afd80a98f12facada,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
267,e1f20fcf147c0dd9ac5f8c6afd80a98f12facada,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
268,e1f20fcf147c0dd9ac5f8c6afd80a98f12facada,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
269,e1f20fcf147c0dd9ac5f8c6afd80a98f12facada,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
270,6c177e36033425611ad73529abc72d9596b47502,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
271,bc02ee1af3ddd77ede2498d95d340a9de7feb176,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
272,bc02ee1af3ddd77ede2498d95d340a9de7feb176,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
273,bc02ee1af3ddd77ede2498d95d340a9de7feb176,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
274,bc02ee1af3ddd77ede2498d95d340a9de7feb176,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
275,bc02ee1af3ddd77ede2498d95d340a9de7feb176,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
276,2855c025e1158e96fd8d973a6b1cf85fb6f0452f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
277,2855c025e1158e96fd8d973a6b1cf85fb6f0452f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
278,2855c025e1158e96fd8d973a6b1cf85fb6f0452f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
279,2855c025e1158e96fd8d973a6b1cf85fb6f0452f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
280,2855c025e1158e96fd8d973a6b1cf85fb6f0452f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
281,54605f7e4da9443f3f3bbe0bdb69c82380a21b2d,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
282,54605f7e4da9443f3f3bbe0bdb69c82380a21b2d,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
283,54605f7e4da9443f3f3bbe0bdb69c82380a21b2d,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
284,54605f7e4da9443f3f3bbe0bdb69c82380a21b2d,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
285,54605f7e4da9443f3f3bbe0bdb69c82380a21b2d,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
286,90c0f6696809d30efded2842492015d74970e295,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
287,90c0f6696809d30efded2842492015d74970e295,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
288,90c0f6696809d30efded2842492015d74970e295,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
289,90c0f6696809d30efded2842492015d74970e295,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
290,90c0f6696809d30efded2842492015d74970e295,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
291,1d86a5014f8d1fec99d9f6af0e93e59d460023f8,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
292,1d86a5014f8d1fec99d9f6af0e93e59d460023f8,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
293,1d86a5014f8d1fec99d9f6af0e93e59d460023f8,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
294,1d86a5014f8d1fec99d9f6af0e93e59d460023f8,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
295,1d86a5014f8d1fec99d9f6af0e93e59d460023f8,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
296,da644f0d53a468fce4b5c8ba54b3ba74bca6baf3,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
297,da644f0d53a468fce4b5c8ba54b3ba74bca6baf3,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
298,da644f0d53a468fce4b5c8ba54b3ba74bca6baf3,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
299,da644f0d53a468fce4b5c8ba54b3ba74bca6baf3,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
300,da644f0d53a468fce4b5c8ba54b3ba74bca6baf3,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
301,9e8ac7f01d20bc0263c0ab3f13f3f2a3be59a54b,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
302,9e8ac7f01d20bc0263c0ab3f13f3f2a3be59a54b,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
303,9e8ac7f01d20bc0263c0ab3f13f3f2a3be59a54b,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
304,9e8ac7f01d20bc0263c0ab3f13f3f2a3be59a54b,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
305,9e8ac7f01d20bc0263c0ab3f13f3f2a3be59a54b,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
306,bb8825459a3c695575fcf31b06d0f3cd9ab8cccc,/makemkv/Dockerfile,"# This disc requires Java runtime (JRE), but none was found. Certain functions will fail, please install Java. See http://www.makemkv.com/bdjava/ for details.
"
307,bb8825459a3c695575fcf31b06d0f3cd9ab8cccc,/makemkv/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
308,bb8825459a3c695575fcf31b06d0f3cd9ab8cccc,/makemkv/Dockerfile,"# FPL_MainFeature detection only seemed to work with OpenJDK 9 (8 was insufficient)
"
309,bb8825459a3c695575fcf31b06d0f3cd9ab8cccc,/makemkv/Dockerfile,"# Unable to execute external program 'ccextractor' as its path is not set in preferences
# Failed to execute external program 'ccextractor' from location '/usr/local/bin/mmccextr'
# (but it doesn't exist in the perferences dialog...)
"
310,bb8825459a3c695575fcf31b06d0f3cd9ab8cccc,/makemkv/Dockerfile,"# http://www.makemkv.com/forum2/viewtopic.php?f=3&t=224
"
311,bb8825459a3c695575fcf31b06d0f3cd9ab8cccc,/makemkv/Dockerfile,"# beta code: http://www.makemkv.com/forum2/viewtopic.php?f=5&t=1053
"
312,bb8825459a3c695575fcf31b06d0f3cd9ab8cccc,/makemkv/Dockerfile,"# pub   dsa2048 2017-05-26 [SC]
#       2ECF 2330 5F1F C0B3 2001  6733 94E3 083A 1804 2697
# uid           [ unknown] MakeMKV (signature) <support@makemkv.com>
"
313,fb973e3db3e5fc1406ccc436635a761241438156,/snapcraft/Dockerfile,"# based initially on https://hub.docker.com/r/didrocks/snapcraft/
"
314,fb973e3db3e5fc1406ccc436635a761241438156,/snapcraft/Dockerfile,"# enable multiverse as snapcraft cleanbuild does
#RUN sed -i 's/ universe$/ universe multiverse/' /etc/apt/sources.list

# pin specific version so we can update with a natural cache bust
"
315,a26c915c726a9c23cf2fef87af19abbc3839f5bf,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
316,a26c915c726a9c23cf2fef87af19abbc3839f5bf,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
317,a26c915c726a9c23cf2fef87af19abbc3839f5bf,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
318,a26c915c726a9c23cf2fef87af19abbc3839f5bf,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
319,a26c915c726a9c23cf2fef87af19abbc3839f5bf,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
320,03a9d14489e6bd0e958cc7081536784eee11008a,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
321,5e7435b92ef0b9d335b7494f2e14f7e297baa943,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
322,5e7435b92ef0b9d335b7494f2e14f7e297baa943,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
323,5e7435b92ef0b9d335b7494f2e14f7e297baa943,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
324,5e7435b92ef0b9d335b7494f2e14f7e297baa943,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
325,5e7435b92ef0b9d335b7494f2e14f7e297baa943,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
326,4a23d04f96aa0de3e9dcea31e4f9b82c9192886d,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
327,4a23d04f96aa0de3e9dcea31e4f9b82c9192886d,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
328,4a23d04f96aa0de3e9dcea31e4f9b82c9192886d,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
329,4a23d04f96aa0de3e9dcea31e4f9b82c9192886d,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
330,4a23d04f96aa0de3e9dcea31e4f9b82c9192886d,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
331,79732fc2b0df47b65df1f5f5f7c07619307858fb,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
332,0481aec4d4b439739b6810c1def6cc59a53c0011,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
333,0481aec4d4b439739b6810c1def6cc59a53c0011,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
334,0481aec4d4b439739b6810c1def6cc59a53c0011,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
335,0481aec4d4b439739b6810c1def6cc59a53c0011,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
336,0481aec4d4b439739b6810c1def6cc59a53c0011,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
337,c1b022ccdb5267ceff4c0eb8bb1e77cadc054ab8,/apache2/Dockerfile,"# let's copy a few of the settings from /etc/init.d/apache2
"
338,c1b022ccdb5267ceff4c0eb8bb1e77cadc054ab8,/apache2/Dockerfile,"# and then a few more from $APACHE_CONFDIR/envvars itself
"
339,c1b022ccdb5267ceff4c0eb8bb1e77cadc054ab8,/apache2/Dockerfile,"# ...
"
340,c1b022ccdb5267ceff4c0eb8bb1e77cadc054ab8,/apache2/Dockerfile,"# make CustomLog (access log) go to stdout instead of files
#  and ErrorLog to stderr
"
341,c1b022ccdb5267ceff4c0eb8bb1e77cadc054ab8,/apache2/Dockerfile,"# I really don't like Apache.  Irrationally.
"
342,773cc87d648d738c1e93f443a4a7a2afef00125e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
343,773cc87d648d738c1e93f443a4a7a2afef00125e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
344,773cc87d648d738c1e93f443a4a7a2afef00125e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
345,773cc87d648d738c1e93f443a4a7a2afef00125e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
346,773cc87d648d738c1e93f443a4a7a2afef00125e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
347,a73f2c502b9af54c918a25cfd860da70e4299ae3,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
348,37b6c7cc715b3f1eaa519942c5f0492c905ba73f,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
349,243c74164cf8ecd08411dfd29655f5365bd287c4,/tinygo/Dockerfile,"# the .deb (as of 0.6.0) installs to /usr/local/tinygo but doesn't add ""tinygo"" to PATH
"
350,243c74164cf8ecd08411dfd29655f5365bd287c4,/tinygo/Dockerfile,"# https://tinygo.org/getting-started/linux/

# https://github.com/tinygo-org/tinygo/releases
"
351,ad9387a7a98feee047b15676b7956e0bc608ef15,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
352,ad9387a7a98feee047b15676b7956e0bc608ef15,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
353,ad9387a7a98feee047b15676b7956e0bc608ef15,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
354,ad9387a7a98feee047b15676b7956e0bc608ef15,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
355,ad9387a7a98feee047b15676b7956e0bc608ef15,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
356,46a24d80db1e6a6ac27e9dc2d83f8439fe667463,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
357,46a24d80db1e6a6ac27e9dc2d83f8439fe667463,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
358,46a24d80db1e6a6ac27e9dc2d83f8439fe667463,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
359,46a24d80db1e6a6ac27e9dc2d83f8439fe667463,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
360,46a24d80db1e6a6ac27e9dc2d83f8439fe667463,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
361,04b75e27d3fc58b6447d6ea49465c26ef09714a4,/slack/Dockerfile,"# the .deb file linked at https://slack.com/downloads/instructions/debian includes ""/etc/cron.daily/slack"" which sets up an APT repo entry as in the following installation

# pub   rsa4096 2016-02-18 [SCEA]
#       DB08 5A08 CA13 B8AC B917  E0F6 D938 EC0D 0386 51BD
# uid           [ unknown] https://packagecloud.io/slacktechnologies/slack (https://packagecloud.io/docs#gpg_signing) <support@packagecloud.io>
# sub   rsa4096 2016-02-18 [SEA]
"
362,04b75e27d3fc58b6447d6ea49465c26ef09714a4,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libX11-xcb.so.1: cannot open shared object file: No such file or directory
"
363,04b75e27d3fc58b6447d6ea49465c26ef09714a4,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libasound.so.2: cannot open shared object file: No such file or directory
"
364,04b75e27d3fc58b6447d6ea49465c26ef09714a4,/slack/Dockerfile,"# 3.3.3: slack: error while loading shared libraries: libgtk-3.so.0: cannot open shared object file: No such file or directory
"
365,a55d60c080e88ea872994ab510f0482a979a2e3e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
366,a55d60c080e88ea872994ab510f0482a979a2e3e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
367,a55d60c080e88ea872994ab510f0482a979a2e3e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
368,a55d60c080e88ea872994ab510f0482a979a2e3e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
369,a55d60c080e88ea872994ab510f0482a979a2e3e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
370,7f6bb896b8de115e389e4d4b1f61c4d8cef98b32,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
371,7f6bb896b8de115e389e4d4b1f61c4d8cef98b32,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
372,7f6bb896b8de115e389e4d4b1f61c4d8cef98b32,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
373,7f6bb896b8de115e389e4d4b1f61c4d8cef98b32,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
374,7f6bb896b8de115e389e4d4b1f61c4d8cef98b32,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
375,eb008d8664ac40cdaeda66c52bd8e441c24faa38,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
376,eb008d8664ac40cdaeda66c52bd8e441c24faa38,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
377,eb008d8664ac40cdaeda66c52bd8e441c24faa38,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
378,eb008d8664ac40cdaeda66c52bd8e441c24faa38,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
379,eb008d8664ac40cdaeda66c52bd8e441c24faa38,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
380,a7a0226b5f3ad051d85ed0f32a3d89abd20ce146,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
381,c0092cbdbf387a838a3944b8f95001c26e6601c8,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
382,c0092cbdbf387a838a3944b8f95001c26e6601c8,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
383,c0092cbdbf387a838a3944b8f95001c26e6601c8,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
384,c0092cbdbf387a838a3944b8f95001c26e6601c8,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
385,c0092cbdbf387a838a3944b8f95001c26e6601c8,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
386,77ceb5bf770c9bb2d3118910a3cb8b5f44f95eef,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
387,77ceb5bf770c9bb2d3118910a3cb8b5f44f95eef,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
388,77ceb5bf770c9bb2d3118910a3cb8b5f44f95eef,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
389,77ceb5bf770c9bb2d3118910a3cb8b5f44f95eef,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
390,77ceb5bf770c9bb2d3118910a3cb8b5f44f95eef,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
391,11d3512ef6436f51c013f78e429ee9cd73b892bb,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
392,11d3512ef6436f51c013f78e429ee9cd73b892bb,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
393,11d3512ef6436f51c013f78e429ee9cd73b892bb,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
394,11d3512ef6436f51c013f78e429ee9cd73b892bb,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
395,11d3512ef6436f51c013f78e429ee9cd73b892bb,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
396,0b2218878950b68f9cb698bde85ff894870b8cfc,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
397,c76474c668922ea048344995e7e2de9debf0d809,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
398,c76474c668922ea048344995e7e2de9debf0d809,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
399,c76474c668922ea048344995e7e2de9debf0d809,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
400,c76474c668922ea048344995e7e2de9debf0d809,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
401,c76474c668922ea048344995e7e2de9debf0d809,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
402,276917f2705c32315071dd49d2255e7501fded46,/github-pages/Dockerfile,"# https://pages.github.com/versions/
"
403,a94df603add0a6a1b23c33bac0e27a23cabdab05,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
404,a94df603add0a6a1b23c33bac0e27a23cabdab05,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
405,a94df603add0a6a1b23c33bac0e27a23cabdab05,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
406,a94df603add0a6a1b23c33bac0e27a23cabdab05,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
407,a94df603add0a6a1b23c33bac0e27a23cabdab05,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
408,aadbee446595e5888f736f6e0229dccc5231ed02,/debian/ubuntu-devel/Dockerfile,"# let's make apt list package versions, since those are handy during devel
"
409,aadbee446595e5888f736f6e0229dccc5231ed02,/debian/ubuntu-devel/Dockerfile,"# normal build deps
"
410,aadbee446595e5888f736f6e0229dccc5231ed02,/debian/ubuntu-devel/Dockerfile,"# get dh-make-golang from Git since it's so rapidly changing
"
411,aadbee446595e5888f736f6e0229dccc5231ed02,/debian/ubuntu-devel/Dockerfile,"# need deb-src for compiling packages
"
412,aadbee446595e5888f736f6e0229dccc5231ed02,/debian/ubuntu-devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
413,aadbee446595e5888f736f6e0229dccc5231ed02,/debian/ubuntu-devel/Dockerfile,"# for ssh to debian hosts, let's make sure we know their fingerprints <3
"
414,aadbee446595e5888f736f6e0229dccc5231ed02,/debian/ubuntu-devel/Dockerfile,"# make sure things are pretty
"
415,aadbee446595e5888f736f6e0229dccc5231ed02,/debian/ubuntu-devel/Dockerfile,"#(force_color_prompt=yes)/\1/' ~/.bashrc

# quilt is much amaze: https://wiki.debian.org/UsingQuilt#Using_quilt_with_Debian_source_packages
"
416,aadbee446595e5888f736f6e0229dccc5231ed02,/debian/ubuntu-devel/Dockerfile,"# make sure pbuilder-dist uses a sane default mirror
"
417,1962188baba2441402b693551e5e6e57b6c0fdc7,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
418,cdef14b2017d86bf06b3efb7eac9434d15547cef,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
419,cdef14b2017d86bf06b3efb7eac9434d15547cef,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
420,cdef14b2017d86bf06b3efb7eac9434d15547cef,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
421,cdef14b2017d86bf06b3efb7eac9434d15547cef,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
422,cdef14b2017d86bf06b3efb7eac9434d15547cef,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
423,0abdccfff7cc95ca63cdd5feb75fa626bee21f03,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
424,0abdccfff7cc95ca63cdd5feb75fa626bee21f03,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
425,0abdccfff7cc95ca63cdd5feb75fa626bee21f03,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
426,0abdccfff7cc95ca63cdd5feb75fa626bee21f03,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
427,0abdccfff7cc95ca63cdd5feb75fa626bee21f03,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
428,0ae30875e3858666511a4f877713619d29c77154,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
429,0ae30875e3858666511a4f877713619d29c77154,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
430,0ae30875e3858666511a4f877713619d29c77154,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
431,f4ce145b16863c424644be3e4cc4af433f5157d4,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
432,f4ce145b16863c424644be3e4cc4af433f5157d4,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
433,f4ce145b16863c424644be3e4cc4af433f5157d4,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
434,f4ce145b16863c424644be3e4cc4af433f5157d4,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
435,f4ce145b16863c424644be3e4cc4af433f5157d4,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
436,22ef5495ae38d9f2e5c50ca59cd1123fc76944e6,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
437,22ef5495ae38d9f2e5c50ca59cd1123fc76944e6,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
438,22ef5495ae38d9f2e5c50ca59cd1123fc76944e6,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
439,22ef5495ae38d9f2e5c50ca59cd1123fc76944e6,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
440,22ef5495ae38d9f2e5c50ca59cd1123fc76944e6,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
441,1f1f12aafa7f666b1b465f752c7e8f9eb08a879a,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
442,48afbf4dc1f348d19c6b16262cb2a8454ab11563,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
443,48afbf4dc1f348d19c6b16262cb2a8454ab11563,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
444,48afbf4dc1f348d19c6b16262cb2a8454ab11563,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
445,48afbf4dc1f348d19c6b16262cb2a8454ab11563,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
446,48afbf4dc1f348d19c6b16262cb2a8454ab11563,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
447,bd14b3258ed77dcb562616ad83a09b6d3e693243,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
448,deb673eae7fa8b25fe7165615c5815cbedbcc57f,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
449,deb673eae7fa8b25fe7165615c5815cbedbcc57f,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
450,deb673eae7fa8b25fe7165615c5815cbedbcc57f,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
451,deb673eae7fa8b25fe7165615c5815cbedbcc57f,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
452,deb673eae7fa8b25fe7165615c5815cbedbcc57f,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
453,4da560cbd677e04b6237f3eb2499df734d3531fb,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
454,4da560cbd677e04b6237f3eb2499df734d3531fb,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
455,4da560cbd677e04b6237f3eb2499df734d3531fb,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
456,4da560cbd677e04b6237f3eb2499df734d3531fb,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
457,4da560cbd677e04b6237f3eb2499df734d3531fb,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
458,01b9c2969fe1f5c7e010f7746673163ada525582,/containerd/Dockerfile,"# runtime deps
"
459,01b9c2969fe1f5c7e010f7746673163ada525582,/containerd/Dockerfile,"# https://github.com/opencontainers/runc/releases
"
460,01b9c2969fe1f5c7e010f7746673163ada525582,/containerd/Dockerfile,"# TODO .asc / .sha256sum
"
461,01b9c2969fe1f5c7e010f7746673163ada525582,/containerd/Dockerfile,"# https://github.com/containerd/containerd/releases
"
462,b126a03ae768aa1fa641d6e2bda33a0d9851ba79,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
463,086fe7886aa24a3693817cb807c3e4d25bd631d7,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
464,086fe7886aa24a3693817cb807c3e4d25bd631d7,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
465,086fe7886aa24a3693817cb807c3e4d25bd631d7,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
466,086fe7886aa24a3693817cb807c3e4d25bd631d7,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
467,086fe7886aa24a3693817cb807c3e4d25bd631d7,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
468,297d6eb8fce7bda65a08c6d76c7d19991d8dc5cb,/golang/tip/Dockerfile,"# gcc for cgo
"
469,059c6b0cd0cc7fc08e6ab09b8d4023b426770dc5,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
470,059c6b0cd0cc7fc08e6ab09b8d4023b426770dc5,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
471,059c6b0cd0cc7fc08e6ab09b8d4023b426770dc5,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
472,059c6b0cd0cc7fc08e6ab09b8d4023b426770dc5,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
473,059c6b0cd0cc7fc08e6ab09b8d4023b426770dc5,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
474,7098cea1a6d19e025e913c59146ed24c63b213c3,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
475,7098cea1a6d19e025e913c59146ed24c63b213c3,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
476,7098cea1a6d19e025e913c59146ed24c63b213c3,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
477,7098cea1a6d19e025e913c59146ed24c63b213c3,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
478,7098cea1a6d19e025e913c59146ed24c63b213c3,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
479,674f751593af2d8816ba31027c061ea100fe8ea4,/docker-master/dind/Dockerfile,"# https://github.com/docker/docker/blob/master/project/PACKAGERS.md#runtime-dependencies
"
480,674f751593af2d8816ba31027c061ea100fe8ea4,/docker-master/dind/Dockerfile,"# TODO aufs-tools

# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
"
481,fb6fd0a4cf4184623f5e64dd7b41d594a2571cf8,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
482,fb6fd0a4cf4184623f5e64dd7b41d594a2571cf8,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
483,fb6fd0a4cf4184623f5e64dd7b41d594a2571cf8,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
484,fb6fd0a4cf4184623f5e64dd7b41d594a2571cf8,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
485,fb6fd0a4cf4184623f5e64dd7b41d594a2571cf8,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
486,936581ff707f4846d3477aecc3d0f49307c3fb9a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
487,936581ff707f4846d3477aecc3d0f49307c3fb9a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
488,936581ff707f4846d3477aecc3d0f49307c3fb9a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
489,936581ff707f4846d3477aecc3d0f49307c3fb9a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
490,936581ff707f4846d3477aecc3d0f49307c3fb9a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
491,aa2f9b284953729dd49b06423949c75d3cd2c9bb,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
492,aa2f9b284953729dd49b06423949c75d3cd2c9bb,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
493,aa2f9b284953729dd49b06423949c75d3cd2c9bb,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
494,aa2f9b284953729dd49b06423949c75d3cd2c9bb,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
495,aa2f9b284953729dd49b06423949c75d3cd2c9bb,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
496,602861dba99ee17545eff5f7197333b5e161c6f6,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
497,9615a3c30dc7dff1c936583ba06531263239c1d0,/debian/devel/Dockerfile,"# let's make apt list package versions, since those are handy during devel
"
498,9615a3c30dc7dff1c936583ba06531263239c1d0,/debian/devel/Dockerfile,"# normal build deps
"
499,9615a3c30dc7dff1c936583ba06531263239c1d0,/debian/devel/Dockerfile,"# get dh-make-golang from Git since it's so rapidly changing
"
500,9615a3c30dc7dff1c936583ba06531263239c1d0,/debian/devel/Dockerfile,"# need deb-src for compiling packages
"
501,9615a3c30dc7dff1c936583ba06531263239c1d0,/debian/devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
502,9615a3c30dc7dff1c936583ba06531263239c1d0,/debian/devel/Dockerfile,"# for ssh to debian hosts, let's make sure we know their fingerprints <3
"
503,9615a3c30dc7dff1c936583ba06531263239c1d0,/debian/devel/Dockerfile,"# make sure things are pretty
"
504,9615a3c30dc7dff1c936583ba06531263239c1d0,/debian/devel/Dockerfile,"#(force_color_prompt=yes)/\1/' ~/.bashrc

# quilt is much amaze: https://wiki.debian.org/UsingQuilt#Using_quilt_with_Debian_source_packages
"
505,9615a3c30dc7dff1c936583ba06531263239c1d0,/debian/devel/Dockerfile,"# make sure pbuilder-dist uses a sane default mirror
"
506,ba7f83a99e18000475accf7caf785285d682ea26,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
507,ba7f83a99e18000475accf7caf785285d682ea26,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
508,ba7f83a99e18000475accf7caf785285d682ea26,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
509,ba7f83a99e18000475accf7caf785285d682ea26,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
510,ba7f83a99e18000475accf7caf785285d682ea26,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
511,47583c4bb2e8db0a42f3f23f3fe54666a2d8606b,/sbin-init/ubuntu/13.04/Dockerfile,"# much of this was gleaned from https://github.com/lxc/lxc/blob/lxc-0.8.0/templates/lxc-ubuntu.in

# we're going to want this bad boy installed so we can connect :)
"
512,47583c4bb2e8db0a42f3f23f3fe54666a2d8606b,/sbin-init/ubuntu/13.04/Dockerfile,"# undo some leet hax of the base image
"
513,47583c4bb2e8db0a42f3f23f3fe54666a2d8606b,/sbin-init/ubuntu/13.04/Dockerfile,"# generate a nice UTF-8 locale for our use
"
514,47583c4bb2e8db0a42f3f23f3fe54666a2d8606b,/sbin-init/ubuntu/13.04/Dockerfile,"# remove some pointless services
"
515,47583c4bb2e8db0a42f3f23f3fe54666a2d8606b,/sbin-init/ubuntu/13.04/Dockerfile,"# /lib/init/fstab: cleared out for bare-bones lxc' > /lib/init/fstab

# small fix for SSH in 13.10 (that's harmless everywhere else)
"
516,47583c4bb2e8db0a42f3f23f3fe54666a2d8606b,/sbin-init/ubuntu/13.04/Dockerfile,"# set a cheap, simple password for great convenience
"
517,47583c4bb2e8db0a42f3f23f3fe54666a2d8606b,/sbin-init/ubuntu/13.04/Dockerfile,"# we can has SSH
"
518,47583c4bb2e8db0a42f3f23f3fe54666a2d8606b,/sbin-init/ubuntu/13.04/Dockerfile,"# pepare for takeoff
"
519,5e93cc395b3dfc9546eb9523044754c4cd9af669,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
520,f80f399c0ec2a6acd759fa034657ddb336549936,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
521,f80f399c0ec2a6acd759fa034657ddb336549936,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
522,f80f399c0ec2a6acd759fa034657ddb336549936,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
523,e435b192e3ba964601581168ab1c27945712cc8b,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
524,93ffdac93390afcbbae9e38c3266b1d3b5b2a986,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
525,93ffdac93390afcbbae9e38c3266b1d3b5b2a986,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
526,93ffdac93390afcbbae9e38c3266b1d3b5b2a986,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
527,93ffdac93390afcbbae9e38c3266b1d3b5b2a986,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
528,93ffdac93390afcbbae9e38c3266b1d3b5b2a986,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
529,950c1f0e52939fd3b141441a0d16406204c307b3,/syncthing/Dockerfile,"# gpg: key BCE524C7: public key ""Jakob Borg (calmh) <jakob@nym.se>"" imported
"
530,0539ff6dc21460bdc5550cdfc309c7764c035f36,/prometheus/Dockerfile,"# https://github.com/prometheus/prometheus/releases
"
531,336ebe49c07ab78dbccf4f5461658669faa0487e,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
532,4b56c880c74be356750ba12092a3c59c30d8c8d7,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
533,fb101163aaa24db489d1c0924863bfa419d74b59,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
534,fb101163aaa24db489d1c0924863bfa419d74b59,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
535,fb101163aaa24db489d1c0924863bfa419d74b59,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
536,fb101163aaa24db489d1c0924863bfa419d74b59,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
537,fb101163aaa24db489d1c0924863bfa419d74b59,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
538,b6144573262026530b06e311ac1b62e3081e4ecb,/duplicity/Dockerfile,"# https://bugs.launchpad.net/bugs/1440372 (python3)
"
539,b6144573262026530b06e311ac1b62e3081e4ecb,/duplicity/Dockerfile,"# https://pypi.org/project/b2/
"
540,b6144573262026530b06e311ac1b62e3081e4ecb,/duplicity/Dockerfile,"# duplicity doesn't publish a ""supported b2 modules versions"" list, so I've tried to match the b2 module version to the latest that was available at the time of the current duplicity release
# duplicity 0.8.00 is ~29-May-2019, b2 1.4.0 is ~26-Apr-2019

"
541,b6144573262026530b06e311ac1b62e3081e4ecb,/duplicity/Dockerfile,"# http://duplicity.nongnu.org/
# https://download.savannah.gnu.org/releases/duplicity/?C=S&O=D
"
542,b6144573262026530b06e311ac1b62e3081e4ecb,/duplicity/Dockerfile,"# https://bazaar.launchpad.net/~duplicity-team/duplicity/0.8-series/view/head:/CHANGELOG

"
543,0e026f49f9a897f2d64af7fb1d6decddbbce57a1,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
544,a6a54908654cf1b71e017edbf57e886a8e58a8dd,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
545,a6a54908654cf1b71e017edbf57e886a8e58a8dd,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
546,a6a54908654cf1b71e017edbf57e886a8e58a8dd,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
547,a6a54908654cf1b71e017edbf57e886a8e58a8dd,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
548,a6a54908654cf1b71e017edbf57e886a8e58a8dd,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
549,7b9fb3b2e2c3e7a8fa4a6a8ce4a253f6ffd59630,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
550,7b9fb3b2e2c3e7a8fa4a6a8ce4a253f6ffd59630,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
551,7b9fb3b2e2c3e7a8fa4a6a8ce4a253f6ffd59630,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
552,7b9fb3b2e2c3e7a8fa4a6a8ce4a253f6ffd59630,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
553,7b9fb3b2e2c3e7a8fa4a6a8ce4a253f6ffd59630,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
554,2e37f527a42e05e8b9e62a84ec34355edae69e47,/ruby-passenger/Dockerfile,"# set a few bundle config variables so that a local .bundle in our development directory doesn't screw up our image
"
555,2e37f527a42e05e8b9e62a84ec34355edae69e47,/ruby-passenger/Dockerfile,"# TODO find a clean way to do this here in such a way that gems like rmagick can install cleanly without first installing libmagickcore-dev
#ONBUILD ADD Gemfile /apps/rails/Gemfile
#ONBUILD ADD Gemfile.lock /apps/rails/Gemfile.lock
#ONBUILD RUN cd /apps/rails && bundle install --deployment
#ONBUILD ADD . /apps/rails
#ONBUILD RUN chown -R www-data:www-data /apps/rails
"
556,59a2fcf207b8bfbf2b6e33cc2cf6996af7ab5928,/debian/devel/Dockerfile,"# normal build deps
"
557,59a2fcf207b8bfbf2b6e33cc2cf6996af7ab5928,/debian/devel/Dockerfile,"# need an editor for ""dch -i""
"
558,59a2fcf207b8bfbf2b6e33cc2cf6996af7ab5928,/debian/devel/Dockerfile,"# a few extra little useful things
"
559,59a2fcf207b8bfbf2b6e33cc2cf6996af7ab5928,/debian/devel/Dockerfile,"# need deb-src for compiling packages
"
560,59a2fcf207b8bfbf2b6e33cc2cf6996af7ab5928,/debian/devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
561,59a2fcf207b8bfbf2b6e33cc2cf6996af7ab5928,/debian/devel/Dockerfile,"# for ssh to debian hosts, let's make sure we know their fingerprints <3
"
562,59a2fcf207b8bfbf2b6e33cc2cf6996af7ab5928,/debian/devel/Dockerfile,"# make sure things are pretty
"
563,59a2fcf207b8bfbf2b6e33cc2cf6996af7ab5928,/debian/devel/Dockerfile,"#(force_color_prompt=yes)/\1/' /root/.bashrc

# quilt is much amaze: https://wiki.debian.org/UsingQuilt#Using_quilt_with_Debian_source_packages
"
564,0c8e2e576017b4c8285b24ca229ab358258bf080,/ruby-unicorn/Dockerfile,"# set a few bundle config variables so that a local .bundle in our development directory doesn't screw up our image
"
565,0c8e2e576017b4c8285b24ca229ab358258bf080,/ruby-unicorn/Dockerfile,"# TODO find a clean way to do this here in such a way that gems like rmagick can install cleanly without first installing libmagickcore-dev
#ONBUILD ADD Gemfile /apps/rails/Gemfile
#ONBUILD ADD Gemfile.lock /apps/rails/Gemfile.lock
#ONBUILD RUN bundle install --deployment
#ONBUILD ADD . /apps/rails
"
566,7fc9067e0099fb67237dfb7dae38127b68018a41,/docker/experimental/dind/Dockerfile,"# https://github.com/docker/docker/blob/master/project/PACKAGERS.md#runtime-dependencies
"
567,7fc9067e0099fb67237dfb7dae38127b68018a41,/docker/experimental/dind/Dockerfile,"# TODO aufs-tools

"
568,c6fb1477c0c13e8973445fd3dbf14a4fc75bc43c,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
569,743e4fb91c74bb9d7528ec974c2cde6155f7c086,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
570,743e4fb91c74bb9d7528ec974c2cde6155f7c086,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
571,743e4fb91c74bb9d7528ec974c2cde6155f7c086,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
572,743e4fb91c74bb9d7528ec974c2cde6155f7c086,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
573,743e4fb91c74bb9d7528ec974c2cde6155f7c086,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
574,d828b4fd45c097a5688ed54d9061414bfe35c37c,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
575,d828b4fd45c097a5688ed54d9061414bfe35c37c,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
576,d828b4fd45c097a5688ed54d9061414bfe35c37c,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
577,d828b4fd45c097a5688ed54d9061414bfe35c37c,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
578,d828b4fd45c097a5688ed54d9061414bfe35c37c,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
579,7654ce399e58b3efae39a27b42a9cabba7d75494,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
580,51f0eb74e0e33c2a5ea5c4ac780268ff40fb109e,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
581,9725b81de258575815f708f32835949e3b7c8fe8,/ehour/Dockerfile,"# https://ehour.nl/download/downloadfile.php?get=ehour-latest-standalone-unix.sh
# https://ehour.nl/download/downloadfile.php?get=ehour-1.4.3-standalone-unix.sh
"
582,0cab295d8a53bc16946d474d600eabc9a70ce8cb,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
583,0cab295d8a53bc16946d474d600eabc9a70ce8cb,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
584,0cab295d8a53bc16946d474d600eabc9a70ce8cb,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
585,0cab295d8a53bc16946d474d600eabc9a70ce8cb,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
586,0cab295d8a53bc16946d474d600eabc9a70ce8cb,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
587,4d35a5d189ce3b17d9f13105e4aac94f112ea881,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
588,4d35a5d189ce3b17d9f13105e4aac94f112ea881,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
589,4d35a5d189ce3b17d9f13105e4aac94f112ea881,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
590,4d35a5d189ce3b17d9f13105e4aac94f112ea881,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
591,4d35a5d189ce3b17d9f13105e4aac94f112ea881,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
592,f7d1d9f97a1fad46e7bb254d590da21f14cc3be6,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
593,f7d1d9f97a1fad46e7bb254d590da21f14cc3be6,/plex/media-server/Dockerfile,"# the published deb has pre/post-inst scripts that don't really apply to Docker (so we'll skip ""install"" entirely)
# (as of 1.18.5.2309, they have bugs around Docker detection, which is mostly for avoiding init behavior)
"
594,f7d1d9f97a1fad46e7bb254d590da21f14cc3be6,/plex/media-server/Dockerfile,"#	apt-get update; \
#	apt-get install /tmp/plex.deb; \
#	rm -rf /var/lib/apt/lists/*; \
"
595,f7d1d9f97a1fad46e7bb254d590da21f14cc3be6,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
596,a3ef918f52efa1917c39c582df0715da7fde3907,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
597,a3ef918f52efa1917c39c582df0715da7fde3907,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
598,a3ef918f52efa1917c39c582df0715da7fde3907,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
599,a3ef918f52efa1917c39c582df0715da7fde3907,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
600,a3ef918f52efa1917c39c582df0715da7fde3907,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
601,4039e50adcafa1e193057a370ae93b7a4ba033f1,/prometheus/Dockerfile,"# https://github.com/prometheus/prometheus/releases
"
602,7bb7b72637a7c79aefe7e93ba98bb3f1fdeeaeeb,/apt-cacher-ng/Dockerfile,"# grab tini for signal processing and zombie killing
"
603,244bb46be24380b7d1e198167a8cce3b7def1131,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
604,244bb46be24380b7d1e198167a8cce3b7def1131,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
605,244bb46be24380b7d1e198167a8cce3b7def1131,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
606,244bb46be24380b7d1e198167a8cce3b7def1131,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
607,244bb46be24380b7d1e198167a8cce3b7def1131,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
608,59ac82fbdc08724570652907f75326b38ce90ec2,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
609,59ac82fbdc08724570652907f75326b38ce90ec2,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
610,59ac82fbdc08724570652907f75326b38ce90ec2,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
611,59ac82fbdc08724570652907f75326b38ce90ec2,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
612,038fc1c9533ec2541f79fbfa75dc2b3b5a0ccfe2,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
613,038fc1c9533ec2541f79fbfa75dc2b3b5a0ccfe2,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
614,038fc1c9533ec2541f79fbfa75dc2b3b5a0ccfe2,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
615,038fc1c9533ec2541f79fbfa75dc2b3b5a0ccfe2,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
616,038fc1c9533ec2541f79fbfa75dc2b3b5a0ccfe2,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
617,e3ea4a5e1e27906c735fca54838f9c11c7857be5,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
618,e3ea4a5e1e27906c735fca54838f9c11c7857be5,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
619,e3ea4a5e1e27906c735fca54838f9c11c7857be5,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
620,e3ea4a5e1e27906c735fca54838f9c11c7857be5,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
621,e3ea4a5e1e27906c735fca54838f9c11c7857be5,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
622,e3ea4a5e1e27906c735fca54838f9c11c7857be5,/docker-master/dind/Dockerfile,"# https://github.com/docker/docker/blob/master/project/PACKAGERS.md#runtime-dependencies
"
623,e3ea4a5e1e27906c735fca54838f9c11c7857be5,/docker-master/dind/Dockerfile,"# pigz: https://github.com/moby/moby/pull/35697 (faster gzip implementation)
"
624,e3ea4a5e1e27906c735fca54838f9c11c7857be5,/docker-master/dind/Dockerfile,"# only install zfs if it's available for the current architecture
# https://git.alpinelinux.org/cgit/aports/tree/main/zfs/APKBUILD?h=3.6-stable#n9 (""all !armhf !ppc64le"" as of 2017-11-01)
# ""apk info XYZ"" exits with a zero exit code but no output when the package exists but not for this arch
"
625,e3ea4a5e1e27906c735fca54838f9c11c7857be5,/docker-master/dind/Dockerfile,"# TODO aufs-tools

# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
"
626,e3ea4a5e1e27906c735fca54838f9c11c7857be5,/docker-master/dind/Dockerfile,"# https://github.com/docker/docker/tree/master/hack/dind
"
627,c561941903e2308be0d6ff9779ff9ed6d657f1c6,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
628,c561941903e2308be0d6ff9779ff9ed6d657f1c6,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
629,c561941903e2308be0d6ff9779ff9ed6d657f1c6,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
630,c561941903e2308be0d6ff9779ff9ed6d657f1c6,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
631,c561941903e2308be0d6ff9779ff9ed6d657f1c6,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
632,345720aba14e9d048d078b008e8bcd19fd1a78dc,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
633,0a6b23ce54217a8c3e66abc5e0f9b19047791305,/debian/devel/Dockerfile,"# normal build deps
"
634,0a6b23ce54217a8c3e66abc5e0f9b19047791305,/debian/devel/Dockerfile,"# need deb-src for compiling packages
"
635,0a6b23ce54217a8c3e66abc5e0f9b19047791305,/debian/devel/Dockerfile,"# let's make apt list package versions, since those are handy during devel
"
636,0a6b23ce54217a8c3e66abc5e0f9b19047791305,/debian/devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
637,0a6b23ce54217a8c3e66abc5e0f9b19047791305,/debian/devel/Dockerfile,"# for ssh to debian hosts, let's make sure we know their fingerprints <3
"
638,0a6b23ce54217a8c3e66abc5e0f9b19047791305,/debian/devel/Dockerfile,"# make sure things are pretty
"
639,0a6b23ce54217a8c3e66abc5e0f9b19047791305,/debian/devel/Dockerfile,"#(force_color_prompt=yes)/\1/' ~/.bashrc

# quilt is much amaze: https://wiki.debian.org/UsingQuilt#Using_quilt_with_Debian_source_packages
"
640,f646f0846c7d0bfddd895c20c4294ccfa3e19bd8,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
641,f646f0846c7d0bfddd895c20c4294ccfa3e19bd8,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
642,f646f0846c7d0bfddd895c20c4294ccfa3e19bd8,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
643,f646f0846c7d0bfddd895c20c4294ccfa3e19bd8,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
644,f646f0846c7d0bfddd895c20c4294ccfa3e19bd8,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
645,4698bd62fe77d3424c9c26ef81d9f9e4af4f2bb3,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
646,9a6a1e3709dc029799ec367c5c0b4b75639cf4c6,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
647,d3c38eaa3bc8d408048dbe0265158dae10e08383,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
648,7377f4be56dc31488e52a16c1c22fa4dbd9a2031,/skype/Dockerfile,"# see https://repo.skype.com

"
649,7377f4be56dc31488e52a16c1c22fa4dbd9a2031,/skype/Dockerfile,"# https://repo.skype.com/data/SKYPE-GPG-KEY
"
650,7377f4be56dc31488e52a16c1c22fa4dbd9a2031,/skype/Dockerfile,"# pub   2048R/DF7587C3 2016-06-22 [expires: 2021-06-21]
#       Key fingerprint = D404 0146 BE39 7250 9FD5  7FC7 1F30 45A5 DF75 87C3
# uid                  Skype Linux Client Repository <se-um@microsoft.com>
# sub   2048R/A4EBB320 2016-06-22 [expires: 2021-06-21]
"
651,903ca9bee79a5bf41871993bf7bf6dbaf5b972da,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
652,903ca9bee79a5bf41871993bf7bf6dbaf5b972da,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
653,903ca9bee79a5bf41871993bf7bf6dbaf5b972da,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
654,c99b4c1eb6920118e62521b501a53710b6a02896,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
655,c99b4c1eb6920118e62521b501a53710b6a02896,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
656,c99b4c1eb6920118e62521b501a53710b6a02896,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
657,c99b4c1eb6920118e62521b501a53710b6a02896,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
658,c99b4c1eb6920118e62521b501a53710b6a02896,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
659,a9cb2089a7501d5cfd2562fa4ad032ef1e5b1b66,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
660,a9cb2089a7501d5cfd2562fa4ad032ef1e5b1b66,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
661,a9cb2089a7501d5cfd2562fa4ad032ef1e5b1b66,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
662,a9cb2089a7501d5cfd2562fa4ad032ef1e5b1b66,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
663,a9cb2089a7501d5cfd2562fa4ad032ef1e5b1b66,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
664,90f25a5ae78b241ebf13905e35a88a412cdc996d,/kafka/Dockerfile,"# https://kafka.apache.org/downloads.html
"
665,47583c4bb2e8db0a42f3f23f3fe54666a2d8606b,/sbin-init/ubuntu/13.10/Dockerfile,"# much of this was gleaned from https://github.com/lxc/lxc/blob/lxc-0.8.0/templates/lxc-ubuntu.in

# we're going to want this bad boy installed so we can connect :)
"
666,47583c4bb2e8db0a42f3f23f3fe54666a2d8606b,/sbin-init/ubuntu/13.10/Dockerfile,"# undo some leet hax of the base image
"
667,47583c4bb2e8db0a42f3f23f3fe54666a2d8606b,/sbin-init/ubuntu/13.10/Dockerfile,"# generate a nice UTF-8 locale for our use
"
668,47583c4bb2e8db0a42f3f23f3fe54666a2d8606b,/sbin-init/ubuntu/13.10/Dockerfile,"# remove some pointless services
"
669,47583c4bb2e8db0a42f3f23f3fe54666a2d8606b,/sbin-init/ubuntu/13.10/Dockerfile,"# /lib/init/fstab: cleared out for bare-bones lxc' > /lib/init/fstab

# small fix for SSH in 13.10 (that's harmless everywhere else)
"
670,47583c4bb2e8db0a42f3f23f3fe54666a2d8606b,/sbin-init/ubuntu/13.10/Dockerfile,"# set a cheap, simple password for great convenience
"
671,47583c4bb2e8db0a42f3f23f3fe54666a2d8606b,/sbin-init/ubuntu/13.10/Dockerfile,"# we can has SSH
"
672,47583c4bb2e8db0a42f3f23f3fe54666a2d8606b,/sbin-init/ubuntu/13.10/Dockerfile,"# pepare for takeoff
"
673,bbe78f67c7a00bbfe8c0ba0ba08f08da7af219f1,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
674,7629184af0641e3c9654678378d58920e6d98653,/mutt-gmail/Dockerfile,"# a browser is necessary!
"
675,7629184af0641e3c9654678378d58920e6d98653,/mutt-gmail/Dockerfile,"# my preferred editor :) (see also muttrc)
"
676,0ab3406f445a74bbe9024d314646c0330b05a106,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
677,0ab3406f445a74bbe9024d314646c0330b05a106,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
678,0ab3406f445a74bbe9024d314646c0330b05a106,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
679,43efa06d4cb32ed6250e25f4d91931c91d0c4d51,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
680,b19fe1a31469a3e22ce9e09eda5503e39eaffe0c,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
681,b19fe1a31469a3e22ce9e09eda5503e39eaffe0c,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
682,b19fe1a31469a3e22ce9e09eda5503e39eaffe0c,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
683,b19fe1a31469a3e22ce9e09eda5503e39eaffe0c,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
684,b19fe1a31469a3e22ce9e09eda5503e39eaffe0c,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
685,b25d4949af0eb0f1d35ce81fc880fe224adfb064,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
686,c1610b96ffcea268495de6bc01aa9d72c59f9392,/google-cloud-print-connector/Dockerfile,"# fetch dependencies
# format: import-path=strip-components=tarball-url
"
687,c1610b96ffcea268495de6bc01aa9d72c59f9392,/google-cloud-print-connector/Dockerfile,"# https://github.com/coreos/go-systemd/releases
"
688,c1610b96ffcea268495de6bc01aa9d72c59f9392,/google-cloud-print-connector/Dockerfile,"# https://github.com/satori/go.uuid/releases
# (https://github.com/satori/go.uuid/commit/0ef6afb2f6cdd6cdaeee3885a95099c63f18fc8c -- hopefully we'll get a newer release than v1.2.0 soonish)
"
689,c1610b96ffcea268495de6bc01aa9d72c59f9392,/google-cloud-print-connector/Dockerfile,"# https://github.com/urfave/cli/releases
"
690,c1610b96ffcea268495de6bc01aa9d72c59f9392,/google-cloud-print-connector/Dockerfile,"# https://github.com/golang/net/commits/master
"
691,c1610b96ffcea268495de6bc01aa9d72c59f9392,/google-cloud-print-connector/Dockerfile,"# https://github.com/golang/oauth2/commits/master
"
692,c1610b96ffcea268495de6bc01aa9d72c59f9392,/google-cloud-print-connector/Dockerfile,"# https://bazaar.launchpad.net/~chipaca/go-xdg/v0/files (""view revision"")
# https://bazaar.launchpad.net/~chipaca/go-xdg/v0/revision/10?start_revid=10 (""download tarball"")
"
693,c1610b96ffcea268495de6bc01aa9d72c59f9392,/google-cloud-print-connector/Dockerfile,"#*=}""; dep=""${dep%=$strip}""; \
"
694,c1610b96ffcea268495de6bc01aa9d72c59f9392,/google-cloud-print-connector/Dockerfile,"#*=}""; strip=""${strip%=$tarball}""; \
"
695,c1610b96ffcea268495de6bc01aa9d72c59f9392,/google-cloud-print-connector/Dockerfile,"# https://github.com/google/cloud-print-connector/releases
"
696,876aa0710bc7dc655ed7be5de6af48849a128dd7,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
697,fe9c07579413f3f8199c55c3a3260df5c6d9998f,/mongodb-mms/Dockerfile,"# see https://mms.mongodb.com/settings/monitoring-agent
# click on ""Ubuntu 12.04+""
"
698,490d600bf9226c003f7bc571d4cacb740957ef33,/phpmyadmin/Dockerfile,"# https://docs.phpmyadmin.net/en/latest/setup.html#verifying-phpmyadmin-releases
"
699,490d600bf9226c003f7bc571d4cacb740957ef33,/phpmyadmin/Dockerfile,"# Since July 2015 all phpMyAdmin releases are cryptographically signed by the releasing developer, who through January 2016 was Marc Delisle.
"
700,490d600bf9226c003f7bc571d4cacb740957ef33,/phpmyadmin/Dockerfile,"# Beginning in January 2016, the release manager is Isaac Bennetch.
"
701,490d600bf9226c003f7bc571d4cacb740957ef33,/phpmyadmin/Dockerfile,"# Some additional downloads (for example themes) might be signed by Michal Čihař.
"
702,eb8e818ec03b6d08eb9f2706a7444d8019eb4ba8,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
703,eb8e818ec03b6d08eb9f2706a7444d8019eb4ba8,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
704,eb8e818ec03b6d08eb9f2706a7444d8019eb4ba8,/jenkins/Dockerfile,"# workaround ""apt-key adv --recv-keys"" hanging in stretch and above
"
705,907b9be1c28770094959f33721d36f5680ef3fa4,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
706,907b9be1c28770094959f33721d36f5680ef3fa4,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
707,907b9be1c28770094959f33721d36f5680ef3fa4,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
708,907b9be1c28770094959f33721d36f5680ef3fa4,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
709,907b9be1c28770094959f33721d36f5680ef3fa4,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
710,ff277162d81683ea2bf67b958ee568dcc5fdf461,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
711,ff277162d81683ea2bf67b958ee568dcc5fdf461,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
712,ff277162d81683ea2bf67b958ee568dcc5fdf461,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
713,ff277162d81683ea2bf67b958ee568dcc5fdf461,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
714,ff277162d81683ea2bf67b958ee568dcc5fdf461,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
715,44e5012b3b8c47340ad24da5467c7bc3175173f5,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
716,44e5012b3b8c47340ad24da5467c7bc3175173f5,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
717,44e5012b3b8c47340ad24da5467c7bc3175173f5,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
718,44e5012b3b8c47340ad24da5467c7bc3175173f5,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
719,44e5012b3b8c47340ad24da5467c7bc3175173f5,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
720,30c8452e2ee8dd60bda4be2be9c8505f314bc8ca,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
721,30c8452e2ee8dd60bda4be2be9c8505f314bc8ca,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
722,30c8452e2ee8dd60bda4be2be9c8505f314bc8ca,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
723,30c8452e2ee8dd60bda4be2be9c8505f314bc8ca,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
724,30c8452e2ee8dd60bda4be2be9c8505f314bc8ca,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
725,8d298e846de8ae1ecc670a0c65231b3a1017ad52,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
726,8d298e846de8ae1ecc670a0c65231b3a1017ad52,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
727,8d298e846de8ae1ecc670a0c65231b3a1017ad52,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
728,8d298e846de8ae1ecc670a0c65231b3a1017ad52,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
729,8d298e846de8ae1ecc670a0c65231b3a1017ad52,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
730,cfe33e4e7664ecfc89f9aa1cfe77560d4af2a6c6,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
731,cfe33e4e7664ecfc89f9aa1cfe77560d4af2a6c6,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
732,cfe33e4e7664ecfc89f9aa1cfe77560d4af2a6c6,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
733,cfe33e4e7664ecfc89f9aa1cfe77560d4af2a6c6,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
734,cfe33e4e7664ecfc89f9aa1cfe77560d4af2a6c6,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
735,246be58ceb92835a9f254a0a2a106afc251a5217,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
736,246be58ceb92835a9f254a0a2a106afc251a5217,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
737,246be58ceb92835a9f254a0a2a106afc251a5217,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
738,246be58ceb92835a9f254a0a2a106afc251a5217,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
739,246be58ceb92835a9f254a0a2a106afc251a5217,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
740,80fcef5a236820761ef2232d892c7cfa508b8d78,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
741,80fcef5a236820761ef2232d892c7cfa508b8d78,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
742,80fcef5a236820761ef2232d892c7cfa508b8d78,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
743,80fcef5a236820761ef2232d892c7cfa508b8d78,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
744,80fcef5a236820761ef2232d892c7cfa508b8d78,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
745,355305ddb022155da5469cd2017dda9884dcb15b,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
746,355305ddb022155da5469cd2017dda9884dcb15b,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
747,355305ddb022155da5469cd2017dda9884dcb15b,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
748,355305ddb022155da5469cd2017dda9884dcb15b,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
749,355305ddb022155da5469cd2017dda9884dcb15b,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
750,dc0329014d2e4ef3297df91fd3db4670c34ed55e,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
751,dc0329014d2e4ef3297df91fd3db4670c34ed55e,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
752,dc0329014d2e4ef3297df91fd3db4670c34ed55e,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
753,b7c02294f4eaa1e8aeaa62af6a95b052725eb879,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
754,b7c02294f4eaa1e8aeaa62af6a95b052725eb879,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
755,b7c02294f4eaa1e8aeaa62af6a95b052725eb879,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
756,b7c02294f4eaa1e8aeaa62af6a95b052725eb879,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
757,b7c02294f4eaa1e8aeaa62af6a95b052725eb879,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
758,0bae1beb350affccd25bff078f702994108078c2,/snapcraft/Dockerfile,"# based initially on https://hub.docker.com/r/didrocks/snapcraft/
"
759,0bae1beb350affccd25bff078f702994108078c2,/snapcraft/Dockerfile,"# enable multiverse as snapcraft cleanbuild does
#RUN sed -i 's/ universe$/ universe multiverse/' /etc/apt/sources.list

# pin specific version so we can update with a natural cache bust
"
760,ecc21838d63921733aa542bb906b9a7571ce299e,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
761,c6f1320c42c5faa745eb4f139aa1e9564bdadc47,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
762,c6f1320c42c5faa745eb4f139aa1e9564bdadc47,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
763,c6f1320c42c5faa745eb4f139aa1e9564bdadc47,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
764,c6f1320c42c5faa745eb4f139aa1e9564bdadc47,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
765,c6f1320c42c5faa745eb4f139aa1e9564bdadc47,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
766,deadd7f09f37090cff80acd16e6dca7ece2859ef,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
767,deadd7f09f37090cff80acd16e6dca7ece2859ef,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
768,deadd7f09f37090cff80acd16e6dca7ece2859ef,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
769,deadd7f09f37090cff80acd16e6dca7ece2859ef,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
770,deadd7f09f37090cff80acd16e6dca7ece2859ef,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
771,58cbb8371da5dd066cfc6b545715d26313d2c044,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
772,26f640dbf536e581c64b923e70134446a1e7a219,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
773,26f640dbf536e581c64b923e70134446a1e7a219,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
774,26f640dbf536e581c64b923e70134446a1e7a219,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
775,26f640dbf536e581c64b923e70134446a1e7a219,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
776,26f640dbf536e581c64b923e70134446a1e7a219,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
777,dc78cc220ac49c558570ba918c8d7cf9103a130f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
778,dc78cc220ac49c558570ba918c8d7cf9103a130f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
779,dc78cc220ac49c558570ba918c8d7cf9103a130f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
780,dc78cc220ac49c558570ba918c8d7cf9103a130f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
781,dc78cc220ac49c558570ba918c8d7cf9103a130f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
782,169a8f582b142bad00c03c0d22c449515bcf340d,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
783,40fe0aca2610bd28435b7554ca5aa2db20b7ba51,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
784,40fe0aca2610bd28435b7554ca5aa2db20b7ba51,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
785,40fe0aca2610bd28435b7554ca5aa2db20b7ba51,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
786,40fe0aca2610bd28435b7554ca5aa2db20b7ba51,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
787,40fe0aca2610bd28435b7554ca5aa2db20b7ba51,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
788,a1ee7121def74879e3b37b10e8461a3ff759fd77,/phpmyadmin/Dockerfile,"# https://docs.phpmyadmin.net/en/latest/setup.html#verifying-phpmyadmin-releases
"
789,a1ee7121def74879e3b37b10e8461a3ff759fd77,/phpmyadmin/Dockerfile,"# Since July 2015 all phpMyAdmin releases are cryptographically signed by the releasing developer, who through January 2016 was Marc Delisle.
"
790,a1ee7121def74879e3b37b10e8461a3ff759fd77,/phpmyadmin/Dockerfile,"# Beginning in January 2016, the release manager is Isaac Bennetch.
"
791,a1ee7121def74879e3b37b10e8461a3ff759fd77,/phpmyadmin/Dockerfile,"# Some additional downloads (for example themes) might be signed by Michal Čihař.
"
792,399a3077e95e594737641784af847287c2e0f5c1,/skype/Dockerfile,"# see https://repo.skype.com

"
793,399a3077e95e594737641784af847287c2e0f5c1,/skype/Dockerfile,"# wget is invoked by skypeforlinux for crash reports
"
794,399a3077e95e594737641784af847287c2e0f5c1,/skype/Dockerfile,"# https://repo.skype.com/data/SKYPE-GPG-KEY
"
795,399a3077e95e594737641784af847287c2e0f5c1,/skype/Dockerfile,"# pub   2048R/DF7587C3 2016-06-22 [expires: 2021-06-21]
#       Key fingerprint = D404 0146 BE39 7250 9FD5  7FC7 1F30 45A5 DF75 87C3
# uid                  Skype Linux Client Repository <se-um@microsoft.com>
# sub   2048R/A4EBB320 2016-06-22 [expires: 2021-06-21]
"
796,b9fd6f9e0882f4832121634dbec923dcd9734291,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
797,8a1557b40c8e5b43a1a744bd4dc44099dd714675,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
798,5494cafb185cc0bdc8739c6302b9083afcab052e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
799,5494cafb185cc0bdc8739c6302b9083afcab052e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
800,5494cafb185cc0bdc8739c6302b9083afcab052e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
801,5494cafb185cc0bdc8739c6302b9083afcab052e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
802,5494cafb185cc0bdc8739c6302b9083afcab052e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
803,cd6e90cf0668753b236bdf7938c5c38dcd62ebe1,/ruby-unicorn-nginx/Dockerfile,"# I wish there were a nice clean way to have nginx spawn unicorn itself
"
804,cd6e90cf0668753b236bdf7938c5c38dcd62ebe1,/ruby-unicorn-nginx/Dockerfile,"# configure nginx
"
805,cd6e90cf0668753b236bdf7938c5c38dcd62ebe1,/ruby-unicorn-nginx/Dockerfile,"# log to stderr and stay foregrounded
"
806,cd6e90cf0668753b236bdf7938c5c38dcd62ebe1,/ruby-unicorn-nginx/Dockerfile,"# prevent backgrounding (for Docker)\ndaemon off;' >> /etc/nginx/nginx.conf

# configure unicorn
"
807,cd6e90cf0668753b236bdf7938c5c38dcd62ebe1,/ruby-unicorn-nginx/Dockerfile,"# configure supervisor
"
808,0398d8c076fed924aa2aec87374aa7bed83d701c,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
809,0398d8c076fed924aa2aec87374aa7bed83d701c,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
810,0398d8c076fed924aa2aec87374aa7bed83d701c,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
811,0398d8c076fed924aa2aec87374aa7bed83d701c,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
812,0398d8c076fed924aa2aec87374aa7bed83d701c,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
813,e188013122ce6612e3bf6190a17dcf0a7687dba7,/debian/devel/Dockerfile,"# normal build deps
"
814,e188013122ce6612e3bf6190a17dcf0a7687dba7,/debian/devel/Dockerfile,"# need an editor for ""dch -i""
"
815,e188013122ce6612e3bf6190a17dcf0a7687dba7,/debian/devel/Dockerfile,"# a few extra little useful things
"
816,e188013122ce6612e3bf6190a17dcf0a7687dba7,/debian/devel/Dockerfile,"# need deb-src for compiling packages
"
817,e188013122ce6612e3bf6190a17dcf0a7687dba7,/debian/devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
818,e188013122ce6612e3bf6190a17dcf0a7687dba7,/debian/devel/Dockerfile,"# make sure things are pretty
"
819,e188013122ce6612e3bf6190a17dcf0a7687dba7,/debian/devel/Dockerfile,"#(force_color_prompt=yes)/\1/' /root/.bashrc

"
820,7d6ff9ea5e5c6c3687c75e98a11c360c4e77b7e4,/phpmyadmin/Dockerfile,"# https://docs.phpmyadmin.net/en/latest/setup.html#verifying-phpmyadmin-releases
"
821,7d6ff9ea5e5c6c3687c75e98a11c360c4e77b7e4,/phpmyadmin/Dockerfile,"# Since July 2015 all phpMyAdmin releases are cryptographically signed by the releasing developer, who through January 2016 was Marc Delisle.
"
822,7d6ff9ea5e5c6c3687c75e98a11c360c4e77b7e4,/phpmyadmin/Dockerfile,"# Beginning in January 2016, the release manager is Isaac Bennetch.
"
823,7d6ff9ea5e5c6c3687c75e98a11c360c4e77b7e4,/phpmyadmin/Dockerfile,"# Some additional downloads (for example themes) might be signed by Michal Čihař.
"
824,876aa0710bc7dc655ed7be5de6af48849a128dd7,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
825,876aa0710bc7dc655ed7be5de6af48849a128dd7,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
826,876aa0710bc7dc655ed7be5de6af48849a128dd7,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
827,876aa0710bc7dc655ed7be5de6af48849a128dd7,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
828,876aa0710bc7dc655ed7be5de6af48849a128dd7,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
829,e53d5dc65fa7de2f7ddfc456f49a67eefdcb5709,/steam/Dockerfile,"# zenity is used during early startup for dialogs and progress bars
"
830,e53d5dc65fa7de2f7ddfc456f49a67eefdcb5709,/steam/Dockerfile,"# wget is used for uploading crash dumps
"
831,e53d5dc65fa7de2f7ddfc456f49a67eefdcb5709,/steam/Dockerfile,"# needed for ""dbus-launch"" (not sure what that's used for)
"
832,e53d5dc65fa7de2f7ddfc456f49a67eefdcb5709,/steam/Dockerfile,"# needed for ""localedef"" below
"
833,e53d5dc65fa7de2f7ddfc456f49a67eefdcb5709,/steam/Dockerfile,"# WARNING: setlocale('en_US.UTF-8') failed, using locale: 'C'. International characters may not work.
"
834,e53d5dc65fa7de2f7ddfc456f49a67eefdcb5709,/steam/Dockerfile,"# https://github.com/ValveSoftware/steam-for-linux#getting-started
# http://media.steampowered.com/client/installer/steam.deb redirects to https://repo.steampowered.com/steam/archive/precise/steam_latest.deb
# https://repo.steampowered.com/steam/archive/precise/?C=M&O=D
# https://repo.steampowered.com/steam/archive/precise/?C=N&O=D
# ""steam_latest.deb"" is a symlink to ""steam-launcher_X.X.X.X_all.deb""
# https://repo.steampowered.com/steam/dists/precise/steam/binary-amd64/Packages (current version, current SHA256)
"
835,e53d5dc65fa7de2f7ddfc456f49a67eefdcb5709,/steam/Dockerfile,"# let's head off a few of the things steam will want to install immediately
"
836,e53d5dc65fa7de2f7ddfc456f49a67eefdcb5709,/steam/Dockerfile,"# installing libfontconfig1 from Ubuntu stops some runtime-related fontconfig errors/warnings (https://github.com/ValveSoftware/steam-for-linux/issues/3307#issuecomment-506650268)
"
837,e53d5dc65fa7de2f7ddfc456f49a67eefdcb5709,/steam/Dockerfile,"# useful when using ""--env DEBUGGER=gdb"" or ""--env DEBUGGER=strace"" to debug steam startup issues
#RUN set -eux; \
#	apt-get update; \
#	apt-get install -y --no-install-recommends \
#		gdb \
#		strace \
#	; \
#	rm -rf /var/lib/apt/lists/*

"
838,b5b64b9dd441c55defeb3b3240980aa82c59650d,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
839,b5b64b9dd441c55defeb3b3240980aa82c59650d,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
840,b5b64b9dd441c55defeb3b3240980aa82c59650d,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
841,b5b64b9dd441c55defeb3b3240980aa82c59650d,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
842,b5b64b9dd441c55defeb3b3240980aa82c59650d,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
843,5677fa6244e4db672f1f3dbcd20fbc7940a3bf77,/jenkins/slave/Dockerfile,"#PermitRootLogin.*/PermitRootLogin yes/' /etc/ssh/sshd_config

"
844,5677fa6244e4db672f1f3dbcd20fbc7940a3bf77,/jenkins/slave/Dockerfile,"# let's make /root a volume so ~/.ssh/authorized_keys is easier to save
"
845,1ae08bb36f065c5d64ffd21d0f94b818583618fc,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
846,c84ba2a9d8f34c01389f47b7b4dfc9633ee4818c,/slack/Dockerfile,"# used as a fake browser so clicked URLs (and internal Slack behavior that wants to open a browser) pop up with a URL + clipboard instead of silently doing nothing
"
847,c84ba2a9d8f34c01389f47b7b4dfc9633ee4818c,/slack/Dockerfile,"# the .deb file linked at https://slack.com/downloads/instructions/debian includes ""/etc/cron.daily/slack"" which sets up an APT repo entry as in the following installation

# pub   rsa4096 2016-02-18 [SCEA]
#       DB08 5A08 CA13 B8AC B917  E0F6 D938 EC0D 0386 51BD
# uid           [ unknown] https://packagecloud.io/slacktechnologies/slack (https://packagecloud.io/docs#gpg_signing) <support@packagecloud.io>
# sub   rsa4096 2016-02-18 [SEA]
"
848,c84ba2a9d8f34c01389f47b7b4dfc9633ee4818c,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libX11-xcb.so.1: cannot open shared object file: No such file or directory
"
849,c84ba2a9d8f34c01389f47b7b4dfc9633ee4818c,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libasound.so.2: cannot open shared object file: No such file or directory
"
850,c84ba2a9d8f34c01389f47b7b4dfc9633ee4818c,/slack/Dockerfile,"# 3.3.3: slack: error while loading shared libraries: libgtk-3.so.0: cannot open shared object file: No such file or directory
"
851,c84ba2a9d8f34c01389f47b7b4dfc9633ee4818c,/slack/Dockerfile,"# 4.4.0: Error: libxkbfile.so.1: cannot open shared object file: No such file or directory
"
852,c84ba2a9d8f34c01389f47b7b4dfc9633ee4818c,/slack/Dockerfile,"# 4.4.0: libGL error: failed to load driver: (i915_dri.so, i194, i965, swrast_dir.so, swrast)
"
853,3a6f0baf7f4f54d6c0a643ce10cb4fa7063eca30,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
854,3a6f0baf7f4f54d6c0a643ce10cb4fa7063eca30,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
855,3a6f0baf7f4f54d6c0a643ce10cb4fa7063eca30,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
856,3a6f0baf7f4f54d6c0a643ce10cb4fa7063eca30,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
857,3a6f0baf7f4f54d6c0a643ce10cb4fa7063eca30,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
858,83e5eda38ea9b1e605375f74864645cbc115e13d,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
859,83e5eda38ea9b1e605375f74864645cbc115e13d,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
860,83e5eda38ea9b1e605375f74864645cbc115e13d,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
861,83e5eda38ea9b1e605375f74864645cbc115e13d,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
862,83e5eda38ea9b1e605375f74864645cbc115e13d,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
863,5fa22a07d0ca762cd62995a9e92f69c9cab90469,/prometheus/Dockerfile,"# https://github.com/prometheus/prometheus/releases
"
864,7c6edf1c09acf679b23b2af05f6e7fc80b662b28,/mongodb-mms/Dockerfile,"# see https://mms.mongodb.com/settings/monitoring-agent
# click on ""Ubuntu 12.04+""
"
865,03c64b72c8473f0d1120ac049f627bff4073d572,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
866,f4b0f5be45d4e25e14b3b329fba53b4b1a4bb4af,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
867,f4b0f5be45d4e25e14b3b329fba53b4b1a4bb4af,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
868,f4b0f5be45d4e25e14b3b329fba53b4b1a4bb4af,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
869,f4b0f5be45d4e25e14b3b329fba53b4b1a4bb4af,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
870,f4b0f5be45d4e25e14b3b329fba53b4b1a4bb4af,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
871,6a469203d530c566b5fe7ddf33dfa1329d92f085,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
872,6a469203d530c566b5fe7ddf33dfa1329d92f085,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
873,6a469203d530c566b5fe7ddf33dfa1329d92f085,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
874,6a469203d530c566b5fe7ddf33dfa1329d92f085,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
875,6a469203d530c566b5fe7ddf33dfa1329d92f085,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
876,03579956c6ea648443a838a0fc63ecd24298e21e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
877,03579956c6ea648443a838a0fc63ecd24298e21e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
878,03579956c6ea648443a838a0fc63ecd24298e21e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
879,03579956c6ea648443a838a0fc63ecd24298e21e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
880,03579956c6ea648443a838a0fc63ecd24298e21e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
881,c6ccf4940b20e1cec5098bfaa4e5a4056cb62ea4,/vultr-cli/Dockerfile,"# https://github.com/vultr/vultr-cli/releases
"
882,83a5100a9b45f22cc4cde2e84e55e84e2a20b122,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
883,a73aae08eba3a496ef293b4edb3cda8efdab8f14,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
884,a73aae08eba3a496ef293b4edb3cda8efdab8f14,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
885,a73aae08eba3a496ef293b4edb3cda8efdab8f14,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
886,a73aae08eba3a496ef293b4edb3cda8efdab8f14,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
887,a73aae08eba3a496ef293b4edb3cda8efdab8f14,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
888,9fdb76063b8bd8ea8a8b61809e6c603e7434869b,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
889,9fdb76063b8bd8ea8a8b61809e6c603e7434869b,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
890,9fdb76063b8bd8ea8a8b61809e6c603e7434869b,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
891,9fdb76063b8bd8ea8a8b61809e6c603e7434869b,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
892,9fdb76063b8bd8ea8a8b61809e6c603e7434869b,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
893,0facc8b0ce394d8afc6b42e86d689562896658f4,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
894,0facc8b0ce394d8afc6b42e86d689562896658f4,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
895,0facc8b0ce394d8afc6b42e86d689562896658f4,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
896,0facc8b0ce394d8afc6b42e86d689562896658f4,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
897,0facc8b0ce394d8afc6b42e86d689562896658f4,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
898,72b52e5dfc991287822ec2ba35b9725e1085edce,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
899,72b52e5dfc991287822ec2ba35b9725e1085edce,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
900,72b52e5dfc991287822ec2ba35b9725e1085edce,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
901,72b52e5dfc991287822ec2ba35b9725e1085edce,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
902,72b52e5dfc991287822ec2ba35b9725e1085edce,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
903,94eb23defc84af497fbd8a0e0e44fe1576688cb5,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
904,94eb23defc84af497fbd8a0e0e44fe1576688cb5,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
905,94eb23defc84af497fbd8a0e0e44fe1576688cb5,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
906,94eb23defc84af497fbd8a0e0e44fe1576688cb5,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
907,94eb23defc84af497fbd8a0e0e44fe1576688cb5,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
908,1b8253a531703aa393195e2969230de884deb0bf,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
909,1b8253a531703aa393195e2969230de884deb0bf,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
910,fcc0aad9df0539b398bf2822147eb4aeab5cb005,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
911,fcc0aad9df0539b398bf2822147eb4aeab5cb005,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
912,fcc0aad9df0539b398bf2822147eb4aeab5cb005,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
913,fcc0aad9df0539b398bf2822147eb4aeab5cb005,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
914,fcc0aad9df0539b398bf2822147eb4aeab5cb005,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
915,868ece29ee037384e58317bd737895e5f1e05b15,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
916,62a045d1145ab8436460838b45320dd75ab5ec3b,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
917,62a045d1145ab8436460838b45320dd75ab5ec3b,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
918,62a045d1145ab8436460838b45320dd75ab5ec3b,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
919,62a045d1145ab8436460838b45320dd75ab5ec3b,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
920,62a045d1145ab8436460838b45320dd75ab5ec3b,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
921,77c2e52b6604b80e5c491ebc6868a2d2433d3240,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
922,77c2e52b6604b80e5c491ebc6868a2d2433d3240,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
923,77c2e52b6604b80e5c491ebc6868a2d2433d3240,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
924,77c2e52b6604b80e5c491ebc6868a2d2433d3240,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
925,77c2e52b6604b80e5c491ebc6868a2d2433d3240,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
926,69435311601b3244cc0a417f332d355ec8b7d278,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
927,69435311601b3244cc0a417f332d355ec8b7d278,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
928,69435311601b3244cc0a417f332d355ec8b7d278,/plex/media-server/Dockerfile,"# the published deb has pre/post-inst scripts that don't really apply to Docker (so we'll skip ""install"" entirely)
# (as of 1.18.5.2309, they have bugs around Docker detection, which is mostly for avoiding init behavior)
"
929,69435311601b3244cc0a417f332d355ec8b7d278,/plex/media-server/Dockerfile,"#	apt-get update; \
#	apt-get install /tmp/plex.deb; \
#	rm -rf /var/lib/apt/lists/*; \
"
930,809c799cdc170ff4cacd390fe3eef9740be971d8,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
931,809c799cdc170ff4cacd390fe3eef9740be971d8,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
932,809c799cdc170ff4cacd390fe3eef9740be971d8,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
933,809c799cdc170ff4cacd390fe3eef9740be971d8,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
934,809c799cdc170ff4cacd390fe3eef9740be971d8,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
935,b4dfdc415905a8c834fabe580401d4912dc44ef9,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
936,b4dfdc415905a8c834fabe580401d4912dc44ef9,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
937,b4dfdc415905a8c834fabe580401d4912dc44ef9,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
938,b4dfdc415905a8c834fabe580401d4912dc44ef9,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
939,b4dfdc415905a8c834fabe580401d4912dc44ef9,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
940,5e9f314c98dc9613228c4c178ebeef76376a34b4,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
941,5e9f314c98dc9613228c4c178ebeef76376a34b4,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
942,5e9f314c98dc9613228c4c178ebeef76376a34b4,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
943,5e9f314c98dc9613228c4c178ebeef76376a34b4,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
944,5e9f314c98dc9613228c4c178ebeef76376a34b4,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
945,520ee41676068c257abfb4296d580cf22daaac44,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
946,3b1c6762923c32474002bcae1f83ba8de09e736c,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
947,f3b428d00adcf0d556c1560efc8f97d0b247ed8e,/diffoscope/Dockerfile,"# xxd (xxd not available in path. Falling back to Python hexlify.)
"
948,f3b428d00adcf0d556c1560efc8f97d0b247ed8e,/diffoscope/Dockerfile,"# readelf ('readelf' not available in path. Falling back to binary comparison.)
"
949,f3b428d00adcf0d556c1560efc8f97d0b247ed8e,/diffoscope/Dockerfile,"# for ""diffoscope --progress""
"
950,2e4c8a877314acc96cef07d3ed6831e5b71bdb69,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
951,2e4c8a877314acc96cef07d3ed6831e5b71bdb69,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
952,2e4c8a877314acc96cef07d3ed6831e5b71bdb69,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
953,2e4c8a877314acc96cef07d3ed6831e5b71bdb69,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
954,2e4c8a877314acc96cef07d3ed6831e5b71bdb69,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
955,2eac1e38890fcb8184839a3202beafb09b573f0f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
956,2eac1e38890fcb8184839a3202beafb09b573f0f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
957,2eac1e38890fcb8184839a3202beafb09b573f0f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
958,2eac1e38890fcb8184839a3202beafb09b573f0f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
959,2eac1e38890fcb8184839a3202beafb09b573f0f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
960,344626334570ff9cfc2c10e918490a5118d61082,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
961,eae6859ffc83b889feb934e0a4b927a04d87c79a,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
962,eae6859ffc83b889feb934e0a4b927a04d87c79a,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
963,eae6859ffc83b889feb934e0a4b927a04d87c79a,/plex/media-server/Dockerfile,"# the published deb has pre/post-inst scripts that don't really apply to Docker (so we'll skip ""install"" entirely)
# (as of 1.18.5.2309, they have bugs around Docker detection, which is mostly for avoiding init behavior)
"
964,eae6859ffc83b889feb934e0a4b927a04d87c79a,/plex/media-server/Dockerfile,"#	apt-get update; \
#	apt-get install /tmp/plex.deb; \
#	rm -rf /var/lib/apt/lists/*; \
"
965,bd52492ebeadaed28f667498ca8a86ba36bc84bf,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
966,bd52492ebeadaed28f667498ca8a86ba36bc84bf,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
967,bd52492ebeadaed28f667498ca8a86ba36bc84bf,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
968,bd52492ebeadaed28f667498ca8a86ba36bc84bf,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
969,bd52492ebeadaed28f667498ca8a86ba36bc84bf,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
970,141d9c8265df27a5ab4d7a5cef14a27d3cf3d688,/toybox/Dockerfile,"# ideally, we'd use official static binary releases from http://landley.net/toybox/downloads/binaries/ but they don't include the (pending) ""sh"" implementation so they're not quite enough for a full system yet

"
971,141d9c8265df27a5ab4d7a5cef14a27d3cf3d688,/toybox/Dockerfile,"# https://landley.net/toybox/downloads/?C=M;O=D
# https://github.com/landley/toybox/releases
"
972,7f646aca02ee8002ac65d7d2411ab2b346baa984,/network-toolbox/debian/Dockerfile,"# dangit, wireshark-common!  *shakes fist*
"
973,24ebdd8f531850b417c39197023cc2fa767b1107,/mutt-gmail/Dockerfile,"# a browser is necessary!
"
974,24ebdd8f531850b417c39197023cc2fa767b1107,/mutt-gmail/Dockerfile,"# my preferred editor :) (see also muttrc)
"
975,31c5c7877cdfae553ceb2f0812b02fab78b3acfe,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
976,31c5c7877cdfae553ceb2f0812b02fab78b3acfe,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
977,31c5c7877cdfae553ceb2f0812b02fab78b3acfe,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
978,31c5c7877cdfae553ceb2f0812b02fab78b3acfe,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
979,31c5c7877cdfae553ceb2f0812b02fab78b3acfe,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
980,efdc47b45c4e3bd449d1818e45721090a54ef86c,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
981,efdc47b45c4e3bd449d1818e45721090a54ef86c,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
"
982,b5b9028dcc9b1de8224d2c774a0c75c600cafe71,/perl/Dockerfile,"# secure by default ♥ (thanks to sri!)
"
983,b5b9028dcc9b1de8224d2c774a0c75c600cafe71,/perl/Dockerfile,"# reinstall cpanm itself, for good measure
"
984,9d3ebd81eaec6ecec7d027338f5fb722b23a5bcb,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
985,9d3ebd81eaec6ecec7d027338f5fb722b23a5bcb,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
986,9d3ebd81eaec6ecec7d027338f5fb722b23a5bcb,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
987,9d3ebd81eaec6ecec7d027338f5fb722b23a5bcb,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
988,9d3ebd81eaec6ecec7d027338f5fb722b23a5bcb,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
989,149a552051ffdbc150fcd690846cc076690611c9,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
990,149a552051ffdbc150fcd690846cc076690611c9,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
991,149a552051ffdbc150fcd690846cc076690611c9,/jenkins/Dockerfile,"# workaround ""apt-key adv --recv-keys"" hanging in stretch and above
"
992,ad984e5c77141ce2ce3e8d1ce79b22aa91a05453,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
993,3a8824648554ed138d8012ea92c9f723ebd87820,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
994,3a8824648554ed138d8012ea92c9f723ebd87820,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
995,3a8824648554ed138d8012ea92c9f723ebd87820,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
996,3a8824648554ed138d8012ea92c9f723ebd87820,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
997,3a8824648554ed138d8012ea92c9f723ebd87820,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
998,4191600de715f34ea670d650186ab73ad5d235db,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
999,4191600de715f34ea670d650186ab73ad5d235db,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1000,4191600de715f34ea670d650186ab73ad5d235db,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
1001,4191600de715f34ea670d650186ab73ad5d235db,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
1002,4191600de715f34ea670d650186ab73ad5d235db,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
1003,1763f822e8c9a77fc9fced4036a8d8b460b6013e,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
1004,1763f822e8c9a77fc9fced4036a8d8b460b6013e,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
1005,1763f822e8c9a77fc9fced4036a8d8b460b6013e,/plex/media-server/Dockerfile,"# the published deb has pre/post-inst scripts that don't really apply to Docker (so we'll skip ""install"" entirely)
# (as of 1.18.5.2309, they have bugs around Docker detection, which is mostly for avoiding init behavior)
"
1006,1763f822e8c9a77fc9fced4036a8d8b460b6013e,/plex/media-server/Dockerfile,"#	apt-get update; \
#	apt-get install /tmp/plex.deb; \
#	rm -rf /var/lib/apt/lists/*; \
"
1007,55fa3f671e1c0fde450e9cb0ce41b8ab8bc1e505,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1008,55fa3f671e1c0fde450e9cb0ce41b8ab8bc1e505,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1009,55fa3f671e1c0fde450e9cb0ce41b8ab8bc1e505,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1010,55fa3f671e1c0fde450e9cb0ce41b8ab8bc1e505,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1011,55fa3f671e1c0fde450e9cb0ce41b8ab8bc1e505,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1012,b46f6841423dfe3787fd87102b3465dabd673b02,/diffoscope/Dockerfile,"# xxd (xxd not available in path. Falling back to Python hexlify.)
"
1013,b46f6841423dfe3787fd87102b3465dabd673b02,/diffoscope/Dockerfile,"# readelf ('readelf' not available in path. Falling back to binary comparison.)
"
1014,b46f6841423dfe3787fd87102b3465dabd673b02,/diffoscope/Dockerfile,"# for ""diffoscope --progress""
"
1015,528ad08d3e9a38abfee526be960a81c443e15a9c,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1016,528ad08d3e9a38abfee526be960a81c443e15a9c,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1017,528ad08d3e9a38abfee526be960a81c443e15a9c,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1018,528ad08d3e9a38abfee526be960a81c443e15a9c,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1019,528ad08d3e9a38abfee526be960a81c443e15a9c,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1020,0d4070ce05449934a6f34517d734a316139d3933,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1021,0d4070ce05449934a6f34517d734a316139d3933,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1022,0d4070ce05449934a6f34517d734a316139d3933,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
1023,0d4070ce05449934a6f34517d734a316139d3933,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
1024,0d4070ce05449934a6f34517d734a316139d3933,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
1025,3771fbb2543412227089139ec22478c5f07ee4be,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1026,3771fbb2543412227089139ec22478c5f07ee4be,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1027,3771fbb2543412227089139ec22478c5f07ee4be,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1028,3771fbb2543412227089139ec22478c5f07ee4be,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1029,3771fbb2543412227089139ec22478c5f07ee4be,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1030,d75df0bfd6cb477d2f6dc377ff197336112fdc89,/slack/Dockerfile,"# the .deb file linked at https://slack.com/downloads/instructions/debian includes ""/etc/cron.daily/slack"" which sets up an APT repo entry as in the following installation

# pub   rsa4096 2016-02-18 [SCEA]
#       DB08 5A08 CA13 B8AC B917  E0F6 D938 EC0D 0386 51BD
# uid           [ unknown] https://packagecloud.io/slacktechnologies/slack (https://packagecloud.io/docs#gpg_signing) <support@packagecloud.io>
# sub   rsa4096 2016-02-18 [SEA]
"
1031,d75df0bfd6cb477d2f6dc377ff197336112fdc89,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libX11-xcb.so.1: cannot open shared object file: No such file or directory
"
1032,d75df0bfd6cb477d2f6dc377ff197336112fdc89,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libasound.so.2: cannot open shared object file: No such file or directory
"
1033,d75df0bfd6cb477d2f6dc377ff197336112fdc89,/slack/Dockerfile,"# 3.3.3: slack: error while loading shared libraries: libgtk-3.so.0: cannot open shared object file: No such file or directory
"
1034,d75df0bfd6cb477d2f6dc377ff197336112fdc89,/slack/Dockerfile,"# 4.4.0: Error: libxkbfile.so.1: cannot open shared object file: No such file or directory
"
1035,d75df0bfd6cb477d2f6dc377ff197336112fdc89,/slack/Dockerfile,"# 4.4.0: libGL error: failed to load driver: (i915_dri.so, i194, i965, swrast_dir.so, swrast)
"
1036,3cf2725c67d088f5ad9adbbd456caccfbbcda788,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1037,adc62864de6ed28b17de771256a31d9daaaa19dc,/containerd/Dockerfile,"# runtime deps
"
1038,adc62864de6ed28b17de771256a31d9daaaa19dc,/containerd/Dockerfile,"# https://github.com/opencontainers/runc/releases
"
1039,adc62864de6ed28b17de771256a31d9daaaa19dc,/containerd/Dockerfile,"# TODO .asc / .sha256sum
"
1040,adc62864de6ed28b17de771256a31d9daaaa19dc,/containerd/Dockerfile,"# https://github.com/containerd/containerd/releases
"
1041,b15c177e700872c32f30476774ef08243f76800d,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1042,b15c177e700872c32f30476774ef08243f76800d,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1043,b15c177e700872c32f30476774ef08243f76800d,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1044,b15c177e700872c32f30476774ef08243f76800d,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1045,b15c177e700872c32f30476774ef08243f76800d,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1046,2915648e3c1e16ef2a8ffe45283d6fda065a2a66,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1047,2915648e3c1e16ef2a8ffe45283d6fda065a2a66,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1048,2915648e3c1e16ef2a8ffe45283d6fda065a2a66,/jenkins/Dockerfile,"# workaround ""apt-key adv --recv-keys"" hanging in stretch and above
"
1049,e2b0fbbbf43c6c8dd471af0ceea7fe4eb896eddc,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1050,e2b0fbbbf43c6c8dd471af0ceea7fe4eb896eddc,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1051,e2b0fbbbf43c6c8dd471af0ceea7fe4eb896eddc,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1052,e2b0fbbbf43c6c8dd471af0ceea7fe4eb896eddc,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1053,e2b0fbbbf43c6c8dd471af0ceea7fe4eb896eddc,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1054,e6a6f77621a8dbcddf1f92afeb7443868cd672eb,/exim4/Dockerfile,"# grab tini for signal processing and zombie killing
"
1055,e6a6f77621a8dbcddf1f92afeb7443868cd672eb,/exim4/Dockerfile,"# https://blog.dhampir.no/content/exim4-line-length-in-debian-stretch-mail-delivery-failed-returning-message-to-sender
# https://serverfault.com/a/881197
# https://bugs.debian.org/828801
"
1056,43ecd12ca97a7c92651ad3d706f86903416f171a,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1057,8d44357da5bada3ef357e019789d1391cb87f7c9,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1058,8d44357da5bada3ef357e019789d1391cb87f7c9,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1059,8d44357da5bada3ef357e019789d1391cb87f7c9,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1060,8d44357da5bada3ef357e019789d1391cb87f7c9,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1061,8d44357da5bada3ef357e019789d1391cb87f7c9,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1062,7d3175bc7646a8f1bb69b6e76956e154306ff20f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1063,7d3175bc7646a8f1bb69b6e76956e154306ff20f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1064,7d3175bc7646a8f1bb69b6e76956e154306ff20f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1065,7d3175bc7646a8f1bb69b6e76956e154306ff20f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1066,7d3175bc7646a8f1bb69b6e76956e154306ff20f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1067,73551160638ba0d8ca120fa8888489b4cefd12d0,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1068,47583c4bb2e8db0a42f3f23f3fe54666a2d8606b,/sbin-init/ubuntu/12.10/Dockerfile,"# much of this was gleaned from https://github.com/lxc/lxc/blob/lxc-0.8.0/templates/lxc-ubuntu.in

# we're going to want this bad boy installed so we can connect :)
"
1069,47583c4bb2e8db0a42f3f23f3fe54666a2d8606b,/sbin-init/ubuntu/12.10/Dockerfile,"# undo some leet hax of the base image
"
1070,47583c4bb2e8db0a42f3f23f3fe54666a2d8606b,/sbin-init/ubuntu/12.10/Dockerfile,"# generate a nice UTF-8 locale for our use
"
1071,47583c4bb2e8db0a42f3f23f3fe54666a2d8606b,/sbin-init/ubuntu/12.10/Dockerfile,"# remove some pointless services
"
1072,47583c4bb2e8db0a42f3f23f3fe54666a2d8606b,/sbin-init/ubuntu/12.10/Dockerfile,"# /lib/init/fstab: cleared out for bare-bones lxc' > /lib/init/fstab

# small fix for SSH in 13.10 (that's harmless everywhere else)
"
1073,47583c4bb2e8db0a42f3f23f3fe54666a2d8606b,/sbin-init/ubuntu/12.10/Dockerfile,"# set a cheap, simple password for great convenience
"
1074,47583c4bb2e8db0a42f3f23f3fe54666a2d8606b,/sbin-init/ubuntu/12.10/Dockerfile,"# we can has SSH
"
1075,47583c4bb2e8db0a42f3f23f3fe54666a2d8606b,/sbin-init/ubuntu/12.10/Dockerfile,"# pepare for takeoff
"
1076,5ef0739094fdb8b187e986e95f4372111a14342e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1077,5ef0739094fdb8b187e986e95f4372111a14342e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1078,5ef0739094fdb8b187e986e95f4372111a14342e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1079,5ef0739094fdb8b187e986e95f4372111a14342e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1080,5ef0739094fdb8b187e986e95f4372111a14342e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1081,f59da3c6f16c375dd39da3ebffc2669a56f3ca31,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1082,f59da3c6f16c375dd39da3ebffc2669a56f3ca31,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1083,f59da3c6f16c375dd39da3ebffc2669a56f3ca31,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1084,f59da3c6f16c375dd39da3ebffc2669a56f3ca31,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1085,f59da3c6f16c375dd39da3ebffc2669a56f3ca31,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1086,02958d7a5900fb54979ac0c0c194aa14fc56634c,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1087,02958d7a5900fb54979ac0c0c194aa14fc56634c,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1088,02958d7a5900fb54979ac0c0c194aa14fc56634c,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
1089,02958d7a5900fb54979ac0c0c194aa14fc56634c,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
1090,02958d7a5900fb54979ac0c0c194aa14fc56634c,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
1091,383626c5467eeb936f308227003a52ef739e182f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1092,383626c5467eeb936f308227003a52ef739e182f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1093,383626c5467eeb936f308227003a52ef739e182f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1094,383626c5467eeb936f308227003a52ef739e182f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1095,383626c5467eeb936f308227003a52ef739e182f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1096,907b9be1c28770094959f33721d36f5680ef3fa4,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1097,2b941404e3a1d2e2bf127342b9eaaa5ec91017d2,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1098,1d8cca0719a888ae7145519c1388b4f432cc569a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1099,1d8cca0719a888ae7145519c1388b4f432cc569a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1100,1d8cca0719a888ae7145519c1388b4f432cc569a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1101,1d8cca0719a888ae7145519c1388b4f432cc569a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1102,1d8cca0719a888ae7145519c1388b4f432cc569a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1103,c7aec2ee4cb1b8bb4fa6f7ba53cc9928bf13edd4,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1104,c7aec2ee4cb1b8bb4fa6f7ba53cc9928bf13edd4,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1105,c7aec2ee4cb1b8bb4fa6f7ba53cc9928bf13edd4,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1106,c7aec2ee4cb1b8bb4fa6f7ba53cc9928bf13edd4,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1107,c7aec2ee4cb1b8bb4fa6f7ba53cc9928bf13edd4,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1108,7d2c0ed3f348c98317a14fe2ef0b9e0b8b1c96f9,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1109,7d2c0ed3f348c98317a14fe2ef0b9e0b8b1c96f9,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1110,7d2c0ed3f348c98317a14fe2ef0b9e0b8b1c96f9,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1111,7d2c0ed3f348c98317a14fe2ef0b9e0b8b1c96f9,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1112,7d2c0ed3f348c98317a14fe2ef0b9e0b8b1c96f9,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1113,1ea2cf86eab3fc5057819a61f4f243d89069519c,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1114,1ea2cf86eab3fc5057819a61f4f243d89069519c,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1115,1ea2cf86eab3fc5057819a61f4f243d89069519c,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1116,1ea2cf86eab3fc5057819a61f4f243d89069519c,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1117,1ea2cf86eab3fc5057819a61f4f243d89069519c,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1118,694d3630318c96745bd5d6c365a2e7d5596976cf,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1119,694d3630318c96745bd5d6c365a2e7d5596976cf,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1120,694d3630318c96745bd5d6c365a2e7d5596976cf,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
1121,694d3630318c96745bd5d6c365a2e7d5596976cf,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
1122,694d3630318c96745bd5d6c365a2e7d5596976cf,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
1123,d2b815ddbc32a2f5eeaee5fe117e587eebd5c01d,/tinygo/Dockerfile,"# the .deb (as of 0.6.0) installs to /usr/local/tinygo but doesn't add ""tinygo"" to PATH
"
1124,d2b815ddbc32a2f5eeaee5fe117e587eebd5c01d,/tinygo/Dockerfile,"# https://tinygo.org/getting-started/linux/

# https://github.com/tinygo-org/tinygo/releases
"
1125,1e39d3269b792ca41c266b138de9477ef9d80b2f,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1126,1e39d3269b792ca41c266b138de9477ef9d80b2f,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1127,1e39d3269b792ca41c266b138de9477ef9d80b2f,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
1128,1e39d3269b792ca41c266b138de9477ef9d80b2f,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
1129,1e39d3269b792ca41c266b138de9477ef9d80b2f,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
1130,4ae2b85f07236a0597a4b1d6992a11e9e2f8f7be,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1131,4ae2b85f07236a0597a4b1d6992a11e9e2f8f7be,/docker-master/Dockerfile,"# why we use ""curl"" instead of ""wget"":
# + wget -O docker.tgz https://download.docker.com/linux/static/stable/x86_64/docker-17.03.1-ce.tgz
# Connecting to download.docker.com (54.230.87.253:443)
# wget: error getting response: Connection reset by peer
"
1132,135a6f734100ef0e8cf72db165c52752cbb839a6,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1133,135a6f734100ef0e8cf72db165c52752cbb839a6,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1134,135a6f734100ef0e8cf72db165c52752cbb839a6,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1135,135a6f734100ef0e8cf72db165c52752cbb839a6,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1136,135a6f734100ef0e8cf72db165c52752cbb839a6,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1137,771406013df09dd993e7c3ce06ac68d06a3fa7d1,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1138,c9154ec982d83ccbee52c868a7e4973d9cde6eaf,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1139,4dc5facc64298b07ebc219de209b8800d0b665fe,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1140,4dc5facc64298b07ebc219de209b8800d0b665fe,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1141,4dc5facc64298b07ebc219de209b8800d0b665fe,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
1142,4dc5facc64298b07ebc219de209b8800d0b665fe,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
1143,4dc5facc64298b07ebc219de209b8800d0b665fe,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
1144,927f0421afcb3bf985ba30b4efebcf6bba0eabd0,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1145,927f0421afcb3bf985ba30b4efebcf6bba0eabd0,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1146,927f0421afcb3bf985ba30b4efebcf6bba0eabd0,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1147,927f0421afcb3bf985ba30b4efebcf6bba0eabd0,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1148,927f0421afcb3bf985ba30b4efebcf6bba0eabd0,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1149,04e804473c7835e37ca1de5d4f5bee922f2b007a,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1150,04e804473c7835e37ca1de5d4f5bee922f2b007a,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1151,04e804473c7835e37ca1de5d4f5bee922f2b007a,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
1152,04e804473c7835e37ca1de5d4f5bee922f2b007a,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
1153,04e804473c7835e37ca1de5d4f5bee922f2b007a,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
1154,545a7dda246933112c4e9a0fdf07392b1dfdf482,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1155,545a7dda246933112c4e9a0fdf07392b1dfdf482,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1156,545a7dda246933112c4e9a0fdf07392b1dfdf482,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1157,545a7dda246933112c4e9a0fdf07392b1dfdf482,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1158,545a7dda246933112c4e9a0fdf07392b1dfdf482,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1159,1acb64ca1cc3242011ef40ce6c7601f8cc41e4eb,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1160,1acb64ca1cc3242011ef40ce6c7601f8cc41e4eb,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1161,1acb64ca1cc3242011ef40ce6c7601f8cc41e4eb,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1162,1acb64ca1cc3242011ef40ce6c7601f8cc41e4eb,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1163,1acb64ca1cc3242011ef40ce6c7601f8cc41e4eb,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1164,fbebc70834b1da31435c2075122f5d9a125ee426,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1165,fbebc70834b1da31435c2075122f5d9a125ee426,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1166,fbebc70834b1da31435c2075122f5d9a125ee426,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
1167,fbebc70834b1da31435c2075122f5d9a125ee426,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
1168,fbebc70834b1da31435c2075122f5d9a125ee426,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
1169,0ae58c0bc42fe621eb5923049d0fe2dc6622a7a2,/exim4/Dockerfile,"# grab tini for signal processing and zombie killing
"
1170,0ae58c0bc42fe621eb5923049d0fe2dc6622a7a2,/exim4/Dockerfile,"# https://blog.dhampir.no/content/exim4-line-length-in-debian-stretch-mail-delivery-failed-returning-message-to-sender
# https://serverfault.com/a/881197
# https://bugs.debian.org/828801
"
1171,21d9e0127c27f731367ec2815063209d1ebb36b2,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1172,21d9e0127c27f731367ec2815063209d1ebb36b2,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1173,21d9e0127c27f731367ec2815063209d1ebb36b2,/jenkins/Dockerfile,"# workaround ""apt-key adv --recv-keys"" hanging in stretch and above
"
1174,3209786f6c1c80f4e436d87eaa265057bd815e08,/nylas/sync-engine/Dockerfile,"# tell pynacl to use system libsodium
"
1175,3209786f6c1c80f4e436d87eaa265057bd815e08,/nylas/sync-engine/Dockerfile,"#ENV SYNC_VERSION v0.3.0 # 2014 :'(
"
1176,3209786f6c1c80f4e436d87eaa265057bd815e08,/nylas/sync-engine/Dockerfile,"# ugh, NameError: name 'PROTOCOL_SSLv3' is not defined
"
1177,3209786f6c1c80f4e436d87eaa265057bd815e08,/nylas/sync-engine/Dockerfile," # TODO inbox-api or inbox-start
"
1178,460af37763386c5a58b05b966067680786562795,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1179,460af37763386c5a58b05b966067680786562795,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1180,460af37763386c5a58b05b966067680786562795,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
1181,b50eda1a72c3d657562060609b419325649d7b4b,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1182,b50eda1a72c3d657562060609b419325649d7b4b,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1183,b50eda1a72c3d657562060609b419325649d7b4b,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1184,b50eda1a72c3d657562060609b419325649d7b4b,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1185,b50eda1a72c3d657562060609b419325649d7b4b,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1186,26feb42a08094a92bff944ab5a97e83d0477df55,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1187,26feb42a08094a92bff944ab5a97e83d0477df55,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1188,26feb42a08094a92bff944ab5a97e83d0477df55,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1189,26feb42a08094a92bff944ab5a97e83d0477df55,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1190,26feb42a08094a92bff944ab5a97e83d0477df55,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1191,b7d0f064f21c268f1830ee8c8b10fe2eed775f6f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1192,b7d0f064f21c268f1830ee8c8b10fe2eed775f6f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1193,b7d0f064f21c268f1830ee8c8b10fe2eed775f6f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1194,b7d0f064f21c268f1830ee8c8b10fe2eed775f6f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1195,b7d0f064f21c268f1830ee8c8b10fe2eed775f6f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1196,533c45987753f2369f9931c7ba374f5f4aee8adf,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1197,533c45987753f2369f9931c7ba374f5f4aee8adf,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1198,533c45987753f2369f9931c7ba374f5f4aee8adf,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
1199,533c45987753f2369f9931c7ba374f5f4aee8adf,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
1200,533c45987753f2369f9931c7ba374f5f4aee8adf,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
1201,e59f230f0a9caad3a51d2d33515a2243e1e5950c,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1202,e59f230f0a9caad3a51d2d33515a2243e1e5950c,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1203,e59f230f0a9caad3a51d2d33515a2243e1e5950c,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1204,e59f230f0a9caad3a51d2d33515a2243e1e5950c,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1205,e59f230f0a9caad3a51d2d33515a2243e1e5950c,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1206,7fdc462c03eeceb1b4b4d4cdc640b4438e204350,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1207,2e4c8a877314acc96cef07d3ed6831e5b71bdb69,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1208,daf20a6c5732b10017a7a67e547603f9c7950dba,/phpmyadmin/Dockerfile,"# https://docs.phpmyadmin.net/en/latest/setup.html#verifying-phpmyadmin-releases
"
1209,daf20a6c5732b10017a7a67e547603f9c7950dba,/phpmyadmin/Dockerfile,"# Since July 2015 all phpMyAdmin releases are cryptographically signed by the releasing developer, who through January 2016 was Marc Delisle.
"
1210,daf20a6c5732b10017a7a67e547603f9c7950dba,/phpmyadmin/Dockerfile,"# Beginning in January 2016, the release manager is Isaac Bennetch.
"
1211,daf20a6c5732b10017a7a67e547603f9c7950dba,/phpmyadmin/Dockerfile,"# Some additional downloads (for example themes) might be signed by Michal Čihař.
"
1212,aea58d5f193f02f75beb2a0ca2b7f934e3397c44,/containerd/Dockerfile,"# runtime deps
"
1213,aea58d5f193f02f75beb2a0ca2b7f934e3397c44,/containerd/Dockerfile,"# https://github.com/opencontainers/runc/releases
"
1214,aea58d5f193f02f75beb2a0ca2b7f934e3397c44,/containerd/Dockerfile,"# TODO .asc / .sha256sum
"
1215,aea58d5f193f02f75beb2a0ca2b7f934e3397c44,/containerd/Dockerfile,"# https://github.com/containerd/containerd/releases
"
1216,9c1e3d4e7ab3b49eb3e8eb72229afc79d161516b,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1217,9c1e3d4e7ab3b49eb3e8eb72229afc79d161516b,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1218,42a53e147555fff902a22e6e24e469d6f0097998,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1219,42a53e147555fff902a22e6e24e469d6f0097998,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1220,42a53e147555fff902a22e6e24e469d6f0097998,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
1221,3aa865838959051f4bbf420a6108597f7e4be6e0,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1222,fe13b63492a15bd80d0aab7be305d896993f9fab,/makemkv/Dockerfile,"# FPL_MainFeature detection only seemed to work with OpenJDK 9 (8 was insufficient)
"
1223,fe13b63492a15bd80d0aab7be305d896993f9fab,/makemkv/Dockerfile,"# This disc requires Java runtime (JRE), but none was found. Certain functions will fail, please install Java. See http://www.makemkv.com/bdjava/ for details.
"
1224,fe13b63492a15bd80d0aab7be305d896993f9fab,/makemkv/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
1225,fe13b63492a15bd80d0aab7be305d896993f9fab,/makemkv/Dockerfile,"# http://www.makemkv.com/forum2/viewtopic.php?f=3&t=224
"
1226,fe13b63492a15bd80d0aab7be305d896993f9fab,/makemkv/Dockerfile,"# beta code: http://www.makemkv.com/forum2/viewtopic.php?f=5&t=1053
"
1227,fe13b63492a15bd80d0aab7be305d896993f9fab,/makemkv/Dockerfile,"# pub   dsa2048 2017-05-26 [SC]
#       2ECF 2330 5F1F C0B3 2001  6733 94E3 083A 1804 2697
# uid           [ unknown] MakeMKV (signature) <support@makemkv.com>
"
1228,a0e90cb2024a3863ea20fa3c1fb2d4b41e4a6f2d,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1229,2ada9bce6eca0c3e649811bb35238d00b3be78fa,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1230,2ada9bce6eca0c3e649811bb35238d00b3be78fa,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1231,2ada9bce6eca0c3e649811bb35238d00b3be78fa,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1232,2ada9bce6eca0c3e649811bb35238d00b3be78fa,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1233,2ada9bce6eca0c3e649811bb35238d00b3be78fa,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1234,2c9167edfde623e126dd7b78862732599d2b3cd0,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1235,2c9167edfde623e126dd7b78862732599d2b3cd0,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1236,2c9167edfde623e126dd7b78862732599d2b3cd0,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1237,2c9167edfde623e126dd7b78862732599d2b3cd0,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1238,2c9167edfde623e126dd7b78862732599d2b3cd0,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1239,12398918340f8fbace506e274be89fa50775592e,/lutris/Dockerfile,"# install Wine
#   https://github.com/lutris/docs/blob/f2bf5ca14f280e3c58d2306581294d57650c0cc2/WineDependencies.md
#   https://wiki.winehq.org/Ubuntu
"
1240,12398918340f8fbace506e274be89fa50775592e,/lutris/Dockerfile,"# https://dl.winehq.org/wine-builds/ubuntu/dists/focal/main/binary-amd64/?C=N;O=D
# https://www.winehq.org/news/
"
1241,12398918340f8fbace506e274be89fa50775592e,/lutris/Dockerfile,"# ""Add SDL2 Backports PPA (for Faudio package):""
"
1242,12398918340f8fbace506e274be89fa50775592e,/lutris/Dockerfile,"# ""For compatibility reasons, install these additional libraries:""
"
1243,12398918340f8fbace506e274be89fa50775592e,/lutris/Dockerfile,"# https://github.com/Winetricks/winetricks/releases
"
1244,12398918340f8fbace506e274be89fa50775592e,/lutris/Dockerfile,"# https://launchpad.net/~lutris-team/+archive/ubuntu/lutris?field.series_filter=focal
"
1245,12398918340f8fbace506e274be89fa50775592e,/lutris/Dockerfile,"# https://github.com/lutris/docs/blob/f2bf5ca14f280e3c58d2306581294d57650c0cc2/InstallingDrivers.md
"
1246,12398918340f8fbace506e274be89fa50775592e,/lutris/Dockerfile,"# gi.repository.GLib.Error: g-exec-error-quark: Failed to execute child process “dbus-launch” (No such file or directory) (8)
"
1247,12398918340f8fbace506e274be89fa50775592e,/lutris/Dockerfile,"# /lutris-home/games/battle.net/state-cache-merge/state-cache-update.sh: line 8: zenity: command not found
"
1248,a8b4e7c6af7aa16cda7e6e0dfb4bfc713ef4f534,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1249,a8b4e7c6af7aa16cda7e6e0dfb4bfc713ef4f534,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1250,a8b4e7c6af7aa16cda7e6e0dfb4bfc713ef4f534,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1251,a8b4e7c6af7aa16cda7e6e0dfb4bfc713ef4f534,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1252,a8b4e7c6af7aa16cda7e6e0dfb4bfc713ef4f534,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1253,26468c8cd5ecdc81baa889e3c54dd730ebc23f2e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1254,26468c8cd5ecdc81baa889e3c54dd730ebc23f2e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1255,26468c8cd5ecdc81baa889e3c54dd730ebc23f2e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1256,26468c8cd5ecdc81baa889e3c54dd730ebc23f2e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1257,26468c8cd5ecdc81baa889e3c54dd730ebc23f2e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1258,c905955f5b28f5c6face69f9035aa574a21b6b1b,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1259,c905955f5b28f5c6face69f9035aa574a21b6b1b,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1260,c905955f5b28f5c6face69f9035aa574a21b6b1b,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1261,c905955f5b28f5c6face69f9035aa574a21b6b1b,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1262,c905955f5b28f5c6face69f9035aa574a21b6b1b,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1263,f6125d69953bed3fd320fa49bcdff317b6e95fab,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1264,f6125d69953bed3fd320fa49bcdff317b6e95fab,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1265,f6125d69953bed3fd320fa49bcdff317b6e95fab,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
1266,f6125d69953bed3fd320fa49bcdff317b6e95fab,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
1267,f6125d69953bed3fd320fa49bcdff317b6e95fab,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
1268,4efcdd348d5127f3fbd5b1461178e0c30350ffb4,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1269,4efcdd348d5127f3fbd5b1461178e0c30350ffb4,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1270,4efcdd348d5127f3fbd5b1461178e0c30350ffb4,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
1271,4efcdd348d5127f3fbd5b1461178e0c30350ffb4,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
1272,4efcdd348d5127f3fbd5b1461178e0c30350ffb4,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
1273,934eba02391de1625776fc018e3f3594785b5338,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1274,934eba02391de1625776fc018e3f3594785b5338,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1275,934eba02391de1625776fc018e3f3594785b5338,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1276,934eba02391de1625776fc018e3f3594785b5338,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1277,934eba02391de1625776fc018e3f3594785b5338,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1278,a75cfd6bed935abfd4d32dba0411232dfca0edef,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1279,a75cfd6bed935abfd4d32dba0411232dfca0edef,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1280,a75cfd6bed935abfd4d32dba0411232dfca0edef,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1281,a75cfd6bed935abfd4d32dba0411232dfca0edef,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1282,a75cfd6bed935abfd4d32dba0411232dfca0edef,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1283,4d9c517ec39841881fc78f8f6f48ac7fe02110c0,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1284,4d9c517ec39841881fc78f8f6f48ac7fe02110c0,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1285,4d9c517ec39841881fc78f8f6f48ac7fe02110c0,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1286,4d9c517ec39841881fc78f8f6f48ac7fe02110c0,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1287,4d9c517ec39841881fc78f8f6f48ac7fe02110c0,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1288,e9ec0040550199abc96d2c200fa5a7de10da5ccd,/certbot/Dockerfile,"# Executable not found: can't find the executable for the dialog-like program
"
1289,e9ec0040550199abc96d2c200fa5a7de10da5ccd,/certbot/Dockerfile,"#VOLUME /etc/letsencrypt
"
1290,2bd92f887cdb18127e10c59127a79c6e3b9220d3,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1291,2bd92f887cdb18127e10c59127a79c6e3b9220d3,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1292,2bd92f887cdb18127e10c59127a79c6e3b9220d3,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1293,2bd92f887cdb18127e10c59127a79c6e3b9220d3,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1294,2bd92f887cdb18127e10c59127a79c6e3b9220d3,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1295,74d2a9551210730a9ff917eeb21b13a6135908a0,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1296,74d2a9551210730a9ff917eeb21b13a6135908a0,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1297,74d2a9551210730a9ff917eeb21b13a6135908a0,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
1298,74d2a9551210730a9ff917eeb21b13a6135908a0,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
1299,74d2a9551210730a9ff917eeb21b13a6135908a0,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
1300,a1b247701b449dd1b59db02e777c885544ee211f,/snapcraft/Dockerfile,"# based initially on https://hub.docker.com/r/didrocks/snapcraft/
"
1301,a1b247701b449dd1b59db02e777c885544ee211f,/snapcraft/Dockerfile,"# enable multiverse as snapcraft cleanbuild does
#RUN sed -i 's/ universe$/ universe multiverse/' /etc/apt/sources.list

# pin specific version so we can update with a natural cache bust
"
1302,f23ffcea2301eee73535559bd72eae9446e421cc,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1303,e565985d05f56f7d2485b540f8402d956f02b189,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1304,e565985d05f56f7d2485b540f8402d956f02b189,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1305,e565985d05f56f7d2485b540f8402d956f02b189,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
1306,e565985d05f56f7d2485b540f8402d956f02b189,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
1307,e565985d05f56f7d2485b540f8402d956f02b189,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
1308,aac36c16a42c5863e1e8b3a860eeffad7d2c2415,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1309,aac36c16a42c5863e1e8b3a860eeffad7d2c2415,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1310,aac36c16a42c5863e1e8b3a860eeffad7d2c2415,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1311,aac36c16a42c5863e1e8b3a860eeffad7d2c2415,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1312,aac36c16a42c5863e1e8b3a860eeffad7d2c2415,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1313,3e079d8e3b067246a6e249396d445cb33b5b76b1,/docker-tianon/Dockerfile,"# https://github.com/docker-library/docker/pull/166
#   dockerd-entrypoint.sh uses DOCKER_TLS_CERTDIR for auto-generating TLS certificates
#   docker-entrypoint.sh uses DOCKER_TLS_CERTDIR for auto-setting DOCKER_TLS_VERIFY and DOCKER_CERT_PATH
# (For this to work, at least the ""client"" subdirectory of this path needs to be shared between the client and server containers via a volume, ""docker cp"", or other means of data sharing.)
"
1314,3e079d8e3b067246a6e249396d445cb33b5b76b1,/docker-tianon/Dockerfile,"# also, ensure the directory pre-exists and has wide enough permissions for ""dockerd-entrypoint.sh"" to create subdirectories, even when run in ""rootless"" mode
"
1315,3e079d8e3b067246a6e249396d445cb33b5b76b1,/docker-tianon/Dockerfile,"# (doing both /certs and /certs/client so that if Docker does a ""copy-up"" into a volume defined on /certs/client, it will ""do the right thing"" by default in a way that still works for rootless users)

"
1316,3e079d8e3b067246a6e249396d445cb33b5b76b1,/docker-tianon/Dockerfile,"# dind

"
1317,3e079d8e3b067246a6e249396d445cb33b5b76b1,/docker-tianon/Dockerfile,"# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
"
1318,f948ed7b4378b3ea38fb2e0991b894ece6049a04,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1319,f948ed7b4378b3ea38fb2e0991b894ece6049a04,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1320,f948ed7b4378b3ea38fb2e0991b894ece6049a04,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1321,f948ed7b4378b3ea38fb2e0991b894ece6049a04,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1322,f948ed7b4378b3ea38fb2e0991b894ece6049a04,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1323,253f194b6d02e9bc1f4e2fb5d0eba667b31298ef,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1324,253f194b6d02e9bc1f4e2fb5d0eba667b31298ef,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1325,253f194b6d02e9bc1f4e2fb5d0eba667b31298ef,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
1326,253f194b6d02e9bc1f4e2fb5d0eba667b31298ef,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
1327,253f194b6d02e9bc1f4e2fb5d0eba667b31298ef,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
1328,677237d42725c5322e550e62c3bb1aa30567e596,/moosefs/Dockerfile,"# mfscli (and cgi) are Python-based
"
1329,677237d42725c5322e550e62c3bb1aa30567e596,/moosefs/Dockerfile,"# mfsmount needs ""fusermount""
"
1330,677237d42725c5322e550e62c3bb1aa30567e596,/moosefs/Dockerfile,"# allow running mfsmount as non-root
"
1331,677237d42725c5322e550e62c3bb1aa30567e596,/moosefs/Dockerfile,"#user_allow_other$/user_allow_other/' /etc/fuse.conf

"
1332,677237d42725c5322e550e62c3bb1aa30567e596,/moosefs/Dockerfile,"# https://github.com/moosefs/moosefs/releases
"
1333,677237d42725c5322e550e62c3bb1aa30567e596,/moosefs/Dockerfile,"# prep the default configuration so things generally work Out-of-the-Box
"
1334,677237d42725c5322e550e62c3bb1aa30567e596,/moosefs/Dockerfile,"# allow us to run as an arbitrary user but still modify configuration
"
1335,677237d42725c5322e550e62c3bb1aa30567e596,/moosefs/Dockerfile,"# prep a scratch space with appropriate permissions to be able to do quick prototyping Out-of-the-Box
"
1336,677237d42725c5322e550e62c3bb1aa30567e596,/moosefs/Dockerfile,"# without this, the Python-based mfscli ""-f"" flag refuses to use UTF-8 box-drawing characters
"
1337,d6ecc0ea0d171c1dd0ac795934d44adbd753af29,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1338,d6ecc0ea0d171c1dd0ac795934d44adbd753af29,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1339,d6ecc0ea0d171c1dd0ac795934d44adbd753af29,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1340,d6ecc0ea0d171c1dd0ac795934d44adbd753af29,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1341,d6ecc0ea0d171c1dd0ac795934d44adbd753af29,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1342,60685f6f59f8fe1302dc6b1e57a1260ba515cb25,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1343,60685f6f59f8fe1302dc6b1e57a1260ba515cb25,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1344,60685f6f59f8fe1302dc6b1e57a1260ba515cb25,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1345,60685f6f59f8fe1302dc6b1e57a1260ba515cb25,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1346,60685f6f59f8fe1302dc6b1e57a1260ba515cb25,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1347,2d73ca022b8eca61f70bf15fb489cb87edaed870,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1348,a91f66d7c0e5748dbb3b509c063e05abc192a89a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1349,a91f66d7c0e5748dbb3b509c063e05abc192a89a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1350,a91f66d7c0e5748dbb3b509c063e05abc192a89a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1351,a91f66d7c0e5748dbb3b509c063e05abc192a89a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1352,a91f66d7c0e5748dbb3b509c063e05abc192a89a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1353,735baed35ae870a803c62646e45e226d04592458,/skype/Dockerfile,"# see https://repo.skype.com

"
1354,735baed35ae870a803c62646e45e226d04592458,/skype/Dockerfile,"# wget is invoked by skypeforlinux for crash reports
"
1355,735baed35ae870a803c62646e45e226d04592458,/skype/Dockerfile,"# https://repo.skype.com/data/SKYPE-GPG-KEY
"
1356,735baed35ae870a803c62646e45e226d04592458,/skype/Dockerfile,"# pub   2048R/DF7587C3 2016-06-22 [expires: 2021-06-21]
#       Key fingerprint = D404 0146 BE39 7250 9FD5  7FC7 1F30 45A5 DF75 87C3
# uid                  Skype Linux Client Repository <se-um@microsoft.com>
# sub   2048R/A4EBB320 2016-06-22 [expires: 2021-06-21]
"
1357,da51a724f76485b9128248a54a71cd0a697fe945,/skype/Dockerfile,"# see https://repo.skype.com

"
1358,da51a724f76485b9128248a54a71cd0a697fe945,/skype/Dockerfile,"# https://repo.skype.com/data/SKYPE-GPG-KEY
"
1359,da51a724f76485b9128248a54a71cd0a697fe945,/skype/Dockerfile,"# pub   2048R/DF7587C3 2016-06-22 [expires: 2021-06-21]
#       Key fingerprint = D404 0146 BE39 7250 9FD5  7FC7 1F30 45A5 DF75 87C3
# uid                  Skype Linux Client Repository <se-um@microsoft.com>
# sub   2048R/A4EBB320 2016-06-22 [expires: 2021-06-21]
"
1360,c1610b96ffcea268495de6bc01aa9d72c59f9392,/pmbootstrap/Dockerfile,"# verify there are no errors/warnings
"
1361,c1610b96ffcea268495de6bc01aa9d72c59f9392,/pmbootstrap/Dockerfile,"# https://pypi.org/project/pmbootstrap/
"
1362,c1610b96ffcea268495de6bc01aa9d72c59f9392,/pmbootstrap/Dockerfile,"# workaround issues with transparent QEMU / binfmt detection (""fix binary"" -- qemu binaries not necessary inside chroots/namespaces)
"
1363,ca07519e374554a701ef3125d631ad146533453d,/tinygo/Dockerfile,"# the .deb (as of 0.6.0) installs to /usr/local/tinygo but doesn't add ""tinygo"" to PATH
"
1364,ca07519e374554a701ef3125d631ad146533453d,/tinygo/Dockerfile,"# https://tinygo.org/getting-started/linux/

# https://github.com/tinygo-org/tinygo/releases
"
1365,a3c058b8e920bd51565dedc5f70c95c1c3486589,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1366,a3c058b8e920bd51565dedc5f70c95c1c3486589,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1367,a3c058b8e920bd51565dedc5f70c95c1c3486589,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1368,a3c058b8e920bd51565dedc5f70c95c1c3486589,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1369,a3c058b8e920bd51565dedc5f70c95c1c3486589,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1370,4ae23bbe3303733453a4fb86777680e3c8242ae3,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1371,4ae23bbe3303733453a4fb86777680e3c8242ae3,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1372,4ae23bbe3303733453a4fb86777680e3c8242ae3,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1373,4ae23bbe3303733453a4fb86777680e3c8242ae3,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1374,4ae23bbe3303733453a4fb86777680e3c8242ae3,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1375,749122a0e9c07b6c93f42d7311b91fe08362818c,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1376,749122a0e9c07b6c93f42d7311b91fe08362818c,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1377,749122a0e9c07b6c93f42d7311b91fe08362818c,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1378,749122a0e9c07b6c93f42d7311b91fe08362818c,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1379,749122a0e9c07b6c93f42d7311b91fe08362818c,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1380,d9f3e1845bf001fe693bf22a9110e105857587bc,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1381,d9f3e1845bf001fe693bf22a9110e105857587bc,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1382,d9f3e1845bf001fe693bf22a9110e105857587bc,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1383,d9f3e1845bf001fe693bf22a9110e105857587bc,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1384,d9f3e1845bf001fe693bf22a9110e105857587bc,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1385,9890b1c255d4173b5f8f28a38d27ca2e8d1d317f,/nginx/Dockerfile,"# log to stderr
"
1386,9890b1c255d4173b5f8f28a38d27ca2e8d1d317f,/nginx/Dockerfile,"# prevent backgrounding (for Docker)\ndaemon off;' >> /etc/nginx/nginx.conf

"
1387,e74c8ea1009da8370b712995d3bab71a46b2d4c9,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1388,9cb7b2d4bbb6424c9c6b750539ad2a5206102fe5,/sbuild/Dockerfile,"# run with ""--cap-add SYS_ADMIN"" so that sbuild can ""mount"" in the chroots it creates

"
1389,9cb7b2d4bbb6424c9c6b750539ad2a5206102fe5,/sbuild/Dockerfile,"# usage: download-debuerreotype-tarball.sh suite [arch]
#    ie: download-debuerreotype-tarball.sh stretch
#        download-debuerreotype-tarball.sh sid i386
"
1390,1b951842deb6f544bb524f1f7fc63e84df27bef8,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1391,1b951842deb6f544bb524f1f7fc63e84df27bef8,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1392,1b951842deb6f544bb524f1f7fc63e84df27bef8,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1393,1b951842deb6f544bb524f1f7fc63e84df27bef8,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1394,1b951842deb6f544bb524f1f7fc63e84df27bef8,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1395,f3c6ec20fc57c797e01e014fc60346ad93f92ebf,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1396,f3c6ec20fc57c797e01e014fc60346ad93f92ebf,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1397,f3c6ec20fc57c797e01e014fc60346ad93f92ebf,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1398,f3c6ec20fc57c797e01e014fc60346ad93f92ebf,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1399,f3c6ec20fc57c797e01e014fc60346ad93f92ebf,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1400,dbf9c84e433a47065f96a477fc3c604cf0249edc,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1401,4ea7b3c829c9c80d63c8c119f2c07db5ed39f08f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1402,4ea7b3c829c9c80d63c8c119f2c07db5ed39f08f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1403,4ea7b3c829c9c80d63c8c119f2c07db5ed39f08f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1404,4ea7b3c829c9c80d63c8c119f2c07db5ed39f08f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1405,4ea7b3c829c9c80d63c8c119f2c07db5ed39f08f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1406,87472281c026a0a385ef20deb3f17a85b7d3a5b2,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1407,87472281c026a0a385ef20deb3f17a85b7d3a5b2,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1408,87472281c026a0a385ef20deb3f17a85b7d3a5b2,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1409,87472281c026a0a385ef20deb3f17a85b7d3a5b2,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1410,87472281c026a0a385ef20deb3f17a85b7d3a5b2,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1411,caacf34ed8debf3f064e1689376bb0969cc244f1,/debian/devel/Dockerfile,"# normal build deps
"
1412,caacf34ed8debf3f064e1689376bb0969cc244f1,/debian/devel/Dockerfile,"# need deb-src for compiling packages
"
1413,caacf34ed8debf3f064e1689376bb0969cc244f1,/debian/devel/Dockerfile,"# let's make apt list package versions, since those are handy during devel
"
1414,caacf34ed8debf3f064e1689376bb0969cc244f1,/debian/devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
1415,caacf34ed8debf3f064e1689376bb0969cc244f1,/debian/devel/Dockerfile,"# for ssh to debian hosts, let's make sure we know their fingerprints <3
"
1416,caacf34ed8debf3f064e1689376bb0969cc244f1,/debian/devel/Dockerfile,"# make sure things are pretty
"
1417,caacf34ed8debf3f064e1689376bb0969cc244f1,/debian/devel/Dockerfile,"#(force_color_prompt=yes)/\1/' ~/.bashrc

# quilt is much amaze: https://wiki.debian.org/UsingQuilt#Using_quilt_with_Debian_source_packages
"
1418,d20a2432d437ac12c3b2b17751389cd105b50630,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1419,9d198d06feba57cd6e67b7af4133601319291a0e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1420,9d198d06feba57cd6e67b7af4133601319291a0e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1421,9d198d06feba57cd6e67b7af4133601319291a0e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1422,9d198d06feba57cd6e67b7af4133601319291a0e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1423,9d198d06feba57cd6e67b7af4133601319291a0e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1424,77eeadedef24a4b73ea38c4a02474e4c053dfc45,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1425,77eeadedef24a4b73ea38c4a02474e4c053dfc45,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1426,77eeadedef24a4b73ea38c4a02474e4c053dfc45,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
1427,77eeadedef24a4b73ea38c4a02474e4c053dfc45,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
1428,77eeadedef24a4b73ea38c4a02474e4c053dfc45,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
1429,9e1e2bd1a1a53f67faa5004d25ced54c0bc570bf,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1430,9e1e2bd1a1a53f67faa5004d25ced54c0bc570bf,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1431,9e1e2bd1a1a53f67faa5004d25ced54c0bc570bf,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1432,9e1e2bd1a1a53f67faa5004d25ced54c0bc570bf,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1433,9e1e2bd1a1a53f67faa5004d25ced54c0bc570bf,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1434,0deb99e165bf1782e0c867d82bb4f63edf36f88b,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1435,0deb99e165bf1782e0c867d82bb4f63edf36f88b,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1436,0deb99e165bf1782e0c867d82bb4f63edf36f88b,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
1437,8cfd903d3f1ffc976206ff75dab4dbfcd5274ca4,/makemkv/Dockerfile,"# TODO find some way to include ccextractor (currently buster-only)

# FPL_MainFeature detection only seemed to work with OpenJDK 9 (8 was insufficient)
"
1438,8cfd903d3f1ffc976206ff75dab4dbfcd5274ca4,/makemkv/Dockerfile,"# This disc requires Java runtime (JRE), but none was found. Certain functions will fail, please install Java. See http://www.makemkv.com/bdjava/ for details.
"
1439,8cfd903d3f1ffc976206ff75dab4dbfcd5274ca4,/makemkv/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
1440,8cfd903d3f1ffc976206ff75dab4dbfcd5274ca4,/makemkv/Dockerfile,"# http://www.makemkv.com/forum2/viewtopic.php?f=3&t=224
"
1441,8cfd903d3f1ffc976206ff75dab4dbfcd5274ca4,/makemkv/Dockerfile,"# beta code: http://www.makemkv.com/forum2/viewtopic.php?f=5&t=1053
"
1442,8cfd903d3f1ffc976206ff75dab4dbfcd5274ca4,/makemkv/Dockerfile,"# pub   dsa2048 2017-05-26 [SC]
#       2ECF 2330 5F1F C0B3 2001  6733 94E3 083A 1804 2697
# uid           [ unknown] MakeMKV (signature) <support@makemkv.com>
"
1443,b19a350107d3f3ef78e8d27eef275120cda75ae0,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1444,b19a350107d3f3ef78e8d27eef275120cda75ae0,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1445,b19a350107d3f3ef78e8d27eef275120cda75ae0,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1446,b19a350107d3f3ef78e8d27eef275120cda75ae0,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1447,b19a350107d3f3ef78e8d27eef275120cda75ae0,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1448,272d594b8604170cc1d41f88fe6bf146f897054c,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1449,12828d1d6414926c328e6f0179b997092414b289,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1450,12828d1d6414926c328e6f0179b997092414b289,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1451,12828d1d6414926c328e6f0179b997092414b289,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1452,12828d1d6414926c328e6f0179b997092414b289,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1453,12828d1d6414926c328e6f0179b997092414b289,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1454,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/Dockerfile.template,"# much of this was gleaned from https://github.com/lxc/lxc/blob/lxc-0.8.0/templates/lxc-ubuntu.in

# we're going to want this bad boy installed so we can connect :)
"
1455,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/Dockerfile.template,"# undo some leet hax of the base image
"
1456,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/Dockerfile.template,"# generate a nice UTF-8 locale for our use
"
1457,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/Dockerfile.template,"# remove some pointless services
"
1458,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/Dockerfile.template,"# /lib/init/fstab: cleared out for bare-bones lxc' > /lib/init/fstab

# small fix for SSH in 13.10 (that's harmless everywhere else)
"
1459,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/Dockerfile.template,"# set a cheap, simple password for great convenience
"
1460,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/Dockerfile.template,"# we can has SSH
"
1461,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/Dockerfile.template,"# pepare for takeoff
"
1462,59fcb9b16ae36cda52fad94fed5b1bbdd586c6bc,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1463,41fba5a095a778acf05150e538b08246b9354f8f,/zoom/Dockerfile,"# ""sh: 1: pactl: not found""
"
1464,41fba5a095a778acf05150e538b08246b9354f8f,/zoom/Dockerfile,"# ""sh: 1: ps: not found""
"
1465,41fba5a095a778acf05150e538b08246b9354f8f,/zoom/Dockerfile,"# https://zoom.us/download#client_4meeting (""Debian"", ""64 bit"", ""8.0+"", ""Version X.Y.ZZZ.ZZZ"")
"
1466,41fba5a095a778acf05150e538b08246b9354f8f,/zoom/Dockerfile,"# curl -fsS --head 'https://zoom.us/client/latest/zoom_amd64.deb' | grep '^location: '

"
1467,41fba5a095a778acf05150e538b08246b9354f8f,/zoom/Dockerfile,"# ""zoom --version"", ""zoom --help"", etc don't seem to do anything useful
"
1468,41fba5a095a778acf05150e538b08246b9354f8f,/zoom/Dockerfile,"# TODO copy/steal ""browser.sh"" stuff from slack

"
1469,d56d574b705cbbb580621753c94d4039eb15dcef,/moosefs/Dockerfile,"# mfscli (and cgi) are Python-based
"
1470,d56d574b705cbbb580621753c94d4039eb15dcef,/moosefs/Dockerfile,"# mfsmount needs ""fusermount""
"
1471,d56d574b705cbbb580621753c94d4039eb15dcef,/moosefs/Dockerfile,"# allow running mfsmount as non-root
"
1472,d56d574b705cbbb580621753c94d4039eb15dcef,/moosefs/Dockerfile,"#user_allow_other$/user_allow_other/' /etc/fuse.conf

"
1473,d56d574b705cbbb580621753c94d4039eb15dcef,/moosefs/Dockerfile,"# https://github.com/moosefs/moosefs/releases
"
1474,d56d574b705cbbb580621753c94d4039eb15dcef,/moosefs/Dockerfile,"# prep the default configuration so things generally work Out-of-the-Box
"
1475,d56d574b705cbbb580621753c94d4039eb15dcef,/moosefs/Dockerfile,"# allow us to run as an arbitrary user but still modify configuration
"
1476,d56d574b705cbbb580621753c94d4039eb15dcef,/moosefs/Dockerfile,"# prep a scratch space with appropriate permissions to be able to do quick prototyping Out-of-the-Box
"
1477,d56d574b705cbbb580621753c94d4039eb15dcef,/moosefs/Dockerfile,"# without this, the Python-based mfscli ""-f"" flag refuses to use UTF-8 box-drawing characters
"
1478,eec8f53582d1f1a71d3f56ed4788398653d8d6de,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1479,eec8f53582d1f1a71d3f56ed4788398653d8d6de,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1480,eec8f53582d1f1a71d3f56ed4788398653d8d6de,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
1481,eec8f53582d1f1a71d3f56ed4788398653d8d6de,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
1482,eec8f53582d1f1a71d3f56ed4788398653d8d6de,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
1483,e2628dcb25d55b09d95d370757c4d29cdd9df1ed,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
1484,e2628dcb25d55b09d95d370757c4d29cdd9df1ed,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
1485,e2628dcb25d55b09d95d370757c4d29cdd9df1ed,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
1486,3e2f8ba0f33c19774fd149d5e63ec07236962394,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1487,3e2f8ba0f33c19774fd149d5e63ec07236962394,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1488,3e2f8ba0f33c19774fd149d5e63ec07236962394,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
1489,3e2f8ba0f33c19774fd149d5e63ec07236962394,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
1490,3e2f8ba0f33c19774fd149d5e63ec07236962394,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
1491,e920c897b549a956e573ec9c5015b07ee75925af,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1492,e920c897b549a956e573ec9c5015b07ee75925af,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1493,e920c897b549a956e573ec9c5015b07ee75925af,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
1494,51dac88bc99de9e5b58a5f5bc06b3dfba7e366ee,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
1495,51dac88bc99de9e5b58a5f5bc06b3dfba7e366ee,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
1496,51dac88bc99de9e5b58a5f5bc06b3dfba7e366ee,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
1497,76a9c408c02fc3bd472a09012dfe0d0412cc1966,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1498,24de6b95d63b5321830cf9e5fd8ea91d3bcd3647,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1499,24de6b95d63b5321830cf9e5fd8ea91d3bcd3647,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1500,24de6b95d63b5321830cf9e5fd8ea91d3bcd3647,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1501,24de6b95d63b5321830cf9e5fd8ea91d3bcd3647,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1502,24de6b95d63b5321830cf9e5fd8ea91d3bcd3647,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1503,52808176d508ba2566bb6874a006b77e61130e4f,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1504,bf4448d17e2db5e49f792fc89a720555ed9e1963,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1505,bf4448d17e2db5e49f792fc89a720555ed9e1963,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1506,bf4448d17e2db5e49f792fc89a720555ed9e1963,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1507,bf4448d17e2db5e49f792fc89a720555ed9e1963,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1508,bf4448d17e2db5e49f792fc89a720555ed9e1963,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1509,6cc033b181d3d3491e7fae1244c8dfd38c3f01eb,/debian/devel/Dockerfile,"# normal build deps
"
1510,6cc033b181d3d3491e7fae1244c8dfd38c3f01eb,/debian/devel/Dockerfile,"# need an editor for ""dch -i""
"
1511,6cc033b181d3d3491e7fae1244c8dfd38c3f01eb,/debian/devel/Dockerfile,"# a few extra little useful things
"
1512,6cc033b181d3d3491e7fae1244c8dfd38c3f01eb,/debian/devel/Dockerfile,"# need deb-src for compiling packages
"
1513,6cc033b181d3d3491e7fae1244c8dfd38c3f01eb,/debian/devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
1514,6cc033b181d3d3491e7fae1244c8dfd38c3f01eb,/debian/devel/Dockerfile,"# for ssh to debian hosts, let's make sure we know their fingerprints <3
"
1515,6cc033b181d3d3491e7fae1244c8dfd38c3f01eb,/debian/devel/Dockerfile,"# make sure things are pretty
"
1516,6cc033b181d3d3491e7fae1244c8dfd38c3f01eb,/debian/devel/Dockerfile,"#(force_color_prompt=yes)/\1/' /root/.bashrc

# quilt is much amaze: https://wiki.debian.org/UsingQuilt#Using_quilt_with_Debian_source_packages
"
1517,7bb7b72637a7c79aefe7e93ba98bb3f1fdeeaeeb,/slack/Dockerfile,"# the .deb file linked at https://slack.com/downloads/instructions/debian includes ""/etc/cron.daily/slack"" which sets up an APT repo entry as in the following installation

# pub   rsa4096 2016-02-18 [SCEA]
#       DB08 5A08 CA13 B8AC B917  E0F6 D938 EC0D 0386 51BD
# uid           [ unknown] https://packagecloud.io/slacktechnologies/slack (https://packagecloud.io/docs#gpg_signing) <support@packagecloud.io>
# sub   rsa4096 2016-02-18 [SEA]
"
1518,7bb7b72637a7c79aefe7e93ba98bb3f1fdeeaeeb,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libX11-xcb.so.1: cannot open shared object file: No such file or directory
"
1519,7bb7b72637a7c79aefe7e93ba98bb3f1fdeeaeeb,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libasound.so.2: cannot open shared object file: No such file or directory
"
1520,7bb7b72637a7c79aefe7e93ba98bb3f1fdeeaeeb,/slack/Dockerfile,"# 3.3.3: slack: error while loading shared libraries: libgtk-3.so.0: cannot open shared object file: No such file or directory
"
1521,2703dbc14dc0e66d08cb5ab8add7c2ca148d0d67,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1522,05c7e428dc8fcba8fe41596b27f3e8c6fb9a2d38,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1523,05c7e428dc8fcba8fe41596b27f3e8c6fb9a2d38,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1524,05c7e428dc8fcba8fe41596b27f3e8c6fb9a2d38,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1525,05c7e428dc8fcba8fe41596b27f3e8c6fb9a2d38,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1526,05c7e428dc8fcba8fe41596b27f3e8c6fb9a2d38,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1527,5b3517ce2c96d889e7dff7459b4c687d87134a41,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1528,5b3517ce2c96d889e7dff7459b4c687d87134a41,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1529,5b3517ce2c96d889e7dff7459b4c687d87134a41,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1530,5b3517ce2c96d889e7dff7459b4c687d87134a41,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1531,5b3517ce2c96d889e7dff7459b4c687d87134a41,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1532,b75f19d02df461f58160fc11827bfc4615e4f347,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1533,b75f19d02df461f58160fc11827bfc4615e4f347,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1534,b75f19d02df461f58160fc11827bfc4615e4f347,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1535,b75f19d02df461f58160fc11827bfc4615e4f347,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1536,b75f19d02df461f58160fc11827bfc4615e4f347,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1537,13546197ee3addc341ecbd8e26b3f9eb32a4af74,/ymlfmt/Dockerfile,"# https://pypi.org/project/ruamel.yaml/
"
1538,0cbcd9ce34cce9552175eebdbc7677222aec7fe7,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1539,0cbcd9ce34cce9552175eebdbc7677222aec7fe7,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1540,0cbcd9ce34cce9552175eebdbc7677222aec7fe7,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1541,0cbcd9ce34cce9552175eebdbc7677222aec7fe7,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1542,0cbcd9ce34cce9552175eebdbc7677222aec7fe7,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1543,695ec019b67c54d02cd500c426633db5997c8343,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1544,695ec019b67c54d02cd500c426633db5997c8343,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1545,695ec019b67c54d02cd500c426633db5997c8343,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1546,695ec019b67c54d02cd500c426633db5997c8343,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1547,695ec019b67c54d02cd500c426633db5997c8343,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1548,e360c927749a484748c5a7927b6be8a283fb882c,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1549,e360c927749a484748c5a7927b6be8a283fb882c,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1550,e360c927749a484748c5a7927b6be8a283fb882c,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1551,e360c927749a484748c5a7927b6be8a283fb882c,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1552,e360c927749a484748c5a7927b6be8a283fb882c,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1553,5aff70d0cb645e8789824d804c01758720afbb6d,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1554,5aff70d0cb645e8789824d804c01758720afbb6d,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1555,5aff70d0cb645e8789824d804c01758720afbb6d,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1556,5aff70d0cb645e8789824d804c01758720afbb6d,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1557,5aff70d0cb645e8789824d804c01758720afbb6d,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1558,41c19b7694d0dad143c4100d92f2a0828dd6d8bf,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1559,41c19b7694d0dad143c4100d92f2a0828dd6d8bf,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1560,41c19b7694d0dad143c4100d92f2a0828dd6d8bf,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1561,41c19b7694d0dad143c4100d92f2a0828dd6d8bf,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1562,41c19b7694d0dad143c4100d92f2a0828dd6d8bf,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1563,c7b6a988419f4c5ea507a81d550422a43e0bdc90,/golang/Dockerfile,"# necessary for building Go
"
1564,c7b6a988419f4c5ea507a81d550422a43e0bdc90,/golang/Dockerfile,"# these are useful for ""go get""
"
1565,c7b6a988419f4c5ea507a81d550422a43e0bdc90,/golang/Dockerfile,"# (set an explicit GOARM of 5 for maximum ARM compatibility)
"
1566,c7b6a988419f4c5ea507a81d550422a43e0bdc90,/golang/Dockerfile,"##*/} \
"
1567,c7b6a988419f4c5ea507a81d550422a43e0bdc90,/golang/Dockerfile,"/*} \
			GOARCH=${platform##*/"
1568,b17ad0ffbbbff617457eb65f76ef413d43f1020a,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1569,24c5c9e585ff82e43227c4b79c8b04d144f3dc70,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
#RUN ln -s /bin/true /usr/local/bin/start

"
1570,24c5c9e585ff82e43227c4b79c8b04d144f3dc70,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
1571,24c5c9e585ff82e43227c4b79c8b04d144f3dc70,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
1572,37b6c7cc715b3f1eaa519942c5f0492c905ba73f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1573,37b6c7cc715b3f1eaa519942c5f0492c905ba73f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1574,37b6c7cc715b3f1eaa519942c5f0492c905ba73f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1575,37b6c7cc715b3f1eaa519942c5f0492c905ba73f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1576,37b6c7cc715b3f1eaa519942c5f0492c905ba73f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1577,2b77e43bace95c060b625a4dd6fea2f442f97491,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
1578,2b77e43bace95c060b625a4dd6fea2f442f97491,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
1579,2b77e43bace95c060b625a4dd6fea2f442f97491,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
1580,261ccf39cb46bde9e637ea256b11a88ca3f1acc7,/golang/Dockerfile,"# (set an explicit GOARM of 5 for maximum ARM compatibility)
"
1581,261ccf39cb46bde9e637ea256b11a88ca3f1acc7,/golang/Dockerfile,"##*/} \
"
1582,261ccf39cb46bde9e637ea256b11a88ca3f1acc7,/golang/Dockerfile,"/*} \
			GOARCH=${platform##*/"
1583,6b766e7bb42df288668b2d7e4ac13d5bcf04edff,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1584,6b766e7bb42df288668b2d7e4ac13d5bcf04edff,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1585,6b766e7bb42df288668b2d7e4ac13d5bcf04edff,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1586,6b766e7bb42df288668b2d7e4ac13d5bcf04edff,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1587,6b766e7bb42df288668b2d7e4ac13d5bcf04edff,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1588,992fa69529a254e29d155046c5f9c7f96edff2ed,/sbuild/Dockerfile,"# run with ""--cap-add SYS_ADMIN"" so that sbuild can ""mount"" in the chroots it creates

"
1589,992fa69529a254e29d155046c5f9c7f96edff2ed,/sbuild/Dockerfile,"# https://gist.github.com/tianon/a0080cbca558e4b907fe
# (useful sbuild-related scripts)
"
1590,992fa69529a254e29d155046c5f9c7f96edff2ed,/sbuild/Dockerfile,"# usage: download-debuerreotype-tarball.sh suite [arch]
#    ie: download-debuerreotype-tarball.sh stretch
#        download-debuerreotype-tarball.sh sid i386
"
1591,be4c125ca28e5689238656baf77b1cbedca94fdf,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1592,be4c125ca28e5689238656baf77b1cbedca94fdf,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1593,be4c125ca28e5689238656baf77b1cbedca94fdf,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
1594,be4c125ca28e5689238656baf77b1cbedca94fdf,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
1595,be4c125ca28e5689238656baf77b1cbedca94fdf,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
1596,1909a8cf238ac70d1200c5866d3668b94cae65f3,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1597,1909a8cf238ac70d1200c5866d3668b94cae65f3,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1598,1909a8cf238ac70d1200c5866d3668b94cae65f3,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
1599,1909a8cf238ac70d1200c5866d3668b94cae65f3,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
1600,1909a8cf238ac70d1200c5866d3668b94cae65f3,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
1601,0ad2e9c84f9e1bdee76acb14e70a3a9aa737469e,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1602,b1a7a4e73b6f68e78b0ec696679ac22a91266914,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1603,b1a7a4e73b6f68e78b0ec696679ac22a91266914,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1604,b1a7a4e73b6f68e78b0ec696679ac22a91266914,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1605,b1a7a4e73b6f68e78b0ec696679ac22a91266914,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1606,b1a7a4e73b6f68e78b0ec696679ac22a91266914,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1607,1bb5397f1e3898f13778646ca2dcf3ada2e2e998,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1608,1bb5397f1e3898f13778646ca2dcf3ada2e2e998,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1609,1bb5397f1e3898f13778646ca2dcf3ada2e2e998,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1610,1bb5397f1e3898f13778646ca2dcf3ada2e2e998,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1611,1bb5397f1e3898f13778646ca2dcf3ada2e2e998,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1612,ef70405d700537227c3c2cf0f9176b49a1e461bd,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1613,ef70405d700537227c3c2cf0f9176b49a1e461bd,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1614,ef70405d700537227c3c2cf0f9176b49a1e461bd,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1615,ef70405d700537227c3c2cf0f9176b49a1e461bd,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1616,ef70405d700537227c3c2cf0f9176b49a1e461bd,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1617,31979a9190b03db5f3dfda253606bed5bc72112d,/network-toolbox/debian/Dockerfile,"# dangit, wireshark-common!  *shakes fist*
"
1618,a17ee588759f9e4b1f8d5ae3738bdc4e727c034f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1619,a17ee588759f9e4b1f8d5ae3738bdc4e727c034f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1620,a17ee588759f9e4b1f8d5ae3738bdc4e727c034f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1621,a17ee588759f9e4b1f8d5ae3738bdc4e727c034f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1622,a17ee588759f9e4b1f8d5ae3738bdc4e727c034f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1623,81e671f8fa6a91e8307e85986c671eea4eaa5526,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1624,925a58ac6c87d8dd3563de2ca3e1c18766138aa8,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1625,2c000404ff4a156dd605e7f181bf29ede4497e97,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1626,a70ede264ffc4669ed9b6e98cbafbd1e03632724,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1627,886e49df722252ac90b5f93d088572c8883496d3,/diffoscope/Dockerfile,"# xxd (xxd not available in path. Falling back to Python hexlify.)
"
1628,886e49df722252ac90b5f93d088572c8883496d3,/diffoscope/Dockerfile,"# readelf ('readelf' not available in path. Falling back to binary comparison.)
"
1629,886e49df722252ac90b5f93d088572c8883496d3,/diffoscope/Dockerfile,"# for ""diffoscope --progress""
"
1630,82cf7f2e8c91078e8753a001f4a9070477c553e0,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1631,82cf7f2e8c91078e8753a001f4a9070477c553e0,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1632,82cf7f2e8c91078e8753a001f4a9070477c553e0,/jenkins/Dockerfile,"# https://groups.google.com/d/msg/jenkins-infra/c7m_72vUTXE/37zw9GXhAQAJ
"
1633,82cf7f2e8c91078e8753a001f4a9070477c553e0,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
1634,2a5315e918969728fd1ef37045ce0843b7851442,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1635,2a5315e918969728fd1ef37045ce0843b7851442,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1636,f17df5b0831ff3153514a07a6a580280517c7f9b,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1637,f17df5b0831ff3153514a07a6a580280517c7f9b,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1638,f17df5b0831ff3153514a07a6a580280517c7f9b,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
1639,f17df5b0831ff3153514a07a6a580280517c7f9b,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
1640,f17df5b0831ff3153514a07a6a580280517c7f9b,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
1641,f6e3e2b833e6ba59cb9b6a94be1732efba9cebf4,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1642,f6e3e2b833e6ba59cb9b6a94be1732efba9cebf4,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1643,f6e3e2b833e6ba59cb9b6a94be1732efba9cebf4,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1644,f6e3e2b833e6ba59cb9b6a94be1732efba9cebf4,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1645,f6e3e2b833e6ba59cb9b6a94be1732efba9cebf4,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1646,d2fd33831e7a2d1c2fc968a57e46627da5b151a7,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1647,c1610b96ffcea268495de6bc01aa9d72c59f9392,/github-pages/Dockerfile,"# https://pages.github.com/versions/
"
1648,01d88c0867048d6304bd672abc2ed5c066c1eda7,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1649,01d88c0867048d6304bd672abc2ed5c066c1eda7,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1650,01d88c0867048d6304bd672abc2ed5c066c1eda7,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1651,01d88c0867048d6304bd672abc2ed5c066c1eda7,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1652,01d88c0867048d6304bd672abc2ed5c066c1eda7,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1653,b3ec7b06a7cc501e975eb8ceaced2c7e45c59175,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1654,b3ec7b06a7cc501e975eb8ceaced2c7e45c59175,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1655,b3ec7b06a7cc501e975eb8ceaced2c7e45c59175,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1656,b3ec7b06a7cc501e975eb8ceaced2c7e45c59175,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1657,b3ec7b06a7cc501e975eb8ceaced2c7e45c59175,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1658,34d85fed6573d27093ce9279d341ced4b892fb0f,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
1659,1358d42b71f0c41a2e0b54f7db4261edb5ba87b7,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1660,5cbbf847fe07a7d9aa80d912ad59311920ec89fd,/qemu/Dockerfile,"#		qemu-system \
#		qemu-utils \
"
1661,5cbbf847fe07a7d9aa80d912ad59311920ec89fd,/qemu/Dockerfile,"# https://www.qemu.org/download/#source
"
1662,5cbbf847fe07a7d9aa80d912ad59311920ec89fd,/qemu/Dockerfile,"# TODO verify signature
"
1663,5cbbf847fe07a7d9aa80d912ad59311920ec89fd,/qemu/Dockerfile,"# system targets
# (https://sources.debian.org/src/qemu/stretch/debian/rules/#L57-L61, slimmed)
"
1664,5cbbf847fe07a7d9aa80d912ad59311920ec89fd,/qemu/Dockerfile,"# user targets
# (https://sources.debian.org/src/qemu/stretch/debian/rules/#L81-L86, slimmed)
"
1665,5cbbf847fe07a7d9aa80d912ad59311920ec89fd,/qemu/Dockerfile,"#		--enable-rbd \
#		--enable-vde \
"
1666,07205529ddc5b277a08493ee635816d44510aa55,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1667,07205529ddc5b277a08493ee635816d44510aa55,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1668,07205529ddc5b277a08493ee635816d44510aa55,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1669,07205529ddc5b277a08493ee635816d44510aa55,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1670,07205529ddc5b277a08493ee635816d44510aa55,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1671,bf73c530da22ad7985bbf9ade5d23be68a903fbb,/nginx/Dockerfile,"# log to stderr
"
1672,bf73c530da22ad7985bbf9ade5d23be68a903fbb,/nginx/Dockerfile,"# prevent backgrounding (for Docker)\ndaemon off;' >> /etc/nginx/nginx.conf

"
1673,804e2037e0ee901cd7b02d88534cbd57c96f6467,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1674,804e2037e0ee901cd7b02d88534cbd57c96f6467,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1675,804e2037e0ee901cd7b02d88534cbd57c96f6467,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1676,804e2037e0ee901cd7b02d88534cbd57c96f6467,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1677,804e2037e0ee901cd7b02d88534cbd57c96f6467,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1678,b53061db9705867cb331fbef691fd3f3b04b0e87,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1679,87b99df183f09b842b49ea7009ba7b6e2c1894f2,/xen-orchestra/Dockerfile,"# see https://github.com/vatesfr/xo/blob/master/installation.md

"
1680,87b99df183f09b842b49ea7009ba7b6e2c1894f2,/xen-orchestra/Dockerfile,"#RUN cd /xo/xo-server/public/http && for e in ../../../xo-web/public/*; do ln -s ""$e""; done

# TODO use links to get a redis server/database instead (since that's where configuration actually goes)
"
1681,87b99df183f09b842b49ea7009ba7b6e2c1894f2,/xen-orchestra/Dockerfile,"# TODO see note above about redis
"
1682,a921bed6fb812af75af4e3c5880e144bb8b7e3e9,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1683,a921bed6fb812af75af4e3c5880e144bb8b7e3e9,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1684,a921bed6fb812af75af4e3c5880e144bb8b7e3e9,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1685,a921bed6fb812af75af4e3c5880e144bb8b7e3e9,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1686,a921bed6fb812af75af4e3c5880e144bb8b7e3e9,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1687,2da87b48edc80e48f4809074078cf5efd8f96574,/exim4/Dockerfile,"# grab tini for signal processing and zombie killing
"
1688,7db83497c9fa5b74c2feab34b8c6acd36ed1b985,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1689,7db83497c9fa5b74c2feab34b8c6acd36ed1b985,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1690,7db83497c9fa5b74c2feab34b8c6acd36ed1b985,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1691,7db83497c9fa5b74c2feab34b8c6acd36ed1b985,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1692,7db83497c9fa5b74c2feab34b8c6acd36ed1b985,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1693,252f46333b555df80a9e07e9594d02e797765ef0,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1694,252f46333b555df80a9e07e9594d02e797765ef0,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1695,252f46333b555df80a9e07e9594d02e797765ef0,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
1696,252f46333b555df80a9e07e9594d02e797765ef0,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
1697,252f46333b555df80a9e07e9594d02e797765ef0,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
1698,1de8967ec5c45b7c9476538a965096b44fe12648,/snapcraft/Dockerfile,"# based initially on https://hub.docker.com/r/didrocks/snapcraft/
"
1699,1de8967ec5c45b7c9476538a965096b44fe12648,/snapcraft/Dockerfile,"# enable multiverse as snapcraft cleanbuild does
"
1700,1de8967ec5c45b7c9476538a965096b44fe12648,/snapcraft/Dockerfile,"# pin specific version so we can update with a natural cache bust
"
1701,4ca4da293c9e22c191bfc7b7aad8f95f65f4878a,/makemkv/Dockerfile,"# This disc requires Java runtime (JRE), but none was found. Certain functions will fail, please install Java. See http://www.makemkv.com/bdjava/ for details.
"
1702,4ca4da293c9e22c191bfc7b7aad8f95f65f4878a,/makemkv/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
1703,4ca4da293c9e22c191bfc7b7aad8f95f65f4878a,/makemkv/Dockerfile,"# http://www.makemkv.com/forum2/viewtopic.php?f=3&t=224
"
1704,4ca4da293c9e22c191bfc7b7aad8f95f65f4878a,/makemkv/Dockerfile,"# beta code: http://www.makemkv.com/forum2/viewtopic.php?f=5&t=1053
"
1705,4ca4da293c9e22c191bfc7b7aad8f95f65f4878a,/makemkv/Dockerfile,"# pub   dsa2048 2017-05-26 [SC]
#       2ECF 2330 5F1F C0B3 2001  6733 94E3 083A 1804 2697
# uid           [ unknown] MakeMKV (signature) <support@makemkv.com>
"
1706,07d936bb28499e01849651d60792c4f7e20d9218,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1707,07d936bb28499e01849651d60792c4f7e20d9218,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1708,07d936bb28499e01849651d60792c4f7e20d9218,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1709,07d936bb28499e01849651d60792c4f7e20d9218,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1710,07d936bb28499e01849651d60792c4f7e20d9218,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1711,09313983bde2851d9fcab6b9f9dd5868cb64658d,/robomongo/Dockerfile,"# install dependencies...
"
1712,54e911533738466549c02f164118ba5ad063a20a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1713,54e911533738466549c02f164118ba5ad063a20a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1714,54e911533738466549c02f164118ba5ad063a20a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1715,54e911533738466549c02f164118ba5ad063a20a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1716,54e911533738466549c02f164118ba5ad063a20a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1717,2117bb81c9756041a68935346ed679d3741cfe98,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1718,2117bb81c9756041a68935346ed679d3741cfe98,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1719,2117bb81c9756041a68935346ed679d3741cfe98,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1720,2117bb81c9756041a68935346ed679d3741cfe98,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1721,2117bb81c9756041a68935346ed679d3741cfe98,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1722,dc2aac00c92b56ff4e00eb832260daca8ac80161,/docker-master/dind/Dockerfile,"# https://github.com/docker/docker/blob/master/project/PACKAGERS.md#runtime-dependencies
"
1723,dc2aac00c92b56ff4e00eb832260daca8ac80161,/docker-master/dind/Dockerfile,"# pigz: https://github.com/moby/moby/pull/35697 (faster gzip implementation)
"
1724,dc2aac00c92b56ff4e00eb832260daca8ac80161,/docker-master/dind/Dockerfile,"# only install zfs if it's available for the current architecture
# https://git.alpinelinux.org/cgit/aports/tree/main/zfs/APKBUILD?h=3.6-stable#n9 (""all !armhf !ppc64le"" as of 2017-11-01)
# ""apk info XYZ"" exits with a zero exit code but no output when the package exists but not for this arch
"
1725,dc2aac00c92b56ff4e00eb832260daca8ac80161,/docker-master/dind/Dockerfile,"# TODO aufs-tools

# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
"
1726,dc2aac00c92b56ff4e00eb832260daca8ac80161,/docker-master/dind/Dockerfile,"# https://github.com/docker/docker/tree/master/hack/dind
"
1727,33ab463fbc95c2cec0f8201be8d05003f88ce408,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1728,33ab463fbc95c2cec0f8201be8d05003f88ce408,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1729,33ab463fbc95c2cec0f8201be8d05003f88ce408,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1730,33ab463fbc95c2cec0f8201be8d05003f88ce408,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1731,33ab463fbc95c2cec0f8201be8d05003f88ce408,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1732,99bdc8b0f1c1fdb7b71e4554ac7fa8de6d79fc50,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1733,cb1718ea9769ae69a41d6cad797adae015bea041,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1734,53df9636d04fdd3ff5b42da27bd65706f4e2b8a8,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1735,53df9636d04fdd3ff5b42da27bd65706f4e2b8a8,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1736,53df9636d04fdd3ff5b42da27bd65706f4e2b8a8,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
1737,53df9636d04fdd3ff5b42da27bd65706f4e2b8a8,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
1738,53df9636d04fdd3ff5b42da27bd65706f4e2b8a8,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
1739,015622ad7a4ce3c51e1073da428394233cf4552a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1740,015622ad7a4ce3c51e1073da428394233cf4552a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1741,015622ad7a4ce3c51e1073da428394233cf4552a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1742,015622ad7a4ce3c51e1073da428394233cf4552a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1743,015622ad7a4ce3c51e1073da428394233cf4552a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1744,e79b8173749dada58032eacc3b25fb0d4a0681ca,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1745,e79b8173749dada58032eacc3b25fb0d4a0681ca,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1746,e79b8173749dada58032eacc3b25fb0d4a0681ca,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1747,e79b8173749dada58032eacc3b25fb0d4a0681ca,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1748,e79b8173749dada58032eacc3b25fb0d4a0681ca,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1749,d4691a03a87a6e2da4208816e138b62fb24bd7c0,/github-pages/Dockerfile,"# https://pages.github.com/versions/
"
1750,b2ba2cfca15c161981afdb758ca24ca43fc5dfb6,/debian/devel/Dockerfile,"# normal build deps
"
1751,b2ba2cfca15c161981afdb758ca24ca43fc5dfb6,/debian/devel/Dockerfile,"# need deb-src for compiling packages
"
1752,b2ba2cfca15c161981afdb758ca24ca43fc5dfb6,/debian/devel/Dockerfile,"# let's make apt list package versions, since those are handy during devel
"
1753,b2ba2cfca15c161981afdb758ca24ca43fc5dfb6,/debian/devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
1754,b2ba2cfca15c161981afdb758ca24ca43fc5dfb6,/debian/devel/Dockerfile,"# for ssh to debian hosts, let's make sure we know their fingerprints <3
"
1755,b2ba2cfca15c161981afdb758ca24ca43fc5dfb6,/debian/devel/Dockerfile,"# make sure things are pretty
"
1756,b2ba2cfca15c161981afdb758ca24ca43fc5dfb6,/debian/devel/Dockerfile,"#(force_color_prompt=yes)/\1/' ~/.bashrc

# quilt is much amaze: https://wiki.debian.org/UsingQuilt#Using_quilt_with_Debian_source_packages
"
1757,6b263a77c9af9f0d70369efabed9b62b669201a9,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1758,6b263a77c9af9f0d70369efabed9b62b669201a9,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1759,6b263a77c9af9f0d70369efabed9b62b669201a9,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1760,6b263a77c9af9f0d70369efabed9b62b669201a9,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1761,6b263a77c9af9f0d70369efabed9b62b669201a9,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1762,88ab2843f0e264a2610f2324b3bce8519df3f4e3,/tinygo/Dockerfile,"# the .deb (as of 0.6.0) installs to /usr/local/tinygo but doesn't add ""tinygo"" to PATH
"
1763,88ab2843f0e264a2610f2324b3bce8519df3f4e3,/tinygo/Dockerfile,"# https://tinygo.org/getting-started/linux/

# https://github.com/tinygo-org/tinygo/releases
"
1764,713a90532f8348d9503a2232fede63d376f3c9c9,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1765,713a90532f8348d9503a2232fede63d376f3c9c9,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1766,713a90532f8348d9503a2232fede63d376f3c9c9,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1767,713a90532f8348d9503a2232fede63d376f3c9c9,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1768,713a90532f8348d9503a2232fede63d376f3c9c9,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1769,1d881cd4ab8c8e81502d0ffa15e37de3258f9e19,/kafka/Dockerfile,"# https://kafka.apache.org/downloads.html
"
1770,c903e0d934f6ec445c7f0448adfe03a1626a6098,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1771,c903e0d934f6ec445c7f0448adfe03a1626a6098,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1772,c903e0d934f6ec445c7f0448adfe03a1626a6098,/jenkins/Dockerfile,"# https://groups.google.com/d/msg/jenkins-infra/c7m_72vUTXE/37zw9GXhAQAJ
"
1773,c903e0d934f6ec445c7f0448adfe03a1626a6098,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
1774,32476ba6961eed4e26c6b23bc09bf738436870eb,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1775,09f05951889ac6ebe3870fa880fa285b7e0bd65d,/moosefs/Dockerfile,"# mfscli (and cgi) are Python-based
"
1776,09f05951889ac6ebe3870fa880fa285b7e0bd65d,/moosefs/Dockerfile,"# mfsmount needs ""fusermount""
"
1777,09f05951889ac6ebe3870fa880fa285b7e0bd65d,/moosefs/Dockerfile,"# allow running mfsmount as non-root
"
1778,09f05951889ac6ebe3870fa880fa285b7e0bd65d,/moosefs/Dockerfile,"#user_allow_other$/user_allow_other/' /etc/fuse.conf

"
1779,09f05951889ac6ebe3870fa880fa285b7e0bd65d,/moosefs/Dockerfile,"# https://github.com/moosefs/moosefs/releases
"
1780,09f05951889ac6ebe3870fa880fa285b7e0bd65d,/moosefs/Dockerfile,"# prep the default configuration so things generally work Out-of-the-Box
"
1781,09f05951889ac6ebe3870fa880fa285b7e0bd65d,/moosefs/Dockerfile,"# allow us to run as an arbitrary user but still modify configuration
"
1782,09f05951889ac6ebe3870fa880fa285b7e0bd65d,/moosefs/Dockerfile,"# prep a scratch space with appropriate permissions to be able to do quick prototyping Out-of-the-Box
"
1783,578df39b6ed257053c66c840b762ec07c2b6869c,/lutris/Dockerfile,"# install Wine
#   https://github.com/lutris/docs/blob/f2bf5ca14f280e3c58d2306581294d57650c0cc2/WineDependencies.md
#   https://wiki.winehq.org/Ubuntu
"
1784,578df39b6ed257053c66c840b762ec07c2b6869c,/lutris/Dockerfile,"# https://dl.winehq.org/wine-builds/ubuntu/dists/focal/main/binary-amd64/?C=N;O=D
# https://www.winehq.org/news/
"
1785,578df39b6ed257053c66c840b762ec07c2b6869c,/lutris/Dockerfile,"# ""Add SDL2 Backports PPA (for Faudio package):""
"
1786,578df39b6ed257053c66c840b762ec07c2b6869c,/lutris/Dockerfile,"# ""For compatibility reasons, install these additional libraries:""
"
1787,578df39b6ed257053c66c840b762ec07c2b6869c,/lutris/Dockerfile,"# https://github.com/Winetricks/winetricks/releases
"
1788,578df39b6ed257053c66c840b762ec07c2b6869c,/lutris/Dockerfile,"# https://launchpad.net/~lutris-team/+archive/ubuntu/lutris?field.series_filter=focal
"
1789,578df39b6ed257053c66c840b762ec07c2b6869c,/lutris/Dockerfile,"# https://github.com/lutris/docs/blob/f2bf5ca14f280e3c58d2306581294d57650c0cc2/InstallingDrivers.md
"
1790,578df39b6ed257053c66c840b762ec07c2b6869c,/lutris/Dockerfile,"# gi.repository.GLib.Error: g-exec-error-quark: Failed to execute child process “dbus-launch” (No such file or directory) (8)
"
1791,578df39b6ed257053c66c840b762ec07c2b6869c,/lutris/Dockerfile,"# /lutris-home/games/battle.net/state-cache-merge/state-cache-update.sh: line 8: zenity: command not found
"
1792,40f8a78007180d9db95e77df97c59c6027862f80,/vultr-cli/Dockerfile,"# https://github.com/vultr/vultr-cli/releases
"
1793,cec26a4e098adca112bf5b2e19d739b1c749ca15,/snapcraft/Dockerfile,"# based initially on https://hub.docker.com/r/didrocks/snapcraft/
"
1794,cec26a4e098adca112bf5b2e19d739b1c749ca15,/snapcraft/Dockerfile,"# enable multiverse as snapcraft cleanbuild does
#RUN sed -i 's/ universe$/ universe multiverse/' /etc/apt/sources.list

# pin specific version so we can update with a natural cache bust
"
1795,3b394726a2b2dffcd76115c1d8a1410eaad3d78e,/docker-tianon/Dockerfile,"# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
"
1796,4c31382218d786d782fc71c5d8b526ae301101f6,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1797,b937cb570df97dc2e9c644337ce1cadec1d7c012,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1798,b342ee74189a50f9b0ec3aab8da1f6e506f97b7a,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1799,c25a2d3641a8e9d52ac1d2cfee06b4540def62f2,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1800,c25a2d3641a8e9d52ac1d2cfee06b4540def62f2,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1801,c25a2d3641a8e9d52ac1d2cfee06b4540def62f2,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1802,c25a2d3641a8e9d52ac1d2cfee06b4540def62f2,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1803,c25a2d3641a8e9d52ac1d2cfee06b4540def62f2,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1804,32cc2b83922de29d1c626661dd9fcc26aaf587cf,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1805,32cc2b83922de29d1c626661dd9fcc26aaf587cf,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1806,32cc2b83922de29d1c626661dd9fcc26aaf587cf,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1807,32cc2b83922de29d1c626661dd9fcc26aaf587cf,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1808,32cc2b83922de29d1c626661dd9fcc26aaf587cf,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1809,5611ddf36001ca35d63e65b5b35d061ab4518c29,/google-musicmanager/Dockerfile,"# https://www.google.com/linuxrepositories/
"
1810,5611ddf36001ca35d63e65b5b35d061ab4518c29,/google-musicmanager/Dockerfile,"# pub   rsa4096 2016-04-12 [SC]
#       EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796
# uid           [ unknown] Google Inc. (Linux Packages Signing Authority) <linux-packages-keymaster@google.com>
# sub   rsa4096 2016-04-12 [S] [expires: 2019-04-12]
"
1811,5611ddf36001ca35d63e65b5b35d061ab4518c29,/google-musicmanager/Dockerfile,"# pub   dsa1024 2007-03-08 [SC]
#       4CCA 1EAF 950C EE4A B839  76DC A040 830F 7FAC 5991
# uid           [ unknown] Google, Inc. Linux Package Signing Key <linux-packages-keymaster@google.com>
# sub   elg2048 2007-03-08 [E]
#		4CCA1EAF950CEE4AB83976DCA040830F7FAC5991

"
1812,5611ddf36001ca35d63e65b5b35d061ab4518c29,/google-musicmanager/Dockerfile,"# only stretch+ supports --armor in trusted.gpg.asc
#	gpg --export --armor $GPG_KEYS | tee /etc/apt/trusted.gpg.d/google.gpg.asc; \
"
1813,16f3f99c0bb85c546eac60b0bede1cd08dbc1e1d,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
1814,f363a3df4c398632c301615a110b2ccc6bd31c35,/ymlfmt/Dockerfile,"# https://pypi.org/project/ruamel.yaml/
"
1815,0e2e5db6af3d4fb0463219b6de0cc5de00dea8a8,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1816,b31d9d271da95bd04bb24a9510aa5fcc8716a942,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1817,b31d9d271da95bd04bb24a9510aa5fcc8716a942,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1818,b31d9d271da95bd04bb24a9510aa5fcc8716a942,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1819,b31d9d271da95bd04bb24a9510aa5fcc8716a942,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1820,b31d9d271da95bd04bb24a9510aa5fcc8716a942,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1821,97231147aece5cc7cdd3f6222eb90b433003bca6,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1822,97231147aece5cc7cdd3f6222eb90b433003bca6,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1823,97231147aece5cc7cdd3f6222eb90b433003bca6,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1824,97231147aece5cc7cdd3f6222eb90b433003bca6,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1825,97231147aece5cc7cdd3f6222eb90b433003bca6,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1826,cc23e131e75f89453e0e4559b99cf9b0919524c0,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1827,cc23e131e75f89453e0e4559b99cf9b0919524c0,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1828,cc23e131e75f89453e0e4559b99cf9b0919524c0,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1829,cc23e131e75f89453e0e4559b99cf9b0919524c0,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1830,cc23e131e75f89453e0e4559b99cf9b0919524c0,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1831,542cbe6c71aae21a1936cc3fcf45b59ef197921f,/xen-orchestra/Dockerfile,"# see https://xen-orchestra.com/docs/from_the_sources.html

"
1832,542cbe6c71aae21a1936cc3fcf45b59ef197921f,/xen-orchestra/Dockerfile,"# https://github.com/vatesfr/xo-server/releases
"
1833,542cbe6c71aae21a1936cc3fcf45b59ef197921f,/xen-orchestra/Dockerfile,"# https://github.com/vatesfr/xo-web/releases
"
1834,542cbe6c71aae21a1936cc3fcf45b59ef197921f,/xen-orchestra/Dockerfile,"# tone down the NPM log level (default from image is ""info"")
"
1835,542cbe6c71aae21a1936cc3fcf45b59ef197921f,/xen-orchestra/Dockerfile,"# https://docs.npmjs.com/misc/config#loglevel

"
1836,542cbe6c71aae21a1936cc3fcf45b59ef197921f,/xen-orchestra/Dockerfile,"#'/': '/path/to/xo-web/dist/'!'/': '../web/dist/'!"" \
"
1837,542cbe6c71aae21a1936cc3fcf45b59ef197921f,/xen-orchestra/Dockerfile,"#uri: redis://.*!uri: 'redis://redis:6379'!"" \
"
1838,84e385a76ce93507e108d1ae8396f77548e82880,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1839,84e385a76ce93507e108d1ae8396f77548e82880,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1840,84e385a76ce93507e108d1ae8396f77548e82880,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1841,84e385a76ce93507e108d1ae8396f77548e82880,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1842,84e385a76ce93507e108d1ae8396f77548e82880,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1843,5419b9295b70ecf0e1fcebc6e3ba25e07e55076c,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1844,5419b9295b70ecf0e1fcebc6e3ba25e07e55076c,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1845,5419b9295b70ecf0e1fcebc6e3ba25e07e55076c,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1846,5419b9295b70ecf0e1fcebc6e3ba25e07e55076c,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1847,5419b9295b70ecf0e1fcebc6e3ba25e07e55076c,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1848,aecfc6e366f21609c1f87c9c49c009ee46f170cf,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1849,aecfc6e366f21609c1f87c9c49c009ee46f170cf,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1850,aecfc6e366f21609c1f87c9c49c009ee46f170cf,/jenkins/Dockerfile,"# https://groups.google.com/d/msg/jenkins-infra/c7m_72vUTXE/37zw9GXhAQAJ
"
1851,aecfc6e366f21609c1f87c9c49c009ee46f170cf,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
1852,e3872662187caddf9bf72536532a2e197df12b51,/slack/Dockerfile,"# the .deb file linked at https://slack.com/downloads/instructions/debian includes ""/etc/cron.daily/slack"" which sets up an APT repo entry as in the following installation

# pub   rsa4096 2016-02-18 [SCEA]
#       DB08 5A08 CA13 B8AC B917  E0F6 D938 EC0D 0386 51BD
# uid           [ unknown] https://packagecloud.io/slacktechnologies/slack (https://packagecloud.io/docs#gpg_signing) <support@packagecloud.io>
# sub   rsa4096 2016-02-18 [SEA]
"
1853,e3872662187caddf9bf72536532a2e197df12b51,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libX11-xcb.so.1: cannot open shared object file: No such file or directory
"
1854,e3872662187caddf9bf72536532a2e197df12b51,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libasound.so.2: cannot open shared object file: No such file or directory
"
1855,e3872662187caddf9bf72536532a2e197df12b51,/slack/Dockerfile,"# 3.3.3: slack: error while loading shared libraries: libgtk-3.so.0: cannot open shared object file: No such file or directory
"
1856,7cf75ffa42ec4b27840737f49c216753974c9d12,/wine/Dockerfile,"# https://wiki.winehq.org/Debian

"
1857,7cf75ffa42ec4b27840737f49c216753974c9d12,/wine/Dockerfile,"# https://dl.winehq.org/wine-builds/debian/dists/buster/main/binary-amd64/?C=N;O=D
# https://www.winehq.org/news/
"
1858,e550a1ccfce9c6967aa92b1dc79258768166a3c3,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1859,e550a1ccfce9c6967aa92b1dc79258768166a3c3,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1860,e550a1ccfce9c6967aa92b1dc79258768166a3c3,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1861,e550a1ccfce9c6967aa92b1dc79258768166a3c3,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1862,e550a1ccfce9c6967aa92b1dc79258768166a3c3,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1863,968d6ab3e87045113fdae3bfd4f6c64883ed9e5e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1864,968d6ab3e87045113fdae3bfd4f6c64883ed9e5e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1865,968d6ab3e87045113fdae3bfd4f6c64883ed9e5e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1866,968d6ab3e87045113fdae3bfd4f6c64883ed9e5e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1867,968d6ab3e87045113fdae3bfd4f6c64883ed9e5e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1868,5dae70a4b0082472b19f36c68e6b3ce5e7a86907,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1869,5dae70a4b0082472b19f36c68e6b3ce5e7a86907,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1870,5dae70a4b0082472b19f36c68e6b3ce5e7a86907,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1871,5dae70a4b0082472b19f36c68e6b3ce5e7a86907,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1872,5dae70a4b0082472b19f36c68e6b3ce5e7a86907,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1873,67a08a2381761089ac8440a2205058bba13451f1,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1874,a366f540ae21ad2e37b57ea5c09f99cb905b2781,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1875,695ec019b67c54d02cd500c426633db5997c8343,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1876,3d8e8f2a799c5337d9dd9272506151039572ec2b,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1877,3d8e8f2a799c5337d9dd9272506151039572ec2b,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1878,3d8e8f2a799c5337d9dd9272506151039572ec2b,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1879,3d8e8f2a799c5337d9dd9272506151039572ec2b,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1880,3d8e8f2a799c5337d9dd9272506151039572ec2b,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1881,471075cdf7dcdcd2cd2ca4007096f5ef74d393e3,/xen-orchestra/Dockerfile,"# see https://xen-orchestra.com/docs/from_the_sources.html

"
1882,471075cdf7dcdcd2cd2ca4007096f5ef74d393e3,/xen-orchestra/Dockerfile,"# https://github.com/vatesfr/xo-server/releases
"
1883,471075cdf7dcdcd2cd2ca4007096f5ef74d393e3,/xen-orchestra/Dockerfile,"# https://github.com/vatesfr/xo-web/releases
"
1884,471075cdf7dcdcd2cd2ca4007096f5ef74d393e3,/xen-orchestra/Dockerfile,"# tone down the NPM log level (default from image is ""info"")
"
1885,471075cdf7dcdcd2cd2ca4007096f5ef74d393e3,/xen-orchestra/Dockerfile,"# https://docs.npmjs.com/misc/config#loglevel

"
1886,471075cdf7dcdcd2cd2ca4007096f5ef74d393e3,/xen-orchestra/Dockerfile,"# workaround: Error: Cannot find module 'jquery' from '/usr/src/xo/web/node_modules/chartist-plugin-tooltip'
"
1887,471075cdf7dcdcd2cd2ca4007096f5ef74d393e3,/xen-orchestra/Dockerfile,"#'/': '/path/to/xo-web/dist/'!'/': '../web/dist/'!"" \
"
1888,471075cdf7dcdcd2cd2ca4007096f5ef74d393e3,/xen-orchestra/Dockerfile,"#uri: redis://.*!uri: 'redis://redis:6379'!"" \
"
1889,a3fadf82f097cdcbf688659b304032af447b5c00,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1890,a3fadf82f097cdcbf688659b304032af447b5c00,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1891,a3fadf82f097cdcbf688659b304032af447b5c00,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1892,a3fadf82f097cdcbf688659b304032af447b5c00,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1893,a3fadf82f097cdcbf688659b304032af447b5c00,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1894,2271cd01d6127347c7bceb737981d3d0997f6514,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1895,ead5980fe73e87d360e347c545595896c4b6a4a7,/certbot/Dockerfile,"# Executable not found: can't find the executable for the dialog-like program
"
1896,ead5980fe73e87d360e347c545595896c4b6a4a7,/certbot/Dockerfile,"#VOLUME /etc/letsencrypt
"
1897,ead5980fe73e87d360e347c545595896c4b6a4a7,/certbot/Dockerfile,"#VOLUME /var/log/letsencrypt

"
1898,c85f450b7141f6cde818e0be45eaf8bd2c5efd9a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1899,c85f450b7141f6cde818e0be45eaf8bd2c5efd9a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1900,c85f450b7141f6cde818e0be45eaf8bd2c5efd9a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1901,c85f450b7141f6cde818e0be45eaf8bd2c5efd9a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1902,c85f450b7141f6cde818e0be45eaf8bd2c5efd9a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1903,7dcc6de00d47ad0d99fab76ae8433314019080c0,/docker-tianon/Dockerfile,"# DOCKER_HOST=ssh://... -- https://github.com/docker/cli/pull/1014
"
1904,7dcc6de00d47ad0d99fab76ae8433314019080c0,/docker-tianon/Dockerfile,"# https://doi-janky.infosiftr.net/job/tianon/job/docker-deb/job/repo/lastSuccessfulBuild/artifact/pool/buster/main/amd64/
"
1905,7dcc6de00d47ad0d99fab76ae8433314019080c0,/docker-tianon/Dockerfile,"# https://github.com/docker-library/docker/pull/166
#   dockerd-entrypoint.sh uses DOCKER_TLS_CERTDIR for auto-generating TLS certificates
#   docker-entrypoint.sh uses DOCKER_TLS_CERTDIR for auto-setting DOCKER_TLS_VERIFY and DOCKER_CERT_PATH
# (For this to work, at least the ""client"" subdirectory of this path needs to be shared between the client and server containers via a volume, ""docker cp"", or other means of data sharing.)
"
1906,7dcc6de00d47ad0d99fab76ae8433314019080c0,/docker-tianon/Dockerfile,"# also, ensure the directory pre-exists and has wide enough permissions for ""dockerd-entrypoint.sh"" to create subdirectories, even when run in ""rootless"" mode
"
1907,7dcc6de00d47ad0d99fab76ae8433314019080c0,/docker-tianon/Dockerfile,"# (doing both /certs and /certs/client so that if Docker does a ""copy-up"" into a volume defined on /certs/client, it will ""do the right thing"" by default in a way that still works for rootless users)

# dind

"
1908,7dcc6de00d47ad0d99fab76ae8433314019080c0,/docker-tianon/Dockerfile,"# pigz: https://github.com/moby/moby/pull/35697 (faster gzip implementation)
"
1909,7dcc6de00d47ad0d99fab76ae8433314019080c0,/docker-tianon/Dockerfile,"# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
"
1910,7dcc6de00d47ad0d99fab76ae8433314019080c0,/docker-tianon/Dockerfile,"# https://github.com/docker/docker/tree/master/hack/dind
#ENV DIND_COMMIT 130b0bc6032cc675d064e1cc62626cacc9c07a57

#RUN set -eux; \
#	wget -O /usr/local/bin/dind ""https://raw.githubusercontent.com/docker/docker/${DIND_COMMIT}/hack/dind""; \
#	chmod +x /usr/local/bin/dind

"
1911,ffb1cf908222b1d7465e2ba9575b4160bcdefe02,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1912,ffb1cf908222b1d7465e2ba9575b4160bcdefe02,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1913,ffb1cf908222b1d7465e2ba9575b4160bcdefe02,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1914,ffb1cf908222b1d7465e2ba9575b4160bcdefe02,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1915,ffb1cf908222b1d7465e2ba9575b4160bcdefe02,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1916,32b6c2c68a7f1dbf18b996d7177932157e2e9226,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
1917,32b6c2c68a7f1dbf18b996d7177932157e2e9226,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
1918,5df27c1fe67fc12fc9bec4e7aa1888a4690af1a4,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1919,5df27c1fe67fc12fc9bec4e7aa1888a4690af1a4,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1920,5df27c1fe67fc12fc9bec4e7aa1888a4690af1a4,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1921,5df27c1fe67fc12fc9bec4e7aa1888a4690af1a4,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1922,5df27c1fe67fc12fc9bec4e7aa1888a4690af1a4,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1923,f6f840b8a685e4bdf9d9ea57fefda98be1f8572e,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
1924,f6f840b8a685e4bdf9d9ea57fefda98be1f8572e,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
1925,f6f840b8a685e4bdf9d9ea57fefda98be1f8572e,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
1926,c69328b8eb8778a7f9daf60e1b110af1a49b6131,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1927,c69328b8eb8778a7f9daf60e1b110af1a49b6131,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1928,c69328b8eb8778a7f9daf60e1b110af1a49b6131,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1929,c69328b8eb8778a7f9daf60e1b110af1a49b6131,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1930,c69328b8eb8778a7f9daf60e1b110af1a49b6131,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1931,157ece9c58624264582db0257e694ac9016b6ddb,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1932,157ece9c58624264582db0257e694ac9016b6ddb,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1933,157ece9c58624264582db0257e694ac9016b6ddb,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1934,157ece9c58624264582db0257e694ac9016b6ddb,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1935,157ece9c58624264582db0257e694ac9016b6ddb,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1936,e0d09b4ad4450af1110189b58b57bcb467f0270a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1937,e0d09b4ad4450af1110189b58b57bcb467f0270a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1938,e0d09b4ad4450af1110189b58b57bcb467f0270a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1939,e0d09b4ad4450af1110189b58b57bcb467f0270a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1940,e0d09b4ad4450af1110189b58b57bcb467f0270a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1941,be495bca4c0263500efc85d1d21af356df34178f,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
1942,d8a700e96a7cae0de1aee60c099f0e73f91bcd20,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1943,d8a700e96a7cae0de1aee60c099f0e73f91bcd20,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1944,d8a700e96a7cae0de1aee60c099f0e73f91bcd20,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1945,d8a700e96a7cae0de1aee60c099f0e73f91bcd20,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1946,d8a700e96a7cae0de1aee60c099f0e73f91bcd20,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1947,08ef289f856e234e2c6eb308bd2905e1e119dadf,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1948,08ef289f856e234e2c6eb308bd2905e1e119dadf,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1949,08ef289f856e234e2c6eb308bd2905e1e119dadf,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1950,08ef289f856e234e2c6eb308bd2905e1e119dadf,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1951,08ef289f856e234e2c6eb308bd2905e1e119dadf,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1952,5fd170481cdf8376588c185d6ee360c69ec8b1c4,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1953,5fd170481cdf8376588c185d6ee360c69ec8b1c4,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1954,5fd170481cdf8376588c185d6ee360c69ec8b1c4,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1955,5fd170481cdf8376588c185d6ee360c69ec8b1c4,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1956,5fd170481cdf8376588c185d6ee360c69ec8b1c4,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1957,b98ee7e7b4fa98fcfa3d4f2c2435e70bd660a3db,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1958,b98ee7e7b4fa98fcfa3d4f2c2435e70bd660a3db,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1959,b98ee7e7b4fa98fcfa3d4f2c2435e70bd660a3db,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1960,b98ee7e7b4fa98fcfa3d4f2c2435e70bd660a3db,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1961,b98ee7e7b4fa98fcfa3d4f2c2435e70bd660a3db,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1962,1aefd98b8c46edf85d62431fdcca86a6967272da,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1963,1aefd98b8c46edf85d62431fdcca86a6967272da,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1964,1aefd98b8c46edf85d62431fdcca86a6967272da,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1965,1aefd98b8c46edf85d62431fdcca86a6967272da,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1966,1aefd98b8c46edf85d62431fdcca86a6967272da,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1967,1d50b7585ebc4fb9ff802e04d46f2c574fc14552,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1968,1d50b7585ebc4fb9ff802e04d46f2c574fc14552,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1969,1d50b7585ebc4fb9ff802e04d46f2c574fc14552,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1970,1d50b7585ebc4fb9ff802e04d46f2c574fc14552,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1971,1d50b7585ebc4fb9ff802e04d46f2c574fc14552,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1972,8e04383f41ebb0b47d50a9e8cdeba93110dd0706,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1973,8e04383f41ebb0b47d50a9e8cdeba93110dd0706,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1974,8e04383f41ebb0b47d50a9e8cdeba93110dd0706,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1975,8e04383f41ebb0b47d50a9e8cdeba93110dd0706,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1976,8e04383f41ebb0b47d50a9e8cdeba93110dd0706,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1977,aeb543e72e4688c8ec9a55e418102b70bb5ba5b3,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1978,aeb543e72e4688c8ec9a55e418102b70bb5ba5b3,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1979,aeb543e72e4688c8ec9a55e418102b70bb5ba5b3,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1980,aeb543e72e4688c8ec9a55e418102b70bb5ba5b3,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1981,aeb543e72e4688c8ec9a55e418102b70bb5ba5b3,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1982,1c475365b021930c9df12f1bf82ee1cddafc995d,/bash/4.0/Dockerfile,"# gpg: key 64EA74AB: public key ""Chet Ramey <chet@cwru.edu>"" imported
"
1983,1c475365b021930c9df12f1bf82ee1cddafc995d,/bash/4.0/Dockerfile,"# https://ftp.gnu.org/gnu/bash/?C=M;O=D
"
1984,1c475365b021930c9df12f1bf82ee1cddafc995d,/bash/4.0/Dockerfile,"# https://ftp.gnu.org/gnu/bash/bash-4.0-patches/?C=M;O=D
"
1985,1c475365b021930c9df12f1bf82ee1cddafc995d,/bash/4.0/Dockerfile,"# prefixed with ""_"" since ""$BASH..."" have meaning in Bash parlance

"
1986,1c475365b021930c9df12f1bf82ee1cddafc995d,/bash/4.0/Dockerfile,"# parallel jobs workaround borrowed from Alpine :)
"
1987,1c475365b021930c9df12f1bf82ee1cddafc995d,/bash/4.0/Dockerfile,"# delete a few installed bits for smaller image size
"
1988,528dc06ff406eb25f8ec1e0bb2c0cdef976e0461,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1989,528dc06ff406eb25f8ec1e0bb2c0cdef976e0461,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1990,528dc06ff406eb25f8ec1e0bb2c0cdef976e0461,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1991,528dc06ff406eb25f8ec1e0bb2c0cdef976e0461,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1992,528dc06ff406eb25f8ec1e0bb2c0cdef976e0461,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1993,b2ab6405be02a06e6832cdfe214e43c90dec48d7,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
1994,43c1bc11c7839ce8647855794c2a46936871824f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
1995,43c1bc11c7839ce8647855794c2a46936871824f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
1996,43c1bc11c7839ce8647855794c2a46936871824f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
1997,43c1bc11c7839ce8647855794c2a46936871824f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
1998,43c1bc11c7839ce8647855794c2a46936871824f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
1999,316dc3c8461829d20869ef127b3edfad5be578d9,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2000,316dc3c8461829d20869ef127b3edfad5be578d9,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2001,316dc3c8461829d20869ef127b3edfad5be578d9,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2002,316dc3c8461829d20869ef127b3edfad5be578d9,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2003,316dc3c8461829d20869ef127b3edfad5be578d9,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2004,0abdccfff7cc95ca63cdd5feb75fa626bee21f03,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2005,9fe32791ab9148067b9b7d84110ceee7ee79c372,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2006,9fe32791ab9148067b9b7d84110ceee7ee79c372,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
2007,9fe32791ab9148067b9b7d84110ceee7ee79c372,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
2008,511a28fcef7557c6b9c80031bf07613b38612948,/dind/Dockerfile,"#RUN curl -sLS https://get.docker.io | sh

# let's grab the lastest ""master"" version of the install.sh script >:)
"
2009,ce8468703b3223fa0f789cac9bed787f1adeb5ca,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2010,96511e80f6be0a9007ca3867151ece0e413b7172,/dell-netextender/Dockerfile,"# https://sslvpn.demo.sonicwall.com
#   u: demo    p: password

"
2011,96511e80f6be0a9007ca3867151ece0e413b7172,/dell-netextender/Dockerfile,"# NetExtender connected successfully. Type ""Ctrl-c"" to disconnect...
"
2012,df9ce3dd72fc29409456b9c8091ba2e9f5d5f269,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2013,df9ce3dd72fc29409456b9c8091ba2e9f5d5f269,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2014,df9ce3dd72fc29409456b9c8091ba2e9f5d5f269,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2015,df9ce3dd72fc29409456b9c8091ba2e9f5d5f269,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2016,df9ce3dd72fc29409456b9c8091ba2e9f5d5f269,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2017,d4941542d13281e3ac2b698c5dceed0ce1c23113,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2018,e3ea4a5e1e27906c735fca54838f9c11c7857be5,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2019,e3ea4a5e1e27906c735fca54838f9c11c7857be5,/docker-master/Dockerfile,"# (no SHA file artifacts on download.docker.com yet as of 2017-06-07)

"
2020,e3ea4a5e1e27906c735fca54838f9c11c7857be5,/docker-master/Dockerfile,"# https://github.com/docker-library/docker/pull/166
#   dockerd-entrypoint.sh uses DOCKER_TLS_CERTDIR for auto-generating TLS certificates
#   docker-entrypoint.sh uses DOCKER_TLS_CERTDIR for auto-setting DOCKER_TLS_VERIFY and DOCKER_CERT_PATH
# (For this to work, at least the ""client"" subdirectory of this path needs to be shared between the client and server containers via a volume, ""docker cp"", or other means of data sharing.)
"
2021,e3ea4a5e1e27906c735fca54838f9c11c7857be5,/docker-master/Dockerfile,"# also, ensure the directory pre-exists and has wide enough permissions for ""dockerd-entrypoint.sh"" to create subdirectories, even when run in ""rootless"" mode
"
2022,e3ea4a5e1e27906c735fca54838f9c11c7857be5,/docker-master/Dockerfile,"# (doing both /certs and /certs/client so that if Docker does a ""copy-up"" into a volume defined on /certs/client, it will ""do the right thing"" by default in a way that still works for rootless users)

"
2023,8ddcb2d9d1def0ceb2ebf365dd3c54b215c6f01a,/skype/Dockerfile,"# see https://repo.skype.com

"
2024,8ddcb2d9d1def0ceb2ebf365dd3c54b215c6f01a,/skype/Dockerfile,"# wget is invoked by skypeforlinux for crash reports
"
2025,8ddcb2d9d1def0ceb2ebf365dd3c54b215c6f01a,/skype/Dockerfile,"# https://repo.skype.com/data/SKYPE-GPG-KEY
"
2026,8ddcb2d9d1def0ceb2ebf365dd3c54b215c6f01a,/skype/Dockerfile,"# pub   2048R/DF7587C3 2016-06-22 [expires: 2021-06-21]
#       Key fingerprint = D404 0146 BE39 7250 9FD5  7FC7 1F30 45A5 DF75 87C3
# uid                  Skype Linux Client Repository <se-um@microsoft.com>
# sub   2048R/A4EBB320 2016-06-22 [expires: 2021-06-21]
"
2027,925a58ac6c87d8dd3563de2ca3e1c18766138aa8,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2028,925a58ac6c87d8dd3563de2ca3e1c18766138aa8,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2029,925a58ac6c87d8dd3563de2ca3e1c18766138aa8,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2030,925a58ac6c87d8dd3563de2ca3e1c18766138aa8,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2031,925a58ac6c87d8dd3563de2ca3e1c18766138aa8,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2032,e1156d9dcf57c1f0aa09f118d3f78d68f0e41581,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2033,b12db5306938484e757965961525a56fcc6f0b75,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2034,072ec6ab392aec4c4f20f2387b6d78360aec4d09,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2035,efdba9b7182f658ca0d9fca98c5cb061dc8a2dcc,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2036,efdba9b7182f658ca0d9fca98c5cb061dc8a2dcc,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2037,efdba9b7182f658ca0d9fca98c5cb061dc8a2dcc,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2038,efdba9b7182f658ca0d9fca98c5cb061dc8a2dcc,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2039,efdba9b7182f658ca0d9fca98c5cb061dc8a2dcc,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2040,91def800cbf247a8b5b5d5561a33563c826365cd,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2041,91def800cbf247a8b5b5d5561a33563c826365cd,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2042,91def800cbf247a8b5b5d5561a33563c826365cd,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2043,91def800cbf247a8b5b5d5561a33563c826365cd,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2044,91def800cbf247a8b5b5d5561a33563c826365cd,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2045,81e671f8fa6a91e8307e85986c671eea4eaa5526,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2046,81e671f8fa6a91e8307e85986c671eea4eaa5526,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2047,81e671f8fa6a91e8307e85986c671eea4eaa5526,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2048,81e671f8fa6a91e8307e85986c671eea4eaa5526,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2049,81e671f8fa6a91e8307e85986c671eea4eaa5526,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2050,2a6981d496b0420d976fb5c182b58d0975862b7a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2051,2a6981d496b0420d976fb5c182b58d0975862b7a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2052,2a6981d496b0420d976fb5c182b58d0975862b7a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2053,2a6981d496b0420d976fb5c182b58d0975862b7a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2054,2a6981d496b0420d976fb5c182b58d0975862b7a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2055,5307950f21343e91bf776f741c2ccc7479bbecae,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2056,5307950f21343e91bf776f741c2ccc7479bbecae,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
2057,5307950f21343e91bf776f741c2ccc7479bbecae,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
2058,5307950f21343e91bf776f741c2ccc7479bbecae,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
2059,5307950f21343e91bf776f741c2ccc7479bbecae,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
2060,5ac2a37556e8c1fdef979dd0a80caabae2cf69e5,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2061,5ac2a37556e8c1fdef979dd0a80caabae2cf69e5,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
2062,5ac2a37556e8c1fdef979dd0a80caabae2cf69e5,/jenkins/Dockerfile,"# workaround ""apt-key adv --recv-keys"" hanging in stretch and above
"
2063,9319738945350572804b4ed4c604539baebf4d9c,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2064,9319738945350572804b4ed4c604539baebf4d9c,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
2065,9319738945350572804b4ed4c604539baebf4d9c,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
2066,9319738945350572804b4ed4c604539baebf4d9c,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
2067,9319738945350572804b4ed4c604539baebf4d9c,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
2068,d3e3894e470107d9691d2d2b11f4c86d98dead36,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2069,1ea6a1454e28301462cfc5173dbe6e63a840bdd2,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2070,1ea6a1454e28301462cfc5173dbe6e63a840bdd2,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2071,1ea6a1454e28301462cfc5173dbe6e63a840bdd2,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2072,1ea6a1454e28301462cfc5173dbe6e63a840bdd2,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2073,1ea6a1454e28301462cfc5173dbe6e63a840bdd2,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2074,45e8814f4d4111cb23b27a40d15f60b2a28b95e0,/perl/Dockerfile,"# secure by default ♥ (thanks to sri!)
"
2075,45e8814f4d4111cb23b27a40d15f60b2a28b95e0,/perl/Dockerfile,"# reinstall cpanm itself, for good measure
"
2076,f2d96ee85b46eecd5fe6b2d47138b806d18a2381,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2077,f2d96ee85b46eecd5fe6b2d47138b806d18a2381,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2078,f2d96ee85b46eecd5fe6b2d47138b806d18a2381,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2079,f2d96ee85b46eecd5fe6b2d47138b806d18a2381,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2080,f2d96ee85b46eecd5fe6b2d47138b806d18a2381,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2081,9ad781145dfe6d3c3987c59d0343942a27bbb4ef,/mojo/Dockerfile,"# the tests for IO::Socket::SSL like to hang... :(
"
2082,28afbdb0ad6fb3936d83096b6e76217f9f1e0cea,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2083,28afbdb0ad6fb3936d83096b6e76217f9f1e0cea,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
2084,28afbdb0ad6fb3936d83096b6e76217f9f1e0cea,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
2085,28afbdb0ad6fb3936d83096b6e76217f9f1e0cea,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
2086,28afbdb0ad6fb3936d83096b6e76217f9f1e0cea,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
2087,8e0d023c5caa4901566c59a4a5079c7f646d609b,/docker-master/dind/Dockerfile,"# https://github.com/docker/docker/blob/master/project/PACKAGERS.md#runtime-dependencies
"
2088,8e0d023c5caa4901566c59a4a5079c7f646d609b,/docker-master/dind/Dockerfile,"# pigz: https://github.com/moby/moby/pull/35697 (faster gzip implementation)
"
2089,8e0d023c5caa4901566c59a4a5079c7f646d609b,/docker-master/dind/Dockerfile,"# only install zfs if it's available for the current architecture
# https://git.alpinelinux.org/cgit/aports/tree/main/zfs/APKBUILD?h=3.6-stable#n9 (""all !armhf !ppc64le"" as of 2017-11-01)
# ""apk info XYZ"" exits with a zero exit code but no output when the package exists but not for this arch
"
2090,8e0d023c5caa4901566c59a4a5079c7f646d609b,/docker-master/dind/Dockerfile,"# TODO aufs-tools

# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
"
2091,8e0d023c5caa4901566c59a4a5079c7f646d609b,/docker-master/dind/Dockerfile,"# https://github.com/docker/docker/tree/master/hack/dind
"
2092,02bb99c481fe69ce3835b7ccce9076a9e7e2d5d2,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2093,02bb99c481fe69ce3835b7ccce9076a9e7e2d5d2,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2094,02bb99c481fe69ce3835b7ccce9076a9e7e2d5d2,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2095,02bb99c481fe69ce3835b7ccce9076a9e7e2d5d2,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2096,02bb99c481fe69ce3835b7ccce9076a9e7e2d5d2,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2097,a468e79529bc0fb3d91eefd58a768aa190689295,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2098,a468e79529bc0fb3d91eefd58a768aa190689295,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2099,a468e79529bc0fb3d91eefd58a768aa190689295,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2100,a468e79529bc0fb3d91eefd58a768aa190689295,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2101,a468e79529bc0fb3d91eefd58a768aa190689295,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2102,d1c12c9736d87e088900bad33a32845d2eec1df7,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2103,0f1f3b4b9023b15d6b7246081b830380974a3fab,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2104,0f1f3b4b9023b15d6b7246081b830380974a3fab,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2105,0f1f3b4b9023b15d6b7246081b830380974a3fab,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2106,0f1f3b4b9023b15d6b7246081b830380974a3fab,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2107,0f1f3b4b9023b15d6b7246081b830380974a3fab,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2108,d341bc5fdd1563206627d70bdc549c8759c89e1c,/debian/devel/Dockerfile,"# normal build deps
"
2109,d341bc5fdd1563206627d70bdc549c8759c89e1c,/debian/devel/Dockerfile,"# need an editor for ""dch -i""
"
2110,d341bc5fdd1563206627d70bdc549c8759c89e1c,/debian/devel/Dockerfile,"# a few extra little useful things
"
2111,d341bc5fdd1563206627d70bdc549c8759c89e1c,/debian/devel/Dockerfile,"# need deb-src for compiling packages
"
2112,d341bc5fdd1563206627d70bdc549c8759c89e1c,/debian/devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
2113,47b21a10e0b89ffa0586759b87b9ebf054569eec,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2114,47b21a10e0b89ffa0586759b87b9ebf054569eec,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2115,47b21a10e0b89ffa0586759b87b9ebf054569eec,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2116,47b21a10e0b89ffa0586759b87b9ebf054569eec,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2117,47b21a10e0b89ffa0586759b87b9ebf054569eec,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2118,8b4a24f4aa131f73c031b04abeb64042aa921c64,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2119,de7a5ed2f7c54f5271e431b4b32785faa883b5bb,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2120,de7a5ed2f7c54f5271e431b4b32785faa883b5bb,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
2121,de7a5ed2f7c54f5271e431b4b32785faa883b5bb,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
2122,4750d65a73a67adcdd5949fea6878c625e1fd038,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2123,4750d65a73a67adcdd5949fea6878c625e1fd038,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
2124,4750d65a73a67adcdd5949fea6878c625e1fd038,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
2125,4750d65a73a67adcdd5949fea6878c625e1fd038,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
2126,4750d65a73a67adcdd5949fea6878c625e1fd038,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
2127,22cc246a41b05ce1b8eed06f285aa64241a94496,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
2128,22cc246a41b05ce1b8eed06f285aa64241a94496,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
"
2129,74e1cdd856e87e2c1edf904c359944f1696b78f6,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2130,74e1cdd856e87e2c1edf904c359944f1696b78f6,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
2131,74e1cdd856e87e2c1edf904c359944f1696b78f6,/jenkins/Dockerfile,"# https://groups.google.com/d/msg/jenkins-infra/c7m_72vUTXE/37zw9GXhAQAJ
"
2132,74e1cdd856e87e2c1edf904c359944f1696b78f6,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
2133,b208efd1c4c9b9fa0258ff937b03e3e15d401e8b,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2134,b208efd1c4c9b9fa0258ff937b03e3e15d401e8b,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2135,b208efd1c4c9b9fa0258ff937b03e3e15d401e8b,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2136,b208efd1c4c9b9fa0258ff937b03e3e15d401e8b,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2137,b208efd1c4c9b9fa0258ff937b03e3e15d401e8b,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2138,277a6c9db8301713bf30afa54baff18635fef604,/network-toolbox/alpine/Dockerfile,"# TODO add ""nbtscan"" when we get to Alpine 3.9 (if it makes it out of edge for 3.9)

"
2139,4347d61abe09578dd559d836358e59a918def5f9,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2140,eb47f6abe916995c302f73a267414413b91c15d1,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
2141,eb47f6abe916995c302f73a267414413b91c15d1,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
"
2142,7bcd610fdb2be64a9d6bafbab4eaba606c647747,/containerd/Dockerfile,"# runtime deps
"
2143,7bcd610fdb2be64a9d6bafbab4eaba606c647747,/containerd/Dockerfile,"# https://github.com/opencontainers/runc/releases
"
2144,7bcd610fdb2be64a9d6bafbab4eaba606c647747,/containerd/Dockerfile,"# TODO .asc / .sha256sum
"
2145,7bcd610fdb2be64a9d6bafbab4eaba606c647747,/containerd/Dockerfile,"# https://github.com/containerd/containerd/releases
"
2146,46a24d80db1e6a6ac27e9dc2d83f8439fe667463,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2147,1f8219898c2e01499f0fc3d274893ad416e05e4f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2148,1f8219898c2e01499f0fc3d274893ad416e05e4f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2149,1f8219898c2e01499f0fc3d274893ad416e05e4f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2150,1f8219898c2e01499f0fc3d274893ad416e05e4f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2151,1f8219898c2e01499f0fc3d274893ad416e05e4f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2152,25829de1b65ef142b1e6ea3f2ed2a1ee457a0603,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2153,e8dd111ae037d54e207ce129fbff13dbf4806d1f,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2154,82927c8c63dbe81dcc2a44ad6263b0287a5b915c,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2155,82927c8c63dbe81dcc2a44ad6263b0287a5b915c,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2156,82927c8c63dbe81dcc2a44ad6263b0287a5b915c,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2157,82927c8c63dbe81dcc2a44ad6263b0287a5b915c,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2158,82927c8c63dbe81dcc2a44ad6263b0287a5b915c,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2159,5fd170481cdf8376588c185d6ee360c69ec8b1c4,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2160,3addce19fc9312835f8cdbe51a20f0b22fa696b4,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2161,3addce19fc9312835f8cdbe51a20f0b22fa696b4,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2162,3addce19fc9312835f8cdbe51a20f0b22fa696b4,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2163,3addce19fc9312835f8cdbe51a20f0b22fa696b4,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2164,3addce19fc9312835f8cdbe51a20f0b22fa696b4,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2165,d6c621cb9d541196519aabd52e4fa7edbf338c23,/exim4/Dockerfile,"# grab tini for signal processing and zombie killing
"
2166,6394c33ad4369c812080a04ea2f14041576cfaa9,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2167,6394c33ad4369c812080a04ea2f14041576cfaa9,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2168,6394c33ad4369c812080a04ea2f14041576cfaa9,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2169,6394c33ad4369c812080a04ea2f14041576cfaa9,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2170,6394c33ad4369c812080a04ea2f14041576cfaa9,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2171,4343d43150e4b8253b75d7c0debc6900fde1c936,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2172,4343d43150e4b8253b75d7c0debc6900fde1c936,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2173,4343d43150e4b8253b75d7c0debc6900fde1c936,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2174,4343d43150e4b8253b75d7c0debc6900fde1c936,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2175,4343d43150e4b8253b75d7c0debc6900fde1c936,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2176,ef9cf9438d12236072488bc6768c0504d53636ba,/certbot/Dockerfile,"# Executable not found: can't find the executable for the dialog-like program
"
2177,ef9cf9438d12236072488bc6768c0504d53636ba,/certbot/Dockerfile,"#VOLUME /etc/letsencrypt
"
2178,ef9cf9438d12236072488bc6768c0504d53636ba,/certbot/Dockerfile,"#VOLUME /var/log/letsencrypt

"
2179,6582ea71fc3a71a5b639dbe78de98d73a82e449c,/ymlfmt/Dockerfile,"# https://pypi.org/project/ruamel.yaml/
"
2180,d08f869902317e0a44b83f38c928776194fd7cd4,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2181,810ca26d864d66f788e369ca5e1ec0184f1e99c3,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2182,810ca26d864d66f788e369ca5e1ec0184f1e99c3,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2183,810ca26d864d66f788e369ca5e1ec0184f1e99c3,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2184,810ca26d864d66f788e369ca5e1ec0184f1e99c3,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2185,810ca26d864d66f788e369ca5e1ec0184f1e99c3,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2186,129bdab7ce06be9c42dd7358bb11126a30b8ae8b,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2187,de7f1e9a07750b47345b2a1b6136bcd86a0667bd,/qemu/Dockerfile,"#		qemu-system \
#		qemu-utils \
"
2188,de7f1e9a07750b47345b2a1b6136bcd86a0667bd,/qemu/Dockerfile,"# https://www.qemu.org/download/#source
"
2189,de7f1e9a07750b47345b2a1b6136bcd86a0667bd,/qemu/Dockerfile,"# TODO verify signature
"
2190,de7f1e9a07750b47345b2a1b6136bcd86a0667bd,/qemu/Dockerfile,"# system targets
# (https://sources.debian.org/src/qemu/stretch/debian/rules/#L57-L61, slimmed)
"
2191,de7f1e9a07750b47345b2a1b6136bcd86a0667bd,/qemu/Dockerfile,"# user targets
# (https://sources.debian.org/src/qemu/stretch/debian/rules/#L81-L86, slimmed)
"
2192,de7f1e9a07750b47345b2a1b6136bcd86a0667bd,/qemu/Dockerfile,"#		--enable-rbd \
#		--enable-vde \
"
2193,2c535eef6602a3c5ea4fb0764c2fd86326acb5da,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2194,2c535eef6602a3c5ea4fb0764c2fd86326acb5da,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
2195,2c535eef6602a3c5ea4fb0764c2fd86326acb5da,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
2196,05baf2e0890f69a5492e8d2f42eda3d05d2d1d2d,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2197,05baf2e0890f69a5492e8d2f42eda3d05d2d1d2d,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2198,05baf2e0890f69a5492e8d2f42eda3d05d2d1d2d,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2199,05baf2e0890f69a5492e8d2f42eda3d05d2d1d2d,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2200,05baf2e0890f69a5492e8d2f42eda3d05d2d1d2d,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2201,3b4deeb730e27138c3b51cf4023cc6d08292f61e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2202,3b4deeb730e27138c3b51cf4023cc6d08292f61e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2203,3b4deeb730e27138c3b51cf4023cc6d08292f61e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2204,3b4deeb730e27138c3b51cf4023cc6d08292f61e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2205,3b4deeb730e27138c3b51cf4023cc6d08292f61e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2206,03074e5bfac7decc092b466e793b35a3f8dfd5ab,/wine/Dockerfile,"# https://wiki.winehq.org/Debian

"
2207,a70eac50e7a243d7a39fc86c91dea2bcfbb182a4,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2208,a70eac50e7a243d7a39fc86c91dea2bcfbb182a4,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2209,a70eac50e7a243d7a39fc86c91dea2bcfbb182a4,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2210,a70eac50e7a243d7a39fc86c91dea2bcfbb182a4,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2211,a70eac50e7a243d7a39fc86c91dea2bcfbb182a4,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2212,086fe7886aa24a3693817cb807c3e4d25bd631d7,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2213,e121e80261a6048c8498ebe5df509788ec4c85d6,/syncthing/Dockerfile,"# gpg: key BCE524C7: public key ""Jakob Borg (calmh) <jakob@nym.se>"" imported
"
2214,32f6a5fe1f03d923a5e94f71a430159484d55490,/docker/experimental/dind/Dockerfile,"# https://github.com/docker/docker/blob/master/project/PACKAGERS.md#runtime-dependencies
"
2215,32f6a5fe1f03d923a5e94f71a430159484d55490,/docker/experimental/dind/Dockerfile,"# TODO aufs-tools

"
2216,2252328e127c6b95d84c49b9269afc84ab02ca24,/github-pages/Dockerfile,"# https://pages.github.com/versions/
"
2217,517e05bdc79d0df82761cbfb94b36c70d4bf03cc,/steam/Dockerfile,"# let's head off a few of the things steam will want to install immediately
"
2218,517e05bdc79d0df82761cbfb94b36c70d4bf03cc,/steam/Dockerfile,"# steam itself needs to be able to install things, and it uses ""sudo"" for that
"
2219,f948ed7b4378b3ea38fb2e0991b894ece6049a04,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2220,6b4af4117791ac1de3e1f2665ef7e1b4ab30e68a,/xen-orchestra/Dockerfile,"# see https://github.com/vatesfr/xo/blob/a269af702992616f67b7bcf066eac0a1124ac8bf/doc/installation/manual_installation.md

#RUN apt-get update && apt-get install -y ruby-compass

"
2221,6b4af4117791ac1de3e1f2665ef7e1b4ab30e68a,/xen-orchestra/Dockerfile,"#'/': '/path/to/xo-web/dist/'!'/': '../web/dist/'!; \
"
2222,6b4af4117791ac1de3e1f2665ef7e1b4ab30e68a,/xen-orchestra/Dockerfile,"#uri: ''!uri: 'redis://redis:6379'!; \
"
2223,6eb258e58b9bb1bbffcda3391737eb149364c6dd,/apt-cacher-ng/Dockerfile,"# grab tini for signal processing and zombie killing
"
2224,b183f0910c95154a9ffc5b28795db5b829809c01,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2225,258646ccfc4061a4b1fbc14912dfebb114306e7a,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2226,a74688cceb4844a474c03ee69ac23728c92f88f5,/jenkins/weekly/Dockerfile,"# grab gosu for easy step-down from root
"
2227,a74688cceb4844a474c03ee69ac23728c92f88f5,/jenkins/weekly/Dockerfile,"# grab tini for signal processing and zombie killing
"
2228,a74688cceb4844a474c03ee69ac23728c92f88f5,/jenkins/weekly/Dockerfile,"# https://groups.google.com/d/msg/jenkins-infra/c7m_72vUTXE/37zw9GXhAQAJ
"
2229,a74688cceb4844a474c03ee69ac23728c92f88f5,/jenkins/weekly/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
2230,771406013df09dd993e7c3ce06ac68d06a3fa7d1,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2231,771406013df09dd993e7c3ce06ac68d06a3fa7d1,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2232,771406013df09dd993e7c3ce06ac68d06a3fa7d1,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2233,771406013df09dd993e7c3ce06ac68d06a3fa7d1,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2234,771406013df09dd993e7c3ce06ac68d06a3fa7d1,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2235,20d156a6af8eef85582bca9649560583b967be14,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2236,f7f2e69b531a6eb8f675e310c5702d7d0a22d998,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2237,f7f2e69b531a6eb8f675e310c5702d7d0a22d998,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
2238,f7f2e69b531a6eb8f675e310c5702d7d0a22d998,/jenkins/Dockerfile,"# https://groups.google.com/d/msg/jenkins-infra/c7m_72vUTXE/37zw9GXhAQAJ
"
2239,f7f2e69b531a6eb8f675e310c5702d7d0a22d998,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
2240,ed744df645272aa5d7e55d11a7f2da1245fe1b48,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2241,ed744df645272aa5d7e55d11a7f2da1245fe1b48,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2242,ed744df645272aa5d7e55d11a7f2da1245fe1b48,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2243,ed744df645272aa5d7e55d11a7f2da1245fe1b48,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2244,ed744df645272aa5d7e55d11a7f2da1245fe1b48,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2245,ad9c4ebd1c0dd5e60a2be23a8d427c396a769e2b,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2246,ad9c4ebd1c0dd5e60a2be23a8d427c396a769e2b,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2247,ad9c4ebd1c0dd5e60a2be23a8d427c396a769e2b,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2248,ad9c4ebd1c0dd5e60a2be23a8d427c396a769e2b,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2249,ad9c4ebd1c0dd5e60a2be23a8d427c396a769e2b,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2250,d7176578ddd33f0072da11e2fdb044f35a02ce58,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
2251,d7176578ddd33f0072da11e2fdb044f35a02ce58,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
"
2252,41c19b7694d0dad143c4100d92f2a0828dd6d8bf,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2253,5e43f74eed3d0a438c54af579cdc9767a8d34bac,/steam/Dockerfile,"# add the sources.list stuff that steam will at first start
"
2254,5e43f74eed3d0a438c54af579cdc9767a8d34bac,/steam/Dockerfile,"# let's head off a few of the things steam will want to install immediately
"
2255,5e43f74eed3d0a438c54af579cdc9767a8d34bac,/steam/Dockerfile,"# steam itself needs to be able to install things, and it uses ""sudo"" for that
"
2256,c557a6e5d8e2baa6360fb77f9f2bd0a6326d92a9,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2257,c557a6e5d8e2baa6360fb77f9f2bd0a6326d92a9,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2258,c557a6e5d8e2baa6360fb77f9f2bd0a6326d92a9,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2259,c557a6e5d8e2baa6360fb77f9f2bd0a6326d92a9,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2260,c557a6e5d8e2baa6360fb77f9f2bd0a6326d92a9,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2261,2a0e348c0df1ea1ea0d73cc67d014dc782c723b1,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2262,2a0e348c0df1ea1ea0d73cc67d014dc782c723b1,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
2263,2a0e348c0df1ea1ea0d73cc67d014dc782c723b1,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
2264,f8cd4c54a62ad54b82364171c6a13708ac08c384,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2265,47264e39f6c934379ee29521f0b919416c066e4a,/duplicity/Dockerfile,"# https://bugs.launchpad.net/bugs/1440372 (python3)
"
2266,47264e39f6c934379ee29521f0b919416c066e4a,/duplicity/Dockerfile,"# https://pypi.org/project/b2/
"
2267,47264e39f6c934379ee29521f0b919416c066e4a,/duplicity/Dockerfile,"# duplicity doesn't publish a ""supported b2 modules versions"" list, so I've tried to match the b2 module version to the latest that was available at the time of the current duplicity release
# duplicity 0.7.18.1 is ~27-Aug-2018, b2 1.3.6 is ~21-Aug-2018

"
2268,47264e39f6c934379ee29521f0b919416c066e4a,/duplicity/Dockerfile,"# http://duplicity.nongnu.org/
# https://download.savannah.gnu.org/releases/duplicity/?C=S&O=D
"
2269,47264e39f6c934379ee29521f0b919416c066e4a,/duplicity/Dockerfile,"# https://bazaar.launchpad.net/~duplicity-team/duplicity/0.7-series/view/head:/CHANGELOG

"
2270,da0a68cf460c6b2f8ba4172e4c9e32e4c85ca8b7,/debian/devel/Dockerfile,"# normal build deps
"
2271,da0a68cf460c6b2f8ba4172e4c9e32e4c85ca8b7,/debian/devel/Dockerfile,"# need an editor for ""dch -i""
"
2272,da0a68cf460c6b2f8ba4172e4c9e32e4c85ca8b7,/debian/devel/Dockerfile,"# a few extra little useful things
"
2273,da0a68cf460c6b2f8ba4172e4c9e32e4c85ca8b7,/debian/devel/Dockerfile,"# need deb-src for compiling packages
"
2274,da0a68cf460c6b2f8ba4172e4c9e32e4c85ca8b7,/debian/devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
2275,da0a68cf460c6b2f8ba4172e4c9e32e4c85ca8b7,/debian/devel/Dockerfile,"# for ssh to debian hosts, let's make sure we know their fingerprints <3
"
2276,da0a68cf460c6b2f8ba4172e4c9e32e4c85ca8b7,/debian/devel/Dockerfile,"# make sure things are pretty
"
2277,da0a68cf460c6b2f8ba4172e4c9e32e4c85ca8b7,/debian/devel/Dockerfile,"#(force_color_prompt=yes)/\1/' /root/.bashrc

"
2278,0fe0793b78d3c12711794f50bfa08848ecf4509a,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2279,28a0c426de765f75b4d4c306ba01855d50fb407d,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2280,3930572f8dc8121ae6197edf892ec5ee1d4d10ff,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2281,bdfe12f137b0dc5adb5b3afeb837cfa158d0d218,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2282,bdfe12f137b0dc5adb5b3afeb837cfa158d0d218,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2283,bdfe12f137b0dc5adb5b3afeb837cfa158d0d218,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2284,bdfe12f137b0dc5adb5b3afeb837cfa158d0d218,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2285,bdfe12f137b0dc5adb5b3afeb837cfa158d0d218,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2286,ab9f49e4731ab2c00e86f73e955389dc736f0970,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2287,ab9f49e4731ab2c00e86f73e955389dc736f0970,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2288,ab9f49e4731ab2c00e86f73e955389dc736f0970,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2289,ab9f49e4731ab2c00e86f73e955389dc736f0970,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2290,ab9f49e4731ab2c00e86f73e955389dc736f0970,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2291,7f60ec2716b80a8aa0cbf3d98aade217b9a7e297,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2292,66c68f9df3736a915019032a0db4bc73db28e97e,/moosefs/Dockerfile,"# mfscli (and cgi) are Python-based
"
2293,66c68f9df3736a915019032a0db4bc73db28e97e,/moosefs/Dockerfile,"# mfsmount needs ""fusermount""
"
2294,66c68f9df3736a915019032a0db4bc73db28e97e,/moosefs/Dockerfile,"# allow running mfsmount as non-root
"
2295,66c68f9df3736a915019032a0db4bc73db28e97e,/moosefs/Dockerfile,"#user_allow_other$/user_allow_other/' /etc/fuse.conf

"
2296,66c68f9df3736a915019032a0db4bc73db28e97e,/moosefs/Dockerfile,"# https://github.com/moosefs/moosefs/releases
"
2297,66c68f9df3736a915019032a0db4bc73db28e97e,/moosefs/Dockerfile,"# prep the default configuration so things generally work Out-of-the-Box
"
2298,66c68f9df3736a915019032a0db4bc73db28e97e,/moosefs/Dockerfile,"# allow us to run as an arbitrary user but still modify configuration
"
2299,66c68f9df3736a915019032a0db4bc73db28e97e,/moosefs/Dockerfile,"# prep a scratch space with appropriate permissions to be able to do quick prototyping Out-of-the-Box
"
2300,66c68f9df3736a915019032a0db4bc73db28e97e,/moosefs/Dockerfile,"# without this, the Python-based mfscli ""-f"" flag refuses to use UTF-8 box-drawing characters
"
2301,9d0c717f2edeab3c3709e6c5aa4188035659d679,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2302,9d0c717f2edeab3c3709e6c5aa4188035659d679,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2303,9d0c717f2edeab3c3709e6c5aa4188035659d679,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2304,9d0c717f2edeab3c3709e6c5aa4188035659d679,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2305,9d0c717f2edeab3c3709e6c5aa4188035659d679,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2306,a7550d749adb7208dfe7e17a981db5009f39c174,/diffoscope/Dockerfile,"# xxd (xxd not available in path. Falling back to Python hexlify.)
"
2307,a7550d749adb7208dfe7e17a981db5009f39c174,/diffoscope/Dockerfile,"# readelf ('readelf' not available in path. Falling back to binary comparison.)
"
2308,a7550d749adb7208dfe7e17a981db5009f39c174,/diffoscope/Dockerfile,"# for ""diffoscope --progress""
"
2309,a83ee6864d7757d3bf7d7fe8fb3c93ff2dc7ebf7,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
2310,a83ee6864d7757d3bf7d7fe8fb3c93ff2dc7ebf7,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
2311,a83ee6864d7757d3bf7d7fe8fb3c93ff2dc7ebf7,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
2312,b56b26a8ae918af2c7730fa4d51733026d5ce9f6,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2313,b56b26a8ae918af2c7730fa4d51733026d5ce9f6,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
2314,b56b26a8ae918af2c7730fa4d51733026d5ce9f6,/jenkins/Dockerfile,"# workaround ""apt-key adv --recv-keys"" hanging in stretch and above
"
2315,9465d9816fd36d6332a413dc067a9c5278565e07,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2316,9465d9816fd36d6332a413dc067a9c5278565e07,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
2317,8c5c3d21a39e4abae5c75376cce3efb8de564925,/prometheus/Dockerfile,"# https://github.com/prometheus/prometheus/releases
"
2318,f858a76073c915dfb6c6cf73c4802ffe48c67829,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2319,f858a76073c915dfb6c6cf73c4802ffe48c67829,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2320,f858a76073c915dfb6c6cf73c4802ffe48c67829,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2321,f858a76073c915dfb6c6cf73c4802ffe48c67829,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2322,f858a76073c915dfb6c6cf73c4802ffe48c67829,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2323,7d78ec48009add4023f1fbdce4d71f57e057de59,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2324,7d78ec48009add4023f1fbdce4d71f57e057de59,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
2325,7d78ec48009add4023f1fbdce4d71f57e057de59,/jenkins/Dockerfile,"# https://groups.google.com/d/msg/jenkins-infra/c7m_72vUTXE/37zw9GXhAQAJ
"
2326,7d78ec48009add4023f1fbdce4d71f57e057de59,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
2327,0de707b70e31dee9be4ffc38c1d9cf4697142ac8,/debian/devel/Dockerfile,"# normal build deps
"
2328,0de707b70e31dee9be4ffc38c1d9cf4697142ac8,/debian/devel/Dockerfile,"# need an editor for ""dch -i""
"
2329,0de707b70e31dee9be4ffc38c1d9cf4697142ac8,/debian/devel/Dockerfile,"# a few extra little useful things
"
2330,0de707b70e31dee9be4ffc38c1d9cf4697142ac8,/debian/devel/Dockerfile,"# need deb-src for compiling packages
"
2331,0de707b70e31dee9be4ffc38c1d9cf4697142ac8,/debian/devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
2332,096353d456ad53d8136fe9ac5a7fbd8c1ba9d7c2,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2333,096353d456ad53d8136fe9ac5a7fbd8c1ba9d7c2,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2334,096353d456ad53d8136fe9ac5a7fbd8c1ba9d7c2,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2335,096353d456ad53d8136fe9ac5a7fbd8c1ba9d7c2,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2336,096353d456ad53d8136fe9ac5a7fbd8c1ba9d7c2,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2337,e28e490b3246671cc5bfa93daebbedcc045b6f96,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2338,8f9550871db1330e682362252d9c953b44296db8,/docker-tianon/Dockerfile,"# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
"
2339,269d7d947a24cf610263ee79c91f1d166789da6c,/slack/Dockerfile,"# the .deb file linked at https://slack.com/downloads/instructions/debian includes ""/etc/cron.daily/slack"" which sets up an APT repo entry as in the following installation

# pub   rsa4096 2016-02-18 [SCEA]
#       DB08 5A08 CA13 B8AC B917  E0F6 D938 EC0D 0386 51BD
# uid           [ unknown] https://packagecloud.io/slacktechnologies/slack (https://packagecloud.io/docs#gpg_signing) <support@packagecloud.io>
# sub   rsa4096 2016-02-18 [SEA]
"
2340,269d7d947a24cf610263ee79c91f1d166789da6c,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libX11-xcb.so.1: cannot open shared object file: No such file or directory
"
2341,269d7d947a24cf610263ee79c91f1d166789da6c,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libasound.so.2: cannot open shared object file: No such file or directory
"
2342,3eb65a851f7179f12b34b61182657e59c0700cdd,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2343,3eb65a851f7179f12b34b61182657e59c0700cdd,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2344,3eb65a851f7179f12b34b61182657e59c0700cdd,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2345,3eb65a851f7179f12b34b61182657e59c0700cdd,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2346,3eb65a851f7179f12b34b61182657e59c0700cdd,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2347,4ef5020908bd4026c94be09af3ddf7466fecd702,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2348,4ef5020908bd4026c94be09af3ddf7466fecd702,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2349,4ef5020908bd4026c94be09af3ddf7466fecd702,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2350,4ef5020908bd4026c94be09af3ddf7466fecd702,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2351,4ef5020908bd4026c94be09af3ddf7466fecd702,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2352,391441ad7bf28c2ef1664141ef0079cf3f972529,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2353,391441ad7bf28c2ef1664141ef0079cf3f972529,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2354,391441ad7bf28c2ef1664141ef0079cf3f972529,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2355,391441ad7bf28c2ef1664141ef0079cf3f972529,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2356,391441ad7bf28c2ef1664141ef0079cf3f972529,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2357,97d95dbe5f2d86b9d622ca61fd09ea5b6621817a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2358,97d95dbe5f2d86b9d622ca61fd09ea5b6621817a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2359,97d95dbe5f2d86b9d622ca61fd09ea5b6621817a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2360,97d95dbe5f2d86b9d622ca61fd09ea5b6621817a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2361,97d95dbe5f2d86b9d622ca61fd09ea5b6621817a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2362,6a82e46ec6b44c18883327fb3306e7f66788a7ea,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2363,6a82e46ec6b44c18883327fb3306e7f66788a7ea,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
2364,6a82e46ec6b44c18883327fb3306e7f66788a7ea,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
2365,f1faa5ff7e266c9f683b52494ada25a2970fb475,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2366,f1faa5ff7e266c9f683b52494ada25a2970fb475,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2367,f1faa5ff7e266c9f683b52494ada25a2970fb475,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2368,f1faa5ff7e266c9f683b52494ada25a2970fb475,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2369,f1faa5ff7e266c9f683b52494ada25a2970fb475,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2370,49b491ba2a549cfefb72f56a2e281caf47ffd2ef,/jenkins/slave/debian/Dockerfile,"#?PermitRootLogin[[:space:]].*$/PermitRootLogin yes/g' /etc/ssh/sshd_config

"
2371,49b491ba2a549cfefb72f56a2e281caf47ffd2ef,/jenkins/slave/debian/Dockerfile,"# let's make /root a volume so ~/.ssh/authorized_keys is easier to save
"
2372,0459e55dafaec66e18d15fedee8d68b36a5f4d38,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2373,8ea02ce9bf5774fb8e9e235bf9395c3dae184b27,/wine/Dockerfile,"# https://wiki.winehq.org/Debian

"
2374,8ea02ce9bf5774fb8e9e235bf9395c3dae184b27,/wine/Dockerfile,"# https://dl.winehq.org/wine-builds/debian/dists/buster/main/binary-amd64/?C=N;O=D
# https://www.winehq.org/news/
"
2375,355305ddb022155da5469cd2017dda9884dcb15b,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2376,1f13886bfee0eb32b5d8094ee015ef3f793ef7b2,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2377,3a7ff895bcb32535513b5130b0fb1daa510a38bc,/vultr-cli/Dockerfile,"# https://github.com/vultr/vultr-cli/releases
"
2378,3acd11aa49f9fa0999e9a39e7cf882f511c829d4,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2379,88f64e871d3ce0239b23d6200968ffffb0b3577e,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2380,8c3e5b8a4877d8d7a32abd0e24f7ce1ae59205bb,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2381,8c3e5b8a4877d8d7a32abd0e24f7ce1ae59205bb,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2382,8c3e5b8a4877d8d7a32abd0e24f7ce1ae59205bb,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2383,8c3e5b8a4877d8d7a32abd0e24f7ce1ae59205bb,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2384,8c3e5b8a4877d8d7a32abd0e24f7ce1ae59205bb,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2385,ce9ec67b7728293c90211095c85d39fceb2fac9e,/xen-orchestra/Dockerfile,"# see https://xen-orchestra.com/docs/from_the_sources.html

"
2386,ce9ec67b7728293c90211095c85d39fceb2fac9e,/xen-orchestra/Dockerfile,"# https://github.com/vatesfr/xo-server/releases
"
2387,ce9ec67b7728293c90211095c85d39fceb2fac9e,/xen-orchestra/Dockerfile,"# https://github.com/vatesfr/xo-web/releases
"
2388,ce9ec67b7728293c90211095c85d39fceb2fac9e,/xen-orchestra/Dockerfile,"# tone down the NPM log level (default from image is ""info"")
"
2389,ce9ec67b7728293c90211095c85d39fceb2fac9e,/xen-orchestra/Dockerfile,"# https://docs.npmjs.com/misc/config#loglevel

"
2390,ce9ec67b7728293c90211095c85d39fceb2fac9e,/xen-orchestra/Dockerfile,"# workaround: Error: Cannot find module 'jquery' from '/usr/src/xo/web/node_modules/chartist-plugin-tooltip'
"
2391,ce9ec67b7728293c90211095c85d39fceb2fac9e,/xen-orchestra/Dockerfile,"#'/': '/path/to/xo-web/dist/'!'/': '../web/dist/'!"" \
"
2392,ce9ec67b7728293c90211095c85d39fceb2fac9e,/xen-orchestra/Dockerfile,"#uri: redis://.*!uri: 'redis://redis:6379'!"" \
"
2393,054cb14d4825fbe7dbfd30605a3cdf214ab07cfb,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2394,054cb14d4825fbe7dbfd30605a3cdf214ab07cfb,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2395,054cb14d4825fbe7dbfd30605a3cdf214ab07cfb,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2396,054cb14d4825fbe7dbfd30605a3cdf214ab07cfb,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2397,054cb14d4825fbe7dbfd30605a3cdf214ab07cfb,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2398,4651c8e65b80e0acc3d2f7df2de980ee28a03c7a,/familysearch-indexing/Dockerfile,"# TODO add a very lightweight browser for opening help and/or registration
"
2399,0155428d799bc7d60830a1f90b84e2c4fd747b3b,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2400,0155428d799bc7d60830a1f90b84e2c4fd747b3b,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2401,0155428d799bc7d60830a1f90b84e2c4fd747b3b,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2402,0155428d799bc7d60830a1f90b84e2c4fd747b3b,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2403,0155428d799bc7d60830a1f90b84e2c4fd747b3b,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2404,e31dc95f37b5abf08b92e660c7ab27b161b819ea,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2405,e31dc95f37b5abf08b92e660c7ab27b161b819ea,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
2406,e31dc95f37b5abf08b92e660c7ab27b161b819ea,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
2407,fdb030d2f9691e55eb51cc612681d2a152bc547d,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2408,fdb030d2f9691e55eb51cc612681d2a152bc547d,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2409,fdb030d2f9691e55eb51cc612681d2a152bc547d,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2410,fdb030d2f9691e55eb51cc612681d2a152bc547d,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2411,fdb030d2f9691e55eb51cc612681d2a152bc547d,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2412,924d3bc607044dfac90dff7f52fc0f17c770adcd,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2413,8f53c52c8ae91a5cdd82f4914560218b40fc52ae,/apt-cacher-ng/Dockerfile,"# grab tini for signal processing and zombie killing
"
2414,138ec833ba57d5d1909cdf2628417fb8f6f13a8d,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2415,138ec833ba57d5d1909cdf2628417fb8f6f13a8d,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2416,138ec833ba57d5d1909cdf2628417fb8f6f13a8d,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2417,138ec833ba57d5d1909cdf2628417fb8f6f13a8d,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2418,138ec833ba57d5d1909cdf2628417fb8f6f13a8d,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2419,fc87bade551fcc37c5c536a34af8eea25e5880cc,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2420,3dba5f08085312d65aa7c9f7d2d81193368a63ca,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2421,3dba5f08085312d65aa7c9f7d2d81193368a63ca,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2422,3dba5f08085312d65aa7c9f7d2d81193368a63ca,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2423,3dba5f08085312d65aa7c9f7d2d81193368a63ca,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2424,3dba5f08085312d65aa7c9f7d2d81193368a63ca,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2425,5a693e5d28ecce9a94e1f65e0bef941d7b029c7d,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2426,5a693e5d28ecce9a94e1f65e0bef941d7b029c7d,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2427,5a693e5d28ecce9a94e1f65e0bef941d7b029c7d,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2428,5a693e5d28ecce9a94e1f65e0bef941d7b029c7d,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2429,5a693e5d28ecce9a94e1f65e0bef941d7b029c7d,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2430,adb5a60e1b771934bedc98a10c3ff467b500ae9a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2431,adb5a60e1b771934bedc98a10c3ff467b500ae9a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2432,adb5a60e1b771934bedc98a10c3ff467b500ae9a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2433,adb5a60e1b771934bedc98a10c3ff467b500ae9a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2434,adb5a60e1b771934bedc98a10c3ff467b500ae9a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2435,128b57961e2b4280ba422b0056ce2a0c8f101929,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2436,128b57961e2b4280ba422b0056ce2a0c8f101929,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
2437,128b57961e2b4280ba422b0056ce2a0c8f101929,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
2438,128b57961e2b4280ba422b0056ce2a0c8f101929,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
2439,128b57961e2b4280ba422b0056ce2a0c8f101929,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
2440,16410572c11e3784bc81805f8f0c1482988b4b6b,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2441,16410572c11e3784bc81805f8f0c1482988b4b6b,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
2442,16410572c11e3784bc81805f8f0c1482988b4b6b,/jenkins/Dockerfile,"# workaround ""apt-key adv --recv-keys"" hanging in stretch and above
"
2443,c1610b96ffcea268495de6bc01aa9d72c59f9392,/docker-master/dind/Dockerfile,"# https://github.com/docker/docker/blob/master/project/PACKAGERS.md#runtime-dependencies
"
2444,c1610b96ffcea268495de6bc01aa9d72c59f9392,/docker-master/dind/Dockerfile,"# pigz: https://github.com/moby/moby/pull/35697 (faster gzip implementation)
"
2445,c1610b96ffcea268495de6bc01aa9d72c59f9392,/docker-master/dind/Dockerfile,"# only install zfs if it's available for the current architecture
# https://git.alpinelinux.org/aports/tree/main/zfs/APKBUILD?h=3.12-stable#n8 (""all !armhf !armv7"" as of 2020-06-10)
# ""apk info XYZ"" exits with a zero exit code but no output when the package exists but not for this arch
"
2446,c1610b96ffcea268495de6bc01aa9d72c59f9392,/docker-master/dind/Dockerfile,"# TODO aufs-tools

# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
"
2447,c1610b96ffcea268495de6bc01aa9d72c59f9392,/docker-master/dind/Dockerfile,"# https://github.com/docker/docker/tree/master/hack/dind
"
2448,e43383053de8553101f87e8755ecb4ed8fa39c09,/debian/devel/Dockerfile,"# normal build deps
"
2449,e43383053de8553101f87e8755ecb4ed8fa39c09,/debian/devel/Dockerfile,"# need deb-src for compiling packages
"
2450,e43383053de8553101f87e8755ecb4ed8fa39c09,/debian/devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
2451,e43383053de8553101f87e8755ecb4ed8fa39c09,/debian/devel/Dockerfile,"# for ssh to debian hosts, let's make sure we know their fingerprints <3
"
2452,e43383053de8553101f87e8755ecb4ed8fa39c09,/debian/devel/Dockerfile,"# make sure things are pretty
"
2453,e43383053de8553101f87e8755ecb4ed8fa39c09,/debian/devel/Dockerfile,"#(force_color_prompt=yes)/\1/' ~/.bashrc

# quilt is much amaze: https://wiki.debian.org/UsingQuilt#Using_quilt_with_Debian_source_packages
"
2454,fc7c18ee823a09e0ba4e802703a2b3605ab631f6,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2455,fc7c18ee823a09e0ba4e802703a2b3605ab631f6,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2456,fc7c18ee823a09e0ba4e802703a2b3605ab631f6,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2457,fc7c18ee823a09e0ba4e802703a2b3605ab631f6,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2458,fc7c18ee823a09e0ba4e802703a2b3605ab631f6,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2459,df966bd85ec8ee2d918eef64d6a93eeee3cf4930,/docker/master/dind/Dockerfile,"# https://github.com/docker/docker/blob/master/project/PACKAGERS.md#runtime-dependencies
"
2460,df966bd85ec8ee2d918eef64d6a93eeee3cf4930,/docker/master/dind/Dockerfile,"# TODO aufs-tools

"
2461,d2de823a76f253e279d536d038ff22196405f3ec,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2462,d2de823a76f253e279d536d038ff22196405f3ec,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2463,d2de823a76f253e279d536d038ff22196405f3ec,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2464,d2de823a76f253e279d536d038ff22196405f3ec,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2465,d2de823a76f253e279d536d038ff22196405f3ec,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2466,c1610b96ffcea268495de6bc01aa9d72c59f9392,/speedtest/Dockerfile,"# https://www.speedtest.net/apps/cli#download
"
2467,c1610b96ffcea268495de6bc01aa9d72c59f9392,/speedtest/Dockerfile,"# TODO verify that ookla's ""armhf"" really is armv6
"
2468,c1610b96ffcea268495de6bc01aa9d72c59f9392,/speedtest/Dockerfile,"# TODO figure out what ookla means by their bare ""arm"" arch
"
2469,c1610b96ffcea268495de6bc01aa9d72c59f9392,/speedtest/Dockerfile,"#download)""; exit 1 ;; \
"
2470,69ca2840ccf7ada6dbb2b7a945a0702f72f3fe0d,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2471,69ca2840ccf7ada6dbb2b7a945a0702f72f3fe0d,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2472,69ca2840ccf7ada6dbb2b7a945a0702f72f3fe0d,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2473,69ca2840ccf7ada6dbb2b7a945a0702f72f3fe0d,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2474,69ca2840ccf7ada6dbb2b7a945a0702f72f3fe0d,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2475,a28355d960f6fd0e14ba0d68f7ec5428129558f9,/grafana/Dockerfile,"# https://github.com/grafana/grafana/releases
"
2476,a28355d960f6fd0e14ba0d68f7ec5428129558f9,/grafana/Dockerfile,"# https://github.com/grafana/grafana/blob/master/packaging/docker/Dockerfile

"
2477,a28355d960f6fd0e14ba0d68f7ec5428129558f9,/grafana/Dockerfile,"# https://grafana.com/grafana/download/5.3.4?platform=linux
# https://grafana.com/grafana/download/5.3.4?platform=arm
"
2478,a28355d960f6fd0e14ba0d68f7ec5428129558f9,/grafana/Dockerfile,"# TODO verify sha256 values! (add "".sha256"" to the end of this URL)
"
2479,426b8d085f19ed6665832fa648f7023780c85d4d,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2480,426b8d085f19ed6665832fa648f7023780c85d4d,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
2481,426b8d085f19ed6665832fa648f7023780c85d4d,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
2482,61005d09c4ecb1f7919233f930b4af7886b0743f,/phpmyadmin/Dockerfile,"# https://docs.phpmyadmin.net/en/latest/setup.html#verifying-phpmyadmin-releases
"
2483,61005d09c4ecb1f7919233f930b4af7886b0743f,/phpmyadmin/Dockerfile,"# Since July 2015 all phpMyAdmin releases are cryptographically signed by the releasing developer, who through January 2016 was Marc Delisle.
"
2484,61005d09c4ecb1f7919233f930b4af7886b0743f,/phpmyadmin/Dockerfile,"# Beginning in January 2016, the release manager is Isaac Bennetch.
"
2485,61005d09c4ecb1f7919233f930b4af7886b0743f,/phpmyadmin/Dockerfile,"# Some additional downloads (for example themes) might be signed by Michal Čihař.
"
2486,baccd923580c491edbd65ee5fd689a4ccd3cbfb6,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2487,baccd923580c491edbd65ee5fd689a4ccd3cbfb6,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2488,baccd923580c491edbd65ee5fd689a4ccd3cbfb6,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2489,baccd923580c491edbd65ee5fd689a4ccd3cbfb6,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2490,baccd923580c491edbd65ee5fd689a4ccd3cbfb6,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2491,93ffdac93390afcbbae9e38c3266b1d3b5b2a986,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2492,1306d934a37cb298aa089953e595e0208f1e4c91,/sbuild/Dockerfile,"# run with ""--cap-add SYS_ADMIN"" so that sbuild can ""mount"" in the chroots it creates

"
2493,1306d934a37cb298aa089953e595e0208f1e4c91,/sbuild/Dockerfile,"# https://gist.github.com/tianon/a0080cbca558e4b907fe
# (useful sbuild-related scripts)
"
2494,1306d934a37cb298aa089953e595e0208f1e4c91,/sbuild/Dockerfile,"# usage: download-debuerreotype-tarball.sh suite [arch]
#    ie: download-debuerreotype-tarball.sh stretch
#        download-debuerreotype-tarball.sh sid i386
"
2495,17d2dbffa9d9052e7069471850903f4564b9fac6,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2496,17d2dbffa9d9052e7069471850903f4564b9fac6,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2497,17d2dbffa9d9052e7069471850903f4564b9fac6,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2498,17d2dbffa9d9052e7069471850903f4564b9fac6,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2499,17d2dbffa9d9052e7069471850903f4564b9fac6,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2500,398ec0b67805bdf30b2044efb1a47b59fd33d750,/sbuild/Dockerfile,"# run with ""--cap-add SYS_ADMIN"" so that sbuild can ""mount"" in the chroots it creates

"
2501,398ec0b67805bdf30b2044efb1a47b59fd33d750,/sbuild/Dockerfile,"# https://gist.github.com/tianon/a0080cbca558e4b907fe
# (useful sbuild-related scripts)
"
2502,398ec0b67805bdf30b2044efb1a47b59fd33d750,/sbuild/Dockerfile,"# usage: download-debuerreotype-tarball.sh suite [arch]
#    ie: download-debuerreotype-tarball.sh stretch
#        download-debuerreotype-tarball.sh sid i386
"
2503,73efe80da61fcf2c8502070a7b5e562f26ddbf38,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2504,bb56a63b58d48c42fcadfb17eb0ec8b26c41c870,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2505,3acd11aa49f9fa0999e9a39e7cf882f511c829d4,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2506,3acd11aa49f9fa0999e9a39e7cf882f511c829d4,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2507,3acd11aa49f9fa0999e9a39e7cf882f511c829d4,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2508,3acd11aa49f9fa0999e9a39e7cf882f511c829d4,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2509,3acd11aa49f9fa0999e9a39e7cf882f511c829d4,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2510,46db13345e202626e4400d72ce309ed513579805,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2511,46db13345e202626e4400d72ce309ed513579805,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2512,46db13345e202626e4400d72ce309ed513579805,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2513,46db13345e202626e4400d72ce309ed513579805,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2514,46db13345e202626e4400d72ce309ed513579805,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2515,72b00bdd32a9d84da7ccc21fc4c048bd5626fdb9,/debian/ubuntu-devel/Dockerfile,"# let's make apt list package versions, since those are handy during devel
"
2516,72b00bdd32a9d84da7ccc21fc4c048bd5626fdb9,/debian/ubuntu-devel/Dockerfile,"# normal build deps
"
2517,72b00bdd32a9d84da7ccc21fc4c048bd5626fdb9,/debian/ubuntu-devel/Dockerfile,"# if ""tzdata"" is installed with the later set of packages, it uses the ""Readline"" method of prompting for ""debconf"" input, which hangs
"
2518,72b00bdd32a9d84da7ccc21fc4c048bd5626fdb9,/debian/ubuntu-devel/Dockerfile,"# (so we just install it before whatever gets installed that makes debconf think it can/should use Readline)
"
2519,72b00bdd32a9d84da7ccc21fc4c048bd5626fdb9,/debian/ubuntu-devel/Dockerfile,"# get dh-make-golang from Git since it's so rapidly changing
"
2520,72b00bdd32a9d84da7ccc21fc4c048bd5626fdb9,/debian/ubuntu-devel/Dockerfile,"# need deb-src for compiling packages
"
2521,72b00bdd32a9d84da7ccc21fc4c048bd5626fdb9,/debian/ubuntu-devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
2522,72b00bdd32a9d84da7ccc21fc4c048bd5626fdb9,/debian/ubuntu-devel/Dockerfile,"# for ssh to debian hosts, let's make sure we know their fingerprints <3
"
2523,72b00bdd32a9d84da7ccc21fc4c048bd5626fdb9,/debian/ubuntu-devel/Dockerfile,"# make sure things are pretty
"
2524,72b00bdd32a9d84da7ccc21fc4c048bd5626fdb9,/debian/ubuntu-devel/Dockerfile,"#(force_color_prompt=yes)/\1/' ~/.bashrc

# quilt is much amaze: https://wiki.debian.org/UsingQuilt#Using_quilt_with_Debian_source_packages
"
2525,72b00bdd32a9d84da7ccc21fc4c048bd5626fdb9,/debian/ubuntu-devel/Dockerfile,"# make sure pbuilder-dist uses a sane default mirror
"
2526,ac650ad27d85c379a1efed4d912b366dbc47b159,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2527,ac650ad27d85c379a1efed4d912b366dbc47b159,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
2528,ac650ad27d85c379a1efed4d912b366dbc47b159,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
2529,f735e064f9a4547f6df409f366a35ad1053f1cf2,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2530,f735e064f9a4547f6df409f366a35ad1053f1cf2,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2531,f735e064f9a4547f6df409f366a35ad1053f1cf2,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2532,f735e064f9a4547f6df409f366a35ad1053f1cf2,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2533,f735e064f9a4547f6df409f366a35ad1053f1cf2,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2534,ee9f313c3ccbaa7832f9fee07b720175c73d3347,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
2535,e0e0b64006b4937eb90513c06ae0be988385577e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2536,e0e0b64006b4937eb90513c06ae0be988385577e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2537,e0e0b64006b4937eb90513c06ae0be988385577e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2538,e0e0b64006b4937eb90513c06ae0be988385577e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2539,e0e0b64006b4937eb90513c06ae0be988385577e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2540,8c2557f0f265563d87068eb6d4d4c9399803afc4,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2541,8c2557f0f265563d87068eb6d4d4c9399803afc4,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
2542,8c2557f0f265563d87068eb6d4d4c9399803afc4,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
2543,8c2557f0f265563d87068eb6d4d4c9399803afc4,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
2544,8c2557f0f265563d87068eb6d4d4c9399803afc4,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
2545,017e4736a3ce701f20eb2c21868ee0ce113944bc,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2546,017e4736a3ce701f20eb2c21868ee0ce113944bc,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2547,017e4736a3ce701f20eb2c21868ee0ce113944bc,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2548,017e4736a3ce701f20eb2c21868ee0ce113944bc,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2549,017e4736a3ce701f20eb2c21868ee0ce113944bc,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2550,c191b18efcb958ba8923b0a3f87374040ef1abb1,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2551,c191b18efcb958ba8923b0a3f87374040ef1abb1,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2552,c191b18efcb958ba8923b0a3f87374040ef1abb1,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2553,c191b18efcb958ba8923b0a3f87374040ef1abb1,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2554,c191b18efcb958ba8923b0a3f87374040ef1abb1,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2555,c92520f4ef27e3c3b7433e13ff0203bc0c403e99,/google-cloud-print-connector/Dockerfile,"# fetch dependencies
# format: import-path=strip-components=tarball-url
"
2556,c92520f4ef27e3c3b7433e13ff0203bc0c403e99,/google-cloud-print-connector/Dockerfile,"# https://github.com/coreos/go-systemd/releases
"
2557,c92520f4ef27e3c3b7433e13ff0203bc0c403e99,/google-cloud-print-connector/Dockerfile,"# https://github.com/satori/go.uuid/releases
"
2558,c92520f4ef27e3c3b7433e13ff0203bc0c403e99,/google-cloud-print-connector/Dockerfile,"# https://github.com/urfave/cli/releases
"
2559,c92520f4ef27e3c3b7433e13ff0203bc0c403e99,/google-cloud-print-connector/Dockerfile,"# https://github.com/golang/net/commits/master
"
2560,c92520f4ef27e3c3b7433e13ff0203bc0c403e99,/google-cloud-print-connector/Dockerfile,"# https://github.com/golang/oauth2/commits/master
"
2561,c92520f4ef27e3c3b7433e13ff0203bc0c403e99,/google-cloud-print-connector/Dockerfile,"# https://bazaar.launchpad.net/~chipaca/go-xdg/v0/files (""view revision"")
# https://bazaar.launchpad.net/~chipaca/go-xdg/v0/revision/10?start_revid=10 (""download tarball"")
"
2562,c92520f4ef27e3c3b7433e13ff0203bc0c403e99,/google-cloud-print-connector/Dockerfile,"#*=}""; dep=""${dep%=$strip}""; \
"
2563,c92520f4ef27e3c3b7433e13ff0203bc0c403e99,/google-cloud-print-connector/Dockerfile,"#*=}""; strip=""${strip%=$tarball}""; \
"
2564,c92520f4ef27e3c3b7433e13ff0203bc0c403e99,/google-cloud-print-connector/Dockerfile,"# https://github.com/google/cloud-print-connector/releases
#ENV GCPC_VERSION 2016.01.02
"
2565,c92520f4ef27e3c3b7433e13ff0203bc0c403e99,/google-cloud-print-connector/Dockerfile,"# https://github.com/google/cloud-print-connector/commit/d353d01
"
2566,d7a6696162e3dba91128e29293985ded0a3586a9,/makemkv/Dockerfile,"# FPL_MainFeature detection only seemed to work with OpenJDK 9 (8 was insufficient)
"
2567,d7a6696162e3dba91128e29293985ded0a3586a9,/makemkv/Dockerfile,"# This disc requires Java runtime (JRE), but none was found. Certain functions will fail, please install Java. See http://www.makemkv.com/bdjava/ for details.
"
2568,d7a6696162e3dba91128e29293985ded0a3586a9,/makemkv/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
2569,d7a6696162e3dba91128e29293985ded0a3586a9,/makemkv/Dockerfile,"# http://www.makemkv.com/forum2/viewtopic.php?f=3&t=224
"
2570,d7a6696162e3dba91128e29293985ded0a3586a9,/makemkv/Dockerfile,"# beta code: http://www.makemkv.com/forum2/viewtopic.php?f=5&t=1053
"
2571,d7a6696162e3dba91128e29293985ded0a3586a9,/makemkv/Dockerfile,"# pub   dsa2048 2017-05-26 [SC]
#       2ECF 2330 5F1F C0B3 2001  6733 94E3 083A 1804 2697
# uid           [ unknown] MakeMKV (signature) <support@makemkv.com>
"
2572,935dff4705d7ff486f5e065f0c96c8e8788f7ba4,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2573,76c0c42505cbf4bd27f5cab05f6e582ed17683ba,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2574,76c0c42505cbf4bd27f5cab05f6e582ed17683ba,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
2575,76c0c42505cbf4bd27f5cab05f6e582ed17683ba,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
2576,76c0c42505cbf4bd27f5cab05f6e582ed17683ba,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
2577,76c0c42505cbf4bd27f5cab05f6e582ed17683ba,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
2578,a2a8bc28d1f999c38465698b8364c632e7b44760,/debian/ubuntu-devel/Dockerfile,"# normal build deps
"
2579,a2a8bc28d1f999c38465698b8364c632e7b44760,/debian/ubuntu-devel/Dockerfile,"# need deb-src for compiling packages
"
2580,a2a8bc28d1f999c38465698b8364c632e7b44760,/debian/ubuntu-devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
2581,a2a8bc28d1f999c38465698b8364c632e7b44760,/debian/ubuntu-devel/Dockerfile,"# for ssh to debian hosts, let's make sure we know their fingerprints <3
"
2582,a2a8bc28d1f999c38465698b8364c632e7b44760,/debian/ubuntu-devel/Dockerfile,"# make sure things are pretty
"
2583,a2a8bc28d1f999c38465698b8364c632e7b44760,/debian/ubuntu-devel/Dockerfile,"#(force_color_prompt=yes)/\1/' ~/.bashrc

# quilt is much amaze: https://wiki.debian.org/UsingQuilt#Using_quilt_with_Debian_source_packages
"
2584,51e4f7ea5ee821ac208d1f35ca9020f340239a4c,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2585,51e4f7ea5ee821ac208d1f35ca9020f340239a4c,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2586,51e4f7ea5ee821ac208d1f35ca9020f340239a4c,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2587,51e4f7ea5ee821ac208d1f35ca9020f340239a4c,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2588,51e4f7ea5ee821ac208d1f35ca9020f340239a4c,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2589,457708d5019166d98353ac0790107b78a6f52ce1,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2590,457708d5019166d98353ac0790107b78a6f52ce1,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2591,457708d5019166d98353ac0790107b78a6f52ce1,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2592,457708d5019166d98353ac0790107b78a6f52ce1,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2593,457708d5019166d98353ac0790107b78a6f52ce1,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2594,ab4e3950e801ab0b2ae0e0d83abce68fd8a91c2d,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2595,ab4e3950e801ab0b2ae0e0d83abce68fd8a91c2d,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2596,ab4e3950e801ab0b2ae0e0d83abce68fd8a91c2d,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2597,ab4e3950e801ab0b2ae0e0d83abce68fd8a91c2d,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2598,ab4e3950e801ab0b2ae0e0d83abce68fd8a91c2d,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2599,2fcd81f4b98894f2809f7cc8669e9c48f7913d90,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2600,26719a104ed4e4526357603571df6f7a783092a7,/dind/Dockerfile,"#RUN curl -sL https://get.docker.io | sh

# let's grab the lastest ""master"" version of the install.sh script >:)
"
2601,81e708624e4b473d46047358d9efe9d7e3c9397e,/certbot/Dockerfile,"# Executable not found: can't find the executable for the dialog-like program
"
2602,81e708624e4b473d46047358d9efe9d7e3c9397e,/certbot/Dockerfile,"#VOLUME /etc/letsencrypt
"
2603,81e708624e4b473d46047358d9efe9d7e3c9397e,/certbot/Dockerfile,"#VOLUME /var/log/letsencrypt

"
2604,34a0d85720f3848ca2dce67c7421281cf2bd8691,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2605,34a0d85720f3848ca2dce67c7421281cf2bd8691,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2606,34a0d85720f3848ca2dce67c7421281cf2bd8691,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2607,34a0d85720f3848ca2dce67c7421281cf2bd8691,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2608,34a0d85720f3848ca2dce67c7421281cf2bd8691,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2609,92c45713bfcf85d55d6eef4ef46695f91ff9253d,/jenkins/slave/debian/Dockerfile,"#?PermitRootLogin[[:space:]].*$/PermitRootLogin yes/g' /etc/ssh/sshd_config

"
2610,92c45713bfcf85d55d6eef4ef46695f91ff9253d,/jenkins/slave/debian/Dockerfile,"# let's make /root a volume so ~/.ssh/authorized_keys is easier to save
"
2611,5cade3c9608046ca166b92dd4250af57ae4c8204,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2612,5cade3c9608046ca166b92dd4250af57ae4c8204,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2613,5cade3c9608046ca166b92dd4250af57ae4c8204,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2614,5cade3c9608046ca166b92dd4250af57ae4c8204,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2615,5cade3c9608046ca166b92dd4250af57ae4c8204,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2616,65df275755af21849562e320ae2f69edd6437e2e,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2617,65df275755af21849562e320ae2f69edd6437e2e,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
2618,65df275755af21849562e320ae2f69edd6437e2e,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
2619,65df275755af21849562e320ae2f69edd6437e2e,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
2620,65df275755af21849562e320ae2f69edd6437e2e,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
2621,2538d487294a072781e72cd57bc165415d68a6fc,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2622,2538d487294a072781e72cd57bc165415d68a6fc,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2623,2538d487294a072781e72cd57bc165415d68a6fc,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2624,2538d487294a072781e72cd57bc165415d68a6fc,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2625,2538d487294a072781e72cd57bc165415d68a6fc,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2626,b2ab6405be02a06e6832cdfe214e43c90dec48d7,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2627,b2ab6405be02a06e6832cdfe214e43c90dec48d7,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2628,b2ab6405be02a06e6832cdfe214e43c90dec48d7,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2629,b2ab6405be02a06e6832cdfe214e43c90dec48d7,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2630,b2ab6405be02a06e6832cdfe214e43c90dec48d7,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2631,db1b81231b0742a9dca5561572d8f0213d663102,/makemkv/Dockerfile,"# This disc requires Java runtime (JRE), but none was found. Certain functions will fail, please install Java. See http://www.makemkv.com/bdjava/ for details.
"
2632,db1b81231b0742a9dca5561572d8f0213d663102,/makemkv/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
2633,db1b81231b0742a9dca5561572d8f0213d663102,/makemkv/Dockerfile,"# FPL_MainFeature detection only seemed to work with OpenJDK 9 (8 was insufficient)
"
2634,db1b81231b0742a9dca5561572d8f0213d663102,/makemkv/Dockerfile,"# Unable to execute external program 'ccextractor' as its path is not set in preferences
# Failed to execute external program 'ccextractor' from location '/usr/local/bin/mmccextr'
# (but it doesn't exist in the perferences dialog...)
"
2635,db1b81231b0742a9dca5561572d8f0213d663102,/makemkv/Dockerfile,"# http://www.makemkv.com/forum2/viewtopic.php?f=3&t=224
"
2636,db1b81231b0742a9dca5561572d8f0213d663102,/makemkv/Dockerfile,"# beta code: http://www.makemkv.com/forum2/viewtopic.php?f=5&t=1053
"
2637,db1b81231b0742a9dca5561572d8f0213d663102,/makemkv/Dockerfile,"# pub   dsa2048 2017-05-26 [SC]
#       2ECF 2330 5F1F C0B3 2001  6733 94E3 083A 1804 2697
# uid           [ unknown] MakeMKV (signature) <support@makemkv.com>
"
2638,e0704457007309c8a1684ea0906367b4bcb7ad6f,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2639,172c57c7622b0901e904459dac8924ea035a045e,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2640,172c57c7622b0901e904459dac8924ea035a045e,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
2641,172c57c7622b0901e904459dac8924ea035a045e,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
2642,172c57c7622b0901e904459dac8924ea035a045e,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
2643,172c57c7622b0901e904459dac8924ea035a045e,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
2644,0c081246ffed760471a7d8c067f53101eb47dada,/nylas-n1/Dockerfile,"# hijack the browser in the worst way possible
"
2645,0c081246ffed760471a7d8c067f53101eb47dada,/nylas-n1/Dockerfile,"#!/bin/bash'; \
"
2646,63890b31c522a60ee2b027ffdb3af12c8b268a72,/moosefs/Dockerfile,"# mfscli (and cgi) are Python-based
"
2647,63890b31c522a60ee2b027ffdb3af12c8b268a72,/moosefs/Dockerfile,"# mfsmount needs ""fusermount""
"
2648,63890b31c522a60ee2b027ffdb3af12c8b268a72,/moosefs/Dockerfile,"# https://github.com/moosefs/moosefs/releases
"
2649,63890b31c522a60ee2b027ffdb3af12c8b268a72,/moosefs/Dockerfile,"# prep the default configuration so things generally work Out-of-the-Box
"
2650,63890b31c522a60ee2b027ffdb3af12c8b268a72,/moosefs/Dockerfile,"# allow us to run as an arbitrary user but still modify configuration
"
2651,63890b31c522a60ee2b027ffdb3af12c8b268a72,/moosefs/Dockerfile,"# prep a scratch space with appropriate permissions to be able to do quick prototyping Out-of-the-Box
"
2652,c1610b96ffcea268495de6bc01aa9d72c59f9392,/vultr-cli/Dockerfile,"# https://github.com/vultr/vultr-cli/releases
"
2653,59fcb9b16ae36cda52fad94fed5b1bbdd586c6bc,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2654,59fcb9b16ae36cda52fad94fed5b1bbdd586c6bc,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2655,59fcb9b16ae36cda52fad94fed5b1bbdd586c6bc,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2656,59fcb9b16ae36cda52fad94fed5b1bbdd586c6bc,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2657,59fcb9b16ae36cda52fad94fed5b1bbdd586c6bc,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2658,ca1f5a9c9baec1fd5a611a92b9b81dc15d75dedf,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2659,ca1f5a9c9baec1fd5a611a92b9b81dc15d75dedf,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
2660,ca1f5a9c9baec1fd5a611a92b9b81dc15d75dedf,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
2661,366a3004f85b9cce5d1bdeafe414c32e1620f646,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2662,366a3004f85b9cce5d1bdeafe414c32e1620f646,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2663,366a3004f85b9cce5d1bdeafe414c32e1620f646,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2664,366a3004f85b9cce5d1bdeafe414c32e1620f646,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2665,366a3004f85b9cce5d1bdeafe414c32e1620f646,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2666,37d2220272ed0a1401d148a3e2e7b77fa79748ec,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2667,37d2220272ed0a1401d148a3e2e7b77fa79748ec,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
2668,37d2220272ed0a1401d148a3e2e7b77fa79748ec,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
2669,37d2220272ed0a1401d148a3e2e7b77fa79748ec,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
2670,37d2220272ed0a1401d148a3e2e7b77fa79748ec,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
2671,248b8c2824eb7e06b0061d2e2e3128fa366e8f31,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2672,a7893ff62f7951e2040665565bcf34fce213cde5,/dell-netextender/Dockerfile,"# https://sslvpn.demo.sonicwall.com
#   u: demo    p: password

"
2673,a7893ff62f7951e2040665565bcf34fce213cde5,/dell-netextender/Dockerfile,"# NetExtender connected successfully. Type ""Ctrl-c"" to disconnect...
"
2674,d2b48a997d4d7460a656c90073673ff34717fe05,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2675,d2b48a997d4d7460a656c90073673ff34717fe05,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2676,d2b48a997d4d7460a656c90073673ff34717fe05,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2677,d2b48a997d4d7460a656c90073673ff34717fe05,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2678,d2b48a997d4d7460a656c90073673ff34717fe05,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2679,0d049a0ae884fc277708605c48fdd000a423ea3a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2680,0d049a0ae884fc277708605c48fdd000a423ea3a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2681,0d049a0ae884fc277708605c48fdd000a423ea3a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2682,0d049a0ae884fc277708605c48fdd000a423ea3a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2683,0d049a0ae884fc277708605c48fdd000a423ea3a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2684,9c425803eaa1fffb5a7d60ecd9113c17e792aaa6,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2685,9c425803eaa1fffb5a7d60ecd9113c17e792aaa6,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2686,9c425803eaa1fffb5a7d60ecd9113c17e792aaa6,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2687,9c425803eaa1fffb5a7d60ecd9113c17e792aaa6,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2688,9c425803eaa1fffb5a7d60ecd9113c17e792aaa6,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2689,344626334570ff9cfc2c10e918490a5118d61082,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2690,344626334570ff9cfc2c10e918490a5118d61082,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2691,344626334570ff9cfc2c10e918490a5118d61082,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2692,344626334570ff9cfc2c10e918490a5118d61082,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2693,344626334570ff9cfc2c10e918490a5118d61082,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2694,c9e98dbeceabcc079642964d5fa63fe3f7132ac1,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2695,92223b00bd53418df36f9900c78054bafa47c673,/network-toolbox/debian/Dockerfile,"# dangit, wireshark-common!  *shakes fist*
"
2696,0365d8d6b1804521c4d3976722b9dc41162054cd,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2697,0365d8d6b1804521c4d3976722b9dc41162054cd,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2698,0365d8d6b1804521c4d3976722b9dc41162054cd,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2699,0365d8d6b1804521c4d3976722b9dc41162054cd,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2700,0365d8d6b1804521c4d3976722b9dc41162054cd,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2701,72917865f8340036af478934e57192e8f79f56f3,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2702,72917865f8340036af478934e57192e8f79f56f3,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2703,72917865f8340036af478934e57192e8f79f56f3,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2704,72917865f8340036af478934e57192e8f79f56f3,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2705,72917865f8340036af478934e57192e8f79f56f3,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2706,40aaf810b550d7e529d0e268d93fb204e1d485e3,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2707,40aaf810b550d7e529d0e268d93fb204e1d485e3,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2708,40aaf810b550d7e529d0e268d93fb204e1d485e3,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2709,40aaf810b550d7e529d0e268d93fb204e1d485e3,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2710,40aaf810b550d7e529d0e268d93fb204e1d485e3,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2711,c7e314083217d7a57077e3d5206e33a4d038cdf6,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2712,c7e314083217d7a57077e3d5206e33a4d038cdf6,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2713,c7e314083217d7a57077e3d5206e33a4d038cdf6,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2714,c7e314083217d7a57077e3d5206e33a4d038cdf6,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2715,c7e314083217d7a57077e3d5206e33a4d038cdf6,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2716,d7228f9cc76020e375c8c933538d6ca008df5b01,/slack/Dockerfile,"# the .deb file linked at https://slack.com/downloads/instructions/debian includes ""/etc/cron.daily/slack"" which sets up an APT repo entry as in the following installation

# pub   rsa4096 2016-02-18 [SCEA]
#       DB08 5A08 CA13 B8AC B917  E0F6 D938 EC0D 0386 51BD
# uid           [ unknown] https://packagecloud.io/slacktechnologies/slack (https://packagecloud.io/docs#gpg_signing) <support@packagecloud.io>
# sub   rsa4096 2016-02-18 [SEA]
"
2717,d7228f9cc76020e375c8c933538d6ca008df5b01,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libX11-xcb.so.1: cannot open shared object file: No such file or directory
"
2718,d7228f9cc76020e375c8c933538d6ca008df5b01,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libasound.so.2: cannot open shared object file: No such file or directory
"
2719,7bb7b72637a7c79aefe7e93ba98bb3f1fdeeaeeb,/makemkv/Dockerfile,"# FPL_MainFeature detection only seemed to work with OpenJDK 9 (8 was insufficient)
"
2720,7bb7b72637a7c79aefe7e93ba98bb3f1fdeeaeeb,/makemkv/Dockerfile,"# This disc requires Java runtime (JRE), but none was found. Certain functions will fail, please install Java. See http://www.makemkv.com/bdjava/ for details.
"
2721,7bb7b72637a7c79aefe7e93ba98bb3f1fdeeaeeb,/makemkv/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
2722,7bb7b72637a7c79aefe7e93ba98bb3f1fdeeaeeb,/makemkv/Dockerfile,"# http://www.makemkv.com/forum2/viewtopic.php?f=3&t=224
"
2723,7bb7b72637a7c79aefe7e93ba98bb3f1fdeeaeeb,/makemkv/Dockerfile,"# beta code: http://www.makemkv.com/forum2/viewtopic.php?f=5&t=1053
"
2724,7bb7b72637a7c79aefe7e93ba98bb3f1fdeeaeeb,/makemkv/Dockerfile,"# pub   dsa2048 2017-05-26 [SC]
#       2ECF 2330 5F1F C0B3 2001  6733 94E3 083A 1804 2697
# uid           [ unknown] MakeMKV (signature) <support@makemkv.com>
"
2725,13276e7f7db6987293c50a577366c06ab8a31426,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2726,893f0de110037acd89e26339478ad0606cf1d870,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2727,4d0e823edf49df40f5645ad435f3c59858d8b348,/mutt-gmail/Dockerfile,"# a browser is necessary!
"
2728,4d0e823edf49df40f5645ad435f3c59858d8b348,/mutt-gmail/Dockerfile,"# my preferred editor :) (see also muttrc)
"
2729,5dd4032771cdabfa70c571865e2e509361cdb7cd,/docker/master/dind/Dockerfile,"# https://github.com/docker/docker/blob/master/project/PACKAGERS.md#runtime-dependencies
"
2730,5dd4032771cdabfa70c571865e2e509361cdb7cd,/docker/master/dind/Dockerfile,"# TODO aufs-tools

"
2731,2692bacca1472d4e541d868a081010cd52a5d9c2,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2732,2692bacca1472d4e541d868a081010cd52a5d9c2,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2733,2692bacca1472d4e541d868a081010cd52a5d9c2,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2734,2692bacca1472d4e541d868a081010cd52a5d9c2,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2735,2692bacca1472d4e541d868a081010cd52a5d9c2,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2736,aa3781660488d18f80dc62d06c3a89f9ca5a1983,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2737,aa3781660488d18f80dc62d06c3a89f9ca5a1983,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2738,aa3781660488d18f80dc62d06c3a89f9ca5a1983,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2739,aa3781660488d18f80dc62d06c3a89f9ca5a1983,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2740,aa3781660488d18f80dc62d06c3a89f9ca5a1983,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2741,270da768cfa905e7eea007f4a1680ff88ef1053a,/debian/devel/Dockerfile,"# normal build deps
"
2742,270da768cfa905e7eea007f4a1680ff88ef1053a,/debian/devel/Dockerfile,"# need an editor for ""dch -i""
"
2743,270da768cfa905e7eea007f4a1680ff88ef1053a,/debian/devel/Dockerfile,"# a few extra little useful things
"
2744,270da768cfa905e7eea007f4a1680ff88ef1053a,/debian/devel/Dockerfile,"# need deb-src for compiling packages
"
2745,270da768cfa905e7eea007f4a1680ff88ef1053a,/debian/devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
2746,270da768cfa905e7eea007f4a1680ff88ef1053a,/debian/devel/Dockerfile,"# for ssh to debian hosts, let's make sure we know their fingerprints <3
"
2747,270da768cfa905e7eea007f4a1680ff88ef1053a,/debian/devel/Dockerfile,"# make sure things are pretty
"
2748,270da768cfa905e7eea007f4a1680ff88ef1053a,/debian/devel/Dockerfile,"#(force_color_prompt=yes)/\1/' /root/.bashrc

"
2749,665b1d58050970c36889d2da50e2850cf968c411,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
2750,8586d97039307c3458571c0010b5a193163177b2,/mongodb-mms/Dockerfile,"# see https://mms.mongodb.com/settings/monitoring-agent
# click on ""Ubuntu 12.04+""
"
2751,8586d97039307c3458571c0010b5a193163177b2,/mongodb-mms/Dockerfile,"# missing dep in mms.deb
"
2752,cb80e133eb81e481c2e84a301f53c5d1a79711a1,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2753,cb80e133eb81e481c2e84a301f53c5d1a79711a1,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2754,cb80e133eb81e481c2e84a301f53c5d1a79711a1,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2755,cb80e133eb81e481c2e84a301f53c5d1a79711a1,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2756,cb80e133eb81e481c2e84a301f53c5d1a79711a1,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2757,f6a827ea67a070853eedc8572187646b4198f736,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2758,3469a82bad8889891a879efaa876e4b69c1f8773,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2759,5b9d246a0fedf5d0e1e1c476ecf852c68886db1e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2760,5b9d246a0fedf5d0e1e1c476ecf852c68886db1e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2761,5b9d246a0fedf5d0e1e1c476ecf852c68886db1e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2762,5b9d246a0fedf5d0e1e1c476ecf852c68886db1e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2763,5b9d246a0fedf5d0e1e1c476ecf852c68886db1e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2764,b96997b7dc27b55b3ce2f4a15b7ccd8596d5801b,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2765,b96997b7dc27b55b3ce2f4a15b7ccd8596d5801b,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
2766,b96997b7dc27b55b3ce2f4a15b7ccd8596d5801b,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
2767,b96997b7dc27b55b3ce2f4a15b7ccd8596d5801b,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
2768,b96997b7dc27b55b3ce2f4a15b7ccd8596d5801b,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
2769,0cd2aa7e1444671568523b0ae65ba8fbdf2132eb,/xen-orchestra/Dockerfile,"# see https://xen-orchestra.com/docs/from_the_sources.html

"
2770,0cd2aa7e1444671568523b0ae65ba8fbdf2132eb,/xen-orchestra/Dockerfile,"# https://github.com/nodejs/node-gyp/releases
"
2771,0cd2aa7e1444671568523b0ae65ba8fbdf2132eb,/xen-orchestra/Dockerfile,"# https://github.com/vatesfr/xen-orchestra/releases
"
2772,0cd2aa7e1444671568523b0ae65ba8fbdf2132eb,/xen-orchestra/Dockerfile,"#		-e ""s!#'/' = '/path/to/xo-web/dist/'!'/' = '../xo-web/dist/'!"" \
"
2773,0cd2aa7e1444671568523b0ae65ba8fbdf2132eb,/xen-orchestra/Dockerfile,"#uri = 'redis://.*'!uri = 'redis://redis:6379'!"" \
"
2774,0cd2aa7e1444671568523b0ae65ba8fbdf2132eb,/xen-orchestra/Dockerfile,"#' config.toml | grep '../xo-web/dist'; \
"
2775,a05651ccb4fc5a4f1168c3b9c3506bdd631b42b8,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2776,a05651ccb4fc5a4f1168c3b9c3506bdd631b42b8,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2777,a05651ccb4fc5a4f1168c3b9c3506bdd631b42b8,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2778,a05651ccb4fc5a4f1168c3b9c3506bdd631b42b8,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2779,a05651ccb4fc5a4f1168c3b9c3506bdd631b42b8,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2780,53584982fc2064909657bf4c5ec814f7579812af,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2781,9bc9748dbf8b17bf3134b8cf9e7db1f917a1b0da,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2782,9bc9748dbf8b17bf3134b8cf9e7db1f917a1b0da,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
2783,9bc9748dbf8b17bf3134b8cf9e7db1f917a1b0da,/jenkins/Dockerfile,"# workaround ""apt-key adv --recv-keys"" hanging in stretch and above
"
2784,44687d606463463587a7e817118a969fa455f0fe,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2785,44687d606463463587a7e817118a969fa455f0fe,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2786,44687d606463463587a7e817118a969fa455f0fe,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2787,44687d606463463587a7e817118a969fa455f0fe,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2788,44687d606463463587a7e817118a969fa455f0fe,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2789,8be6909e51a43ab60512cdfbff2e9f5b94c07faa,/phpmyadmin/Dockerfile,"# https://www.phpmyadmin.net/downloads/
"
2790,8be6909e51a43ab60512cdfbff2e9f5b94c07faa,/phpmyadmin/Dockerfile,"# https://docs.phpmyadmin.net/en/latest/setup.html#verifying-phpmyadmin-releases
"
2791,8be6909e51a43ab60512cdfbff2e9f5b94c07faa,/phpmyadmin/Dockerfile,"# Since July 2015 all phpMyAdmin releases are cryptographically signed by the releasing developer, who through January 2016 was Marc Delisle.
"
2792,8be6909e51a43ab60512cdfbff2e9f5b94c07faa,/phpmyadmin/Dockerfile,"# Beginning in January 2016, the release manager is Isaac Bennetch.
"
2793,8be6909e51a43ab60512cdfbff2e9f5b94c07faa,/phpmyadmin/Dockerfile,"# Some additional downloads (for example themes) might be signed by Michal Čihař.
"
2794,42e5cbeac65f52d4b14d92abba0676e0fd7f7060,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2795,42e5cbeac65f52d4b14d92abba0676e0fd7f7060,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2796,42e5cbeac65f52d4b14d92abba0676e0fd7f7060,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2797,42e5cbeac65f52d4b14d92abba0676e0fd7f7060,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2798,42e5cbeac65f52d4b14d92abba0676e0fd7f7060,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2799,a15ea30768d23dee45b4077d2734995483223de3,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2800,a15ea30768d23dee45b4077d2734995483223de3,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2801,a15ea30768d23dee45b4077d2734995483223de3,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2802,a15ea30768d23dee45b4077d2734995483223de3,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2803,a15ea30768d23dee45b4077d2734995483223de3,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2804,986d99d1ce8369673d44432ca7174ab09bc649b8,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2805,986d99d1ce8369673d44432ca7174ab09bc649b8,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2806,986d99d1ce8369673d44432ca7174ab09bc649b8,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2807,986d99d1ce8369673d44432ca7174ab09bc649b8,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2808,986d99d1ce8369673d44432ca7174ab09bc649b8,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2809,cc0cae5285d3e7cb914751c0a7dd0a7e8b6281ed,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2810,cc0cae5285d3e7cb914751c0a7dd0a7e8b6281ed,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2811,cc0cae5285d3e7cb914751c0a7dd0a7e8b6281ed,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2812,cc0cae5285d3e7cb914751c0a7dd0a7e8b6281ed,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2813,cc0cae5285d3e7cb914751c0a7dd0a7e8b6281ed,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2814,409d3657ab971168dfbfbb674a44770dcfe6a9df,/google-cloud-print-connector/Dockerfile,"# fetch dependencies
# format: import-path=strip-components=tarball-url
"
2815,409d3657ab971168dfbfbb674a44770dcfe6a9df,/google-cloud-print-connector/Dockerfile,"# https://github.com/coreos/go-systemd/releases
"
2816,409d3657ab971168dfbfbb674a44770dcfe6a9df,/google-cloud-print-connector/Dockerfile,"# https://github.com/satori/go.uuid/releases
# (https://github.com/satori/go.uuid/commit/0ef6afb2f6cdd6cdaeee3885a95099c63f18fc8c -- hopefully we'll get a newer release than v1.2.0 soonish)
"
2817,409d3657ab971168dfbfbb674a44770dcfe6a9df,/google-cloud-print-connector/Dockerfile,"# https://github.com/urfave/cli/releases
"
2818,409d3657ab971168dfbfbb674a44770dcfe6a9df,/google-cloud-print-connector/Dockerfile,"# https://github.com/golang/net/commits/master
"
2819,409d3657ab971168dfbfbb674a44770dcfe6a9df,/google-cloud-print-connector/Dockerfile,"# https://github.com/golang/oauth2/commits/master
"
2820,409d3657ab971168dfbfbb674a44770dcfe6a9df,/google-cloud-print-connector/Dockerfile,"# https://bazaar.launchpad.net/~chipaca/go-xdg/v0/files (""view revision"")
# https://bazaar.launchpad.net/~chipaca/go-xdg/v0/revision/10?start_revid=10 (""download tarball"")
"
2821,409d3657ab971168dfbfbb674a44770dcfe6a9df,/google-cloud-print-connector/Dockerfile,"#*=}""; dep=""${dep%=$strip}""; \
"
2822,409d3657ab971168dfbfbb674a44770dcfe6a9df,/google-cloud-print-connector/Dockerfile,"#*=}""; strip=""${strip%=$tarball}""; \
"
2823,409d3657ab971168dfbfbb674a44770dcfe6a9df,/google-cloud-print-connector/Dockerfile,"# https://github.com/google/cloud-print-connector/releases
"
2824,d8d99c1b533f3a28754fcb2a077ecb7412a1a3f6,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2825,d8d99c1b533f3a28754fcb2a077ecb7412a1a3f6,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
2826,d8d99c1b533f3a28754fcb2a077ecb7412a1a3f6,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
2827,d8d99c1b533f3a28754fcb2a077ecb7412a1a3f6,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
2828,d8d99c1b533f3a28754fcb2a077ecb7412a1a3f6,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
2829,c5adce384762580e375bf9bfa926c0e97b7a8049,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2830,c5adce384762580e375bf9bfa926c0e97b7a8049,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2831,c5adce384762580e375bf9bfa926c0e97b7a8049,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2832,c5adce384762580e375bf9bfa926c0e97b7a8049,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2833,c5adce384762580e375bf9bfa926c0e97b7a8049,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2834,3b1a89cb7aba7e26f858655104219027daaf03eb,/mongodb-mms/Dockerfile,"# see https://mms.mongodb.com/settings/monitoring-agent
# click on ""Ubuntu 12.04+""
"
2835,beba7e816615182c99fcb2ad952c7307994275d1,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2836,beba7e816615182c99fcb2ad952c7307994275d1,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2837,beba7e816615182c99fcb2ad952c7307994275d1,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2838,beba7e816615182c99fcb2ad952c7307994275d1,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2839,beba7e816615182c99fcb2ad952c7307994275d1,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2840,a7587d199c84393313504278ea6091815968cf8e,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2841,ffdbf1c1c08068890a46565907c160be7b06d86f,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2842,c850c4e79e7a661bf983685b04c9c00d4a20700c,/docker/master/dind/Dockerfile,"# https://github.com/docker/docker/blob/master/project/PACKAGERS.md#runtime-dependencies
"
2843,c850c4e79e7a661bf983685b04c9c00d4a20700c,/docker/master/dind/Dockerfile,"# TODO aufs-tools

# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
"
2844,18d81c87b3147eaead94bd97ad5435a314038d94,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2845,18d81c87b3147eaead94bd97ad5435a314038d94,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2846,18d81c87b3147eaead94bd97ad5435a314038d94,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2847,18d81c87b3147eaead94bd97ad5435a314038d94,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2848,18d81c87b3147eaead94bd97ad5435a314038d94,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2849,d00266fb3098b8082e1b563fdf43494861f775d0,/golang/tip/Dockerfile,"# gcc for cgo
"
2850,e7c87c2f8c28a0063cba924bc47b5f817cd0cc66,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2851,e7c87c2f8c28a0063cba924bc47b5f817cd0cc66,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
2852,e7c87c2f8c28a0063cba924bc47b5f817cd0cc66,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
2853,c92df2c46d5b77849e097d618bb3b14329b9e68f,/apt-cacher-ng/Dockerfile,"# grab tini for signal processing and zombie killing
"
2854,fdddbc5aaaef5bb1d642859ea4c61661ac8fd50d,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2855,fdddbc5aaaef5bb1d642859ea4c61661ac8fd50d,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2856,fdddbc5aaaef5bb1d642859ea4c61661ac8fd50d,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2857,fdddbc5aaaef5bb1d642859ea4c61661ac8fd50d,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2858,fdddbc5aaaef5bb1d642859ea4c61661ac8fd50d,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2859,6e28b826d2ce33a30a17361eca7a106465f0d55c,/diffoscope/Dockerfile,"# xxd (xxd not available in path. Falling back to Python hexlify.)
"
2860,6e28b826d2ce33a30a17361eca7a106465f0d55c,/diffoscope/Dockerfile,"# readelf ('readelf' not available in path. Falling back to binary comparison.)
"
2861,6e28b826d2ce33a30a17361eca7a106465f0d55c,/diffoscope/Dockerfile,"# for ""diffoscope --progress""
"
2862,f4999a30055dfbf9acb1ae8d38000ee26e3384dc,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
2863,f4999a30055dfbf9acb1ae8d38000ee26e3384dc,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
2864,af115d6930843fa13870717865595f7337cf2723,/docker/master/dind/Dockerfile,"# https://github.com/docker/docker/blob/master/project/PACKAGERS.md#runtime-dependencies
"
2865,af115d6930843fa13870717865595f7337cf2723,/docker/master/dind/Dockerfile,"# TODO aufs-tools

"
2866,e3872662187caddf9bf72536532a2e197df12b51,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2867,e3872662187caddf9bf72536532a2e197df12b51,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
2868,e3872662187caddf9bf72536532a2e197df12b51,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
2869,e3872662187caddf9bf72536532a2e197df12b51,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
2870,e3872662187caddf9bf72536532a2e197df12b51,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
2871,12be212ad2942a0a6885f607bddfad0690cec078,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2872,a1195511b1e879027969e2ea111b72156209bc96,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2873,a1195511b1e879027969e2ea111b72156209bc96,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2874,a1195511b1e879027969e2ea111b72156209bc96,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2875,a1195511b1e879027969e2ea111b72156209bc96,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2876,a1195511b1e879027969e2ea111b72156209bc96,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2877,129bdab7ce06be9c42dd7358bb11126a30b8ae8b,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2878,129bdab7ce06be9c42dd7358bb11126a30b8ae8b,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2879,129bdab7ce06be9c42dd7358bb11126a30b8ae8b,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2880,129bdab7ce06be9c42dd7358bb11126a30b8ae8b,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2881,129bdab7ce06be9c42dd7358bb11126a30b8ae8b,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2882,11134dfaceb7babe51a0af335312fc790c9df1a9,/debian/devel/Dockerfile,"# normal build deps
"
2883,11134dfaceb7babe51a0af335312fc790c9df1a9,/debian/devel/Dockerfile,"# need an editor for ""dch -i""
"
2884,11134dfaceb7babe51a0af335312fc790c9df1a9,/debian/devel/Dockerfile,"# a few extra little useful things
"
2885,11134dfaceb7babe51a0af335312fc790c9df1a9,/debian/devel/Dockerfile,"# need deb-src for compiling packages
"
2886,11134dfaceb7babe51a0af335312fc790c9df1a9,/debian/devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
2887,b0439f03e5d80a0ce35b2cec5d03337075a8176e,/skype/Dockerfile,"# see https://repo.skype.com

"
2888,b0439f03e5d80a0ce35b2cec5d03337075a8176e,/skype/Dockerfile,"# wget is invoked by skypeforlinux for crash reports
"
2889,b0439f03e5d80a0ce35b2cec5d03337075a8176e,/skype/Dockerfile,"# https://repo.skype.com/data/SKYPE-GPG-KEY
"
2890,b0439f03e5d80a0ce35b2cec5d03337075a8176e,/skype/Dockerfile,"# pub   2048R/DF7587C3 2016-06-22 [expires: 2021-06-21]
#       Key fingerprint = D404 0146 BE39 7250 9FD5  7FC7 1F30 45A5 DF75 87C3
# uid                  Skype Linux Client Repository <se-um@microsoft.com>
# sub   2048R/A4EBB320 2016-06-22 [expires: 2021-06-21]
"
2891,2fa5b282789d3750876aefbca4b59af53e342109,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2892,fc922fb7ab517175ce5543424942a5a626b548ac,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2893,fc922fb7ab517175ce5543424942a5a626b548ac,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2894,fc922fb7ab517175ce5543424942a5a626b548ac,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2895,fc922fb7ab517175ce5543424942a5a626b548ac,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2896,fc922fb7ab517175ce5543424942a5a626b548ac,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2897,07d936bb28499e01849651d60792c4f7e20d9218,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2898,13401c118206836eed641a76e3f055e48d2644c1,/makemkv/Dockerfile,"# This disc requires Java runtime (JRE), but none was found. Certain functions will fail, please install Java. See http://www.makemkv.com/bdjava/ for details.
"
2899,13401c118206836eed641a76e3f055e48d2644c1,/makemkv/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
2900,13401c118206836eed641a76e3f055e48d2644c1,/makemkv/Dockerfile,"# FPL_MainFeature detection only seemed to work with OpenJDK 9 (8 was insufficient)
"
2901,13401c118206836eed641a76e3f055e48d2644c1,/makemkv/Dockerfile,"# Unable to execute external program 'ccextractor' as its path is not set in preferences
# Failed to execute external program 'ccextractor' from location '/usr/local/bin/mmccextr'
# (but it doesn't exist in the perferences dialog...)
"
2902,13401c118206836eed641a76e3f055e48d2644c1,/makemkv/Dockerfile,"# http://www.makemkv.com/forum2/viewtopic.php?f=3&t=224
"
2903,13401c118206836eed641a76e3f055e48d2644c1,/makemkv/Dockerfile,"# beta code: http://www.makemkv.com/forum2/viewtopic.php?f=5&t=1053
"
2904,13401c118206836eed641a76e3f055e48d2644c1,/makemkv/Dockerfile,"# pub   dsa2048 2017-05-26 [SC]
#       2ECF 2330 5F1F C0B3 2001  6733 94E3 083A 1804 2697
# uid           [ unknown] MakeMKV (signature) <support@makemkv.com>
"
2905,5f053bb00f6af3fad9a1a742cfbd689818160c2c,/caff/Dockerfile,"# TODO move this down when COPY adheres to USER (and remove chown)
"
2906,94b1e6513a9a61a9d3433942124f1ffbff052808,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2907,94b1e6513a9a61a9d3433942124f1ffbff052808,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
2908,94b1e6513a9a61a9d3433942124f1ffbff052808,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
2909,df69bcaf2b2d06c4d134fcde9fac7f565a6692f1,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2910,df69bcaf2b2d06c4d134fcde9fac7f565a6692f1,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
2911,df69bcaf2b2d06c4d134fcde9fac7f565a6692f1,/jenkins/Dockerfile,"# workaround ""apt-key adv --recv-keys"" hanging in stretch and above
"
2912,a4d60e208e10707d12aa72b1408b758a1253a0c0,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2913,a4d60e208e10707d12aa72b1408b758a1253a0c0,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
2914,a4d60e208e10707d12aa72b1408b758a1253a0c0,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
2915,59b7cb4b0b92ee19fec10ea7bb4ef6c1dca11626,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2916,6c47b25e682f68b2010252d0c5e1b1fcae03238a,/tinygo/Dockerfile,"# the .deb (as of 0.6.0) installs to /usr/local/tinygo but doesn't add ""tinygo"" to PATH
"
2917,6c47b25e682f68b2010252d0c5e1b1fcae03238a,/tinygo/Dockerfile,"# https://tinygo.org/getting-started/linux/

# https://github.com/tinygo-org/tinygo/releases
"
2918,127f4a75b80eeed24dac67b048395fd5049f2211,/docker-tianon/Dockerfile,"# https://doi-janky.infosiftr.net/job/tianon/job/docker-deb/job/repo/lastSuccessfulBuild/artifact/pool/stretch/main/amd64/
"
2919,127f4a75b80eeed24dac67b048395fd5049f2211,/docker-tianon/Dockerfile,"# https://github.com/docker-library/docker/pull/166
#   dockerd-entrypoint.sh uses DOCKER_TLS_CERTDIR for auto-generating TLS certificates
#   docker-entrypoint.sh uses DOCKER_TLS_CERTDIR for auto-setting DOCKER_TLS_VERIFY and DOCKER_CERT_PATH
# (For this to work, at least the ""client"" subdirectory of this path needs to be shared between the client and server containers via a volume, ""docker cp"", or other means of data sharing.)
"
2920,127f4a75b80eeed24dac67b048395fd5049f2211,/docker-tianon/Dockerfile,"# also, ensure the directory pre-exists and has wide enough permissions for ""dockerd-entrypoint.sh"" to create subdirectories, even when run in ""rootless"" mode
"
2921,127f4a75b80eeed24dac67b048395fd5049f2211,/docker-tianon/Dockerfile,"# (doing both /certs and /certs/client so that if Docker does a ""copy-up"" into a volume defined on /certs/client, it will ""do the right thing"" by default in a way that still works for rootless users)

"
2922,127f4a75b80eeed24dac67b048395fd5049f2211,/docker-tianon/Dockerfile,"# dind

"
2923,127f4a75b80eeed24dac67b048395fd5049f2211,/docker-tianon/Dockerfile,"# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
"
2924,4bffe177d0335d3e0e337bc7987635fc14b3fa27,/sbuild/Dockerfile,"# run with ""--cap-add SYS_ADMIN"" so that sbuild can ""mount"" in the chroots it creates

"
2925,4bffe177d0335d3e0e337bc7987635fc14b3fa27,/sbuild/Dockerfile,"# usage: download-debuerreotype-tarball.sh suite [arch]
#    ie: download-debuerreotype-tarball.sh stretch
#        download-debuerreotype-tarball.sh sid i386
"
2926,d108f55b9c2c6b2636128a2a17655bfd9784fe84,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2927,114edd6676fbe3b53536eaa04725c67b6d5fe499,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2928,114edd6676fbe3b53536eaa04725c67b6d5fe499,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2929,114edd6676fbe3b53536eaa04725c67b6d5fe499,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2930,114edd6676fbe3b53536eaa04725c67b6d5fe499,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2931,114edd6676fbe3b53536eaa04725c67b6d5fe499,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2932,afc93ab93e8dbb63c2afaf9941ad5eab9d615ae8,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2933,afc93ab93e8dbb63c2afaf9941ad5eab9d615ae8,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2934,afc93ab93e8dbb63c2afaf9941ad5eab9d615ae8,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2935,afc93ab93e8dbb63c2afaf9941ad5eab9d615ae8,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2936,afc93ab93e8dbb63c2afaf9941ad5eab9d615ae8,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2937,67ae20e42928df97969e9e415062f6ad4b33b93b,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
2938,67ae20e42928df97969e9e415062f6ad4b33b93b,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
2939,67ae20e42928df97969e9e415062f6ad4b33b93b,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
2940,cb404fae4dd64deb512cf58b2d5d471b7800e930,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2941,cb404fae4dd64deb512cf58b2d5d471b7800e930,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2942,cb404fae4dd64deb512cf58b2d5d471b7800e930,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2943,cb404fae4dd64deb512cf58b2d5d471b7800e930,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2944,cb404fae4dd64deb512cf58b2d5d471b7800e930,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2945,86156e43037c8e9b68de567c9133d07e158c4159,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
2946,20b80a2837c2d379d4742aaa1b31fa36a8f24b98,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2947,20b80a2837c2d379d4742aaa1b31fa36a8f24b98,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2948,20b80a2837c2d379d4742aaa1b31fa36a8f24b98,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2949,20b80a2837c2d379d4742aaa1b31fa36a8f24b98,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2950,20b80a2837c2d379d4742aaa1b31fa36a8f24b98,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2951,558d4b8ae4e1dc7bf6bdc7e91f82915f8f0e78ec,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2952,558d4b8ae4e1dc7bf6bdc7e91f82915f8f0e78ec,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2953,558d4b8ae4e1dc7bf6bdc7e91f82915f8f0e78ec,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2954,558d4b8ae4e1dc7bf6bdc7e91f82915f8f0e78ec,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2955,558d4b8ae4e1dc7bf6bdc7e91f82915f8f0e78ec,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2956,f764e6cbe90075a31bda1b3f14a2c15f14e94e39,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
2957,a4c22ebfb7cb11c42c930c930badc401a04a0308,/phpmyadmin/Dockerfile,"# https://docs.phpmyadmin.net/en/latest/setup.html#verifying-phpmyadmin-releases
"
2958,a4c22ebfb7cb11c42c930c930badc401a04a0308,/phpmyadmin/Dockerfile,"# Since July 2015 all phpMyAdmin releases are cryptographically signed by the releasing developer, who through January 2016 was Marc Delisle.
"
2959,a4c22ebfb7cb11c42c930c930badc401a04a0308,/phpmyadmin/Dockerfile,"# Beginning in January 2016, the release manager is Isaac Bennetch.
"
2960,a4c22ebfb7cb11c42c930c930badc401a04a0308,/phpmyadmin/Dockerfile,"# Some additional downloads (for example themes) might be signed by Michal Čihař.
"
2961,76d803ceaf58d1cf25f4fb6fcd77c5eef604ef8f,/google-cloud-print-connector/Dockerfile,"# fetch dependencies
# format: import-path=strip-components=tarball-url
"
2962,76d803ceaf58d1cf25f4fb6fcd77c5eef604ef8f,/google-cloud-print-connector/Dockerfile,"# https://github.com/coreos/go-systemd/releases
"
2963,76d803ceaf58d1cf25f4fb6fcd77c5eef604ef8f,/google-cloud-print-connector/Dockerfile,"# https://github.com/satori/go.uuid/releases
# (https://github.com/satori/go.uuid/commit/0ef6afb2f6cdd6cdaeee3885a95099c63f18fc8c -- hopefully we'll get a newer release than v1.2.0 soonish)
"
2964,76d803ceaf58d1cf25f4fb6fcd77c5eef604ef8f,/google-cloud-print-connector/Dockerfile,"# https://github.com/urfave/cli/releases
"
2965,76d803ceaf58d1cf25f4fb6fcd77c5eef604ef8f,/google-cloud-print-connector/Dockerfile,"# https://github.com/golang/net/commits/master
"
2966,76d803ceaf58d1cf25f4fb6fcd77c5eef604ef8f,/google-cloud-print-connector/Dockerfile,"# https://github.com/golang/oauth2/commits/master
"
2967,76d803ceaf58d1cf25f4fb6fcd77c5eef604ef8f,/google-cloud-print-connector/Dockerfile,"# https://bazaar.launchpad.net/~chipaca/go-xdg/v0/files (""view revision"")
# https://bazaar.launchpad.net/~chipaca/go-xdg/v0/revision/10?start_revid=10 (""download tarball"")
"
2968,76d803ceaf58d1cf25f4fb6fcd77c5eef604ef8f,/google-cloud-print-connector/Dockerfile,"#*=}""; dep=""${dep%=$strip}""; \
"
2969,76d803ceaf58d1cf25f4fb6fcd77c5eef604ef8f,/google-cloud-print-connector/Dockerfile,"#*=}""; strip=""${strip%=$tarball}""; \
"
2970,76d803ceaf58d1cf25f4fb6fcd77c5eef604ef8f,/google-cloud-print-connector/Dockerfile,"# https://github.com/google/cloud-print-connector/releases
"
2971,a59a26b8c680a26a55b8d88210ebeae6ac8f6722,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2972,22cc11d160e942586c92885371883c23bfbb4b3e,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2973,ef9cf9438d12236072488bc6768c0504d53636ba,/ymlfmt/Dockerfile,"# https://pypi.org/project/ruamel.yaml/
"
2974,617d08af2c05172a385220a749bfc156f3c90f1f,/snapcraft/Dockerfile,"# based initially on https://hub.docker.com/r/didrocks/snapcraft/
"
2975,617d08af2c05172a385220a749bfc156f3c90f1f,/snapcraft/Dockerfile,"# enable multiverse as snapcraft cleanbuild does
"
2976,617d08af2c05172a385220a749bfc156f3c90f1f,/snapcraft/Dockerfile,"# pin specific version so we can update with a natural cache bust
"
2977,c1610b96ffcea268495de6bc01aa9d72c59f9392,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
2978,c1610b96ffcea268495de6bc01aa9d72c59f9392,/docker-master/Dockerfile,"# (no SHA file artifacts on download.docker.com yet as of 2017-06-07)

"
2979,c1610b96ffcea268495de6bc01aa9d72c59f9392,/docker-master/Dockerfile,"# https://github.com/docker-library/docker/pull/166
#   dockerd-entrypoint.sh uses DOCKER_TLS_CERTDIR for auto-generating TLS certificates
#   docker-entrypoint.sh uses DOCKER_TLS_CERTDIR for auto-setting DOCKER_TLS_VERIFY and DOCKER_CERT_PATH
# (For this to work, at least the ""client"" subdirectory of this path needs to be shared between the client and server containers via a volume, ""docker cp"", or other means of data sharing.)
"
2980,c1610b96ffcea268495de6bc01aa9d72c59f9392,/docker-master/Dockerfile,"# also, ensure the directory pre-exists and has wide enough permissions for ""dockerd-entrypoint.sh"" to create subdirectories, even when run in ""rootless"" mode
"
2981,c1610b96ffcea268495de6bc01aa9d72c59f9392,/docker-master/Dockerfile,"# (doing both /certs and /certs/client so that if Docker does a ""copy-up"" into a volume defined on /certs/client, it will ""do the right thing"" by default in a way that still works for rootless users)

"
2982,b6144573262026530b06e311ac1b62e3081e4ecb,/ymlfmt/Dockerfile,"# https://pypi.org/project/ruamel.yaml/
"
2983,f9f97a1981d42d20191ebc3203d2a24686aa9234,/mongodb-server/Dockerfile,"# we need stdout logging and binding on 0.0.0.0
"
2984,f9f97a1981d42d20191ebc3203d2a24686aa9234,/mongodb-server/Dockerfile,"#logpath/g; \
"
2985,7fc9067e0099fb67237dfb7dae38127b68018a41,/docker/master/dind/Dockerfile,"# https://github.com/docker/docker/blob/master/project/PACKAGERS.md#runtime-dependencies
"
2986,7fc9067e0099fb67237dfb7dae38127b68018a41,/docker/master/dind/Dockerfile,"# TODO aufs-tools

"
2987,c621e1ce3500963ce2b1937b3a74db2bcf4ebdfb,/bash/4.4/Dockerfile,"# gpg: key 64EA74AB: public key ""Chet Ramey <chet@cwru.edu>"" imported
"
2988,c621e1ce3500963ce2b1937b3a74db2bcf4ebdfb,/bash/4.4/Dockerfile,"# https://ftp.gnu.org/gnu/bash/?C=M;O=D
"
2989,c621e1ce3500963ce2b1937b3a74db2bcf4ebdfb,/bash/4.4/Dockerfile,"# https://ftp.gnu.org/gnu/bash/bash-4.4-patches/?C=M;O=D
"
2990,c621e1ce3500963ce2b1937b3a74db2bcf4ebdfb,/bash/4.4/Dockerfile,"# prefixed with ""_"" since ""$BASH..."" have meaning in Bash parlance

"
2991,c621e1ce3500963ce2b1937b3a74db2bcf4ebdfb,/bash/4.4/Dockerfile,"# delete a few installed bits for smaller image size
"
2992,89ad84e63c7cb068686b389726d983e5d9e7231a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
2993,89ad84e63c7cb068686b389726d983e5d9e7231a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
2994,89ad84e63c7cb068686b389726d983e5d9e7231a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
2995,89ad84e63c7cb068686b389726d983e5d9e7231a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
2996,89ad84e63c7cb068686b389726d983e5d9e7231a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
2997,636ccdedc04da1d27e426265236828764078038d,/sbuild/Dockerfile,"# run with ""--cap-add SYS_ADMIN"" so that sbuild can ""mount"" in the chroots it creates

"
2998,636ccdedc04da1d27e426265236828764078038d,/sbuild/Dockerfile,"# https://gist.github.com/tianon/a0080cbca558e4b907fe
# (useful sbuild-related scripts)
"
2999,636ccdedc04da1d27e426265236828764078038d,/sbuild/Dockerfile,"# usage: download-debuerreotype-tarball.sh suite [arch]
#    ie: download-debuerreotype-tarball.sh stretch
#        download-debuerreotype-tarball.sh sid i386
"
3000,bb0cbb72ce58ddad9ed974f098bdb33f6211d489,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3001,bb0cbb72ce58ddad9ed974f098bdb33f6211d489,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3002,bb0cbb72ce58ddad9ed974f098bdb33f6211d489,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3003,bb0cbb72ce58ddad9ed974f098bdb33f6211d489,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3004,bb0cbb72ce58ddad9ed974f098bdb33f6211d489,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3005,6cfbf3381c0b49517c4d9f9904f68535385d062a,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
3006,6cfbf3381c0b49517c4d9f9904f68535385d062a,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
3007,856533909864088438f197bab10e7bc6a835be22,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3008,ab4e3950e801ab0b2ae0e0d83abce68fd8a91c2d,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3009,b1213c29aaa991ecc5ef734c5c2650c1d31e91f9,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3010,b85c649209f3b0d75c32e36b8ce35fb882d66d96,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
3011,b85c649209f3b0d75c32e36b8ce35fb882d66d96,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
3012,b85c649209f3b0d75c32e36b8ce35fb882d66d96,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
3013,64f1451ef4219d5ce48891f72b6ea09facb91369,/diffoscope/Dockerfile,"# xxd (xxd not available in path. Falling back to Python hexlify.)
"
3014,64f1451ef4219d5ce48891f72b6ea09facb91369,/diffoscope/Dockerfile,"# readelf ('readelf' not available in path. Falling back to binary comparison.)
"
3015,64f1451ef4219d5ce48891f72b6ea09facb91369,/diffoscope/Dockerfile,"# for ""diffoscope --progress""
"
3016,5db94ab3c92df67acf1e5e61e61dccf44d051630,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3017,5db94ab3c92df67acf1e5e61e61dccf44d051630,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3018,5db94ab3c92df67acf1e5e61e61dccf44d051630,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3019,5db94ab3c92df67acf1e5e61e61dccf44d051630,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3020,5db94ab3c92df67acf1e5e61e61dccf44d051630,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3021,608b794bc114c0cb1afe84d923a638e65df595f2,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3022,608b794bc114c0cb1afe84d923a638e65df595f2,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3023,608b794bc114c0cb1afe84d923a638e65df595f2,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3024,608b794bc114c0cb1afe84d923a638e65df595f2,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3025,608b794bc114c0cb1afe84d923a638e65df595f2,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3026,83485896ad837985ad1c511493c54804814100c9,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
3027,83485896ad837985ad1c511493c54804814100c9,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
3028,83485896ad837985ad1c511493c54804814100c9,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
3029,49f2b3d98a72eb075f0a66749d80e1922a253961,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3030,49f2b3d98a72eb075f0a66749d80e1922a253961,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3031,49f2b3d98a72eb075f0a66749d80e1922a253961,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3032,49f2b3d98a72eb075f0a66749d80e1922a253961,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3033,49f2b3d98a72eb075f0a66749d80e1922a253961,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3034,5a958eb1e153b3d7915d484dfed4bc8d61da6f2a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3035,5a958eb1e153b3d7915d484dfed4bc8d61da6f2a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3036,5a958eb1e153b3d7915d484dfed4bc8d61da6f2a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3037,5a958eb1e153b3d7915d484dfed4bc8d61da6f2a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3038,5a958eb1e153b3d7915d484dfed4bc8d61da6f2a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3039,987f9b40f8d66e9a17636f0290788baa55a36882,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3040,987f9b40f8d66e9a17636f0290788baa55a36882,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3041,987f9b40f8d66e9a17636f0290788baa55a36882,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3042,987f9b40f8d66e9a17636f0290788baa55a36882,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3043,987f9b40f8d66e9a17636f0290788baa55a36882,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3044,7e3c4e7e26a99acf1f46c8a8acb181448f75d1e9,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3045,7e3c4e7e26a99acf1f46c8a8acb181448f75d1e9,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3046,7e3c4e7e26a99acf1f46c8a8acb181448f75d1e9,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3047,7e3c4e7e26a99acf1f46c8a8acb181448f75d1e9,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3048,7e3c4e7e26a99acf1f46c8a8acb181448f75d1e9,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3049,f2d70252d03060ee62ea393767e992616a097d64,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3050,f2d70252d03060ee62ea393767e992616a097d64,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3051,f2d70252d03060ee62ea393767e992616a097d64,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3052,f2d70252d03060ee62ea393767e992616a097d64,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3053,f2d70252d03060ee62ea393767e992616a097d64,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3054,a1d44a86d5ab2bd5bc4933f497dc313a240d776a,/jenkins/weekly/Dockerfile,"# grab gosu for easy step-down from root
"
3055,a1d44a86d5ab2bd5bc4933f497dc313a240d776a,/jenkins/weekly/Dockerfile,"# grab tini for signal processing and zombie killing
"
3056,a1d44a86d5ab2bd5bc4933f497dc313a240d776a,/jenkins/weekly/Dockerfile,"# https://groups.google.com/d/msg/jenkins-infra/c7m_72vUTXE/37zw9GXhAQAJ
"
3057,a1d44a86d5ab2bd5bc4933f497dc313a240d776a,/jenkins/weekly/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
3058,adb5a60e1b771934bedc98a10c3ff467b500ae9a,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3059,ba7b52adf87b306a81320d4e87ff6eb79eb08677,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3060,ba7b52adf87b306a81320d4e87ff6eb79eb08677,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3061,ba7b52adf87b306a81320d4e87ff6eb79eb08677,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3062,ba7b52adf87b306a81320d4e87ff6eb79eb08677,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3063,ba7b52adf87b306a81320d4e87ff6eb79eb08677,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3064,6666ffa248507695f6abf99dbc4fe705ba0a304c,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3065,6666ffa248507695f6abf99dbc4fe705ba0a304c,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3066,6666ffa248507695f6abf99dbc4fe705ba0a304c,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3067,6666ffa248507695f6abf99dbc4fe705ba0a304c,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3068,6666ffa248507695f6abf99dbc4fe705ba0a304c,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3069,05c7e428dc8fcba8fe41596b27f3e8c6fb9a2d38,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3070,81f9a75789e2a7c8ea314226523cc9c38193b344,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3071,d2b48a997d4d7460a656c90073673ff34717fe05,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3072,4aa10c2fc075f99a4fac65790cf6a7977096be79,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3073,4aa10c2fc075f99a4fac65790cf6a7977096be79,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3074,4aa10c2fc075f99a4fac65790cf6a7977096be79,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3075,4aa10c2fc075f99a4fac65790cf6a7977096be79,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3076,4aa10c2fc075f99a4fac65790cf6a7977096be79,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3077,18ca4e378b1258f08022b48836c3d149ac10adbe,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3078,18ca4e378b1258f08022b48836c3d149ac10adbe,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3079,18ca4e378b1258f08022b48836c3d149ac10adbe,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3080,18ca4e378b1258f08022b48836c3d149ac10adbe,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3081,18ca4e378b1258f08022b48836c3d149ac10adbe,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3082,ae08e990445d8d00f82122a0245b5f1030e85754,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3083,ae08e990445d8d00f82122a0245b5f1030e85754,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3084,ae08e990445d8d00f82122a0245b5f1030e85754,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3085,ae08e990445d8d00f82122a0245b5f1030e85754,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3086,ae08e990445d8d00f82122a0245b5f1030e85754,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3087,82927c8c63dbe81dcc2a44ad6263b0287a5b915c,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3088,383b35d39449038aed33809abb31ff906e7e10b9,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3089,383b35d39449038aed33809abb31ff906e7e10b9,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3090,383b35d39449038aed33809abb31ff906e7e10b9,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3091,383b35d39449038aed33809abb31ff906e7e10b9,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3092,383b35d39449038aed33809abb31ff906e7e10b9,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3093,614dcde54106df3d90a77e50a0ce21f1a34c24fe,/vultr-cli/Dockerfile,"# https://github.com/vultr/vultr-cli/releases
"
3094,8a1557b40c8e5b43a1a744bd4dc44099dd714675,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3095,8a1557b40c8e5b43a1a744bd4dc44099dd714675,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3096,8a1557b40c8e5b43a1a744bd4dc44099dd714675,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3097,8a1557b40c8e5b43a1a744bd4dc44099dd714675,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3098,8a1557b40c8e5b43a1a744bd4dc44099dd714675,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3099,b96d6ddb2f8813be3a4d032442be02a393f0a5db,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3100,99e34d3e4eb1331ab4c00efd9cd3edf844bb9161,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
3101,2488e5d100d73adabdf62ab53de8a8b109efade8,/steam/Dockerfile,"# add the sources.list stuff that steam will at first start
"
3102,2488e5d100d73adabdf62ab53de8a8b109efade8,/steam/Dockerfile,"# let's head off a few of the things steam will want to install immediately
"
3103,2488e5d100d73adabdf62ab53de8a8b109efade8,/steam/Dockerfile,"# steam itself needs to be able to install things, and it uses ""sudo"" for that
"
3104,5ff7918fc515d7e624fb2422f7d65f7139868931,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3105,5ff7918fc515d7e624fb2422f7d65f7139868931,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3106,5ff7918fc515d7e624fb2422f7d65f7139868931,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3107,5ff7918fc515d7e624fb2422f7d65f7139868931,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3108,5ff7918fc515d7e624fb2422f7d65f7139868931,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3109,f070e6beb9d04d9a58f517485db08dde93ff32c1,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3110,80ff4a8190d78feb83ca94b907e266cadbab8da2,/bash/4.2/Dockerfile,"# gpg: key 64EA74AB: public key ""Chet Ramey <chet@cwru.edu>"" imported
"
3111,80ff4a8190d78feb83ca94b907e266cadbab8da2,/bash/4.2/Dockerfile,"# https://ftp.gnu.org/gnu/bash/?C=M;O=D
"
3112,80ff4a8190d78feb83ca94b907e266cadbab8da2,/bash/4.2/Dockerfile,"# https://ftp.gnu.org/gnu/bash/bash-4.2-patches/?C=M;O=D
"
3113,80ff4a8190d78feb83ca94b907e266cadbab8da2,/bash/4.2/Dockerfile,"# prefixed with ""_"" since ""$BASH..."" have meaning in Bash parlance

"
3114,80ff4a8190d78feb83ca94b907e266cadbab8da2,/bash/4.2/Dockerfile,"# delete a few installed bits for smaller image size
"
3115,1d02b3e7e8f9bf212a85221537ce6021591af14c,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3116,2117bb81c9756041a68935346ed679d3741cfe98,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3117,2486226e6976e142dc942c38459d3d5b42b6ed71,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3118,2486226e6976e142dc942c38459d3d5b42b6ed71,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3119,2486226e6976e142dc942c38459d3d5b42b6ed71,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3120,2486226e6976e142dc942c38459d3d5b42b6ed71,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3121,2486226e6976e142dc942c38459d3d5b42b6ed71,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3122,44fa5bb0b8ff4c55bf59625248693754a8d516e2,/jenkins/slave/Dockerfile,"# let's make /root a volume so ~/.ssh/authorized_keys is easier to save
"
3123,69853a82b26b672edac1125b589f8fce32d253b2,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3124,69853a82b26b672edac1125b589f8fce32d253b2,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3125,69853a82b26b672edac1125b589f8fce32d253b2,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3126,69853a82b26b672edac1125b589f8fce32d253b2,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3127,69853a82b26b672edac1125b589f8fce32d253b2,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3128,0bff268b4aeac80fff2ca0c209f42bc4c2fab383,/xen-orchestra/Dockerfile,"# see https://github.com/vatesfr/xo/blob/master/installation.md

"
3129,0bff268b4aeac80fff2ca0c209f42bc4c2fab383,/xen-orchestra/Dockerfile,"# TODO use links to get a redis server/database instead (since that's where configuration actually goes)
"
3130,0bff268b4aeac80fff2ca0c209f42bc4c2fab383,/xen-orchestra/Dockerfile,"# TODO see note above about redis
"
3131,95ddd97cea14dbcb863c46e020cb66f2fe7bb81f,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3132,20b6f91e08a103bbb124f90cf428e2d54ea013a5,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3133,20b6f91e08a103bbb124f90cf428e2d54ea013a5,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3134,20b6f91e08a103bbb124f90cf428e2d54ea013a5,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3135,20b6f91e08a103bbb124f90cf428e2d54ea013a5,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3136,20b6f91e08a103bbb124f90cf428e2d54ea013a5,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3137,f9488d2e5444759c9e5a566a02e85a055d95220b,/jenkins/slave/debian/Dockerfile,"#?PermitRootLogin[[:space:]].*$/PermitRootLogin yes/g' /etc/ssh/sshd_config

"
3138,f9488d2e5444759c9e5a566a02e85a055d95220b,/jenkins/slave/debian/Dockerfile,"# let's make /root a volume so ~/.ssh/authorized_keys is easier to save
"
3139,f92e3e7572294775a7943f9e2bffa899da9aef22,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
3140,e446f979a74c09765b5c880d103a44dd7758f3fe,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3141,e446f979a74c09765b5c880d103a44dd7758f3fe,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3142,e446f979a74c09765b5c880d103a44dd7758f3fe,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3143,e446f979a74c09765b5c880d103a44dd7758f3fe,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3144,e446f979a74c09765b5c880d103a44dd7758f3fe,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3145,b0c35dc0df75464ed22117316639bb4c9405b076,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3146,fb791c2c19d45dce36486ef851505a53afc5e109,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3147,fb791c2c19d45dce36486ef851505a53afc5e109,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3148,fb791c2c19d45dce36486ef851505a53afc5e109,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3149,fb791c2c19d45dce36486ef851505a53afc5e109,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3150,fb791c2c19d45dce36486ef851505a53afc5e109,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3151,cff2fb4223243c83e7950d475cfe9ce8c473af89,/jenkins/lts/Dockerfile,"# grab gosu for easy step-down from root
"
3152,cff2fb4223243c83e7950d475cfe9ce8c473af89,/jenkins/lts/Dockerfile,"# grab tini for signal processing and zombie killing
"
3153,cff2fb4223243c83e7950d475cfe9ce8c473af89,/jenkins/lts/Dockerfile,"# https://groups.google.com/d/msg/jenkins-infra/c7m_72vUTXE/37zw9GXhAQAJ
"
3154,cff2fb4223243c83e7950d475cfe9ce8c473af89,/jenkins/lts/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
3155,745b91b7a95066392e6d85fc0a986b6919fa724e,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3156,90b64dfd9214ccb2971cee6c5a11aca2139ecbf4,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3157,90b64dfd9214ccb2971cee6c5a11aca2139ecbf4,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3158,90b64dfd9214ccb2971cee6c5a11aca2139ecbf4,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3159,90b64dfd9214ccb2971cee6c5a11aca2139ecbf4,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3160,90b64dfd9214ccb2971cee6c5a11aca2139ecbf4,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3161,ef37f15cb29feedfd2eab2d695cd25cdf8a312c2,/makemkv/Dockerfile,"# TODO find some way to include ccextractor (currently buster-only)

# FPL_MainFeature detection only seemed to work with OpenJDK 9 (8 was insufficient)
"
3162,ef37f15cb29feedfd2eab2d695cd25cdf8a312c2,/makemkv/Dockerfile,"# This disc requires Java runtime (JRE), but none was found. Certain functions will fail, please install Java. See http://www.makemkv.com/bdjava/ for details.
"
3163,ef37f15cb29feedfd2eab2d695cd25cdf8a312c2,/makemkv/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
3164,ef37f15cb29feedfd2eab2d695cd25cdf8a312c2,/makemkv/Dockerfile,"# http://www.makemkv.com/forum2/viewtopic.php?f=3&t=224
"
3165,ef37f15cb29feedfd2eab2d695cd25cdf8a312c2,/makemkv/Dockerfile,"# beta code: http://www.makemkv.com/forum2/viewtopic.php?f=5&t=1053
"
3166,ef37f15cb29feedfd2eab2d695cd25cdf8a312c2,/makemkv/Dockerfile,"# pub   dsa2048 2017-05-26 [SC]
#       2ECF 2330 5F1F C0B3 2001  6733 94E3 083A 1804 2697
# uid           [ unknown] MakeMKV (signature) <support@makemkv.com>
"
3167,f8cd4c54a62ad54b82364171c6a13708ac08c384,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3168,f8cd4c54a62ad54b82364171c6a13708ac08c384,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3169,f8cd4c54a62ad54b82364171c6a13708ac08c384,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3170,f8cd4c54a62ad54b82364171c6a13708ac08c384,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3171,f8cd4c54a62ad54b82364171c6a13708ac08c384,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3172,d28db90bc395b6b3f94d5f57e5f64b5083dcc9a9,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3173,d28db90bc395b6b3f94d5f57e5f64b5083dcc9a9,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3174,d28db90bc395b6b3f94d5f57e5f64b5083dcc9a9,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3175,d28db90bc395b6b3f94d5f57e5f64b5083dcc9a9,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3176,d28db90bc395b6b3f94d5f57e5f64b5083dcc9a9,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3177,bc05018f192843f391067af5f4dab60494b75223,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3178,bc05018f192843f391067af5f4dab60494b75223,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3179,bc05018f192843f391067af5f4dab60494b75223,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3180,bc05018f192843f391067af5f4dab60494b75223,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3181,bc05018f192843f391067af5f4dab60494b75223,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3182,ad9c4ebd1c0dd5e60a2be23a8d427c396a769e2b,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3183,916962c5e0095c1185e5ed45ac1b5fe2e88953ad,/diffoscope/Dockerfile,"# xxd (xxd not available in path. Falling back to Python hexlify.)
"
3184,916962c5e0095c1185e5ed45ac1b5fe2e88953ad,/diffoscope/Dockerfile,"# readelf ('readelf' not available in path. Falling back to binary comparison.)
"
3185,916962c5e0095c1185e5ed45ac1b5fe2e88953ad,/diffoscope/Dockerfile,"# for ""diffoscope --progress""
"
3186,aca1b091dec45329497b77963f3b4fee43607974,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3187,5c610234e2b40e0bd4dc16c24136b9159f3c5aa3,/pmbootstrap/Dockerfile,"# https://gitlab.alpinelinux.org/alpine/aports/issues/11122
"
3188,5c610234e2b40e0bd4dc16c24136b9159f3c5aa3,/pmbootstrap/Dockerfile,"# verify there are no errors/warnings
"
3189,5c610234e2b40e0bd4dc16c24136b9159f3c5aa3,/pmbootstrap/Dockerfile,"# https://pypi.org/project/pmbootstrap/
"
3190,5c610234e2b40e0bd4dc16c24136b9159f3c5aa3,/pmbootstrap/Dockerfile,"# workaround issues with transparent QEMU / binfmt detection (""fix binary"" -- qemu binaries not necessary inside chroots/namespaces)
"
3191,eef0c45b9456a7114047b50a3b0be1736a517f00,/makemkv/Dockerfile,"# http://www.makemkv.com/forum2/viewtopic.php?f=3&t=224
"
3192,eef0c45b9456a7114047b50a3b0be1736a517f00,/makemkv/Dockerfile,"# beta code: http://www.makemkv.com/forum2/viewtopic.php?f=5&t=1053
"
3193,16243404892133d40b6276ccdd902762e1e115be,/google-musicmanager/Dockerfile,"# https://www.google.com/linuxrepositories/
"
3194,16243404892133d40b6276ccdd902762e1e115be,/google-musicmanager/Dockerfile,"# pub   rsa4096 2016-04-12 [SC]
#       EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796
# uid           [ unknown] Google Inc. (Linux Packages Signing Authority) <linux-packages-keymaster@google.com>
# sub   rsa4096 2016-04-12 [S] [expires: 2019-04-12]
"
3195,16243404892133d40b6276ccdd902762e1e115be,/google-musicmanager/Dockerfile,"# pub   dsa1024 2007-03-08 [SC]
#       4CCA 1EAF 950C EE4A B839  76DC A040 830F 7FAC 5991
# uid           [ unknown] Google, Inc. Linux Package Signing Key <linux-packages-keymaster@google.com>
# sub   elg2048 2007-03-08 [E]
#		4CCA1EAF950CEE4AB83976DCA040830F7FAC5991

"
3196,16243404892133d40b6276ccdd902762e1e115be,/google-musicmanager/Dockerfile,"# only stretch+ supports --armor in trusted.gpg.asc
#	gpg --export --armor $GPG_KEYS | tee /etc/apt/trusted.gpg.d/google.gpg.asc; \
"
3197,d820f28e7cb6a4cda266f768008e224d745d8be3,/skype/Dockerfile,"# see https://repo.skype.com

"
3198,d820f28e7cb6a4cda266f768008e224d745d8be3,/skype/Dockerfile,"# https://repo.skype.com/data/SKYPE-GPG-KEY
"
3199,d820f28e7cb6a4cda266f768008e224d745d8be3,/skype/Dockerfile,"# pub   2048R/DF7587C3 2016-06-22 [expires: 2021-06-21]
#       Key fingerprint = D404 0146 BE39 7250 9FD5  7FC7 1F30 45A5 DF75 87C3
# uid                  Skype Linux Client Repository <se-um@microsoft.com>
# sub   2048R/A4EBB320 2016-06-22 [expires: 2021-06-21]
"
3200,39d9c00580a8d18aa9130024fc157ec9920a4979,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3201,39d9c00580a8d18aa9130024fc157ec9920a4979,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3202,39d9c00580a8d18aa9130024fc157ec9920a4979,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3203,39d9c00580a8d18aa9130024fc157ec9920a4979,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3204,39d9c00580a8d18aa9130024fc157ec9920a4979,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3205,c9154ec982d83ccbee52c868a7e4973d9cde6eaf,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3206,c9154ec982d83ccbee52c868a7e4973d9cde6eaf,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3207,c9154ec982d83ccbee52c868a7e4973d9cde6eaf,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3208,c9154ec982d83ccbee52c868a7e4973d9cde6eaf,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3209,c9154ec982d83ccbee52c868a7e4973d9cde6eaf,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3210,c02d127773f4357c879ef6a25c8a3134239aade5,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
3211,881a0600171d3978236dd5022bc44ac042a39060,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
3212,b3cd62774f182cdd09fbc2c89fbe464e119b7666,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3213,b3cd62774f182cdd09fbc2c89fbe464e119b7666,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3214,b3cd62774f182cdd09fbc2c89fbe464e119b7666,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3215,b3cd62774f182cdd09fbc2c89fbe464e119b7666,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3216,b3cd62774f182cdd09fbc2c89fbe464e119b7666,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3217,f3631419f0c8e84893f673467ff8c16fd509ff87,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3218,f3631419f0c8e84893f673467ff8c16fd509ff87,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3219,f3631419f0c8e84893f673467ff8c16fd509ff87,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3220,f3631419f0c8e84893f673467ff8c16fd509ff87,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3221,f3631419f0c8e84893f673467ff8c16fd509ff87,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3222,c3984d97e17b233ebdf2f18fa5de57cc5dc41d02,/lutris/Dockerfile,"# install Wine
#   https://github.com/lutris/docs/blob/f2bf5ca14f280e3c58d2306581294d57650c0cc2/WineDependencies.md
#   https://wiki.winehq.org/Ubuntu
"
3223,c3984d97e17b233ebdf2f18fa5de57cc5dc41d02,/lutris/Dockerfile,"# https://dl.winehq.org/wine-builds/ubuntu/dists/focal/main/binary-amd64/?C=N;O=D
# https://www.winehq.org/news/
"
3224,c3984d97e17b233ebdf2f18fa5de57cc5dc41d02,/lutris/Dockerfile,"# ""Add SDL2 Backports PPA (for Faudio package):""
"
3225,c3984d97e17b233ebdf2f18fa5de57cc5dc41d02,/lutris/Dockerfile,"# ""For compatibility reasons, install these additional libraries:""
"
3226,c3984d97e17b233ebdf2f18fa5de57cc5dc41d02,/lutris/Dockerfile,"# https://github.com/Winetricks/winetricks/releases
"
3227,c3984d97e17b233ebdf2f18fa5de57cc5dc41d02,/lutris/Dockerfile,"# https://launchpad.net/~lutris-team/+archive/ubuntu/lutris?field.series_filter=focal
"
3228,c3984d97e17b233ebdf2f18fa5de57cc5dc41d02,/lutris/Dockerfile,"# https://github.com/lutris/docs/blob/f2bf5ca14f280e3c58d2306581294d57650c0cc2/InstallingDrivers.md
"
3229,c3984d97e17b233ebdf2f18fa5de57cc5dc41d02,/lutris/Dockerfile,"# gi.repository.GLib.Error: g-exec-error-quark: Failed to execute child process “dbus-launch” (No such file or directory) (8)
"
3230,c3984d97e17b233ebdf2f18fa5de57cc5dc41d02,/lutris/Dockerfile,"# /lutris-home/games/battle.net/state-cache-merge/state-cache-update.sh: line 8: zenity: command not found
"
3231,f03b035580615403b02f8b51df729b5a29a7ea74,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
3232,c1610b96ffcea268495de6bc01aa9d72c59f9392,/ymlfmt/Dockerfile,"# https://pypi.org/project/ruamel.yaml/
"
3233,08deba029429557f9bb72ef0280056db73392ea5,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3234,08deba029429557f9bb72ef0280056db73392ea5,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3235,08deba029429557f9bb72ef0280056db73392ea5,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3236,08deba029429557f9bb72ef0280056db73392ea5,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3237,08deba029429557f9bb72ef0280056db73392ea5,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3238,6ede48640e1f4fafed2765720ab57255947a58d1,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3239,6ede48640e1f4fafed2765720ab57255947a58d1,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3240,6ede48640e1f4fafed2765720ab57255947a58d1,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3241,6ede48640e1f4fafed2765720ab57255947a58d1,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3242,6ede48640e1f4fafed2765720ab57255947a58d1,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3243,c8f844aeb4a54088bba409badd17ba83698f459b,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3244,c8f844aeb4a54088bba409badd17ba83698f459b,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3245,c8f844aeb4a54088bba409badd17ba83698f459b,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3246,c8f844aeb4a54088bba409badd17ba83698f459b,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3247,c8f844aeb4a54088bba409badd17ba83698f459b,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3248,6571572bac955e4e86d5661664a5c1da72c8e1eb,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
3249,6571572bac955e4e86d5661664a5c1da72c8e1eb,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
3250,68a67c86f1147ce262e243bc934055090f73adfc,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3251,68a67c86f1147ce262e243bc934055090f73adfc,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3252,68a67c86f1147ce262e243bc934055090f73adfc,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3253,68a67c86f1147ce262e243bc934055090f73adfc,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3254,68a67c86f1147ce262e243bc934055090f73adfc,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3255,66819f2bbd08224c8e3e6bd4736d98eb206930b4,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3256,66819f2bbd08224c8e3e6bd4736d98eb206930b4,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3257,66819f2bbd08224c8e3e6bd4736d98eb206930b4,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3258,66819f2bbd08224c8e3e6bd4736d98eb206930b4,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3259,66819f2bbd08224c8e3e6bd4736d98eb206930b4,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3260,dd8ec0022f35acc9d5e1af4095af907719643186,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3261,dd8ec0022f35acc9d5e1af4095af907719643186,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3262,dd8ec0022f35acc9d5e1af4095af907719643186,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3263,dd8ec0022f35acc9d5e1af4095af907719643186,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3264,dd8ec0022f35acc9d5e1af4095af907719643186,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3265,dc483562ee9dd6eed3438e302daae603a5ff9207,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3266,86c5da9607757f961de4785d5c62a27e0259fc78,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3267,86c5da9607757f961de4785d5c62a27e0259fc78,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3268,86c5da9607757f961de4785d5c62a27e0259fc78,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3269,86c5da9607757f961de4785d5c62a27e0259fc78,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3270,86c5da9607757f961de4785d5c62a27e0259fc78,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3271,e819ac85bdc605d79d55c89f3ff3063aa959bca1,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
3272,6616aa306deb7a51684719cffe775e479ff0ef5e,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
3273,6616aa306deb7a51684719cffe775e479ff0ef5e,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
3274,6616aa306deb7a51684719cffe775e479ff0ef5e,/jenkins/Dockerfile,"# workaround ""apt-key adv --recv-keys"" hanging in stretch and above
"
3275,7ab16829510457b5557b2d9b7d78ff3eb7430e63,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3276,f78f5de47f663500bc95533cbe2cf534de9899fc,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3277,f78f5de47f663500bc95533cbe2cf534de9899fc,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3278,f78f5de47f663500bc95533cbe2cf534de9899fc,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3279,f78f5de47f663500bc95533cbe2cf534de9899fc,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3280,f78f5de47f663500bc95533cbe2cf534de9899fc,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3281,04c8eb2f94d4694b4f330b178eb959225b1f9e2b,/phpmyadmin/Dockerfile,"# https://docs.phpmyadmin.net/en/latest/setup.html#verifying-phpmyadmin-releases
"
3282,04c8eb2f94d4694b4f330b178eb959225b1f9e2b,/phpmyadmin/Dockerfile,"# Since July 2015 all phpMyAdmin releases are cryptographically signed by the releasing developer, who through January 2016 was Marc Delisle.
"
3283,04c8eb2f94d4694b4f330b178eb959225b1f9e2b,/phpmyadmin/Dockerfile,"# Beginning in January 2016, the release manager is Isaac Bennetch.
"
3284,04c8eb2f94d4694b4f330b178eb959225b1f9e2b,/phpmyadmin/Dockerfile,"# Some additional downloads (for example themes) might be signed by Michal Čihař.
"
3285,fc60abf47387b43b0b9b8b021ec12d3322d6e9e6,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3286,b98ee7e7b4fa98fcfa3d4f2c2435e70bd660a3db,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3287,d6d435479900274e105bdfdf2792c26c989f05f6,/ruby-passenger/Dockerfile,"# throw errors if Gemfile has been modified since Gemfile.lock
"
3288,1c8615545aeb05ad39e722784e733b644eef66a9,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3289,1c8615545aeb05ad39e722784e733b644eef66a9,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3290,1c8615545aeb05ad39e722784e733b644eef66a9,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3291,1c8615545aeb05ad39e722784e733b644eef66a9,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3292,1c8615545aeb05ad39e722784e733b644eef66a9,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3293,d72088d48cd11cdc7b8d6f079d399dcd3e0fdc58,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3294,a983d46e644408bffc7e8a3da4315ea92d4e09c0,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3295,a983d46e644408bffc7e8a3da4315ea92d4e09c0,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3296,a983d46e644408bffc7e8a3da4315ea92d4e09c0,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3297,a983d46e644408bffc7e8a3da4315ea92d4e09c0,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3298,a983d46e644408bffc7e8a3da4315ea92d4e09c0,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3299,846caa9595aecbc8ce71925b3ced7dc523d74848,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3300,bd14b3258ed77dcb562616ad83a09b6d3e693243,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3301,bd14b3258ed77dcb562616ad83a09b6d3e693243,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3302,bd14b3258ed77dcb562616ad83a09b6d3e693243,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3303,bd14b3258ed77dcb562616ad83a09b6d3e693243,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3304,bd14b3258ed77dcb562616ad83a09b6d3e693243,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3305,57251d28f5130ab75ede30caa4532170edb8c2d5,/dell-netextender/Dockerfile,"# https://sslvpn.demo.sonicwall.com
#   u: demo    p: password

"
3306,57251d28f5130ab75ede30caa4532170edb8c2d5,/dell-netextender/Dockerfile,"# NetExtender connected successfully. Type ""Ctrl-c"" to disconnect...
"
3307,b19a350107d3f3ef78e8d27eef275120cda75ae0,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3308,c77d78ba6ce5f37deb24bc26dd4c1a9425c17b95,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
3309,c77d78ba6ce5f37deb24bc26dd4c1a9425c17b95,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
3310,c77d78ba6ce5f37deb24bc26dd4c1a9425c17b95,/jenkins/Dockerfile,"# workaround ""apt-key adv --recv-keys"" hanging in stretch and above
"
3311,465b6b941f619f81803bc54407ff953bd45b6255,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3312,76510720ebc0af4001ba586811a421711552e6f1,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
3313,76510720ebc0af4001ba586811a421711552e6f1,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
3314,b7ee89698d417bc99e38cef5711c5f2fb4c9708b,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
3315,b7ee89698d417bc99e38cef5711c5f2fb4c9708b,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
3316,b7ee89698d417bc99e38cef5711c5f2fb4c9708b,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
3317,b7ee89698d417bc99e38cef5711c5f2fb4c9708b,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
3318,b7ee89698d417bc99e38cef5711c5f2fb4c9708b,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
3319,f188057ed9be2a6bd14b82868f438ecd1c7c94bc,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3320,3166d1645ea3e35bb3f877ee797256ffc1732e22,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3321,3166d1645ea3e35bb3f877ee797256ffc1732e22,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3322,3166d1645ea3e35bb3f877ee797256ffc1732e22,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3323,3166d1645ea3e35bb3f877ee797256ffc1732e22,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3324,3166d1645ea3e35bb3f877ee797256ffc1732e22,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3325,2aaf3fcaf59bc6d98b04c85bf01bc574c5d818a1,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3326,2aaf3fcaf59bc6d98b04c85bf01bc574c5d818a1,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3327,2aaf3fcaf59bc6d98b04c85bf01bc574c5d818a1,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3328,2aaf3fcaf59bc6d98b04c85bf01bc574c5d818a1,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3329,2aaf3fcaf59bc6d98b04c85bf01bc574c5d818a1,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3330,70803d771804a99c645d280208bea269b26bc7dd,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
3331,14d465c724daf1886e286a6bb3a6707af4534f4f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3332,14d465c724daf1886e286a6bb3a6707af4534f4f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3333,14d465c724daf1886e286a6bb3a6707af4534f4f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3334,14d465c724daf1886e286a6bb3a6707af4534f4f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3335,14d465c724daf1886e286a6bb3a6707af4534f4f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3336,aca1b091dec45329497b77963f3b4fee43607974,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3337,aca1b091dec45329497b77963f3b4fee43607974,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3338,aca1b091dec45329497b77963f3b4fee43607974,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3339,aca1b091dec45329497b77963f3b4fee43607974,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3340,aca1b091dec45329497b77963f3b4fee43607974,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3341,48a97250c07689e9069c26441258482025004154,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3342,865943a02a7bf30b86b68a08b42cbf10d112a255,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3343,865943a02a7bf30b86b68a08b42cbf10d112a255,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3344,865943a02a7bf30b86b68a08b42cbf10d112a255,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3345,865943a02a7bf30b86b68a08b42cbf10d112a255,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3346,865943a02a7bf30b86b68a08b42cbf10d112a255,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3347,7132dbd2f33cb99f8ec844b6cb76bd069daf6f31,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3348,7132dbd2f33cb99f8ec844b6cb76bd069daf6f31,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3349,7132dbd2f33cb99f8ec844b6cb76bd069daf6f31,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3350,7132dbd2f33cb99f8ec844b6cb76bd069daf6f31,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3351,7132dbd2f33cb99f8ec844b6cb76bd069daf6f31,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3352,9ba61a9b293a0d2e49677ba57892187a4c0da3ea,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
3353,9ba61a9b293a0d2e49677ba57892187a4c0da3ea,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
3354,9ba61a9b293a0d2e49677ba57892187a4c0da3ea,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
3355,9ba61a9b293a0d2e49677ba57892187a4c0da3ea,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
3356,9ba61a9b293a0d2e49677ba57892187a4c0da3ea,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
3357,18f92d3ba7bf21d5425e6c7840d85d342a7e800c,/skype/Dockerfile,"# see https://repo.skype.com

"
3358,18f92d3ba7bf21d5425e6c7840d85d342a7e800c,/skype/Dockerfile,"# wget is invoked by skypeforlinux for crash reports
"
3359,18f92d3ba7bf21d5425e6c7840d85d342a7e800c,/skype/Dockerfile,"# https://repo.skype.com/data/SKYPE-GPG-KEY
"
3360,18f92d3ba7bf21d5425e6c7840d85d342a7e800c,/skype/Dockerfile,"# pub   2048R/DF7587C3 2016-06-22 [expires: 2021-06-21]
#       Key fingerprint = D404 0146 BE39 7250 9FD5  7FC7 1F30 45A5 DF75 87C3
# uid                  Skype Linux Client Repository <se-um@microsoft.com>
# sub   2048R/A4EBB320 2016-06-22 [expires: 2021-06-21]
"
3361,5fa27a1090ea6b2278ff5609431b01f00ad0e8a4,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3362,5fa27a1090ea6b2278ff5609431b01f00ad0e8a4,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3363,5fa27a1090ea6b2278ff5609431b01f00ad0e8a4,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3364,5fa27a1090ea6b2278ff5609431b01f00ad0e8a4,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3365,5fa27a1090ea6b2278ff5609431b01f00ad0e8a4,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3366,bbcfca9a7588b8dcc820569686a5fc4dc7218bd7,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3367,bbcfca9a7588b8dcc820569686a5fc4dc7218bd7,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3368,bbcfca9a7588b8dcc820569686a5fc4dc7218bd7,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3369,bbcfca9a7588b8dcc820569686a5fc4dc7218bd7,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3370,bbcfca9a7588b8dcc820569686a5fc4dc7218bd7,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3371,3b2f48f351cf6720536508eb835591eb537cf316,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
3372,3b2f48f351cf6720536508eb835591eb537cf316,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
3373,3b2f48f351cf6720536508eb835591eb537cf316,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
3374,3b2f48f351cf6720536508eb835591eb537cf316,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
3375,3b2f48f351cf6720536508eb835591eb537cf316,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
3376,93361e25cfad2de2d01e226da4ab477899f5e28e,/nginx/Dockerfile,"# log to stderr
"
3377,93361e25cfad2de2d01e226da4ab477899f5e28e,/nginx/Dockerfile,"# prevent backgrounding (for Docker)\ndaemon off;' >> /etc/nginx/nginx.conf

"
3378,c9b0e1b39f6a7c7b0e4d92aea97d8252c8679ea5,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3379,1962188baba2441402b693551e5e6e57b6c0fdc7,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3380,1962188baba2441402b693551e5e6e57b6c0fdc7,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3381,1962188baba2441402b693551e5e6e57b6c0fdc7,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3382,1962188baba2441402b693551e5e6e57b6c0fdc7,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3383,1962188baba2441402b693551e5e6e57b6c0fdc7,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3384,54e0a1c5c249fb543e6a364a04cc75c1be706cb3,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
3385,54e0a1c5c249fb543e6a364a04cc75c1be706cb3,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
3386,54e0a1c5c249fb543e6a364a04cc75c1be706cb3,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
3387,9c3d4b357a9d7591abc7ec0b64c4d125c6c10a09,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3388,9c3d4b357a9d7591abc7ec0b64c4d125c6c10a09,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3389,9c3d4b357a9d7591abc7ec0b64c4d125c6c10a09,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3390,9c3d4b357a9d7591abc7ec0b64c4d125c6c10a09,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3391,9c3d4b357a9d7591abc7ec0b64c4d125c6c10a09,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3392,602861dba99ee17545eff5f7197333b5e161c6f6,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3393,602861dba99ee17545eff5f7197333b5e161c6f6,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3394,602861dba99ee17545eff5f7197333b5e161c6f6,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3395,602861dba99ee17545eff5f7197333b5e161c6f6,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3396,602861dba99ee17545eff5f7197333b5e161c6f6,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3397,a4e8152f6afbe8ccbf65871882ff425a850921db,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3398,d60c581e2a4c767cd17c5e01f460e3dcae384df5,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
3399,d60c581e2a4c767cd17c5e01f460e3dcae384df5,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
3400,d60c581e2a4c767cd17c5e01f460e3dcae384df5,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
3401,642132a20eef29ef02e7e6d8d7bc179e72af4e21,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3402,642132a20eef29ef02e7e6d8d7bc179e72af4e21,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3403,642132a20eef29ef02e7e6d8d7bc179e72af4e21,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3404,642132a20eef29ef02e7e6d8d7bc179e72af4e21,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3405,642132a20eef29ef02e7e6d8d7bc179e72af4e21,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3406,059c6b0cd0cc7fc08e6ab09b8d4023b426770dc5,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3407,0b2218878950b68f9cb698bde85ff894870b8cfc,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3408,0b2218878950b68f9cb698bde85ff894870b8cfc,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3409,0b2218878950b68f9cb698bde85ff894870b8cfc,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3410,0b2218878950b68f9cb698bde85ff894870b8cfc,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3411,0b2218878950b68f9cb698bde85ff894870b8cfc,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3412,ef9cf9438d12236072488bc6768c0504d53636ba,/prometheus/Dockerfile,"# https://github.com/prometheus/prometheus/releases
"
3413,7ccdbe125933f966e534c36227b2eacd1419847f,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3414,89d4666655c39e665e68c4c7533dbc367076780d,/ehour/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
3415,89d4666655c39e665e68c4c7533dbc367076780d,/ehour/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

# https://ehour.nl/download/downloadfile.php?get=ehour-latest-standalone-unix.sh
# https://ehour.nl/download/downloadfile.php?get=ehour-1.4.3-standalone-unix.sh
"
3416,c8a386322edde1605088c900a6c693dcb1a24634,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3417,4b7bf1ed53df97026904263689905b207816a6bb,/diffoscope/Dockerfile,"# xxd (xxd not available in path. Falling back to Python hexlify.)
"
3418,4b7bf1ed53df97026904263689905b207816a6bb,/diffoscope/Dockerfile,"# readelf ('readelf' not available in path. Falling back to binary comparison.)
"
3419,4b7bf1ed53df97026904263689905b207816a6bb,/diffoscope/Dockerfile,"# for ""diffoscope --progress""
"
3420,3d1d58b033ab69b9290c43b0d9fb220d96f10787,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
3421,3d1d58b033ab69b9290c43b0d9fb220d96f10787,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
3422,3d1d58b033ab69b9290c43b0d9fb220d96f10787,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
3423,7bb7b72637a7c79aefe7e93ba98bb3f1fdeeaeeb,/skype/Dockerfile,"# see https://repo.skype.com

"
3424,7bb7b72637a7c79aefe7e93ba98bb3f1fdeeaeeb,/skype/Dockerfile,"# wget is invoked by skypeforlinux for crash reports
"
3425,7bb7b72637a7c79aefe7e93ba98bb3f1fdeeaeeb,/skype/Dockerfile,"# https://repo.skype.com/data/SKYPE-GPG-KEY
"
3426,7bb7b72637a7c79aefe7e93ba98bb3f1fdeeaeeb,/skype/Dockerfile,"# pub   2048R/DF7587C3 2016-06-22 [expires: 2021-06-21]
#       Key fingerprint = D404 0146 BE39 7250 9FD5  7FC7 1F30 45A5 DF75 87C3
# uid                  Skype Linux Client Repository <se-um@microsoft.com>
# sub   2048R/A4EBB320 2016-06-22 [expires: 2021-06-21]
"
3427,3cfeeae34a569bec87e0ec9926b940eba2f25c7b,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
3428,3cfeeae34a569bec87e0ec9926b940eba2f25c7b,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
3429,3cfeeae34a569bec87e0ec9926b940eba2f25c7b,/jenkins/Dockerfile,"# workaround ""apt-key adv --recv-keys"" hanging in stretch and above
"
3430,f1b3c65b6537505d26d5c68fba1436cee3b6093d,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3431,f1b3c65b6537505d26d5c68fba1436cee3b6093d,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3432,f1b3c65b6537505d26d5c68fba1436cee3b6093d,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3433,f1b3c65b6537505d26d5c68fba1436cee3b6093d,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3434,f1b3c65b6537505d26d5c68fba1436cee3b6093d,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3435,ced125432f9451154d4058ec5664ea85ce626c21,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3436,521c8606d91ac2dddcae4d8876abf4791c077f85,/bitwarden/cli/Dockerfile,"# https://www.npmjs.com/package/@bitwarden/cli?activeTab=versions
"
3437,604d07a2d8d4d5b750c7ca629526abd383ce8a14,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3438,ac158e710ebec223929f54c873114b80878678b7,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3439,78ed78c30487c28a76d9eedfee895292a705015a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3440,78ed78c30487c28a76d9eedfee895292a705015a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3441,78ed78c30487c28a76d9eedfee895292a705015a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3442,78ed78c30487c28a76d9eedfee895292a705015a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3443,78ed78c30487c28a76d9eedfee895292a705015a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3444,c8c0f6c841b0eb4d72a2dd7d6303df7f72bc5519,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3445,c8c0f6c841b0eb4d72a2dd7d6303df7f72bc5519,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3446,c8c0f6c841b0eb4d72a2dd7d6303df7f72bc5519,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3447,c8c0f6c841b0eb4d72a2dd7d6303df7f72bc5519,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3448,c8c0f6c841b0eb4d72a2dd7d6303df7f72bc5519,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3449,76ae522204897266ce21c19aa9c2a765ecf3622e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3450,76ae522204897266ce21c19aa9c2a765ecf3622e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3451,76ae522204897266ce21c19aa9c2a765ecf3622e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3452,76ae522204897266ce21c19aa9c2a765ecf3622e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3453,76ae522204897266ce21c19aa9c2a765ecf3622e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3454,255eedc7cf90254ad661bda14a3428eb47748cc0,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3455,255eedc7cf90254ad661bda14a3428eb47748cc0,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3456,255eedc7cf90254ad661bda14a3428eb47748cc0,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3457,255eedc7cf90254ad661bda14a3428eb47748cc0,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3458,255eedc7cf90254ad661bda14a3428eb47748cc0,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3459,1d1d42a412b2bd7ec51a40cbc10fba0039faa2e3,/golang/Dockerfile,"# (set an explicit GOARM of 5 for maximum ARM compatibility)
"
3460,1d1d42a412b2bd7ec51a40cbc10fba0039faa2e3,/golang/Dockerfile,"##*/} \
"
3461,1d1d42a412b2bd7ec51a40cbc10fba0039faa2e3,/golang/Dockerfile,"# these are useful for ""go get""
"
3462,1d1d42a412b2bd7ec51a40cbc10fba0039faa2e3,/golang/Dockerfile,"/*} \
			GOARCH=${platform##*/"
3463,0ae58c0bc42fe621eb5923049d0fe2dc6622a7a2,/certbot/Dockerfile,"# Executable not found: can't find the executable for the dialog-like program
"
3464,0ae58c0bc42fe621eb5923049d0fe2dc6622a7a2,/certbot/Dockerfile,"#VOLUME /etc/letsencrypt
"
3465,0ae58c0bc42fe621eb5923049d0fe2dc6622a7a2,/certbot/Dockerfile,"#VOLUME /var/log/letsencrypt

"
3466,b80a5dbe8b26d841b3048a3e01ff40c49f8f3690,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3467,b80a5dbe8b26d841b3048a3e01ff40c49f8f3690,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3468,b80a5dbe8b26d841b3048a3e01ff40c49f8f3690,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3469,b80a5dbe8b26d841b3048a3e01ff40c49f8f3690,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3470,b80a5dbe8b26d841b3048a3e01ff40c49f8f3690,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3471,38a3c66e1604bcb54b017edbc149d9e3be27250a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3472,38a3c66e1604bcb54b017edbc149d9e3be27250a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3473,38a3c66e1604bcb54b017edbc149d9e3be27250a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3474,38a3c66e1604bcb54b017edbc149d9e3be27250a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3475,38a3c66e1604bcb54b017edbc149d9e3be27250a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3476,d1cbfedbde2d11ba6130f6690bffb29273dccdc6,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3477,6f8513f251e4dcf547ca1679f9fd49f9355c6335,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3478,6f8513f251e4dcf547ca1679f9fd49f9355c6335,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3479,6f8513f251e4dcf547ca1679f9fd49f9355c6335,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3480,6f8513f251e4dcf547ca1679f9fd49f9355c6335,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3481,6f8513f251e4dcf547ca1679f9fd49f9355c6335,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3482,e0a124e73d488bf71e33de6699a381c4db2edc17,/mutt-gmail/Dockerfile,"# a browser is necessary!
"
3483,e0a124e73d488bf71e33de6699a381c4db2edc17,/mutt-gmail/Dockerfile,"# my preferred editor :) (see also muttrc)
"
3484,8c2bd28c1954de3f68916fb4e7d277f131a8794a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3485,8c2bd28c1954de3f68916fb4e7d277f131a8794a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3486,8c2bd28c1954de3f68916fb4e7d277f131a8794a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3487,8c2bd28c1954de3f68916fb4e7d277f131a8794a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3488,8c2bd28c1954de3f68916fb4e7d277f131a8794a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3489,2ee7413e774f24c71c8d3d4080c9643e1f88aa42,/docker-master/dind/Dockerfile,"# https://github.com/docker/docker/blob/master/project/PACKAGERS.md#runtime-dependencies
"
3490,2ee7413e774f24c71c8d3d4080c9643e1f88aa42,/docker-master/dind/Dockerfile,"# TODO aufs-tools

# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
"
3491,c24328449c6dbc7f495c0ea7cbfe649c9d1346fb,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3492,c24328449c6dbc7f495c0ea7cbfe649c9d1346fb,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3493,c24328449c6dbc7f495c0ea7cbfe649c9d1346fb,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3494,c24328449c6dbc7f495c0ea7cbfe649c9d1346fb,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3495,c24328449c6dbc7f495c0ea7cbfe649c9d1346fb,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3496,b4fbd6fab14723ae770fb05df3ea4536520b0db2,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
3497,b4fbd6fab14723ae770fb05df3ea4536520b0db2,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
3498,b4fbd6fab14723ae770fb05df3ea4536520b0db2,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
3499,b4fbd6fab14723ae770fb05df3ea4536520b0db2,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
3500,b4fbd6fab14723ae770fb05df3ea4536520b0db2,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
3501,f070efad56994ff1884ba84259515832da8e1f5e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3502,f070efad56994ff1884ba84259515832da8e1f5e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3503,f070efad56994ff1884ba84259515832da8e1f5e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3504,f070efad56994ff1884ba84259515832da8e1f5e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3505,f070efad56994ff1884ba84259515832da8e1f5e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3506,91def800cbf247a8b5b5d5561a33563c826365cd,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3507,ea6c8df371ee9314ee94fea3034225c70cea1442,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3508,ea6c8df371ee9314ee94fea3034225c70cea1442,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3509,ea6c8df371ee9314ee94fea3034225c70cea1442,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3510,ea6c8df371ee9314ee94fea3034225c70cea1442,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3511,ea6c8df371ee9314ee94fea3034225c70cea1442,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3512,bf73c530da22ad7985bbf9ade5d23be68a903fbb,/robomongo/Dockerfile,"# install dependencies...
"
3513,4d436186d842808a7f9ef938ede54f4eeae0c9c2,/xen-orchestra/Dockerfile,"# see https://github.com/vatesfr/xo/blob/a269af702992616f67b7bcf066eac0a1124ac8bf/doc/installation/manual_installation.md

#RUN apt-get update && apt-get install -y ruby-compass

"
3514,4d436186d842808a7f9ef938ede54f4eeae0c9c2,/xen-orchestra/Dockerfile,"#'/': '/path/to/xo-web/dist/'!'/': '../web/dist/'!; \
"
3515,4d436186d842808a7f9ef938ede54f4eeae0c9c2,/xen-orchestra/Dockerfile,"#uri: ''!uri: 'tcp://redis:6379'!; \
"
3516,93d0a4ba1ab1da7e968e835617b388e6d99c1dc7,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3517,93d0a4ba1ab1da7e968e835617b388e6d99c1dc7,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3518,93d0a4ba1ab1da7e968e835617b388e6d99c1dc7,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3519,93d0a4ba1ab1da7e968e835617b388e6d99c1dc7,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3520,93d0a4ba1ab1da7e968e835617b388e6d99c1dc7,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3521,7865ab4e57bc88335a70bd096ef3243c8689cecb,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
3522,2fcd81f4b98894f2809f7cc8669e9c48f7913d90,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3523,2fcd81f4b98894f2809f7cc8669e9c48f7913d90,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3524,2fcd81f4b98894f2809f7cc8669e9c48f7913d90,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3525,2fcd81f4b98894f2809f7cc8669e9c48f7913d90,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3526,2fcd81f4b98894f2809f7cc8669e9c48f7913d90,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3527,c8f844aeb4a54088bba409badd17ba83698f459b,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3528,26b05718b07b66a4eb6626033039798ab9cbce44,/docker/experimental/dind/Dockerfile,"# https://github.com/docker/docker/blob/master/project/PACKAGERS.md#runtime-dependencies
"
3529,26b05718b07b66a4eb6626033039798ab9cbce44,/docker/experimental/dind/Dockerfile,"# TODO aufs-tools

"
3530,3b080999b5e5dd549bce680a3fc05de5fe2a9657,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
3531,3b080999b5e5dd549bce680a3fc05de5fe2a9657,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
3532,3b080999b5e5dd549bce680a3fc05de5fe2a9657,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
3533,3b080999b5e5dd549bce680a3fc05de5fe2a9657,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
3534,3b080999b5e5dd549bce680a3fc05de5fe2a9657,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
3535,26684dfabbdd67fd4eda014b9c9be700bc9d59c9,/diffoscope/Dockerfile,"# xxd (xxd not available in path. Falling back to Python hexlify.)
"
3536,26684dfabbdd67fd4eda014b9c9be700bc9d59c9,/diffoscope/Dockerfile,"# readelf ('readelf' not available in path. Falling back to binary comparison.)
"
3537,26684dfabbdd67fd4eda014b9c9be700bc9d59c9,/diffoscope/Dockerfile,"# for ""diffoscope --progress""
"
3538,d3e3894e470107d9691d2d2b11f4c86d98dead36,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3539,d3e3894e470107d9691d2d2b11f4c86d98dead36,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3540,d3e3894e470107d9691d2d2b11f4c86d98dead36,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3541,d3e3894e470107d9691d2d2b11f4c86d98dead36,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3542,d3e3894e470107d9691d2d2b11f4c86d98dead36,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3543,7b2041966b79136b10993a269df711e25319f38a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3544,7b2041966b79136b10993a269df711e25319f38a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3545,7b2041966b79136b10993a269df711e25319f38a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3546,7b2041966b79136b10993a269df711e25319f38a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3547,7b2041966b79136b10993a269df711e25319f38a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3548,3f14c71e938c5786fde7c341fc1401dd9f6a8ea8,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3549,3f14c71e938c5786fde7c341fc1401dd9f6a8ea8,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3550,3f14c71e938c5786fde7c341fc1401dd9f6a8ea8,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3551,3f14c71e938c5786fde7c341fc1401dd9f6a8ea8,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3552,3f14c71e938c5786fde7c341fc1401dd9f6a8ea8,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3553,9e5d4f626d14ee4e9d679845f71405cb00c6a41f,/pmbootstrap/Dockerfile,"# https://gitlab.alpinelinux.org/alpine/aports/issues/11122
"
3554,9e5d4f626d14ee4e9d679845f71405cb00c6a41f,/pmbootstrap/Dockerfile,"# verify there are no errors/warnings
"
3555,9e5d4f626d14ee4e9d679845f71405cb00c6a41f,/pmbootstrap/Dockerfile,"# https://pypi.org/project/pmbootstrap/
"
3556,9e5d4f626d14ee4e9d679845f71405cb00c6a41f,/pmbootstrap/Dockerfile,"# workaround issues with transparent QEMU / binfmt detection (""fix binary"" -- qemu binaries not necessary inside chroots/namespaces)
"
3557,b190fcb861019bbe991a3ca5a3f21a1e1cdb426d,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3558,b190fcb861019bbe991a3ca5a3f21a1e1cdb426d,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3559,b190fcb861019bbe991a3ca5a3f21a1e1cdb426d,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3560,b190fcb861019bbe991a3ca5a3f21a1e1cdb426d,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3561,b190fcb861019bbe991a3ca5a3f21a1e1cdb426d,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3562,cd3035784f0018648b9f3ac1dd11dc2084b5c5dc,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3563,6024d76aca5006700623aba30d4a2ee242c733ec,/slack/Dockerfile,"# the .deb file linked at https://slack.com/downloads/instructions/debian includes ""/etc/cron.daily/slack"" which sets up an APT repo entry as in the following installation

# pub   rsa4096 2016-02-18 [SCEA]
#       DB08 5A08 CA13 B8AC B917  E0F6 D938 EC0D 0386 51BD
# uid           [ unknown] https://packagecloud.io/slacktechnologies/slack (https://packagecloud.io/docs#gpg_signing) <support@packagecloud.io>
# sub   rsa4096 2016-02-18 [SEA]
"
3564,6024d76aca5006700623aba30d4a2ee242c733ec,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libX11-xcb.so.1: cannot open shared object file: No such file or directory
"
3565,6024d76aca5006700623aba30d4a2ee242c733ec,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libasound.so.2: cannot open shared object file: No such file or directory
"
3566,d4866f484e15a0899685e4a0748404f3675fbb78,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
3567,d4866f484e15a0899685e4a0748404f3675fbb78,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
3568,d4866f484e15a0899685e4a0748404f3675fbb78,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
3569,d2fd33831e7a2d1c2fc968a57e46627da5b151a7,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3570,d2fd33831e7a2d1c2fc968a57e46627da5b151a7,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3571,d2fd33831e7a2d1c2fc968a57e46627da5b151a7,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3572,d2fd33831e7a2d1c2fc968a57e46627da5b151a7,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3573,d2fd33831e7a2d1c2fc968a57e46627da5b151a7,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3574,67c8b5dadbc1610e6799f495501d38bf87af95c8,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3575,67c8b5dadbc1610e6799f495501d38bf87af95c8,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3576,67c8b5dadbc1610e6799f495501d38bf87af95c8,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3577,67c8b5dadbc1610e6799f495501d38bf87af95c8,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3578,67c8b5dadbc1610e6799f495501d38bf87af95c8,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3579,795a3d6949b79dd327970179e27006419594056b,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
3580,795a3d6949b79dd327970179e27006419594056b,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
3581,795a3d6949b79dd327970179e27006419594056b,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
3582,795a3d6949b79dd327970179e27006419594056b,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
3583,795a3d6949b79dd327970179e27006419594056b,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
3584,2eea5b392681dba6859e64906c355bae4d48c08b,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3585,2eea5b392681dba6859e64906c355bae4d48c08b,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3586,2eea5b392681dba6859e64906c355bae4d48c08b,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3587,2eea5b392681dba6859e64906c355bae4d48c08b,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3588,2eea5b392681dba6859e64906c355bae4d48c08b,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3589,b25d4949af0eb0f1d35ce81fc880fe224adfb064,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3590,b25d4949af0eb0f1d35ce81fc880fe224adfb064,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3591,b25d4949af0eb0f1d35ce81fc880fe224adfb064,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3592,b25d4949af0eb0f1d35ce81fc880fe224adfb064,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3593,b25d4949af0eb0f1d35ce81fc880fe224adfb064,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3594,f9e1ef067753e0833bb1448f802fa62f73c81732,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3595,f9e1ef067753e0833bb1448f802fa62f73c81732,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3596,f9e1ef067753e0833bb1448f802fa62f73c81732,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3597,f9e1ef067753e0833bb1448f802fa62f73c81732,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3598,f9e1ef067753e0833bb1448f802fa62f73c81732,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3599,684ab7c1cebbe48cac330e9b011c91bf216bcd45,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3600,684ab7c1cebbe48cac330e9b011c91bf216bcd45,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3601,684ab7c1cebbe48cac330e9b011c91bf216bcd45,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3602,684ab7c1cebbe48cac330e9b011c91bf216bcd45,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3603,684ab7c1cebbe48cac330e9b011c91bf216bcd45,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3604,e6a3343fbca49365f1a64cca88574b1299293ed7,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3605,e6a3343fbca49365f1a64cca88574b1299293ed7,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3606,e6a3343fbca49365f1a64cca88574b1299293ed7,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3607,e6a3343fbca49365f1a64cca88574b1299293ed7,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3608,e6a3343fbca49365f1a64cca88574b1299293ed7,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3609,9e4af95943440c6d164596a83d8b9b784932f7f6,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
3610,9e4af95943440c6d164596a83d8b9b784932f7f6,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
3611,9e4af95943440c6d164596a83d8b9b784932f7f6,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
"
3612,1d881cd4ab8c8e81502d0ffa15e37de3258f9e19,/ehour/Dockerfile,"# https://ehour.nl/download/downloadfile.php?get=ehour-latest-standalone-unix.sh
# https://ehour.nl/download/downloadfile.php?get=ehour-1.4.3-standalone-unix.sh
"
3613,2bd92f887cdb18127e10c59127a79c6e3b9220d3,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3614,7c281de015ea36cfeaa60ba3f5ea6db80ec470a7,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3615,7c281de015ea36cfeaa60ba3f5ea6db80ec470a7,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3616,7c281de015ea36cfeaa60ba3f5ea6db80ec470a7,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3617,7c281de015ea36cfeaa60ba3f5ea6db80ec470a7,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3618,7c281de015ea36cfeaa60ba3f5ea6db80ec470a7,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3619,d3c2d2a87a3a5678cc992895b4ac4d6d92523bc2,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3620,d3c2d2a87a3a5678cc992895b4ac4d6d92523bc2,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3621,d3c2d2a87a3a5678cc992895b4ac4d6d92523bc2,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3622,d3c2d2a87a3a5678cc992895b4ac4d6d92523bc2,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3623,d3c2d2a87a3a5678cc992895b4ac4d6d92523bc2,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3624,4d38458ffce7137dd3388dd7cbca6348465153d1,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3625,4d38458ffce7137dd3388dd7cbca6348465153d1,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3626,4d38458ffce7137dd3388dd7cbca6348465153d1,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3627,4d38458ffce7137dd3388dd7cbca6348465153d1,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3628,4d38458ffce7137dd3388dd7cbca6348465153d1,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3629,c9b0e1b39f6a7c7b0e4d92aea97d8252c8679ea5,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3630,c9b0e1b39f6a7c7b0e4d92aea97d8252c8679ea5,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3631,c9b0e1b39f6a7c7b0e4d92aea97d8252c8679ea5,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3632,c9b0e1b39f6a7c7b0e4d92aea97d8252c8679ea5,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3633,c9b0e1b39f6a7c7b0e4d92aea97d8252c8679ea5,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3634,244dfd76776ed37689e24c39ea0897b3419dc4fb,/debian/devel/Dockerfile,"# normal build deps
"
3635,244dfd76776ed37689e24c39ea0897b3419dc4fb,/debian/devel/Dockerfile,"# need deb-src for compiling packages
"
3636,244dfd76776ed37689e24c39ea0897b3419dc4fb,/debian/devel/Dockerfile,"# let's make apt list package versions, since those are handy during devel
"
3637,244dfd76776ed37689e24c39ea0897b3419dc4fb,/debian/devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
3638,244dfd76776ed37689e24c39ea0897b3419dc4fb,/debian/devel/Dockerfile,"# for ssh to debian hosts, let's make sure we know their fingerprints <3
"
3639,244dfd76776ed37689e24c39ea0897b3419dc4fb,/debian/devel/Dockerfile,"# make sure things are pretty
"
3640,244dfd76776ed37689e24c39ea0897b3419dc4fb,/debian/devel/Dockerfile,"#(force_color_prompt=yes)/\1/' ~/.bashrc

# quilt is much amaze: https://wiki.debian.org/UsingQuilt#Using_quilt_with_Debian_source_packages
"
3641,96d9d9580d17315da15e5dd24599eecba0e027ea,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
3642,ce75adeca09ad222beab1e933b44535ac60440b6,/diffoscope/Dockerfile,"# xxd (xxd not available in path. Falling back to Python hexlify.)
"
3643,ce75adeca09ad222beab1e933b44535ac60440b6,/diffoscope/Dockerfile,"# readelf ('readelf' not available in path. Falling back to binary comparison.)
"
3644,ce75adeca09ad222beab1e933b44535ac60440b6,/diffoscope/Dockerfile,"# for ""diffoscope --progress""
"
3645,e554572e1f743f049890dfa3c96d5408e4ccb4b1,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3646,c866f7b66070f5c17d1de7cda922c55dbea5b5ca,/xen-orchestra/Dockerfile,"# see https://github.com/vatesfr/xo/blob/master/installation.md

"
3647,c866f7b66070f5c17d1de7cda922c55dbea5b5ca,/xen-orchestra/Dockerfile,"# TODO use links to get a redis server/database instead (since that's where configuration actually goes)
"
3648,c866f7b66070f5c17d1de7cda922c55dbea5b5ca,/xen-orchestra/Dockerfile,"# TODO see note above about redis
"
3649,acbbb8e062aee8a754dec5c98d2bb0b83fa89e75,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3650,acbbb8e062aee8a754dec5c98d2bb0b83fa89e75,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3651,acbbb8e062aee8a754dec5c98d2bb0b83fa89e75,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3652,acbbb8e062aee8a754dec5c98d2bb0b83fa89e75,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3653,acbbb8e062aee8a754dec5c98d2bb0b83fa89e75,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3654,8757b79b6ab500d26c9441848d2dd53e279bc02d,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3655,8c5c3d21a39e4abae5c75376cce3efb8de564925,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3656,b8801c5c8848314f9e35978648bb12c064bc8945,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
3657,b8801c5c8848314f9e35978648bb12c064bc8945,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
3658,b8801c5c8848314f9e35978648bb12c064bc8945,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
3659,a2909c3ebc8efd8233ad2dca052ec7fdbc44d6bd,/jenkins/weekly/Dockerfile,"# grab gosu for easy step-down from root
"
3660,a2909c3ebc8efd8233ad2dca052ec7fdbc44d6bd,/jenkins/weekly/Dockerfile,"# grab tini for signal processing and zombie killing
"
3661,a2909c3ebc8efd8233ad2dca052ec7fdbc44d6bd,/jenkins/weekly/Dockerfile,"# https://groups.google.com/d/msg/jenkins-infra/c7m_72vUTXE/37zw9GXhAQAJ
"
3662,a2909c3ebc8efd8233ad2dca052ec7fdbc44d6bd,/jenkins/weekly/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
3663,b930fd42ea7c28bc110857fb74d35b198e4d1d5b,/bash/3.1/Dockerfile,"# gpg: key 64EA74AB: public key ""Chet Ramey <chet@cwru.edu>"" imported
"
3664,b930fd42ea7c28bc110857fb74d35b198e4d1d5b,/bash/3.1/Dockerfile,"# https://ftp.gnu.org/gnu/bash/?C=M;O=D
"
3665,b930fd42ea7c28bc110857fb74d35b198e4d1d5b,/bash/3.1/Dockerfile,"# https://ftp.gnu.org/gnu/bash/bash-3.1-patches/?C=M;O=D
"
3666,b930fd42ea7c28bc110857fb74d35b198e4d1d5b,/bash/3.1/Dockerfile,"# prefixed with ""_"" since ""$BASH..."" have meaning in Bash parlance

"
3667,b930fd42ea7c28bc110857fb74d35b198e4d1d5b,/bash/3.1/Dockerfile,"# parallel jobs workaround borrowed from Alpine :)
"
3668,b930fd42ea7c28bc110857fb74d35b198e4d1d5b,/bash/3.1/Dockerfile,"# delete a few installed bits for smaller image size
"
3669,7a5effd185cfed1f692a406f72b3d7cb5bf3b990,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3670,7a5effd185cfed1f692a406f72b3d7cb5bf3b990,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3671,7a5effd185cfed1f692a406f72b3d7cb5bf3b990,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3672,7a5effd185cfed1f692a406f72b3d7cb5bf3b990,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3673,7a5effd185cfed1f692a406f72b3d7cb5bf3b990,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3674,7ccf86e12f860d377da5e8b74322a91bdf210107,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3675,7ccf86e12f860d377da5e8b74322a91bdf210107,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3676,7ccf86e12f860d377da5e8b74322a91bdf210107,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3677,7ccf86e12f860d377da5e8b74322a91bdf210107,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3678,7ccf86e12f860d377da5e8b74322a91bdf210107,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3679,64aa587b605320f031f0523c87874c23a37b1adc,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3680,64aa587b605320f031f0523c87874c23a37b1adc,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3681,64aa587b605320f031f0523c87874c23a37b1adc,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3682,64aa587b605320f031f0523c87874c23a37b1adc,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3683,64aa587b605320f031f0523c87874c23a37b1adc,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3684,9f6f4d2de420c33fc1f4883e3ccfe71fac753d64,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3685,9f6f4d2de420c33fc1f4883e3ccfe71fac753d64,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3686,9f6f4d2de420c33fc1f4883e3ccfe71fac753d64,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3687,9f6f4d2de420c33fc1f4883e3ccfe71fac753d64,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3688,9f6f4d2de420c33fc1f4883e3ccfe71fac753d64,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3689,80e9f4e127c13ca9e8def9479575bdb73ffb84f5,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3690,578df39b6ed257053c66c840b762ec07c2b6869c,/wine/Dockerfile,"# https://wiki.winehq.org/Debian

"
3691,578df39b6ed257053c66c840b762ec07c2b6869c,/wine/Dockerfile,"# https://dl.winehq.org/wine-builds/debian/dists/buster/main/binary-amd64/?C=N;O=D
# https://www.winehq.org/news/
"
3692,7be277bd1424cd9d934acbc5dac5a5a0fbe8fbb4,/moosefs/Dockerfile,"# mfscli (and cgi) are Python-based
"
3693,7be277bd1424cd9d934acbc5dac5a5a0fbe8fbb4,/moosefs/Dockerfile,"# mfsmount needs ""fusermount""
"
3694,7be277bd1424cd9d934acbc5dac5a5a0fbe8fbb4,/moosefs/Dockerfile,"# allow running mfsmount as non-root
"
3695,7be277bd1424cd9d934acbc5dac5a5a0fbe8fbb4,/moosefs/Dockerfile,"#user_allow_other$/user_allow_other/' /etc/fuse.conf

"
3696,7be277bd1424cd9d934acbc5dac5a5a0fbe8fbb4,/moosefs/Dockerfile,"# https://github.com/moosefs/moosefs/releases
"
3697,7be277bd1424cd9d934acbc5dac5a5a0fbe8fbb4,/moosefs/Dockerfile,"# prep the default configuration so things generally work Out-of-the-Box
"
3698,7be277bd1424cd9d934acbc5dac5a5a0fbe8fbb4,/moosefs/Dockerfile,"# allow us to run as an arbitrary user but still modify configuration
"
3699,7be277bd1424cd9d934acbc5dac5a5a0fbe8fbb4,/moosefs/Dockerfile,"# prep a scratch space with appropriate permissions to be able to do quick prototyping Out-of-the-Box
"
3700,7be277bd1424cd9d934acbc5dac5a5a0fbe8fbb4,/moosefs/Dockerfile,"# without this, the Python-based mfscli ""-f"" flag refuses to use UTF-8 box-drawing characters
"
3701,4be9922d455ddb29dc6d55eb4c9bd8a036e95954,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
3702,7a49655724a0f175b11e368d7f38878fba4eafcb,/slack/Dockerfile,"# used as a fake browser so clicked URLs (and internal Slack behavior that wants to open a browser) pop up with a URL + clipboard instead of silently doing nothing
"
3703,7a49655724a0f175b11e368d7f38878fba4eafcb,/slack/Dockerfile,"# the .deb file linked at https://slack.com/downloads/instructions/debian includes ""/etc/cron.daily/slack"" which sets up an APT repo entry as in the following installation

# pub   rsa4096 2016-02-18 [SCEA]
#       DB08 5A08 CA13 B8AC B917  E0F6 D938 EC0D 0386 51BD
# uid           [ unknown] https://packagecloud.io/slacktechnologies/slack (https://packagecloud.io/docs#gpg_signing) <support@packagecloud.io>
# sub   rsa4096 2016-02-18 [SEA]
"
3704,7a49655724a0f175b11e368d7f38878fba4eafcb,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libX11-xcb.so.1: cannot open shared object file: No such file or directory
"
3705,7a49655724a0f175b11e368d7f38878fba4eafcb,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libasound.so.2: cannot open shared object file: No such file or directory
"
3706,7a49655724a0f175b11e368d7f38878fba4eafcb,/slack/Dockerfile,"# 3.3.3: slack: error while loading shared libraries: libgtk-3.so.0: cannot open shared object file: No such file or directory
"
3707,7a49655724a0f175b11e368d7f38878fba4eafcb,/slack/Dockerfile,"# 4.4.0: Error: libxkbfile.so.1: cannot open shared object file: No such file or directory
"
3708,7a49655724a0f175b11e368d7f38878fba4eafcb,/slack/Dockerfile,"# 4.4.0: libGL error: failed to load driver: (i915_dri.so, i194, i965, swrast_dir.so, swrast)
"
3709,6cc7d320b54151f624074c90442636b5758ca3b6,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3710,6cc7d320b54151f624074c90442636b5758ca3b6,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3711,6cc7d320b54151f624074c90442636b5758ca3b6,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3712,6cc7d320b54151f624074c90442636b5758ca3b6,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3713,6cc7d320b54151f624074c90442636b5758ca3b6,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3714,1ae08bb36f065c5d64ffd21d0f94b818583618fc,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3715,1ae08bb36f065c5d64ffd21d0f94b818583618fc,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3716,1ae08bb36f065c5d64ffd21d0f94b818583618fc,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3717,1ae08bb36f065c5d64ffd21d0f94b818583618fc,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3718,1ae08bb36f065c5d64ffd21d0f94b818583618fc,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3719,26e7709d4d607ba5d75d653ce30357f2777bb81a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3720,26e7709d4d607ba5d75d653ce30357f2777bb81a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3721,26e7709d4d607ba5d75d653ce30357f2777bb81a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3722,26e7709d4d607ba5d75d653ce30357f2777bb81a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3723,26e7709d4d607ba5d75d653ce30357f2777bb81a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3724,3f89675df522b9e0e0063c89b9fe4cd2c5d555cb,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3725,3f89675df522b9e0e0063c89b9fe4cd2c5d555cb,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3726,3f89675df522b9e0e0063c89b9fe4cd2c5d555cb,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3727,3f89675df522b9e0e0063c89b9fe4cd2c5d555cb,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3728,3f89675df522b9e0e0063c89b9fe4cd2c5d555cb,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3729,af115d6930843fa13870717865595f7337cf2723,/docker/experimental/dind/Dockerfile,"# https://github.com/docker/docker/blob/master/project/PACKAGERS.md#runtime-dependencies
"
3730,af115d6930843fa13870717865595f7337cf2723,/docker/experimental/dind/Dockerfile,"# TODO aufs-tools

"
3731,cbb0c56020a6002bdc4ef96249b027d0a7d22116,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3732,cbb0c56020a6002bdc4ef96249b027d0a7d22116,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3733,cbb0c56020a6002bdc4ef96249b027d0a7d22116,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3734,cbb0c56020a6002bdc4ef96249b027d0a7d22116,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3735,cbb0c56020a6002bdc4ef96249b027d0a7d22116,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3736,c873428f4283ceb6e0a45a1f44067d8a7a1ab4e9,/golang/Dockerfile,"# (set an explicit GOARM of 5 for maximum ARM compatibility)
"
3737,c873428f4283ceb6e0a45a1f44067d8a7a1ab4e9,/golang/Dockerfile,"##*/} \
"
3738,c873428f4283ceb6e0a45a1f44067d8a7a1ab4e9,/golang/Dockerfile,"/*} \
			GOARCH=${platform##*/"
3739,8ecdb4439c03ba1641ce4efd5d0fd80a44dd96f8,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3740,8ecdb4439c03ba1641ce4efd5d0fd80a44dd96f8,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3741,8ecdb4439c03ba1641ce4efd5d0fd80a44dd96f8,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3742,8ecdb4439c03ba1641ce4efd5d0fd80a44dd96f8,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3743,8ecdb4439c03ba1641ce4efd5d0fd80a44dd96f8,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3744,0730449d5a13f92aeecadc2686f27dc2e446082d,/network-toolbox/alpine/Dockerfile,"# TODO add ""nbtscan"" when we get to Alpine 3.10 (if it makes it out of edge for 3.10)

"
3745,86db398cc5b1328ac6cf34b576e025b67131d4f2,/debian/devel/Dockerfile,"# normal build deps
"
3746,86db398cc5b1328ac6cf34b576e025b67131d4f2,/debian/devel/Dockerfile,"# need deb-src for compiling packages
"
3747,86db398cc5b1328ac6cf34b576e025b67131d4f2,/debian/devel/Dockerfile,"# let's make apt list package versions, since those are handy during devel
"
3748,86db398cc5b1328ac6cf34b576e025b67131d4f2,/debian/devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
3749,86db398cc5b1328ac6cf34b576e025b67131d4f2,/debian/devel/Dockerfile,"# for ssh to debian hosts, let's make sure we know their fingerprints <3
"
3750,86db398cc5b1328ac6cf34b576e025b67131d4f2,/debian/devel/Dockerfile,"# make sure things are pretty
"
3751,86db398cc5b1328ac6cf34b576e025b67131d4f2,/debian/devel/Dockerfile,"#(force_color_prompt=yes)/\1/' ~/.bashrc

# quilt is much amaze: https://wiki.debian.org/UsingQuilt#Using_quilt_with_Debian_source_packages
"
3752,fb791c2c19d45dce36486ef851505a53afc5e109,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3753,17e01340f56044863708287f5745dc25433185c3,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3754,17e01340f56044863708287f5745dc25433185c3,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3755,17e01340f56044863708287f5745dc25433185c3,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3756,17e01340f56044863708287f5745dc25433185c3,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3757,17e01340f56044863708287f5745dc25433185c3,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3758,4347d61abe09578dd559d836358e59a918def5f9,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3759,4347d61abe09578dd559d836358e59a918def5f9,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3760,4347d61abe09578dd559d836358e59a918def5f9,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3761,4347d61abe09578dd559d836358e59a918def5f9,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3762,4347d61abe09578dd559d836358e59a918def5f9,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3763,7c10c4b92018bf55450e57aeeff21bef6af1b66a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3764,7c10c4b92018bf55450e57aeeff21bef6af1b66a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3765,7c10c4b92018bf55450e57aeeff21bef6af1b66a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3766,7c10c4b92018bf55450e57aeeff21bef6af1b66a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3767,7c10c4b92018bf55450e57aeeff21bef6af1b66a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3768,62a045d1145ab8436460838b45320dd75ab5ec3b,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3769,6e1a490a7164c5cd61f201c111932d0ed7ba6bff,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3770,6e1a490a7164c5cd61f201c111932d0ed7ba6bff,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3771,6e1a490a7164c5cd61f201c111932d0ed7ba6bff,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3772,6e1a490a7164c5cd61f201c111932d0ed7ba6bff,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3773,6e1a490a7164c5cd61f201c111932d0ed7ba6bff,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3774,8b67e92947bac03efd8041ef497b52155b6e385c,/phpmyadmin/Dockerfile,"# https://docs.phpmyadmin.net/en/latest/setup.html#verifying-phpmyadmin-releases
"
3775,8b67e92947bac03efd8041ef497b52155b6e385c,/phpmyadmin/Dockerfile,"# Since July 2015 all phpMyAdmin releases are cryptographically signed by the releasing developer, who through January 2016 was Marc Delisle.
"
3776,8b67e92947bac03efd8041ef497b52155b6e385c,/phpmyadmin/Dockerfile,"# Beginning in January 2016, the release manager is Isaac Bennetch.
"
3777,8b67e92947bac03efd8041ef497b52155b6e385c,/phpmyadmin/Dockerfile,"# Some additional downloads (for example themes) might be signed by Michal Čihař.
"
3778,87c3ef6e50dbc600b6775e1ca851d18b8a290d08,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3779,87c3ef6e50dbc600b6775e1ca851d18b8a290d08,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3780,87c3ef6e50dbc600b6775e1ca851d18b8a290d08,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3781,87c3ef6e50dbc600b6775e1ca851d18b8a290d08,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3782,87c3ef6e50dbc600b6775e1ca851d18b8a290d08,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3783,e414c931cef0aeaa0ba169b8cbffbd51031f1e02,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
3784,e414c931cef0aeaa0ba169b8cbffbd51031f1e02,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
3785,e414c931cef0aeaa0ba169b8cbffbd51031f1e02,/plex/media-server/Dockerfile,"# the published deb has pre/post-inst scripts that don't really apply to Docker (so we'll skip ""install"" entirely)
# (as of 1.18.5.2309, they have bugs around Docker detection, which is mostly for avoiding init behavior)
"
3786,e414c931cef0aeaa0ba169b8cbffbd51031f1e02,/plex/media-server/Dockerfile,"#	apt-get update; \
#	apt-get install /tmp/plex.deb; \
#	rm -rf /var/lib/apt/lists/*; \
"
3787,6e114bb51cde0a91dc928496fb6af4d0935893b2,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
3788,6e114bb51cde0a91dc928496fb6af4d0935893b2,/plex/media-server/Dockerfile,"# the published deb has pre/post-inst scripts that don't really apply to Docker (so we'll skip ""install"" entirely)
# (as of 1.18.5.2309, they have bugs around Docker detection, which is mostly for avoiding init behavior)
"
3789,6e114bb51cde0a91dc928496fb6af4d0935893b2,/plex/media-server/Dockerfile,"#	apt-get update; \
#	apt-get install /tmp/plex.deb; \
#	rm -rf /var/lib/apt/lists/*; \
"
3790,6e114bb51cde0a91dc928496fb6af4d0935893b2,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
3791,e056e65a80ab89aa2e6e8e0a97b2a910a5a9c8de,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3792,e056e65a80ab89aa2e6e8e0a97b2a910a5a9c8de,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3793,e056e65a80ab89aa2e6e8e0a97b2a910a5a9c8de,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3794,e056e65a80ab89aa2e6e8e0a97b2a910a5a9c8de,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3795,e056e65a80ab89aa2e6e8e0a97b2a910a5a9c8de,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3796,bffde3381c14486af628e439fb5eba195b96363f,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
3797,bffde3381c14486af628e439fb5eba195b96363f,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
3798,bffde3381c14486af628e439fb5eba195b96363f,/jenkins/Dockerfile,"# workaround ""apt-key adv --recv-keys"" hanging in stretch and above
"
3799,528ad08d3e9a38abfee526be960a81c443e15a9c,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3800,24010cd1e4b027ded63a112a6ed21a5f96c51178,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3801,24010cd1e4b027ded63a112a6ed21a5f96c51178,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3802,24010cd1e4b027ded63a112a6ed21a5f96c51178,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3803,24010cd1e4b027ded63a112a6ed21a5f96c51178,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3804,24010cd1e4b027ded63a112a6ed21a5f96c51178,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3805,9c741371cf6ae21853413a7dddcd623020bc2254,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3806,b92a10a4031f754c84d90d9162880ddd6da808e9,/containerd/Dockerfile,"# runtime deps
"
3807,b92a10a4031f754c84d90d9162880ddd6da808e9,/containerd/Dockerfile,"# https://github.com/opencontainers/runc/releases
"
3808,b92a10a4031f754c84d90d9162880ddd6da808e9,/containerd/Dockerfile,"# TODO .asc / .sha256sum
"
3809,b92a10a4031f754c84d90d9162880ddd6da808e9,/containerd/Dockerfile,"# https://github.com/containerd/containerd/releases
"
3810,3c11782a0258df19ac5ebaa60ece7e83a4071582,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
3811,d3c38eaa3bc8d408048dbe0265158dae10e08383,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3812,d3c38eaa3bc8d408048dbe0265158dae10e08383,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3813,d3c38eaa3bc8d408048dbe0265158dae10e08383,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3814,d3c38eaa3bc8d408048dbe0265158dae10e08383,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3815,d3c38eaa3bc8d408048dbe0265158dae10e08383,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3816,632d1c0405459a820a954fa0ce6a78c1fcd5416d,/xen-orchestra/Dockerfile,"# see https://xen-orchestra.com/docs/from_the_sources.html

"
3817,632d1c0405459a820a954fa0ce6a78c1fcd5416d,/xen-orchestra/Dockerfile,"# https://github.com/vatesfr/xen-orchestra/releases
"
3818,632d1c0405459a820a954fa0ce6a78c1fcd5416d,/xen-orchestra/Dockerfile,"# tone down the NPM log level (default from image is ""info"")
"
3819,632d1c0405459a820a954fa0ce6a78c1fcd5416d,/xen-orchestra/Dockerfile,"# https://docs.npmjs.com/misc/config#loglevel

"
3820,632d1c0405459a820a954fa0ce6a78c1fcd5416d,/xen-orchestra/Dockerfile,"#'/': '/path/to/xo-web/dist/'!'/': '../web/dist/'!"" \
"
3821,632d1c0405459a820a954fa0ce6a78c1fcd5416d,/xen-orchestra/Dockerfile,"#uri: redis://.*!uri: 'redis://redis:6379'!"" \
"
3822,604d07a2d8d4d5b750c7ca629526abd383ce8a14,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3823,604d07a2d8d4d5b750c7ca629526abd383ce8a14,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3824,604d07a2d8d4d5b750c7ca629526abd383ce8a14,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3825,604d07a2d8d4d5b750c7ca629526abd383ce8a14,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3826,604d07a2d8d4d5b750c7ca629526abd383ce8a14,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3827,9c0f5052431fdc0bc9f44764a3338acee6126a8e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3828,9c0f5052431fdc0bc9f44764a3338acee6126a8e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3829,9c0f5052431fdc0bc9f44764a3338acee6126a8e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3830,9c0f5052431fdc0bc9f44764a3338acee6126a8e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3831,9c0f5052431fdc0bc9f44764a3338acee6126a8e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3832,d1ed7a23284d896fdf3c4d82a516b8b21d45e146,/github-pages/Dockerfile,"# https://pages.github.com/versions/
"
3833,2f594212d1164e9242fd9bd3280f9b6105768078,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3834,2f594212d1164e9242fd9bd3280f9b6105768078,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3835,2f594212d1164e9242fd9bd3280f9b6105768078,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3836,2f594212d1164e9242fd9bd3280f9b6105768078,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3837,2f594212d1164e9242fd9bd3280f9b6105768078,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3838,7d6150c537791912e37a483cd5c91b2e086c25db,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3839,68aa2d19f805bb40e74e4b62f225cfaa9c3e54bc,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3840,68aa2d19f805bb40e74e4b62f225cfaa9c3e54bc,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3841,68aa2d19f805bb40e74e4b62f225cfaa9c3e54bc,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3842,68aa2d19f805bb40e74e4b62f225cfaa9c3e54bc,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3843,68aa2d19f805bb40e74e4b62f225cfaa9c3e54bc,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3844,90c22147f70cc32ad1833eaf291f23372270f17d,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3845,90c22147f70cc32ad1833eaf291f23372270f17d,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3846,90c22147f70cc32ad1833eaf291f23372270f17d,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3847,90c22147f70cc32ad1833eaf291f23372270f17d,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3848,90c22147f70cc32ad1833eaf291f23372270f17d,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3849,a41eea97dfeba4d6c91db7495382dad3429785c3,/dell-netextender/Dockerfile,"# https://sslvpn.demo.sonicwall.com
#   u: demo    p: password

"
3850,a41eea97dfeba4d6c91db7495382dad3429785c3,/dell-netextender/Dockerfile,"# NetExtender connected successfully. Type ""Ctrl-c"" to disconnect...
"
3851,5263101275f7077c07b582e9c107ce9f1d5c0f90,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
3852,5263101275f7077c07b582e9c107ce9f1d5c0f90,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
3853,5263101275f7077c07b582e9c107ce9f1d5c0f90,/plex/media-server/Dockerfile,"# the published deb has pre/post-inst scripts that don't really apply to Docker (so we'll skip ""install"" entirely)
# (as of 1.18.5.2309, they have bugs around Docker detection, which is mostly for avoiding init behavior)
"
3854,5263101275f7077c07b582e9c107ce9f1d5c0f90,/plex/media-server/Dockerfile,"#	apt-get update; \
#	apt-get install /tmp/plex.deb; \
#	rm -rf /var/lib/apt/lists/*; \
"
3855,4d8f0d12f7974b4434551bf86cf66805f4754a59,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
3856,4d8f0d12f7974b4434551bf86cf66805f4754a59,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
3857,4d8f0d12f7974b4434551bf86cf66805f4754a59,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
3858,4d8f0d12f7974b4434551bf86cf66805f4754a59,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
3859,4d8f0d12f7974b4434551bf86cf66805f4754a59,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
3860,cac88f550c7a53d9b4efab53cc6ffdb40013af5b,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3861,cac88f550c7a53d9b4efab53cc6ffdb40013af5b,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3862,cac88f550c7a53d9b4efab53cc6ffdb40013af5b,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3863,cac88f550c7a53d9b4efab53cc6ffdb40013af5b,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3864,cac88f550c7a53d9b4efab53cc6ffdb40013af5b,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3865,bb0cbb72ce58ddad9ed974f098bdb33f6211d489,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3866,60cafb7b23a00f115f1f82bd87ac8737375a5f0c,/makemkv/Dockerfile,"# FPL_MainFeature detection only seemed to work with OpenJDK 9 (8 was insufficient)
"
3867,60cafb7b23a00f115f1f82bd87ac8737375a5f0c,/makemkv/Dockerfile,"# This disc requires Java runtime (JRE), but none was found. Certain functions will fail, please install Java. See http://www.makemkv.com/bdjava/ for details.
"
3868,60cafb7b23a00f115f1f82bd87ac8737375a5f0c,/makemkv/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
3869,60cafb7b23a00f115f1f82bd87ac8737375a5f0c,/makemkv/Dockerfile,"# http://www.makemkv.com/forum2/viewtopic.php?f=3&t=224
"
3870,60cafb7b23a00f115f1f82bd87ac8737375a5f0c,/makemkv/Dockerfile,"# beta code: http://www.makemkv.com/forum2/viewtopic.php?f=5&t=1053
"
3871,60cafb7b23a00f115f1f82bd87ac8737375a5f0c,/makemkv/Dockerfile,"# pub   dsa2048 2017-05-26 [SC]
#       2ECF 2330 5F1F C0B3 2001  6733 94E3 083A 1804 2697
# uid           [ unknown] MakeMKV (signature) <support@makemkv.com>
"
3872,6c177e36033425611ad73529abc72d9596b47502,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3873,6c177e36033425611ad73529abc72d9596b47502,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3874,6c177e36033425611ad73529abc72d9596b47502,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3875,6c177e36033425611ad73529abc72d9596b47502,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3876,6c177e36033425611ad73529abc72d9596b47502,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3877,c73dd581d46c681cea1c1ae8216887d1d2140b52,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3878,c73dd581d46c681cea1c1ae8216887d1d2140b52,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3879,c73dd581d46c681cea1c1ae8216887d1d2140b52,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3880,c73dd581d46c681cea1c1ae8216887d1d2140b52,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3881,c73dd581d46c681cea1c1ae8216887d1d2140b52,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3882,8a9bd317bd62a94abe6c2e3b28d37c0ea1f08625,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
3883,673fba0348f71a95c9d35f1cb0e55041e4156448,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
3884,673fba0348f71a95c9d35f1cb0e55041e4156448,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
"
3885,fad20a9652a9612c52b44e19a0ec2f57482a6eca,/vultr-cli/Dockerfile,"# https://github.com/vultr/vultr-cli/releases
"
3886,8a3f8dd7f4ba3a4a8daadf8342d6fe3aa4df297d,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3887,8a3f8dd7f4ba3a4a8daadf8342d6fe3aa4df297d,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3888,8a3f8dd7f4ba3a4a8daadf8342d6fe3aa4df297d,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3889,8a3f8dd7f4ba3a4a8daadf8342d6fe3aa4df297d,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3890,8a3f8dd7f4ba3a4a8daadf8342d6fe3aa4df297d,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3891,a5d820803f01e2582d45be1b00a2808ede979951,/xen-orchestra/Dockerfile,"# see https://github.com/vatesfr/xo/blob/master/installation.md

"
3892,a5d820803f01e2582d45be1b00a2808ede979951,/xen-orchestra/Dockerfile,"# TODO use links to get a redis server/database instead (since that's where configuration actually goes)
"
3893,a5d820803f01e2582d45be1b00a2808ede979951,/xen-orchestra/Dockerfile,"# TODO see note above about redis
"
3894,3440bd84e2aa7ad9d08e34c777a814590f74dd91,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3895,3440bd84e2aa7ad9d08e34c777a814590f74dd91,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3896,3440bd84e2aa7ad9d08e34c777a814590f74dd91,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3897,3440bd84e2aa7ad9d08e34c777a814590f74dd91,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3898,3440bd84e2aa7ad9d08e34c777a814590f74dd91,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3899,9ccbaca79ff2d0230b98308aa66cb5885182c35a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3900,9ccbaca79ff2d0230b98308aa66cb5885182c35a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3901,9ccbaca79ff2d0230b98308aa66cb5885182c35a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3902,9ccbaca79ff2d0230b98308aa66cb5885182c35a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3903,9ccbaca79ff2d0230b98308aa66cb5885182c35a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3904,e6da040af07746dd83947322a02057ab5f937058,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3905,e6da040af07746dd83947322a02057ab5f937058,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3906,e6da040af07746dd83947322a02057ab5f937058,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3907,e6da040af07746dd83947322a02057ab5f937058,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3908,e6da040af07746dd83947322a02057ab5f937058,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3909,c338e5d6d98b124a45ad16e06ca3d7f0ca7c4908,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3910,8073dfc2af27b71298f0130acab2b3653b31907f,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3911,47ba9f390c1a8857fef1fd041673bf30835e2d17,/sbuild/Dockerfile,"# run with ""--cap-add SYS_ADMIN"" so that sbuild can ""mount"" in the chroots it creates

"
3912,47ba9f390c1a8857fef1fd041673bf30835e2d17,/sbuild/Dockerfile,"# https://gist.github.com/tianon/a0080cbca558e4b907fe
# (useful sbuild-related scripts)
"
3913,47ba9f390c1a8857fef1fd041673bf30835e2d17,/sbuild/Dockerfile,"# usage: download-debuerreotype-tarball.sh suite [arch]
#    ie: download-debuerreotype-tarball.sh stretch
#        download-debuerreotype-tarball.sh sid i386
"
3914,3a5e692ae04c7f3f1aaf9b26003cfd799d3656cf,/skype/Dockerfile,"# see https://repo.skype.com

"
3915,3a5e692ae04c7f3f1aaf9b26003cfd799d3656cf,/skype/Dockerfile,"# https://repo.skype.com/data/SKYPE-GPG-KEY
"
3916,3a5e692ae04c7f3f1aaf9b26003cfd799d3656cf,/skype/Dockerfile,"# pub   2048R/DF7587C3 2016-06-22 [expires: 2021-06-21]
#       Key fingerprint = D404 0146 BE39 7250 9FD5  7FC7 1F30 45A5 DF75 87C3
# uid                  Skype Linux Client Repository <se-um@microsoft.com>
# sub   2048R/A4EBB320 2016-06-22 [expires: 2021-06-21]
"
3917,c99a47b15c85df9c8528a36d6f4c4150b7dc979f,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
3918,c99a47b15c85df9c8528a36d6f4c4150b7dc979f,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
3919,c99a47b15c85df9c8528a36d6f4c4150b7dc979f,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
3920,85b48e45125d1cc88b5c68d717a5fbef1af63f6b,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
3921,d297e19a3984825ec8293ffb956519988ca881a9,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
3922,d297e19a3984825ec8293ffb956519988ca881a9,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
3923,d297e19a3984825ec8293ffb956519988ca881a9,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
3924,225bfed7e35bf9123f0e6c48fcb2df7964ee37bf,/docker/master/dind/Dockerfile,"# https://github.com/docker/docker/blob/master/project/PACKAGERS.md#runtime-dependencies
"
3925,225bfed7e35bf9123f0e6c48fcb2df7964ee37bf,/docker/master/dind/Dockerfile,"# TODO aufs-tools

"
3926,0f11a764a4b6d72a17d0a7eef62d970a6b90031f,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3927,b7111bb0b9cf2cbb1de41211ffa082a5b174648f,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3928,b3db457741b0da034ac3d47e53d7c2723e90250a,/nylas-n1/Dockerfile,"# hijack the browser in the worst way possible
"
3929,b3db457741b0da034ac3d47e53d7c2723e90250a,/nylas-n1/Dockerfile,"#!/bin/bash'; \
"
3930,0cbdfeef279dc14a54cd07292584a74c83f31add,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3931,0cbdfeef279dc14a54cd07292584a74c83f31add,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3932,0cbdfeef279dc14a54cd07292584a74c83f31add,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3933,0cbdfeef279dc14a54cd07292584a74c83f31add,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3934,0cbdfeef279dc14a54cd07292584a74c83f31add,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3935,b7d0f064f21c268f1830ee8c8b10fe2eed775f6f,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3936,09e19373a014c52eb35a9d07b981b9c6d31409dd,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3937,d4fe4b70c4cbac1fb33a08aadd21c0ebd98a25f6,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
3938,d4fe4b70c4cbac1fb33a08aadd21c0ebd98a25f6,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
3939,d4fe4b70c4cbac1fb33a08aadd21c0ebd98a25f6,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
3940,d4fe4b70c4cbac1fb33a08aadd21c0ebd98a25f6,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
3941,d4fe4b70c4cbac1fb33a08aadd21c0ebd98a25f6,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
3942,39a4511686382f1a673d48ed26b8314827881c51,/debian/devel/Dockerfile,"# normal build deps
"
3943,39a4511686382f1a673d48ed26b8314827881c51,/debian/devel/Dockerfile,"# need deb-src for compiling packages
"
3944,39a4511686382f1a673d48ed26b8314827881c51,/debian/devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
3945,39a4511686382f1a673d48ed26b8314827881c51,/debian/devel/Dockerfile,"# for ssh to debian hosts, let's make sure we know their fingerprints <3
"
3946,39a4511686382f1a673d48ed26b8314827881c51,/debian/devel/Dockerfile,"# make sure things are pretty
"
3947,39a4511686382f1a673d48ed26b8314827881c51,/debian/devel/Dockerfile,"#(force_color_prompt=yes)/\1/' ~/.bashrc

# quilt is much amaze: https://wiki.debian.org/UsingQuilt#Using_quilt_with_Debian_source_packages
"
3948,a70b767eacee0aba36fd2214f9b3626e43e71cf5,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3949,0ae58c0bc42fe621eb5923049d0fe2dc6622a7a2,/gmpydl/Dockerfile,"# https://pypi.org/project/gmusicapi/
"
3950,0ae58c0bc42fe621eb5923049d0fe2dc6622a7a2,/gmpydl/Dockerfile,"# https://github.com/stevenewbs/gmpydl/commits/master
# https://github.com/stevenewbs/gmpydl/releases
"
3951,2e37f527a42e05e8b9e62a84ec34355edae69e47,/apache2/Dockerfile,"# let's copy a few of the settings from /etc/init.d/apache2
"
3952,2e37f527a42e05e8b9e62a84ec34355edae69e47,/apache2/Dockerfile,"# and then a few more from $APACHE_CONFDIR/envvars itself
"
3953,2e37f527a42e05e8b9e62a84ec34355edae69e47,/apache2/Dockerfile,"# ...
"
3954,2e37f527a42e05e8b9e62a84ec34355edae69e47,/apache2/Dockerfile,"# I really don't like Apache.  Irrationally.
"
3955,b50eda1a72c3d657562060609b419325649d7b4b,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
3956,60026184bee861b7db738753bdf12568c37a7478,/jenkins/weekly/Dockerfile,"# grab gosu for easy step-down from root
"
3957,60026184bee861b7db738753bdf12568c37a7478,/jenkins/weekly/Dockerfile,"# grab tini for signal processing and zombie killing
"
3958,60026184bee861b7db738753bdf12568c37a7478,/jenkins/weekly/Dockerfile,"# https://groups.google.com/d/msg/jenkins-infra/c7m_72vUTXE/37zw9GXhAQAJ
"
3959,60026184bee861b7db738753bdf12568c37a7478,/jenkins/weekly/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
3960,9f5fd4023d0e207febf40bbfcee5f618936ef3f2,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
3961,9f5fd4023d0e207febf40bbfcee5f618936ef3f2,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
3962,c7eb1429e72e06f2c147dac1c10bf8386a99c972,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3963,c7eb1429e72e06f2c147dac1c10bf8386a99c972,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3964,c7eb1429e72e06f2c147dac1c10bf8386a99c972,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3965,c7eb1429e72e06f2c147dac1c10bf8386a99c972,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3966,c7eb1429e72e06f2c147dac1c10bf8386a99c972,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3967,32476ba6961eed4e26c6b23bc09bf738436870eb,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3968,32476ba6961eed4e26c6b23bc09bf738436870eb,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3969,32476ba6961eed4e26c6b23bc09bf738436870eb,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3970,32476ba6961eed4e26c6b23bc09bf738436870eb,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3971,32476ba6961eed4e26c6b23bc09bf738436870eb,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3972,e26dbdf5c537efc58f61d672626aaed15cdf0ac4,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3973,e26dbdf5c537efc58f61d672626aaed15cdf0ac4,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3974,e26dbdf5c537efc58f61d672626aaed15cdf0ac4,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3975,e26dbdf5c537efc58f61d672626aaed15cdf0ac4,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3976,e26dbdf5c537efc58f61d672626aaed15cdf0ac4,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3977,7693cabc41bb6897c39c6d463d77fb446153998b,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
3978,7693cabc41bb6897c39c6d463d77fb446153998b,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
3979,7693cabc41bb6897c39c6d463d77fb446153998b,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
3980,7693cabc41bb6897c39c6d463d77fb446153998b,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
3981,7693cabc41bb6897c39c6d463d77fb446153998b,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
3982,bb56a63b58d48c42fcadfb17eb0ec8b26c41c870,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3983,bb56a63b58d48c42fcadfb17eb0ec8b26c41c870,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3984,bb56a63b58d48c42fcadfb17eb0ec8b26c41c870,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3985,bb56a63b58d48c42fcadfb17eb0ec8b26c41c870,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3986,bb56a63b58d48c42fcadfb17eb0ec8b26c41c870,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3987,448a48c707ccf66391cbde3c463a52e0aa9a9c1c,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3988,448a48c707ccf66391cbde3c463a52e0aa9a9c1c,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3989,448a48c707ccf66391cbde3c463a52e0aa9a9c1c,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3990,448a48c707ccf66391cbde3c463a52e0aa9a9c1c,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3991,448a48c707ccf66391cbde3c463a52e0aa9a9c1c,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3992,9ce0908a6dedb99f30beafef128128e4ccdce6d4,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
3993,9ce0908a6dedb99f30beafef128128e4ccdce6d4,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
3994,9ce0908a6dedb99f30beafef128128e4ccdce6d4,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
3995,9ce0908a6dedb99f30beafef128128e4ccdce6d4,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
3996,9ce0908a6dedb99f30beafef128128e4ccdce6d4,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
3997,88a147c9b01c49ae51c623fa7200fe4b78198f6e,/debian/devel/Dockerfile,"# normal build deps
"
3998,88a147c9b01c49ae51c623fa7200fe4b78198f6e,/debian/devel/Dockerfile,"# need deb-src for compiling packages
"
3999,88a147c9b01c49ae51c623fa7200fe4b78198f6e,/debian/devel/Dockerfile,"# let's make apt list package versions, since those are handy during devel
"
4000,88a147c9b01c49ae51c623fa7200fe4b78198f6e,/debian/devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
4001,88a147c9b01c49ae51c623fa7200fe4b78198f6e,/debian/devel/Dockerfile,"# for ssh to debian hosts, let's make sure we know their fingerprints <3
"
4002,88a147c9b01c49ae51c623fa7200fe4b78198f6e,/debian/devel/Dockerfile,"# make sure things are pretty
"
4003,88a147c9b01c49ae51c623fa7200fe4b78198f6e,/debian/devel/Dockerfile,"#(force_color_prompt=yes)/\1/' ~/.bashrc

# quilt is much amaze: https://wiki.debian.org/UsingQuilt#Using_quilt_with_Debian_source_packages
"
4004,88a147c9b01c49ae51c623fa7200fe4b78198f6e,/debian/devel/Dockerfile,"# make sure pbuilder-dist uses a sane default mirror
"
4005,1e22ac1ac4baf27471e5d7690e0166656c0d1edc,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4006,1e22ac1ac4baf27471e5d7690e0166656c0d1edc,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4007,1e22ac1ac4baf27471e5d7690e0166656c0d1edc,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4008,1e22ac1ac4baf27471e5d7690e0166656c0d1edc,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4009,1e22ac1ac4baf27471e5d7690e0166656c0d1edc,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4010,6d87dc6a2de4e3d09f409eb6c0d59fd3065f046a,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4011,79732fc2b0df47b65df1f5f5f7c07619307858fb,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4012,79732fc2b0df47b65df1f5f5f7c07619307858fb,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4013,79732fc2b0df47b65df1f5f5f7c07619307858fb,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4014,79732fc2b0df47b65df1f5f5f7c07619307858fb,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4015,79732fc2b0df47b65df1f5f5f7c07619307858fb,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4016,268188854fb3f0da48fe6700be7a5bd7b2a58bba,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4017,268188854fb3f0da48fe6700be7a5bd7b2a58bba,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
4018,268188854fb3f0da48fe6700be7a5bd7b2a58bba,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
4019,268188854fb3f0da48fe6700be7a5bd7b2a58bba,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
4020,268188854fb3f0da48fe6700be7a5bd7b2a58bba,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
4021,5588e89d15eaa032223a1f0c05ed9a5733382bcf,/qemu/Dockerfile,"#		qemu-system \
#		qemu-utils \
"
4022,5588e89d15eaa032223a1f0c05ed9a5733382bcf,/qemu/Dockerfile,"# https://www.qemu.org/download/#source
"
4023,5588e89d15eaa032223a1f0c05ed9a5733382bcf,/qemu/Dockerfile,"# TODO verify signature
"
4024,5588e89d15eaa032223a1f0c05ed9a5733382bcf,/qemu/Dockerfile,"# system targets
# (https://sources.debian.org/src/qemu/stretch/debian/rules/#L57-L61, slimmed)
"
4025,5588e89d15eaa032223a1f0c05ed9a5733382bcf,/qemu/Dockerfile,"# user targets
# (https://sources.debian.org/src/qemu/stretch/debian/rules/#L81-L86, slimmed)
"
4026,5588e89d15eaa032223a1f0c05ed9a5733382bcf,/qemu/Dockerfile,"#		--enable-rbd \
#		--enable-vde \
"
4027,82dff9eeced452d669ab0045364b5d89328586af,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4028,aae72a775b9c3cee67dcc40e888293dcb4f5ede0,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4029,adaa95f093734795175b24bc3a3c6a8ec4cba912,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4030,1f13886bfee0eb32b5d8094ee015ef3f793ef7b2,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4031,1f13886bfee0eb32b5d8094ee015ef3f793ef7b2,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4032,1f13886bfee0eb32b5d8094ee015ef3f793ef7b2,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4033,1f13886bfee0eb32b5d8094ee015ef3f793ef7b2,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4034,1f13886bfee0eb32b5d8094ee015ef3f793ef7b2,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4035,cfc626be3671cd10a04e7157d031fd7cbec5b3bc,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4036,cfc626be3671cd10a04e7157d031fd7cbec5b3bc,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
4037,cfc626be3671cd10a04e7157d031fd7cbec5b3bc,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
4038,cfc626be3671cd10a04e7157d031fd7cbec5b3bc,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
4039,cfc626be3671cd10a04e7157d031fd7cbec5b3bc,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
4040,7457bc266c5b740b95c68467b0433407214f501c,/prometheus/Dockerfile,"# https://github.com/prometheus/prometheus/releases
"
4041,d0c5936cf64d23113eac4e9872cf52b8ccb93e63,/nginx/Dockerfile,"# prevent backgrounding (for Docker)\ndaemon off;' >> /etc/nginx/nginx.conf

"
4042,28944bd606b19367b154ed191f4950c852bbdd84,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4043,366805e14c35a352b2e6593270e446a2e78715e6,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4044,366805e14c35a352b2e6593270e446a2e78715e6,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
4045,366805e14c35a352b2e6593270e446a2e78715e6,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
4046,cfe33e4e7664ecfc89f9aa1cfe77560d4af2a6c6,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4047,57cae9900e5a0bf1f0603d8da8c14f5fb0735b2c,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4048,57cae9900e5a0bf1f0603d8da8c14f5fb0735b2c,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4049,57cae9900e5a0bf1f0603d8da8c14f5fb0735b2c,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4050,57cae9900e5a0bf1f0603d8da8c14f5fb0735b2c,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4051,57cae9900e5a0bf1f0603d8da8c14f5fb0735b2c,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4052,e3872662187caddf9bf72536532a2e197df12b51,/skype/Dockerfile,"# see https://repo.skype.com

"
4053,e3872662187caddf9bf72536532a2e197df12b51,/skype/Dockerfile,"# wget is invoked by skypeforlinux for crash reports
"
4054,e3872662187caddf9bf72536532a2e197df12b51,/skype/Dockerfile,"# https://repo.skype.com/data/SKYPE-GPG-KEY
"
4055,e3872662187caddf9bf72536532a2e197df12b51,/skype/Dockerfile,"# pub   2048R/DF7587C3 2016-06-22 [expires: 2021-06-21]
#       Key fingerprint = D404 0146 BE39 7250 9FD5  7FC7 1F30 45A5 DF75 87C3
# uid                  Skype Linux Client Repository <se-um@microsoft.com>
# sub   2048R/A4EBB320 2016-06-22 [expires: 2021-06-21]
"
4056,5dbe0b0ee2941a4b1cf0d121d57b089ec41e7612,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4057,5dbe0b0ee2941a4b1cf0d121d57b089ec41e7612,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4058,5dbe0b0ee2941a4b1cf0d121d57b089ec41e7612,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4059,5dbe0b0ee2941a4b1cf0d121d57b089ec41e7612,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4060,5dbe0b0ee2941a4b1cf0d121d57b089ec41e7612,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4061,c20bb01c92bb87c2d15782252209e3d4225da8f0,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4062,c20bb01c92bb87c2d15782252209e3d4225da8f0,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
4063,c20bb01c92bb87c2d15782252209e3d4225da8f0,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
4064,a6fd50185d232c0ce9d38091564ceb0dc42d8b93,/slack/Dockerfile,"# used as a fake browser so clicked URLs (and internal Slack behavior that wants to open a browser) pop up with a URL + clipboard instead of silently doing nothing
"
4065,a6fd50185d232c0ce9d38091564ceb0dc42d8b93,/slack/Dockerfile,"# the .deb file linked at https://slack.com/downloads/instructions/debian includes ""/etc/cron.daily/slack"" which sets up an APT repo entry as in the following installation

# pub   rsa4096 2016-02-18 [SCEA]
#       DB08 5A08 CA13 B8AC B917  E0F6 D938 EC0D 0386 51BD
# uid           [ unknown] https://packagecloud.io/slacktechnologies/slack (https://packagecloud.io/docs#gpg_signing) <support@packagecloud.io>
# sub   rsa4096 2016-02-18 [SEA]
"
4066,a6fd50185d232c0ce9d38091564ceb0dc42d8b93,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libX11-xcb.so.1: cannot open shared object file: No such file or directory
"
4067,a6fd50185d232c0ce9d38091564ceb0dc42d8b93,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libasound.so.2: cannot open shared object file: No such file or directory
"
4068,a6fd50185d232c0ce9d38091564ceb0dc42d8b93,/slack/Dockerfile,"# 3.3.3: slack: error while loading shared libraries: libgtk-3.so.0: cannot open shared object file: No such file or directory
"
4069,a6fd50185d232c0ce9d38091564ceb0dc42d8b93,/slack/Dockerfile,"# 4.4.0: Error: libxkbfile.so.1: cannot open shared object file: No such file or directory
"
4070,a6fd50185d232c0ce9d38091564ceb0dc42d8b93,/slack/Dockerfile,"# 4.4.0: libGL error: failed to load driver: (i915_dri.so, i194, i965, swrast_dir.so, swrast)
"
4071,1348a0d41489549cddf60410a03b60e65585f9ac,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4072,1348a0d41489549cddf60410a03b60e65585f9ac,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4073,1348a0d41489549cddf60410a03b60e65585f9ac,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4074,1348a0d41489549cddf60410a03b60e65585f9ac,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4075,1348a0d41489549cddf60410a03b60e65585f9ac,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4076,8172369341ea74da6a6958ebe65235b2677d06f3,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4077,8172369341ea74da6a6958ebe65235b2677d06f3,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4078,8172369341ea74da6a6958ebe65235b2677d06f3,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4079,8172369341ea74da6a6958ebe65235b2677d06f3,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4080,8172369341ea74da6a6958ebe65235b2677d06f3,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4081,3b1f4b468ac94950351e544c72b961ee8ee08fe6,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4082,3b1f4b468ac94950351e544c72b961ee8ee08fe6,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4083,3b1f4b468ac94950351e544c72b961ee8ee08fe6,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4084,3b1f4b468ac94950351e544c72b961ee8ee08fe6,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4085,3b1f4b468ac94950351e544c72b961ee8ee08fe6,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4086,ee1e4d7b645bfac3a4e605778782ef79fd49b63b,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4087,ee1e4d7b645bfac3a4e605778782ef79fd49b63b,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4088,ee1e4d7b645bfac3a4e605778782ef79fd49b63b,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4089,ee1e4d7b645bfac3a4e605778782ef79fd49b63b,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4090,ee1e4d7b645bfac3a4e605778782ef79fd49b63b,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4091,0ddca343b41b32cfd7855e63cea472975f573c03,/pmbootstrap/Dockerfile,"# https://gitlab.alpinelinux.org/alpine/aports/issues/11122
"
4092,0ddca343b41b32cfd7855e63cea472975f573c03,/pmbootstrap/Dockerfile,"# verify there are no errors/warnings
"
4093,0ddca343b41b32cfd7855e63cea472975f573c03,/pmbootstrap/Dockerfile,"# https://pypi.org/project/pmbootstrap/
"
4094,0ddca343b41b32cfd7855e63cea472975f573c03,/pmbootstrap/Dockerfile,"# workaround issues with transparent QEMU / binfmt detection (""fix binary"" -- qemu binaries not necessary inside chroots/namespaces)
"
4095,4ae23bbe3303733453a4fb86777680e3c8242ae3,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4096,43c1bc11c7839ce8647855794c2a46936871824f,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4097,30bbea799b0ab0a9f482a0f78a843907c9a17a6d,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4098,30bbea799b0ab0a9f482a0f78a843907c9a17a6d,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
4099,30bbea799b0ab0a9f482a0f78a843907c9a17a6d,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
4100,30bbea799b0ab0a9f482a0f78a843907c9a17a6d,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
4101,30bbea799b0ab0a9f482a0f78a843907c9a17a6d,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
4102,4158c9bc0e3270322b901f8189de980b2df91db6,/phpmyadmin/Dockerfile,"# https://www.phpmyadmin.net/downloads/
"
4103,4158c9bc0e3270322b901f8189de980b2df91db6,/phpmyadmin/Dockerfile,"# https://docs.phpmyadmin.net/en/latest/setup.html#verifying-phpmyadmin-releases
"
4104,4158c9bc0e3270322b901f8189de980b2df91db6,/phpmyadmin/Dockerfile,"# Since July 2015 all phpMyAdmin releases are cryptographically signed by the releasing developer, who through January 2016 was Marc Delisle.
"
4105,4158c9bc0e3270322b901f8189de980b2df91db6,/phpmyadmin/Dockerfile,"# Beginning in January 2016, the release manager is Isaac Bennetch.
"
4106,4158c9bc0e3270322b901f8189de980b2df91db6,/phpmyadmin/Dockerfile,"# Some additional downloads (for example themes) might be signed by Michal Čihař.
"
4107,60eae8cba22d26a9ea499d8348f69b29673ceaf1,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4108,60eae8cba22d26a9ea499d8348f69b29673ceaf1,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4109,60eae8cba22d26a9ea499d8348f69b29673ceaf1,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4110,60eae8cba22d26a9ea499d8348f69b29673ceaf1,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4111,60eae8cba22d26a9ea499d8348f69b29673ceaf1,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4112,21738574416cf0165dd6df8a4c62df76748b4ee8,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4113,21738574416cf0165dd6df8a4c62df76748b4ee8,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4114,21738574416cf0165dd6df8a4c62df76748b4ee8,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4115,21738574416cf0165dd6df8a4c62df76748b4ee8,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4116,21738574416cf0165dd6df8a4c62df76748b4ee8,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4117,c681a89ab2be2591de3127ac0a1b2c8874f5deb2,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4118,c681a89ab2be2591de3127ac0a1b2c8874f5deb2,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4119,c681a89ab2be2591de3127ac0a1b2c8874f5deb2,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4120,c681a89ab2be2591de3127ac0a1b2c8874f5deb2,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4121,c681a89ab2be2591de3127ac0a1b2c8874f5deb2,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4122,b65f810d8e4f551517d4b2924c924b013e040972,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4123,b65f810d8e4f551517d4b2924c924b013e040972,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4124,b65f810d8e4f551517d4b2924c924b013e040972,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4125,b65f810d8e4f551517d4b2924c924b013e040972,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4126,b65f810d8e4f551517d4b2924c924b013e040972,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4127,f02adfab3156863841e6816ed4813207c6d92982,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4128,f02adfab3156863841e6816ed4813207c6d92982,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4129,f02adfab3156863841e6816ed4813207c6d92982,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4130,f02adfab3156863841e6816ed4813207c6d92982,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4131,f02adfab3156863841e6816ed4813207c6d92982,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4132,cda8a79174a1f0214acb3dd8e65e43e03b078cae,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4133,cda8a79174a1f0214acb3dd8e65e43e03b078cae,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4134,cda8a79174a1f0214acb3dd8e65e43e03b078cae,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4135,cda8a79174a1f0214acb3dd8e65e43e03b078cae,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4136,cda8a79174a1f0214acb3dd8e65e43e03b078cae,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4137,56d4e8d21f8a668fa26cf3ffd99b1d225dc3638a,/slack/Dockerfile,"# the .deb file linked at https://slack.com/downloads/instructions/debian includes ""/etc/cron.daily/slack"" which sets up an APT repo entry as in the following installation

# pub   rsa4096 2016-02-18 [SCEA]
#       DB08 5A08 CA13 B8AC B917  E0F6 D938 EC0D 0386 51BD
# uid           [ unknown] https://packagecloud.io/slacktechnologies/slack (https://packagecloud.io/docs#gpg_signing) <support@packagecloud.io>
# sub   rsa4096 2016-02-18 [SEA]
"
4138,56d4e8d21f8a668fa26cf3ffd99b1d225dc3638a,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libX11-xcb.so.1: cannot open shared object file: No such file or directory
"
4139,56d4e8d21f8a668fa26cf3ffd99b1d225dc3638a,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libasound.so.2: cannot open shared object file: No such file or directory
"
4140,56d4e8d21f8a668fa26cf3ffd99b1d225dc3638a,/slack/Dockerfile,"# 3.3.3: slack: error while loading shared libraries: libgtk-3.so.0: cannot open shared object file: No such file or directory
"
4141,4c1b4a5fac92ebc2db1db01feeef05079749ac99,/debian/devel/Dockerfile,"# normal build deps
"
4142,4c1b4a5fac92ebc2db1db01feeef05079749ac99,/debian/devel/Dockerfile,"# need an editor for ""dch -i""
"
4143,4c1b4a5fac92ebc2db1db01feeef05079749ac99,/debian/devel/Dockerfile,"# a few extra little useful things
"
4144,4c1b4a5fac92ebc2db1db01feeef05079749ac99,/debian/devel/Dockerfile,"# need deb-src for compiling packages
"
4145,4c1b4a5fac92ebc2db1db01feeef05079749ac99,/debian/devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
4146,4c1b4a5fac92ebc2db1db01feeef05079749ac99,/debian/devel/Dockerfile,"# for ssh to debian hosts, let's make sure we know their fingerprints <3
"
4147,4c1b4a5fac92ebc2db1db01feeef05079749ac99,/debian/devel/Dockerfile,"# make sure things are pretty
"
4148,4c1b4a5fac92ebc2db1db01feeef05079749ac99,/debian/devel/Dockerfile,"#(force_color_prompt=yes)/\1/' /root/.bashrc

# quilt is much amaze: https://wiki.debian.org/UsingQuilt#Using_quilt_with_Debian_source_packages
"
4149,5546017a9369e7e4fd90ab43c59d6a384a036600,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4150,5546017a9369e7e4fd90ab43c59d6a384a036600,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4151,5546017a9369e7e4fd90ab43c59d6a384a036600,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4152,5546017a9369e7e4fd90ab43c59d6a384a036600,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4153,5546017a9369e7e4fd90ab43c59d6a384a036600,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4154,62cf23c2b8f38a650f4d2bf6291260596ed9f952,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4155,9015d8ced0c363d427efa289a65c0b4e17f3caa9,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4156,9015d8ced0c363d427efa289a65c0b4e17f3caa9,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4157,9015d8ced0c363d427efa289a65c0b4e17f3caa9,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4158,9015d8ced0c363d427efa289a65c0b4e17f3caa9,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4159,9015d8ced0c363d427efa289a65c0b4e17f3caa9,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4160,cb5dc0fd34de7dabba336e826186349d177b20ab,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
4161,cb5dc0fd34de7dabba336e826186349d177b20ab,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
4162,cb5dc0fd34de7dabba336e826186349d177b20ab,/plex/media-server/Dockerfile,"# the published deb has pre/post-inst scripts that don't really apply to Docker (so we'll skip ""install"" entirely)
# (as of 1.18.5.2309, they have bugs around Docker detection, which is mostly for avoiding init behavior)
"
4163,cb5dc0fd34de7dabba336e826186349d177b20ab,/plex/media-server/Dockerfile,"#	apt-get update; \
#	apt-get install /tmp/plex.deb; \
#	rm -rf /var/lib/apt/lists/*; \
"
4164,c6fb1477c0c13e8973445fd3dbf14a4fc75bc43c,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4165,c6fb1477c0c13e8973445fd3dbf14a4fc75bc43c,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4166,c6fb1477c0c13e8973445fd3dbf14a4fc75bc43c,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4167,c6fb1477c0c13e8973445fd3dbf14a4fc75bc43c,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4168,c6fb1477c0c13e8973445fd3dbf14a4fc75bc43c,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4169,189794b666bd73feeb59af1b0e12e3e52cda5f64,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4170,51f0eb74e0e33c2a5ea5c4ac780268ff40fb109e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4171,51f0eb74e0e33c2a5ea5c4ac780268ff40fb109e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4172,51f0eb74e0e33c2a5ea5c4ac780268ff40fb109e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4173,51f0eb74e0e33c2a5ea5c4ac780268ff40fb109e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4174,51f0eb74e0e33c2a5ea5c4ac780268ff40fb109e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4175,84df85957db8a8492ac82b69b5fa04b8e6dc4269,/xen-orchestra/Dockerfile,"# see https://xen-orchestra.com/docs/from_the_sources.html

"
4176,84df85957db8a8492ac82b69b5fa04b8e6dc4269,/xen-orchestra/Dockerfile,"# https://github.com/vatesfr/xen-orchestra/releases
"
4177,84df85957db8a8492ac82b69b5fa04b8e6dc4269,/xen-orchestra/Dockerfile,"#'/': '/path/to/xo-web/dist/'!'/': '../xo-web/dist/'!"" \
"
4178,84df85957db8a8492ac82b69b5fa04b8e6dc4269,/xen-orchestra/Dockerfile,"#uri: redis://.*!uri: 'redis://redis:6379'!"" \
"
4179,ce097aa4b99c9bf259e2005e6e5e82e823a03075,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4180,ce097aa4b99c9bf259e2005e6e5e82e823a03075,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4181,ce097aa4b99c9bf259e2005e6e5e82e823a03075,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4182,ce097aa4b99c9bf259e2005e6e5e82e823a03075,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4183,ce097aa4b99c9bf259e2005e6e5e82e823a03075,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4184,b44e9b185efcd595fbbcdaf4eb2cbb56e22d61b8,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4185,b44e9b185efcd595fbbcdaf4eb2cbb56e22d61b8,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4186,b44e9b185efcd595fbbcdaf4eb2cbb56e22d61b8,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4187,b44e9b185efcd595fbbcdaf4eb2cbb56e22d61b8,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4188,b44e9b185efcd595fbbcdaf4eb2cbb56e22d61b8,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4189,ef30e1a74a2208b78f6bea3c64201fd332d2bb86,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4190,ef30e1a74a2208b78f6bea3c64201fd332d2bb86,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4191,ef30e1a74a2208b78f6bea3c64201fd332d2bb86,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4192,ef30e1a74a2208b78f6bea3c64201fd332d2bb86,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4193,ef30e1a74a2208b78f6bea3c64201fd332d2bb86,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4194,467c068c22156717def589010d2f13d0bebb6a9c,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4195,467c068c22156717def589010d2f13d0bebb6a9c,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
4196,467c068c22156717def589010d2f13d0bebb6a9c,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
4197,111d87749260acc6de757b848ac6a60fd7239abb,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4198,111d87749260acc6de757b848ac6a60fd7239abb,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4199,111d87749260acc6de757b848ac6a60fd7239abb,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4200,111d87749260acc6de757b848ac6a60fd7239abb,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4201,111d87749260acc6de757b848ac6a60fd7239abb,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4202,31a524240dee0b6c652daee5590a6dd424e1a145,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4203,31a524240dee0b6c652daee5590a6dd424e1a145,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
4204,31a524240dee0b6c652daee5590a6dd424e1a145,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
4205,31a524240dee0b6c652daee5590a6dd424e1a145,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
4206,31a524240dee0b6c652daee5590a6dd424e1a145,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
4207,820b017d780bc585325cf065e2b76075174fcf47,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4208,820b017d780bc585325cf065e2b76075174fcf47,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
4209,820b017d780bc585325cf065e2b76075174fcf47,/jenkins/Dockerfile,"# https://groups.google.com/d/msg/jenkins-infra/c7m_72vUTXE/37zw9GXhAQAJ
"
4210,820b017d780bc585325cf065e2b76075174fcf47,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
4211,f188057ed9be2a6bd14b82868f438ecd1c7c94bc,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4212,f188057ed9be2a6bd14b82868f438ecd1c7c94bc,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4213,f188057ed9be2a6bd14b82868f438ecd1c7c94bc,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4214,f188057ed9be2a6bd14b82868f438ecd1c7c94bc,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4215,f188057ed9be2a6bd14b82868f438ecd1c7c94bc,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4216,69d7c3fdb8b47b53cafe6a47d6ab079726fd8127,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4217,69d7c3fdb8b47b53cafe6a47d6ab079726fd8127,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
4218,69d7c3fdb8b47b53cafe6a47d6ab079726fd8127,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
4219,69d7c3fdb8b47b53cafe6a47d6ab079726fd8127,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
4220,69d7c3fdb8b47b53cafe6a47d6ab079726fd8127,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
4221,4021f848488b908085ec383d01407af9d911978a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4222,4021f848488b908085ec383d01407af9d911978a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4223,4021f848488b908085ec383d01407af9d911978a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4224,4021f848488b908085ec383d01407af9d911978a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4225,4021f848488b908085ec383d01407af9d911978a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4226,a1155c9262b5f1f8154348e74fd806c91e2a08ad,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4227,a1155c9262b5f1f8154348e74fd806c91e2a08ad,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
4228,a1155c9262b5f1f8154348e74fd806c91e2a08ad,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
4229,a1155c9262b5f1f8154348e74fd806c91e2a08ad,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
4230,a1155c9262b5f1f8154348e74fd806c91e2a08ad,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
4231,dd82eede4dcfdfeadd15dde8836a935d159aa2c4,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4232,dd82eede4dcfdfeadd15dde8836a935d159aa2c4,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
4233,dd82eede4dcfdfeadd15dde8836a935d159aa2c4,/jenkins/Dockerfile,"# https://groups.google.com/d/msg/jenkins-infra/c7m_72vUTXE/37zw9GXhAQAJ
"
4234,dd82eede4dcfdfeadd15dde8836a935d159aa2c4,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
4235,9333a5afa5c2f377d6bacef46659c81f4405969a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4236,9333a5afa5c2f377d6bacef46659c81f4405969a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4237,9333a5afa5c2f377d6bacef46659c81f4405969a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4238,9333a5afa5c2f377d6bacef46659c81f4405969a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4239,9333a5afa5c2f377d6bacef46659c81f4405969a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4240,eab8597f20eeae680c94b33b81421de776364638,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4241,eab8597f20eeae680c94b33b81421de776364638,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4242,eab8597f20eeae680c94b33b81421de776364638,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4243,eab8597f20eeae680c94b33b81421de776364638,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4244,eab8597f20eeae680c94b33b81421de776364638,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4245,b3cd62774f182cdd09fbc2c89fbe464e119b7666,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4246,7feccce59f1042ca63b74182af9c8313f523bfb6,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4247,7feccce59f1042ca63b74182af9c8313f523bfb6,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4248,7feccce59f1042ca63b74182af9c8313f523bfb6,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4249,7feccce59f1042ca63b74182af9c8313f523bfb6,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4250,7feccce59f1042ca63b74182af9c8313f523bfb6,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4251,9ccad090706aabe89dd1875646b3c5d51ad1a6cd,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4252,9ccad090706aabe89dd1875646b3c5d51ad1a6cd,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4253,9ccad090706aabe89dd1875646b3c5d51ad1a6cd,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4254,9ccad090706aabe89dd1875646b3c5d51ad1a6cd,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4255,9ccad090706aabe89dd1875646b3c5d51ad1a6cd,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4256,692bf4b090a35c3e101846a7cb25c4b53688a13c,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4257,692bf4b090a35c3e101846a7cb25c4b53688a13c,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4258,692bf4b090a35c3e101846a7cb25c4b53688a13c,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4259,692bf4b090a35c3e101846a7cb25c4b53688a13c,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4260,692bf4b090a35c3e101846a7cb25c4b53688a13c,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4261,11fe43a9129fdeb94495cc97a6094ccf217c31ad,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
4262,fe703cf4e128065ea7a601fe9f15ab231848ab28,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4263,fe703cf4e128065ea7a601fe9f15ab231848ab28,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4264,fe703cf4e128065ea7a601fe9f15ab231848ab28,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4265,fe703cf4e128065ea7a601fe9f15ab231848ab28,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4266,fe703cf4e128065ea7a601fe9f15ab231848ab28,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4267,38531b4fe35352bc84beb278c8484c879c7dd354,/makemkv/Dockerfile,"# http://www.makemkv.com/forum2/viewtopic.php?f=3&t=224
"
4268,38531b4fe35352bc84beb278c8484c879c7dd354,/makemkv/Dockerfile,"# beta code: http://www.makemkv.com/forum2/viewtopic.php?f=5&t=1053
"
4269,3f5483ffa4f790d4a4da610421f0b62ee7c3cdca,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4270,3f5483ffa4f790d4a4da610421f0b62ee7c3cdca,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4271,3f5483ffa4f790d4a4da610421f0b62ee7c3cdca,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4272,3f5483ffa4f790d4a4da610421f0b62ee7c3cdca,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4273,3f5483ffa4f790d4a4da610421f0b62ee7c3cdca,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4274,9333a5afa5c2f377d6bacef46659c81f4405969a,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4275,1a0b04e201296bd5020d8a851f0e54757498f0fb,/mutt-gmail/Dockerfile,"# a browser is necessary!
"
4276,1a0b04e201296bd5020d8a851f0e54757498f0fb,/mutt-gmail/Dockerfile,"# my preferred editor :) (see also muttrc)
"
4277,1a0b04e201296bd5020d8a851f0e54757498f0fb,/mutt-gmail/Dockerfile,"# ""No authenticators available""
"
4278,f4b0f5be45d4e25e14b3b329fba53b4b1a4bb4af,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4279,893f0de110037acd89e26339478ad0606cf1d870,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4280,893f0de110037acd89e26339478ad0606cf1d870,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4281,893f0de110037acd89e26339478ad0606cf1d870,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4282,893f0de110037acd89e26339478ad0606cf1d870,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4283,893f0de110037acd89e26339478ad0606cf1d870,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4284,83480cd71aa603e0cff29c45275e38c94d98227d,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4285,83480cd71aa603e0cff29c45275e38c94d98227d,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
4286,83480cd71aa603e0cff29c45275e38c94d98227d,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
4287,b7af40dbef94a1e999c531b9b57cbf92bfedca29,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4288,b7af40dbef94a1e999c531b9b57cbf92bfedca29,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4289,b7af40dbef94a1e999c531b9b57cbf92bfedca29,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4290,b7af40dbef94a1e999c531b9b57cbf92bfedca29,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4291,b7af40dbef94a1e999c531b9b57cbf92bfedca29,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4292,42193871834fe996b021a5b8129abe3bd6b4e4b2,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4293,42193871834fe996b021a5b8129abe3bd6b4e4b2,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4294,42193871834fe996b021a5b8129abe3bd6b4e4b2,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4295,42193871834fe996b021a5b8129abe3bd6b4e4b2,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4296,42193871834fe996b021a5b8129abe3bd6b4e4b2,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4297,e68d806c768dec30295c643e190bf310be2010e9,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4298,e68d806c768dec30295c643e190bf310be2010e9,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4299,e68d806c768dec30295c643e190bf310be2010e9,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4300,e68d806c768dec30295c643e190bf310be2010e9,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4301,e68d806c768dec30295c643e190bf310be2010e9,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4302,2a3584e5f6fcb0e0e1c63863830e3ed2347df590,/mongodb-mms/Dockerfile,"# see https://mms.mongodb.com/settings/monitoring-agent
# click on ""Ubuntu 12.04+""
"
4303,ccbf0d2efacf31ec5c976d2d001ecefc683d1577,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4304,ccbf0d2efacf31ec5c976d2d001ecefc683d1577,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4305,ccbf0d2efacf31ec5c976d2d001ecefc683d1577,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4306,ccbf0d2efacf31ec5c976d2d001ecefc683d1577,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4307,ccbf0d2efacf31ec5c976d2d001ecefc683d1577,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4308,f2eeed62198e7337221667ba9d347026adcfa62e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4309,f2eeed62198e7337221667ba9d347026adcfa62e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4310,f2eeed62198e7337221667ba9d347026adcfa62e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4311,f2eeed62198e7337221667ba9d347026adcfa62e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4312,f2eeed62198e7337221667ba9d347026adcfa62e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4313,bc102f455d26b7c4dd1a7e91d2fb0ff48104b29a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4314,bc102f455d26b7c4dd1a7e91d2fb0ff48104b29a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4315,bc102f455d26b7c4dd1a7e91d2fb0ff48104b29a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4316,bc102f455d26b7c4dd1a7e91d2fb0ff48104b29a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4317,bc102f455d26b7c4dd1a7e91d2fb0ff48104b29a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4318,a9f9e202648f2d917684768579c2af66d44743e7,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4319,6ad8708606a059132562da908386ee49ad268ac8,/perl/Dockerfile,"# secure by default ♥ (thanks to sri!)
"
4320,6ad8708606a059132562da908386ee49ad268ac8,/perl/Dockerfile,"# reinstall cpanm itself, for good measure
"
4321,a362e1cbb0c0f498ae64b1033647fd42d79b3e9d,/google-cloud-print-connector/Dockerfile,"# fetch dependencies
# format: import-path=strip-components=tarball-url
"
4322,a362e1cbb0c0f498ae64b1033647fd42d79b3e9d,/google-cloud-print-connector/Dockerfile,"# https://github.com/coreos/go-systemd/releases
"
4323,a362e1cbb0c0f498ae64b1033647fd42d79b3e9d,/google-cloud-print-connector/Dockerfile,"# https://github.com/satori/go.uuid/releases
"
4324,a362e1cbb0c0f498ae64b1033647fd42d79b3e9d,/google-cloud-print-connector/Dockerfile,"# https://github.com/urfave/cli/releases
"
4325,a362e1cbb0c0f498ae64b1033647fd42d79b3e9d,/google-cloud-print-connector/Dockerfile,"# https://github.com/golang/net/commits/master
"
4326,a362e1cbb0c0f498ae64b1033647fd42d79b3e9d,/google-cloud-print-connector/Dockerfile,"# https://github.com/golang/oauth2/commits/master
"
4327,a362e1cbb0c0f498ae64b1033647fd42d79b3e9d,/google-cloud-print-connector/Dockerfile,"# https://bazaar.launchpad.net/~chipaca/go-xdg/v0/files (""view revision"")
# https://bazaar.launchpad.net/~chipaca/go-xdg/v0/revision/10?start_revid=10 (""download tarball"")
"
4328,a362e1cbb0c0f498ae64b1033647fd42d79b3e9d,/google-cloud-print-connector/Dockerfile,"#*=}""; dep=""${dep%=$strip}""; \
"
4329,a362e1cbb0c0f498ae64b1033647fd42d79b3e9d,/google-cloud-print-connector/Dockerfile,"#*=}""; strip=""${strip%=$tarball}""; \
"
4330,a362e1cbb0c0f498ae64b1033647fd42d79b3e9d,/google-cloud-print-connector/Dockerfile,"# https://github.com/google/cloud-print-connector/releases
"
4331,d72088d48cd11cdc7b8d6f079d399dcd3e0fdc58,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4332,d72088d48cd11cdc7b8d6f079d399dcd3e0fdc58,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4333,d72088d48cd11cdc7b8d6f079d399dcd3e0fdc58,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4334,d72088d48cd11cdc7b8d6f079d399dcd3e0fdc58,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4335,d72088d48cd11cdc7b8d6f079d399dcd3e0fdc58,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4336,3165e9ed31e3ef0abddf7e803a9a72b51dd6e634,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4337,3165e9ed31e3ef0abddf7e803a9a72b51dd6e634,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4338,3165e9ed31e3ef0abddf7e803a9a72b51dd6e634,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4339,3165e9ed31e3ef0abddf7e803a9a72b51dd6e634,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4340,3165e9ed31e3ef0abddf7e803a9a72b51dd6e634,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4341,fd4482d305745d6383374be295e274dea97b7783,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4342,fd4482d305745d6383374be295e274dea97b7783,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4343,fd4482d305745d6383374be295e274dea97b7783,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4344,fd4482d305745d6383374be295e274dea97b7783,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4345,fd4482d305745d6383374be295e274dea97b7783,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4346,9d55af94b095b17c18c6da9e58b51b73757a7b4e,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
4347,9d55af94b095b17c18c6da9e58b51b73757a7b4e,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
4348,9d55af94b095b17c18c6da9e58b51b73757a7b4e,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
4349,ff23c8a82caf501db8435f47c6d547b90783609e,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4350,ba36ee9738a12bfdd3f5f5db09bf095f381f9a45,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4351,ba36ee9738a12bfdd3f5f5db09bf095f381f9a45,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4352,ba36ee9738a12bfdd3f5f5db09bf095f381f9a45,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4353,ba36ee9738a12bfdd3f5f5db09bf095f381f9a45,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4354,ba36ee9738a12bfdd3f5f5db09bf095f381f9a45,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4355,8bfa99bb8e6a6d6dcba3b6fe8f80ce04dcd36b0d,/mongodb-mms/Dockerfile,"# see https://mms.mongodb.com/settings/monitoring-agent
# click on ""Ubuntu 12.04+""
"
4356,9afb1df5da6f319884ed6e6dc9ca178beef4e4a4,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4357,9afb1df5da6f319884ed6e6dc9ca178beef4e4a4,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4358,9afb1df5da6f319884ed6e6dc9ca178beef4e4a4,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4359,9afb1df5da6f319884ed6e6dc9ca178beef4e4a4,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4360,9afb1df5da6f319884ed6e6dc9ca178beef4e4a4,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4361,1933655e30ba7e8b79bf58e449105e0d7539ec7a,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
4362,011787bda7204080536b398b81158509ef74ef9a,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
4363,968bbf4d9cb71b7b6fd5d7211a7655bd71750289,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4364,968bbf4d9cb71b7b6fd5d7211a7655bd71750289,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4365,968bbf4d9cb71b7b6fd5d7211a7655bd71750289,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4366,968bbf4d9cb71b7b6fd5d7211a7655bd71750289,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4367,968bbf4d9cb71b7b6fd5d7211a7655bd71750289,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4368,52ead8482647a42b492e12266d27e5d531c798c1,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4369,52ead8482647a42b492e12266d27e5d531c798c1,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4370,52ead8482647a42b492e12266d27e5d531c798c1,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4371,52ead8482647a42b492e12266d27e5d531c798c1,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4372,52ead8482647a42b492e12266d27e5d531c798c1,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4373,696d1075a7cfb23b984c6dedf6817ce3483c1de9,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
4374,ff23c8a82caf501db8435f47c6d547b90783609e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4375,ff23c8a82caf501db8435f47c6d547b90783609e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4376,ff23c8a82caf501db8435f47c6d547b90783609e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4377,ff23c8a82caf501db8435f47c6d547b90783609e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4378,ff23c8a82caf501db8435f47c6d547b90783609e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4379,3c7c3522cec71e1ab77b6c3398f93e37d49f46ca,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4380,3c7c3522cec71e1ab77b6c3398f93e37d49f46ca,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4381,3c7c3522cec71e1ab77b6c3398f93e37d49f46ca,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4382,3c7c3522cec71e1ab77b6c3398f93e37d49f46ca,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4383,3c7c3522cec71e1ab77b6c3398f93e37d49f46ca,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4384,c3ab1b772fc6e3b9c2424ee53ed5b747e59b6a12,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4385,c3ab1b772fc6e3b9c2424ee53ed5b747e59b6a12,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
4386,c3ab1b772fc6e3b9c2424ee53ed5b747e59b6a12,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
4387,e75a6470b4051baefc80a3dc10f6701ef4172fe5,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4388,e75a6470b4051baefc80a3dc10f6701ef4172fe5,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
4389,e75a6470b4051baefc80a3dc10f6701ef4172fe5,/jenkins/Dockerfile,"# https://groups.google.com/d/msg/jenkins-infra/c7m_72vUTXE/37zw9GXhAQAJ
"
4390,e75a6470b4051baefc80a3dc10f6701ef4172fe5,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
4391,ee6b42952e48ec1caa45a6dde2bd83efdbd4e227,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4392,ee6b42952e48ec1caa45a6dde2bd83efdbd4e227,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4393,ee6b42952e48ec1caa45a6dde2bd83efdbd4e227,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4394,ee6b42952e48ec1caa45a6dde2bd83efdbd4e227,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4395,ee6b42952e48ec1caa45a6dde2bd83efdbd4e227,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4396,745b91b7a95066392e6d85fc0a986b6919fa724e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4397,745b91b7a95066392e6d85fc0a986b6919fa724e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4398,745b91b7a95066392e6d85fc0a986b6919fa724e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4399,745b91b7a95066392e6d85fc0a986b6919fa724e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4400,745b91b7a95066392e6d85fc0a986b6919fa724e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4401,291449b9d10911a54c0483f60850d37ae9b2725e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4402,291449b9d10911a54c0483f60850d37ae9b2725e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4403,291449b9d10911a54c0483f60850d37ae9b2725e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4404,291449b9d10911a54c0483f60850d37ae9b2725e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4405,291449b9d10911a54c0483f60850d37ae9b2725e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4406,9404ccd1afdd14f265472c6eaebd93de26f68b84,/handbrake/Dockerfile,"# https://handbrake.fr/downloads.php
# https://launchpad.net/~stebbins/+archive/ubuntu/handbrake-releases
"
4407,b801b9a886fd849220b557b957ff4ccbd9f5fb6a,/kgb-bot/Dockerfile,"# ""/etc/kgb-bot/kgb.conf is world-readable"" :'(
"
4408,40aaf810b550d7e529d0e268d93fb204e1d485e3,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4409,345720aba14e9d048d078b008e8bcd19fd1a78dc,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4410,345720aba14e9d048d078b008e8bcd19fd1a78dc,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4411,345720aba14e9d048d078b008e8bcd19fd1a78dc,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4412,345720aba14e9d048d078b008e8bcd19fd1a78dc,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4413,345720aba14e9d048d078b008e8bcd19fd1a78dc,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4414,1de8967ec5c45b7c9476538a965096b44fe12648,/mongodb-mms/Dockerfile,"# see https://mms.mongodb.com/settings/monitoring-agent
# click on ""Ubuntu 12.04+""
"
4415,1de8967ec5c45b7c9476538a965096b44fe12648,/mongodb-mms/Dockerfile,"# missing dep in mms.deb
"
4416,185e90bff8f63455cd37b11899f3b215b201e37e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4417,185e90bff8f63455cd37b11899f3b215b201e37e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4418,185e90bff8f63455cd37b11899f3b215b201e37e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4419,185e90bff8f63455cd37b11899f3b215b201e37e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4420,185e90bff8f63455cd37b11899f3b215b201e37e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4421,9792ae662a982d6f17fda3cec7ae94146ab29b83,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4422,9792ae662a982d6f17fda3cec7ae94146ab29b83,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
4423,9792ae662a982d6f17fda3cec7ae94146ab29b83,/jenkins/Dockerfile,"# workaround ""apt-key adv --recv-keys"" hanging in stretch and above
"
4424,34dc417b3b3f8bfbc60c54cc785ce920b53f835a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4425,34dc417b3b3f8bfbc60c54cc785ce920b53f835a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4426,34dc417b3b3f8bfbc60c54cc785ce920b53f835a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4427,34dc417b3b3f8bfbc60c54cc785ce920b53f835a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4428,34dc417b3b3f8bfbc60c54cc785ce920b53f835a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4429,aea150b654786f5f6f902f1f8d034f38ba6261f9,/xen-orchestra/Dockerfile,"# see https://xen-orchestra.com/docs/from_the_sources.html

"
4430,aea150b654786f5f6f902f1f8d034f38ba6261f9,/xen-orchestra/Dockerfile,"# https://github.com/vatesfr/xen-orchestra/releases
"
4431,aea150b654786f5f6f902f1f8d034f38ba6261f9,/xen-orchestra/Dockerfile,"#'/' = '/path/to/xo-web/dist/'!'/' = '../xo-web/dist/'!"" \
"
4432,aea150b654786f5f6f902f1f8d034f38ba6261f9,/xen-orchestra/Dockerfile,"#uri = 'redis://.*'!uri = 'redis://redis:6379'!"" \
"
4433,11c074bb51fa07556e1223f2c4a3e3ed457f0048,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4434,11c074bb51fa07556e1223f2c4a3e3ed457f0048,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4435,11c074bb51fa07556e1223f2c4a3e3ed457f0048,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4436,11c074bb51fa07556e1223f2c4a3e3ed457f0048,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4437,11c074bb51fa07556e1223f2c4a3e3ed457f0048,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4438,43d866d1067d479c84e8f104c8fa15e031f62134,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4439,43d866d1067d479c84e8f104c8fa15e031f62134,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
4440,43d866d1067d479c84e8f104c8fa15e031f62134,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
4441,43d866d1067d479c84e8f104c8fa15e031f62134,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
4442,43d866d1067d479c84e8f104c8fa15e031f62134,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
4443,bae498b0a3c32b432a95998d133de20653b5949d,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4444,bae498b0a3c32b432a95998d133de20653b5949d,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4445,bae498b0a3c32b432a95998d133de20653b5949d,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4446,bae498b0a3c32b432a95998d133de20653b5949d,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4447,bae498b0a3c32b432a95998d133de20653b5949d,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4448,810ca26d864d66f788e369ca5e1ec0184f1e99c3,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4449,9afb1df5da6f319884ed6e6dc9ca178beef4e4a4,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4450,251b6b63f644fefc93f86f53d7312d747f427400,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4451,251b6b63f644fefc93f86f53d7312d747f427400,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4452,251b6b63f644fefc93f86f53d7312d747f427400,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4453,251b6b63f644fefc93f86f53d7312d747f427400,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4454,251b6b63f644fefc93f86f53d7312d747f427400,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4455,3918e63e2098f8f479953e4a69d5cf54af419bf8,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4456,3918e63e2098f8f479953e4a69d5cf54af419bf8,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4457,3918e63e2098f8f479953e4a69d5cf54af419bf8,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4458,3918e63e2098f8f479953e4a69d5cf54af419bf8,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4459,3918e63e2098f8f479953e4a69d5cf54af419bf8,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4460,4b29448207298b899b748347b469a39b62371171,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4461,4b29448207298b899b748347b469a39b62371171,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
4462,4b29448207298b899b748347b469a39b62371171,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
4463,4b29448207298b899b748347b469a39b62371171,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
4464,4b29448207298b899b748347b469a39b62371171,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
4465,7ff231137fcd05510555bee792e961b8e61ccc71,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4466,7ff231137fcd05510555bee792e961b8e61ccc71,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4467,7ff231137fcd05510555bee792e961b8e61ccc71,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4468,7ff231137fcd05510555bee792e961b8e61ccc71,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4469,7ff231137fcd05510555bee792e961b8e61ccc71,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4470,08e8f8b2cf10a3ba7c0bb5bd4ea154c7bc2cd2c1,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4471,08e8f8b2cf10a3ba7c0bb5bd4ea154c7bc2cd2c1,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4472,08e8f8b2cf10a3ba7c0bb5bd4ea154c7bc2cd2c1,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4473,08e8f8b2cf10a3ba7c0bb5bd4ea154c7bc2cd2c1,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4474,08e8f8b2cf10a3ba7c0bb5bd4ea154c7bc2cd2c1,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4475,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/13.04/Dockerfile,"# much of this was gleaned from https://github.com/lxc/lxc/blob/lxc-0.8.0/templates/lxc-ubuntu.in

# we're going to want this bad boy installed so we can connect :)
"
4476,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/13.04/Dockerfile,"# undo some leet hax of the base image
"
4477,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/13.04/Dockerfile,"# generate a nice UTF-8 locale for our use
"
4478,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/13.04/Dockerfile,"# remove some pointless services
"
4479,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/13.04/Dockerfile,"# /lib/init/fstab: cleared out for bare-bones lxc' > /lib/init/fstab

# small fix for SSH in 13.10 (that's harmless everywhere else)
"
4480,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/13.04/Dockerfile,"# set a cheap, simple password for great convenience
"
4481,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/13.04/Dockerfile,"# we can has SSH
"
4482,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/13.04/Dockerfile,"# pepare for takeoff
"
4483,efb5b6253bca6f92ffbf9cd6421d59ae4de4ac8b,/skype/Dockerfile,"# see https://repo.skype.com

"
4484,efb5b6253bca6f92ffbf9cd6421d59ae4de4ac8b,/skype/Dockerfile,"# https://repo.skype.com/data/SKYPE-GPG-KEY
"
4485,efb5b6253bca6f92ffbf9cd6421d59ae4de4ac8b,/skype/Dockerfile,"# pub   2048R/DF7587C3 2016-06-22 [expires: 2021-06-21]
#       Key fingerprint = D404 0146 BE39 7250 9FD5  7FC7 1F30 45A5 DF75 87C3
# uid                  Skype Linux Client Repository <se-um@microsoft.com>
# sub   2048R/A4EBB320 2016-06-22 [expires: 2021-06-21]
"
4486,69504437ae27d389e34d48d4ecfec320bad2d751,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4487,69504437ae27d389e34d48d4ecfec320bad2d751,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
4488,69504437ae27d389e34d48d4ecfec320bad2d751,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
4489,69504437ae27d389e34d48d4ecfec320bad2d751,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
4490,69504437ae27d389e34d48d4ecfec320bad2d751,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
4491,329fcaf4381124e3052a883b1fa074e90293fa6d,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4492,43828e04248a036dfd46b452b0a41246a941b312,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
4493,0f90322cdcba865c131a9ca4c568aa7ba4e7b80c,/steam/Dockerfile,"# let's head off a few of the things steam will want to install immediately
"
4494,0f90322cdcba865c131a9ca4c568aa7ba4e7b80c,/steam/Dockerfile,"# steam itself needs to be able to install things, and it uses ""sudo"" for that
"
4495,6d63a61871677c29630e6010aa7842e5d1202915,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4496,ab9cdb4155339eb7d3b0821e1bba44000a5b54a1,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4497,ab9cdb4155339eb7d3b0821e1bba44000a5b54a1,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4498,ab9cdb4155339eb7d3b0821e1bba44000a5b54a1,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4499,ab9cdb4155339eb7d3b0821e1bba44000a5b54a1,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4500,ab9cdb4155339eb7d3b0821e1bba44000a5b54a1,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4501,0c787fcd11bb40555786a2c02a245fd1cb430ca4,/slack/Dockerfile,"# the .deb file linked at https://slack.com/downloads/instructions/debian includes ""/etc/cron.daily/slack"" which sets up an APT repo entry as in the following installation

# pub   rsa4096 2016-02-18 [SCEA]
#       DB08 5A08 CA13 B8AC B917  E0F6 D938 EC0D 0386 51BD
# uid           [ unknown] https://packagecloud.io/slacktechnologies/slack (https://packagecloud.io/docs#gpg_signing) <support@packagecloud.io>
# sub   rsa4096 2016-02-18 [SEA]
"
4502,0c787fcd11bb40555786a2c02a245fd1cb430ca4,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libX11-xcb.so.1: cannot open shared object file: No such file or directory
"
4503,0c787fcd11bb40555786a2c02a245fd1cb430ca4,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libasound.so.2: cannot open shared object file: No such file or directory
"
4504,0c787fcd11bb40555786a2c02a245fd1cb430ca4,/slack/Dockerfile,"# 3.3.3: slack: error while loading shared libraries: libgtk-3.so.0: cannot open shared object file: No such file or directory
"
4505,820cb38b429e575bee7f378a576f02327d322fc8,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4506,820cb38b429e575bee7f378a576f02327d322fc8,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4507,820cb38b429e575bee7f378a576f02327d322fc8,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4508,820cb38b429e575bee7f378a576f02327d322fc8,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4509,820cb38b429e575bee7f378a576f02327d322fc8,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4510,31979a9190b03db5f3dfda253606bed5bc72112d,/network-toolbox/alpine/Dockerfile,"# TODO add ""nbtscan"" when we get to Alpine 3.12 (if it makes it out of edge)
# https://pkgs.alpinelinux.org/packages?name=nbtscan&branch=edge&arch=x86_64

"
4511,09d6e2611db1ef5e5bb647cf255b218159d076fa,/slack/Dockerfile,"# the .deb file linked at https://slack.com/downloads/instructions/debian includes ""/etc/cron.daily/slack"" which sets up an APT repo entry as in the following installation

# pub   rsa4096 2016-02-18 [SCEA]
#       DB08 5A08 CA13 B8AC B917  E0F6 D938 EC0D 0386 51BD
# uid           [ unknown] https://packagecloud.io/slacktechnologies/slack (https://packagecloud.io/docs#gpg_signing) <support@packagecloud.io>
# sub   rsa4096 2016-02-18 [SEA]
"
4512,09d6e2611db1ef5e5bb647cf255b218159d076fa,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libX11-xcb.so.1: cannot open shared object file: No such file or directory
"
4513,09d6e2611db1ef5e5bb647cf255b218159d076fa,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libasound.so.2: cannot open shared object file: No such file or directory
"
4514,09d6e2611db1ef5e5bb647cf255b218159d076fa,/slack/Dockerfile,"# 3.3.3: slack: error while loading shared libraries: libgtk-3.so.0: cannot open shared object file: No such file or directory
"
4515,9c30a632b2fbc7d28d88d8266450ee8d34e3b2a1,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4516,9c30a632b2fbc7d28d88d8266450ee8d34e3b2a1,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4517,9c30a632b2fbc7d28d88d8266450ee8d34e3b2a1,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4518,9c30a632b2fbc7d28d88d8266450ee8d34e3b2a1,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4519,9c30a632b2fbc7d28d88d8266450ee8d34e3b2a1,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4520,7066fc32d1a0611d11f01b1036fbd2e5f95d9ca6,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
4521,89fa61933bd1dfa5101b1523428e2b9a84b2edfb,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4522,b2e985ac618c4a8e8b5a89b6c01d5dfd1936631f,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4523,b2e985ac618c4a8e8b5a89b6c01d5dfd1936631f,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
4524,b2e985ac618c4a8e8b5a89b6c01d5dfd1936631f,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
4525,b2e985ac618c4a8e8b5a89b6c01d5dfd1936631f,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
4526,b2e985ac618c4a8e8b5a89b6c01d5dfd1936631f,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
4527,7ad6e3855d5cf19c2a0c12ce53b0614746d5c5d3,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4528,7ad6e3855d5cf19c2a0c12ce53b0614746d5c5d3,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4529,7ad6e3855d5cf19c2a0c12ce53b0614746d5c5d3,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4530,7ad6e3855d5cf19c2a0c12ce53b0614746d5c5d3,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4531,7ad6e3855d5cf19c2a0c12ce53b0614746d5c5d3,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4532,5a958eb1e153b3d7915d484dfed4bc8d61da6f2a,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4533,89ad84e63c7cb068686b389726d983e5d9e7231a,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4534,ac1348355034ad07ce9bd69ef2df542a9ac640a8,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4535,ac1348355034ad07ce9bd69ef2df542a9ac640a8,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4536,ac1348355034ad07ce9bd69ef2df542a9ac640a8,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4537,ac1348355034ad07ce9bd69ef2df542a9ac640a8,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4538,ac1348355034ad07ce9bd69ef2df542a9ac640a8,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4539,1d658a08289fe456c38f6267ef73da56302e79ea,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4540,1d658a08289fe456c38f6267ef73da56302e79ea,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4541,1d658a08289fe456c38f6267ef73da56302e79ea,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4542,1d658a08289fe456c38f6267ef73da56302e79ea,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4543,1d658a08289fe456c38f6267ef73da56302e79ea,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4544,9e8ac7f01d20bc0263c0ab3f13f3f2a3be59a54b,/familysearch-indexing/Dockerfile,"# docker-manifest.sh debian/eol:wheezy-slim | jq -r '.manifests[] | select(.platform.architecture == ""386"") | .digest'
"
4545,9e8ac7f01d20bc0263c0ab3f13f3f2a3be59a54b,/familysearch-indexing/Dockerfile,"# TODO add a very lightweight browser for opening help and/or registration
"
4546,c734b40c7a1fc0d119b51a60532ec7a7197be5c7,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4547,c734b40c7a1fc0d119b51a60532ec7a7197be5c7,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4548,c734b40c7a1fc0d119b51a60532ec7a7197be5c7,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4549,c734b40c7a1fc0d119b51a60532ec7a7197be5c7,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4550,c734b40c7a1fc0d119b51a60532ec7a7197be5c7,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4551,03c351859fd6a80d65ee4a35a4bb71d7510a6041,/nylas/sync-engine/Dockerfile,"# tell pynacl to use system libsodium
"
4552,03c351859fd6a80d65ee4a35a4bb71d7510a6041,/nylas/sync-engine/Dockerfile,"#ENV SYNC_VERSION v0.3.0 # 2014 :'(
"
4553,03c351859fd6a80d65ee4a35a4bb71d7510a6041,/nylas/sync-engine/Dockerfile,"# https://github.com/eventable/vobject/issues/2
"
4554,03c351859fd6a80d65ee4a35a4bb71d7510a6041,/nylas/sync-engine/Dockerfile,"# ugh, NameError: name 'PROTOCOL_SSLv3' is not defined
"
4555,03c351859fd6a80d65ee4a35a4bb71d7510a6041,/nylas/sync-engine/Dockerfile," # TODO inbox-api or inbox-start
"
4556,77371c78f876ac6c2c44312bc22adba01c06a572,/skype/Dockerfile,"# see https://repo.skype.com

"
4557,77371c78f876ac6c2c44312bc22adba01c06a572,/skype/Dockerfile,"# wget is invoked by skypeforlinux for crash reports
"
4558,77371c78f876ac6c2c44312bc22adba01c06a572,/skype/Dockerfile,"# https://repo.skype.com/data/SKYPE-GPG-KEY
"
4559,77371c78f876ac6c2c44312bc22adba01c06a572,/skype/Dockerfile,"# pub   2048R/DF7587C3 2016-06-22 [expires: 2021-06-21]
#       Key fingerprint = D404 0146 BE39 7250 9FD5  7FC7 1F30 45A5 DF75 87C3
# uid                  Skype Linux Client Repository <se-um@microsoft.com>
# sub   2048R/A4EBB320 2016-06-22 [expires: 2021-06-21]
"
4560,0f90322cdcba865c131a9ca4c568aa7ba4e7b80c,/sbin-init/ubuntu/12.04/Dockerfile,"# much of this was gleaned from https://github.com/lxc/lxc/blob/lxc-0.8.0/templates/lxc-ubuntu.in

# we're going to want this bad boy installed so we can connect :)
"
4561,0f90322cdcba865c131a9ca4c568aa7ba4e7b80c,/sbin-init/ubuntu/12.04/Dockerfile,"# undo some leet hax of the base image
"
4562,0f90322cdcba865c131a9ca4c568aa7ba4e7b80c,/sbin-init/ubuntu/12.04/Dockerfile,"# generate a nice UTF-8 locale for our use
"
4563,0f90322cdcba865c131a9ca4c568aa7ba4e7b80c,/sbin-init/ubuntu/12.04/Dockerfile,"# remove some pointless services
"
4564,0f90322cdcba865c131a9ca4c568aa7ba4e7b80c,/sbin-init/ubuntu/12.04/Dockerfile,"# /lib/init/fstab: cleared out for bare-bones lxc' > /lib/init/fstab

# small fix for SSH in 13.10 (that's harmless everywhere else)
"
4565,0f90322cdcba865c131a9ca4c568aa7ba4e7b80c,/sbin-init/ubuntu/12.04/Dockerfile,"# set a cheap, simple password for great convenience
"
4566,0f90322cdcba865c131a9ca4c568aa7ba4e7b80c,/sbin-init/ubuntu/12.04/Dockerfile,"# we can has SSH
"
4567,0f90322cdcba865c131a9ca4c568aa7ba4e7b80c,/sbin-init/ubuntu/12.04/Dockerfile,"# pepare for takeoff
"
4568,b879fd090091da8cbf0e6a0dfff8ed90ac3e0dec,/golang/Dockerfile,"# necessary for building Go
"
4569,b879fd090091da8cbf0e6a0dfff8ed90ac3e0dec,/golang/Dockerfile,"# these are useful for ""go get""
"
4570,b879fd090091da8cbf0e6a0dfff8ed90ac3e0dec,/golang/Dockerfile,"# see http://golang.org/doc/install/source#environment
"
4571,b879fd090091da8cbf0e6a0dfff8ed90ac3e0dec,/golang/Dockerfile,"# (set an explicit GOARM of 5 for maximum ARM compatibility)
"
4572,b879fd090091da8cbf0e6a0dfff8ed90ac3e0dec,/golang/Dockerfile,"##*/} \
"
4573,b879fd090091da8cbf0e6a0dfff8ed90ac3e0dec,/golang/Dockerfile,"/*} \
			GOARCH=${platform##*/"
4574,3c4435eac4ce430c026d70ab0f871f20d670f971,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4575,3c4435eac4ce430c026d70ab0f871f20d670f971,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4576,3c4435eac4ce430c026d70ab0f871f20d670f971,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4577,3c4435eac4ce430c026d70ab0f871f20d670f971,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4578,3c4435eac4ce430c026d70ab0f871f20d670f971,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4579,64a223ef8564053f777d93991c31ef651e1e9b48,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4580,64a223ef8564053f777d93991c31ef651e1e9b48,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4581,64a223ef8564053f777d93991c31ef651e1e9b48,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4582,64a223ef8564053f777d93991c31ef651e1e9b48,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4583,64a223ef8564053f777d93991c31ef651e1e9b48,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4584,49d826b18f0dcf7cf754930b2854d98ab371f9b7,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4585,49d826b18f0dcf7cf754930b2854d98ab371f9b7,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4586,49d826b18f0dcf7cf754930b2854d98ab371f9b7,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4587,49d826b18f0dcf7cf754930b2854d98ab371f9b7,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4588,49d826b18f0dcf7cf754930b2854d98ab371f9b7,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4589,55b5683d4fa9fc7804e239bc1130731f7cccfe65,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4590,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/12.10/Dockerfile,"# much of this was gleaned from https://github.com/lxc/lxc/blob/lxc-0.8.0/templates/lxc-ubuntu.in
# and then heavily modified and hacked like crazy

# we're going to want this bad boy installed so we can connect :)
"
4591,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/12.10/Dockerfile,"# undo some leet hax of the base image
"
4592,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/12.10/Dockerfile,"# generate a nice UTF-8 locale for our use
"
4593,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/12.10/Dockerfile,"# remove some pointless services
"
4594,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/12.10/Dockerfile,"# /lib/init/fstab: cleared out for bare-bones Docker' > /lib/init/fstab

# small fix for SSH in 13.10 (that's harmless everywhere else)
"
4595,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/12.10/Dockerfile,"# let Upstart know it's in a container
"
4596,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/12.10/Dockerfile,"# set a cheap, simple password for great convenience
"
4597,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/12.10/Dockerfile,"# we can has SSH
"
4598,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/12.10/Dockerfile,"# pepare for takeoff
"
4599,4c3420922f16091cab1e732b20575914da2a492f,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4600,4c3420922f16091cab1e732b20575914da2a492f,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
4601,4c3420922f16091cab1e732b20575914da2a492f,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
4602,4c3420922f16091cab1e732b20575914da2a492f,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
4603,4c3420922f16091cab1e732b20575914da2a492f,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
4604,ccda33b5e71807cdcb9357e58e5ab60b0cbd5f8b,/phpmyadmin/Dockerfile,"# https://docs.phpmyadmin.net/en/latest/setup.html#verifying-phpmyadmin-releases
"
4605,ccda33b5e71807cdcb9357e58e5ab60b0cbd5f8b,/phpmyadmin/Dockerfile,"# Since July 2015 all phpMyAdmin releases are cryptographically signed by the releasing developer, who through January 2016 was Marc Delisle.
"
4606,ccda33b5e71807cdcb9357e58e5ab60b0cbd5f8b,/phpmyadmin/Dockerfile,"# Beginning in January 2016, the release manager is Isaac Bennetch.
"
4607,ccda33b5e71807cdcb9357e58e5ab60b0cbd5f8b,/phpmyadmin/Dockerfile,"# Some additional downloads (for example themes) might be signed by Michal Čihař.
"
4608,41956a5c14ff889f17bf31e77bdd841c840866c9,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4609,41956a5c14ff889f17bf31e77bdd841c840866c9,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4610,41956a5c14ff889f17bf31e77bdd841c840866c9,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4611,41956a5c14ff889f17bf31e77bdd841c840866c9,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4612,41956a5c14ff889f17bf31e77bdd841c840866c9,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4613,9081233dfb9b10201abef4afb0c5c856c09f93e0,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4614,9081233dfb9b10201abef4afb0c5c856c09f93e0,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
4615,9081233dfb9b10201abef4afb0c5c856c09f93e0,/jenkins/Dockerfile,"# workaround ""apt-key adv --recv-keys"" hanging in stretch and above
"
4616,05167f0371d3bfbe530fd7b9225644e270720155,/prometheus/Dockerfile,"# https://github.com/prometheus/prometheus/releases
"
4617,8d26a641b3ada81edbf03c178190af88eea4805f,/google-musicmanager/Dockerfile,"# https://www.google.com/linuxrepositories/
"
4618,8d26a641b3ada81edbf03c178190af88eea4805f,/google-musicmanager/Dockerfile,"# pub   rsa4096 2016-04-12 [SC]
#       EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796
# uid           [ unknown] Google Inc. (Linux Packages Signing Authority) <linux-packages-keymaster@google.com>
# sub   rsa4096 2016-04-12 [S] [expires: 2019-04-12]
"
4619,8d26a641b3ada81edbf03c178190af88eea4805f,/google-musicmanager/Dockerfile,"# pub   dsa1024 2007-03-08 [SC]
#       4CCA 1EAF 950C EE4A B839  76DC A040 830F 7FAC 5991
# uid           [ unknown] Google, Inc. Linux Package Signing Key <linux-packages-keymaster@google.com>
# sub   elg2048 2007-03-08 [E]
#		4CCA1EAF950CEE4AB83976DCA040830F7FAC5991

"
4620,8d26a641b3ada81edbf03c178190af88eea4805f,/google-musicmanager/Dockerfile,"# only stretch+ supports --armor in trusted.gpg.asc
#	gpg --export --armor $GPG_KEYS | tee /etc/apt/trusted.gpg.d/google.gpg.asc; \
"
4621,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/12.10/Dockerfile,"# much of this was gleaned from https://github.com/lxc/lxc/blob/lxc-0.8.0/templates/lxc-ubuntu.in

# we're going to want this bad boy installed so we can connect :)
"
4622,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/12.10/Dockerfile,"# undo some leet hax of the base image
"
4623,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/12.10/Dockerfile,"# generate a nice UTF-8 locale for our use
"
4624,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/12.10/Dockerfile,"# remove some pointless services
"
4625,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/12.10/Dockerfile,"# /lib/init/fstab: cleared out for bare-bones lxc' > /lib/init/fstab

# small fix for SSH in 13.10 (that's harmless everywhere else)
"
4626,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/12.10/Dockerfile,"# set a cheap, simple password for great convenience
"
4627,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/12.10/Dockerfile,"# we can has SSH
"
4628,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/12.10/Dockerfile,"# pepare for takeoff
"
4629,6b37ad1e3b69113ccff160de204c9662844838a7,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4630,8bf4388c74fa3d687ce794a516e6797bb0f8112b,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4631,0bff268b4aeac80fff2ca0c209f42bc4c2fab383,/robomongo/Dockerfile,"# install dependencies...
"
4632,cd3035784f0018648b9f3ac1dd11dc2084b5c5dc,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4633,cd3035784f0018648b9f3ac1dd11dc2084b5c5dc,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4634,cd3035784f0018648b9f3ac1dd11dc2084b5c5dc,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4635,cd3035784f0018648b9f3ac1dd11dc2084b5c5dc,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4636,cd3035784f0018648b9f3ac1dd11dc2084b5c5dc,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4637,1d2040c390a50eca1338d03c4db5ec2db56ef3e2,/grafana/Dockerfile,"# https://github.com/grafana/grafana/releases
"
4638,1d2040c390a50eca1338d03c4db5ec2db56ef3e2,/grafana/Dockerfile,"# https://github.com/grafana/grafana/blob/master/packaging/docker/Dockerfile

"
4639,1d2040c390a50eca1338d03c4db5ec2db56ef3e2,/grafana/Dockerfile,"# https://grafana.com/grafana/download/5.3.4?platform=linux
# https://grafana.com/grafana/download/5.3.4?platform=arm
"
4640,1d2040c390a50eca1338d03c4db5ec2db56ef3e2,/grafana/Dockerfile,"# TODO verify sha256 values! (add "".sha256"" to the end of this URL)
"
4641,d17b242c3198b6be8174beaf33fb5a1a865960dd,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4642,d17b242c3198b6be8174beaf33fb5a1a865960dd,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4643,d17b242c3198b6be8174beaf33fb5a1a865960dd,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4644,d17b242c3198b6be8174beaf33fb5a1a865960dd,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4645,d17b242c3198b6be8174beaf33fb5a1a865960dd,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4646,aa71bc74aac362a129aeaea86975eecbc3d51e52,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4647,aa71bc74aac362a129aeaea86975eecbc3d51e52,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4648,aa71bc74aac362a129aeaea86975eecbc3d51e52,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4649,aa71bc74aac362a129aeaea86975eecbc3d51e52,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4650,aa71bc74aac362a129aeaea86975eecbc3d51e52,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4651,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/12.04/Dockerfile,"# much of this was gleaned from https://github.com/lxc/lxc/blob/lxc-0.8.0/templates/lxc-ubuntu.in

# we're going to want this bad boy installed so we can connect :)
"
4652,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/12.04/Dockerfile,"# undo some leet hax of the base image
"
4653,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/12.04/Dockerfile,"# generate a nice UTF-8 locale for our use
"
4654,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/12.04/Dockerfile,"# remove some pointless services
"
4655,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/12.04/Dockerfile,"# /lib/init/fstab: cleared out for bare-bones lxc' > /lib/init/fstab

# small fix for SSH in 13.10 (that's harmless everywhere else)
"
4656,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/12.04/Dockerfile,"# set a cheap, simple password for great convenience
"
4657,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/12.04/Dockerfile,"# we can has SSH
"
4658,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/12.04/Dockerfile,"# pepare for takeoff
"
4659,56a104c1fb431fffd8a232e94593af6c522c1d59,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4660,56a104c1fb431fffd8a232e94593af6c522c1d59,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
4661,56a104c1fb431fffd8a232e94593af6c522c1d59,/jenkins/Dockerfile,"# workaround ""apt-key adv --recv-keys"" hanging in stretch and above
"
4662,79a45e2bfac4e1c6093884ea5f1d6b4a8619a41d,/makemkv/Dockerfile,"# http://www.makemkv.com/forum2/viewtopic.php?f=3&t=224
"
4663,79a45e2bfac4e1c6093884ea5f1d6b4a8619a41d,/makemkv/Dockerfile,"# beta code: http://www.makemkv.com/forum2/viewtopic.php?f=5&t=1053
"
4664,1b451f4bbc32a59ed21d015bad9c6e3d6725b51b,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4665,94aa87dd3d9fee6fd9b31b45b236df2a10f9c670,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
4666,b1a02930a31184729db6c8356fa529a32960b59f,/debian/ubuntu-devel/Dockerfile,"# let's make apt list package versions, since those are handy during devel
"
4667,b1a02930a31184729db6c8356fa529a32960b59f,/debian/ubuntu-devel/Dockerfile,"# normal build deps
"
4668,b1a02930a31184729db6c8356fa529a32960b59f,/debian/ubuntu-devel/Dockerfile,"# get dh-make-golang from Git since it's so rapidly changing
"
4669,b1a02930a31184729db6c8356fa529a32960b59f,/debian/ubuntu-devel/Dockerfile,"# need deb-src for compiling packages
"
4670,b1a02930a31184729db6c8356fa529a32960b59f,/debian/ubuntu-devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
4671,b1a02930a31184729db6c8356fa529a32960b59f,/debian/ubuntu-devel/Dockerfile,"# for ssh to debian hosts, let's make sure we know their fingerprints <3
"
4672,b1a02930a31184729db6c8356fa529a32960b59f,/debian/ubuntu-devel/Dockerfile,"# make sure things are pretty
"
4673,b1a02930a31184729db6c8356fa529a32960b59f,/debian/ubuntu-devel/Dockerfile,"#(force_color_prompt=yes)/\1/' ~/.bashrc

# quilt is much amaze: https://wiki.debian.org/UsingQuilt#Using_quilt_with_Debian_source_packages
"
4674,b1a02930a31184729db6c8356fa529a32960b59f,/debian/ubuntu-devel/Dockerfile,"# make sure pbuilder-dist uses a sane default mirror
"
4675,b0ada93b57e81cfd5295ae42b0dee1cf8a7263e2,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4676,b0ada93b57e81cfd5295ae42b0dee1cf8a7263e2,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4677,b0ada93b57e81cfd5295ae42b0dee1cf8a7263e2,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4678,b0ada93b57e81cfd5295ae42b0dee1cf8a7263e2,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4679,b0ada93b57e81cfd5295ae42b0dee1cf8a7263e2,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4680,0c794c7ddee7dcffc27894c4af4c8af92a629807,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4681,0c794c7ddee7dcffc27894c4af4c8af92a629807,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
4682,0c794c7ddee7dcffc27894c4af4c8af92a629807,/jenkins/Dockerfile,"# workaround ""apt-key adv --recv-keys"" hanging in stretch and above
"
4683,2e6fb5e337c61fb0136f3f95cd98403c5cc26f69,/ymlfmt/Dockerfile,"# https://pypi.org/project/ruamel.yaml/
"
4684,da6b50da70a8dca2eada0563c3ebc4a126e42a5d,/network-toolbox/alpine/Dockerfile,"# TODO add ""nbtscan"" when we get to Alpine 3.9 (if it makes it out of edge for 3.9)

"
4685,5f5df46474f5dfe5bca0d339ad66f93dc44981eb,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4686,5f5df46474f5dfe5bca0d339ad66f93dc44981eb,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4687,5f5df46474f5dfe5bca0d339ad66f93dc44981eb,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4688,5f5df46474f5dfe5bca0d339ad66f93dc44981eb,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4689,5f5df46474f5dfe5bca0d339ad66f93dc44981eb,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4690,94b13984c1ab418f4875498efc2b588274e0b496,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4691,94b13984c1ab418f4875498efc2b588274e0b496,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4692,94b13984c1ab418f4875498efc2b588274e0b496,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4693,94b13984c1ab418f4875498efc2b588274e0b496,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4694,94b13984c1ab418f4875498efc2b588274e0b496,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4695,4e21adae6ac369c40bfc9bfc83e1b34fff0e0596,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4696,4e21adae6ac369c40bfc9bfc83e1b34fff0e0596,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4697,4e21adae6ac369c40bfc9bfc83e1b34fff0e0596,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4698,4e21adae6ac369c40bfc9bfc83e1b34fff0e0596,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4699,4e21adae6ac369c40bfc9bfc83e1b34fff0e0596,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4700,75e9919f48fe8607a5228b7f84996d2b7d1e979c,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4701,75e9919f48fe8607a5228b7f84996d2b7d1e979c,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4702,75e9919f48fe8607a5228b7f84996d2b7d1e979c,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4703,75e9919f48fe8607a5228b7f84996d2b7d1e979c,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4704,75e9919f48fe8607a5228b7f84996d2b7d1e979c,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4705,258646ccfc4061a4b1fbc14912dfebb114306e7a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4706,258646ccfc4061a4b1fbc14912dfebb114306e7a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4707,258646ccfc4061a4b1fbc14912dfebb114306e7a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4708,258646ccfc4061a4b1fbc14912dfebb114306e7a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4709,258646ccfc4061a4b1fbc14912dfebb114306e7a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4710,0a62b72361d10bb2179bad584d9a2f8395f18989,/exim4/Dockerfile,"# grab tini for signal processing and zombie killing
"
4711,ea575c40211d560e3244220ec97dfe7e9f0d6500,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4712,ea575c40211d560e3244220ec97dfe7e9f0d6500,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
4713,ea575c40211d560e3244220ec97dfe7e9f0d6500,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
4714,ea575c40211d560e3244220ec97dfe7e9f0d6500,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
4715,ea575c40211d560e3244220ec97dfe7e9f0d6500,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
4716,7fdc462c03eeceb1b4b4d4cdc640b4438e204350,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4717,7fdc462c03eeceb1b4b4d4cdc640b4438e204350,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4718,7fdc462c03eeceb1b4b4d4cdc640b4438e204350,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4719,7fdc462c03eeceb1b4b4d4cdc640b4438e204350,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4720,7fdc462c03eeceb1b4b4d4cdc640b4438e204350,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4721,75c18dbedafe7f518e7aafc7124e61c0a81f9007,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4722,75c18dbedafe7f518e7aafc7124e61c0a81f9007,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
4723,75c18dbedafe7f518e7aafc7124e61c0a81f9007,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
4724,381c2695165c60a5f1c9cfc1af46f2f67d2a5bd3,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4725,381c2695165c60a5f1c9cfc1af46f2f67d2a5bd3,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4726,381c2695165c60a5f1c9cfc1af46f2f67d2a5bd3,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4727,381c2695165c60a5f1c9cfc1af46f2f67d2a5bd3,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4728,381c2695165c60a5f1c9cfc1af46f2f67d2a5bd3,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4729,8c08cd3e829dc48494c3567b3c8706cc29389ba6,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4730,8c08cd3e829dc48494c3567b3c8706cc29389ba6,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4731,8c08cd3e829dc48494c3567b3c8706cc29389ba6,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4732,8c08cd3e829dc48494c3567b3c8706cc29389ba6,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4733,8c08cd3e829dc48494c3567b3c8706cc29389ba6,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4734,34f5b5a84c2f9c689317b64609f2c0306b106ad7,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4735,34f5b5a84c2f9c689317b64609f2c0306b106ad7,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4736,34f5b5a84c2f9c689317b64609f2c0306b106ad7,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4737,34f5b5a84c2f9c689317b64609f2c0306b106ad7,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4738,34f5b5a84c2f9c689317b64609f2c0306b106ad7,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4739,a35e00a6972beba6df7631ff33bc67ce71ad05cf,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4740,9716a1530497f14b9e953cee7ba87f68f84b4fae,/golang/Dockerfile,"# (set an explicit GOARM of 5 for maximum ARM compatibility)
"
4741,9716a1530497f14b9e953cee7ba87f68f84b4fae,/golang/Dockerfile,"##*/} \
"
4742,9716a1530497f14b9e953cee7ba87f68f84b4fae,/golang/Dockerfile,"/*} \
			GOARCH=${platform##*/"
4743,5f330cfdf5f2a6a49dc30438f3db32f37ef1da29,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4744,5f330cfdf5f2a6a49dc30438f3db32f37ef1da29,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4745,5f330cfdf5f2a6a49dc30438f3db32f37ef1da29,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4746,5f330cfdf5f2a6a49dc30438f3db32f37ef1da29,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4747,5f330cfdf5f2a6a49dc30438f3db32f37ef1da29,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4748,611bcfef0265eeb461754095663b7f7a7cf75aa6,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4749,711052e729d04bff4bad27f40ef8b8270d1d81e2,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4750,711052e729d04bff4bad27f40ef8b8270d1d81e2,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4751,711052e729d04bff4bad27f40ef8b8270d1d81e2,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4752,711052e729d04bff4bad27f40ef8b8270d1d81e2,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4753,711052e729d04bff4bad27f40ef8b8270d1d81e2,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4754,cf537ef4802666769017bf9efbbefed1da8d4b6b,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4755,0c0f9a9739ba1485cf7ebc0d0fadd6ff892789c8,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4756,0c0f9a9739ba1485cf7ebc0d0fadd6ff892789c8,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4757,0c0f9a9739ba1485cf7ebc0d0fadd6ff892789c8,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4758,0c0f9a9739ba1485cf7ebc0d0fadd6ff892789c8,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4759,0c0f9a9739ba1485cf7ebc0d0fadd6ff892789c8,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4760,72ca16bccb1ca74198ea31529a86e03a00b1de1b,/jenkins/slave/debian/Dockerfile,"#?PermitRootLogin[[:space:]].*$/PermitRootLogin yes/g' /etc/ssh/sshd_config

"
4761,72ca16bccb1ca74198ea31529a86e03a00b1de1b,/jenkins/slave/debian/Dockerfile,"# let's make /root a volume so ~/.ssh/authorized_keys is easier to save
"
4762,a1f938ff6e16ce7479a6cabc6f60259b7255557f,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
4763,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/13.10/Dockerfile,"# much of this was gleaned from https://github.com/lxc/lxc/blob/lxc-0.8.0/templates/lxc-ubuntu.in

# we're going to want this bad boy installed so we can connect :)
"
4764,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/13.10/Dockerfile,"# undo some leet hax of the base image
"
4765,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/13.10/Dockerfile,"# generate a nice UTF-8 locale for our use
"
4766,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/13.10/Dockerfile,"# remove some pointless services
"
4767,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/13.10/Dockerfile,"# /lib/init/fstab: cleared out for bare-bones lxc' > /lib/init/fstab

# small fix for SSH in 13.10 (that's harmless everywhere else)
"
4768,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/13.10/Dockerfile,"# set a cheap, simple password for great convenience
"
4769,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/13.10/Dockerfile,"# we can has SSH
"
4770,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/13.10/Dockerfile,"# pepare for takeoff
"
4771,960063f18e4789a62cb6e8f2beb077685f3b3a3b,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4772,960063f18e4789a62cb6e8f2beb077685f3b3a3b,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4773,960063f18e4789a62cb6e8f2beb077685f3b3a3b,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4774,960063f18e4789a62cb6e8f2beb077685f3b3a3b,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4775,960063f18e4789a62cb6e8f2beb077685f3b3a3b,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4776,0cf979a3a9d7ca6eed32efc575c13bc62fc7ba6e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4777,0cf979a3a9d7ca6eed32efc575c13bc62fc7ba6e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4778,0cf979a3a9d7ca6eed32efc575c13bc62fc7ba6e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4779,0cf979a3a9d7ca6eed32efc575c13bc62fc7ba6e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4780,0cf979a3a9d7ca6eed32efc575c13bc62fc7ba6e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4781,db26b612d677d6c405ca8d40ca5a36c00f1d19d7,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4782,db26b612d677d6c405ca8d40ca5a36c00f1d19d7,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4783,db26b612d677d6c405ca8d40ca5a36c00f1d19d7,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4784,db26b612d677d6c405ca8d40ca5a36c00f1d19d7,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4785,db26b612d677d6c405ca8d40ca5a36c00f1d19d7,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4786,cc0cae5285d3e7cb914751c0a7dd0a7e8b6281ed,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4787,c0bda987c28d23dcb2779cd76b9d738b55b01a1a,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4788,c0bda987c28d23dcb2779cd76b9d738b55b01a1a,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
4789,c0bda987c28d23dcb2779cd76b9d738b55b01a1a,/jenkins/Dockerfile,"# workaround ""apt-key adv --recv-keys"" hanging in stretch and above
"
4790,edf973a3263bbc7c8c477a8415234c9f9fd6de97,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4791,edf973a3263bbc7c8c477a8415234c9f9fd6de97,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4792,edf973a3263bbc7c8c477a8415234c9f9fd6de97,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4793,edf973a3263bbc7c8c477a8415234c9f9fd6de97,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4794,edf973a3263bbc7c8c477a8415234c9f9fd6de97,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4795,c0c332c654a4727c16db6107963b153badfeaa08,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4796,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/13.10/Dockerfile,"# much of this was gleaned from https://github.com/lxc/lxc/blob/lxc-0.8.0/templates/lxc-ubuntu.in
# and then heavily modified and hacked like crazy

# we're going to want this bad boy installed so we can connect :)
"
4797,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/13.10/Dockerfile,"# undo some leet hax of the base image
"
4798,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/13.10/Dockerfile,"# generate a nice UTF-8 locale for our use
"
4799,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/13.10/Dockerfile,"# remove some pointless services
"
4800,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/13.10/Dockerfile,"# /lib/init/fstab: cleared out for bare-bones Docker' > /lib/init/fstab

# small fix for SSH in 13.10 (that's harmless everywhere else)
"
4801,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/13.10/Dockerfile,"# let Upstart know it's in a container
"
4802,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/13.10/Dockerfile,"# set a cheap, simple password for great convenience
"
4803,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/13.10/Dockerfile,"# we can has SSH
"
4804,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/13.10/Dockerfile,"# pepare for takeoff
"
4805,7e4224d033d87ae8588f6e6395f4b2cf9a69398c,/phpmyadmin/Dockerfile,"# https://www.phpmyadmin.net/downloads/
"
4806,7e4224d033d87ae8588f6e6395f4b2cf9a69398c,/phpmyadmin/Dockerfile,"# https://docs.phpmyadmin.net/en/latest/setup.html#verifying-phpmyadmin-releases
"
4807,7e4224d033d87ae8588f6e6395f4b2cf9a69398c,/phpmyadmin/Dockerfile,"# Since July 2015 all phpMyAdmin releases are cryptographically signed by the releasing developer, who through January 2016 was Marc Delisle.
"
4808,7e4224d033d87ae8588f6e6395f4b2cf9a69398c,/phpmyadmin/Dockerfile,"# Beginning in January 2016, the release manager is Isaac Bennetch.
"
4809,7e4224d033d87ae8588f6e6395f4b2cf9a69398c,/phpmyadmin/Dockerfile,"# Some additional downloads (for example themes) might be signed by Michal Čihař.
"
4810,3469a82bad8889891a879efaa876e4b69c1f8773,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4811,3469a82bad8889891a879efaa876e4b69c1f8773,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4812,3469a82bad8889891a879efaa876e4b69c1f8773,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4813,3469a82bad8889891a879efaa876e4b69c1f8773,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4814,3469a82bad8889891a879efaa876e4b69c1f8773,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4815,7ab16829510457b5557b2d9b7d78ff3eb7430e63,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4816,7ab16829510457b5557b2d9b7d78ff3eb7430e63,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4817,7ab16829510457b5557b2d9b7d78ff3eb7430e63,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4818,7ab16829510457b5557b2d9b7d78ff3eb7430e63,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4819,7ab16829510457b5557b2d9b7d78ff3eb7430e63,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4820,94739571b38c99220eb712e67925d8145bd04b07,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
4821,94739571b38c99220eb712e67925d8145bd04b07,/plex/media-server/Dockerfile,"# the published deb has pre/post-inst scripts that don't really apply to Docker (so we'll skip ""install"" entirely)
# (as of 1.18.5.2309, they have bugs around Docker detection, which is mostly for avoiding init behavior)
"
4822,94739571b38c99220eb712e67925d8145bd04b07,/plex/media-server/Dockerfile,"#	apt-get update; \
#	apt-get install /tmp/plex.deb; \
#	rm -rf /var/lib/apt/lists/*; \
"
4823,94739571b38c99220eb712e67925d8145bd04b07,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
4824,0496c92f87947fad432e3703162d3f6751017c45,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4825,a9323cfaaa5f50ad3c2ab16fb96f98d2e8a237eb,/xen-orchestra/Dockerfile,"# see https://github.com/vatesfr/xo/blob/master/installation.md

"
4826,5a8168ef14f29ae5f9fac610d2676b96e5c75ea3,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4827,5a8168ef14f29ae5f9fac610d2676b96e5c75ea3,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4828,5a8168ef14f29ae5f9fac610d2676b96e5c75ea3,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4829,5a8168ef14f29ae5f9fac610d2676b96e5c75ea3,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4830,5a8168ef14f29ae5f9fac610d2676b96e5c75ea3,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4831,31e7d2dfa0230c6c93a1ffc3e5c63a896cf4d71e,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4832,07c88f6b99480a1fb6282de02b33734e782683a1,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4833,07c88f6b99480a1fb6282de02b33734e782683a1,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4834,07c88f6b99480a1fb6282de02b33734e782683a1,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4835,07c88f6b99480a1fb6282de02b33734e782683a1,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4836,07c88f6b99480a1fb6282de02b33734e782683a1,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4837,60685f6f59f8fe1302dc6b1e57a1260ba515cb25,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4838,6c82c1f4ff956231a3ca33d829176fd696aad2ec,/kgb-bot/Dockerfile,"# ""/etc/kgb-bot/kgb.conf is world-readable"" :'(
"
4839,d131a3bd5d437b4f321c9057df10faa925d815bd,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4840,d131a3bd5d437b4f321c9057df10faa925d815bd,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4841,d131a3bd5d437b4f321c9057df10faa925d815bd,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4842,d131a3bd5d437b4f321c9057df10faa925d815bd,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4843,d131a3bd5d437b4f321c9057df10faa925d815bd,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4844,5c0da879e7565a531557d560495f21420b3cd790,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4845,5c0da879e7565a531557d560495f21420b3cd790,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4846,5c0da879e7565a531557d560495f21420b3cd790,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4847,5c0da879e7565a531557d560495f21420b3cd790,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4848,5c0da879e7565a531557d560495f21420b3cd790,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4849,1fbab10e426d077bcaf2d35da6311618e0ab4c69,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4850,1fbab10e426d077bcaf2d35da6311618e0ab4c69,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4851,1fbab10e426d077bcaf2d35da6311618e0ab4c69,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4852,1fbab10e426d077bcaf2d35da6311618e0ab4c69,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4853,1fbab10e426d077bcaf2d35da6311618e0ab4c69,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4854,a2f473344d194f756d4ce3aaeed3a1d8a74af59e,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4855,0f90322cdcba865c131a9ca4c568aa7ba4e7b80c,/sbin-init/ubuntu/13.04/Dockerfile,"# much of this was gleaned from https://github.com/lxc/lxc/blob/lxc-0.8.0/templates/lxc-ubuntu.in

# we're going to want this bad boy installed so we can connect :)
"
4856,0f90322cdcba865c131a9ca4c568aa7ba4e7b80c,/sbin-init/ubuntu/13.04/Dockerfile,"# undo some leet hax of the base image
"
4857,0f90322cdcba865c131a9ca4c568aa7ba4e7b80c,/sbin-init/ubuntu/13.04/Dockerfile,"# generate a nice UTF-8 locale for our use
"
4858,0f90322cdcba865c131a9ca4c568aa7ba4e7b80c,/sbin-init/ubuntu/13.04/Dockerfile,"# remove some pointless services
"
4859,0f90322cdcba865c131a9ca4c568aa7ba4e7b80c,/sbin-init/ubuntu/13.04/Dockerfile,"# /lib/init/fstab: cleared out for bare-bones lxc' > /lib/init/fstab

# small fix for SSH in 13.10 (that's harmless everywhere else)
"
4860,0f90322cdcba865c131a9ca4c568aa7ba4e7b80c,/sbin-init/ubuntu/13.04/Dockerfile,"# set a cheap, simple password for great convenience
"
4861,0f90322cdcba865c131a9ca4c568aa7ba4e7b80c,/sbin-init/ubuntu/13.04/Dockerfile,"# we can has SSH
"
4862,0f90322cdcba865c131a9ca4c568aa7ba4e7b80c,/sbin-init/ubuntu/13.04/Dockerfile,"# pepare for takeoff
"
4863,0a7fc8e9c66115e25ab41177b3cab92b02a5329a,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4864,0a7fc8e9c66115e25ab41177b3cab92b02a5329a,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
4865,0a7fc8e9c66115e25ab41177b3cab92b02a5329a,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
4866,0a7fc8e9c66115e25ab41177b3cab92b02a5329a,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
4867,0a7fc8e9c66115e25ab41177b3cab92b02a5329a,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
4868,cdbbdc085abfedda1fdcb1a268eb6a9e2d3ac67b,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4869,939d8e964d989ad76fba85fb8f120d8fcc8d5852,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4870,391abf70ebc4639af578f632e4c062595faf7f21,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4871,391abf70ebc4639af578f632e4c062595faf7f21,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
4872,391abf70ebc4639af578f632e4c062595faf7f21,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
4873,391abf70ebc4639af578f632e4c062595faf7f21,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
4874,391abf70ebc4639af578f632e4c062595faf7f21,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
4875,a51f6a25c2be074b9b28d069e02bec0439f4932a,/google-cloud-print-connector/Dockerfile,"# fetch dependencies
# format: import-path=strip-components=tarball-url
"
4876,a51f6a25c2be074b9b28d069e02bec0439f4932a,/google-cloud-print-connector/Dockerfile,"# https://github.com/coreos/go-systemd/releases
"
4877,a51f6a25c2be074b9b28d069e02bec0439f4932a,/google-cloud-print-connector/Dockerfile,"# https://github.com/satori/go.uuid/releases
"
4878,a51f6a25c2be074b9b28d069e02bec0439f4932a,/google-cloud-print-connector/Dockerfile,"# https://github.com/urfave/cli/releases
"
4879,a51f6a25c2be074b9b28d069e02bec0439f4932a,/google-cloud-print-connector/Dockerfile,"# https://github.com/golang/net/commits/master
"
4880,a51f6a25c2be074b9b28d069e02bec0439f4932a,/google-cloud-print-connector/Dockerfile,"# https://github.com/golang/oauth2/commits/master
"
4881,a51f6a25c2be074b9b28d069e02bec0439f4932a,/google-cloud-print-connector/Dockerfile,"# https://bazaar.launchpad.net/~chipaca/go-xdg/v0/files (""view revision"")
# https://bazaar.launchpad.net/~chipaca/go-xdg/v0/revision/10?start_revid=10 (""download tarball"")
"
4882,a51f6a25c2be074b9b28d069e02bec0439f4932a,/google-cloud-print-connector/Dockerfile,"#*=}""; dep=""${dep%=$strip}""; \
"
4883,a51f6a25c2be074b9b28d069e02bec0439f4932a,/google-cloud-print-connector/Dockerfile,"#*=}""; strip=""${strip%=$tarball}""; \
"
4884,a51f6a25c2be074b9b28d069e02bec0439f4932a,/google-cloud-print-connector/Dockerfile,"# https://github.com/google/cloud-print-connector/releases
"
4885,71acec38a13a598cf1f95db7b1ad0cafe790b2a3,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4886,71acec38a13a598cf1f95db7b1ad0cafe790b2a3,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4887,71acec38a13a598cf1f95db7b1ad0cafe790b2a3,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4888,71acec38a13a598cf1f95db7b1ad0cafe790b2a3,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4889,71acec38a13a598cf1f95db7b1ad0cafe790b2a3,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4890,f234bb15bf5075509b5e475c734f74404e9d0b2e,/debian/devel/Dockerfile,"# normal build deps
"
4891,f234bb15bf5075509b5e475c734f74404e9d0b2e,/debian/devel/Dockerfile,"# need deb-src for compiling packages
"
4892,f234bb15bf5075509b5e475c734f74404e9d0b2e,/debian/devel/Dockerfile,"# let's make apt list package versions, since those are handy during devel
"
4893,f234bb15bf5075509b5e475c734f74404e9d0b2e,/debian/devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
4894,f234bb15bf5075509b5e475c734f74404e9d0b2e,/debian/devel/Dockerfile,"# for ssh to debian hosts, let's make sure we know their fingerprints <3
"
4895,f234bb15bf5075509b5e475c734f74404e9d0b2e,/debian/devel/Dockerfile,"# make sure things are pretty
"
4896,f234bb15bf5075509b5e475c734f74404e9d0b2e,/debian/devel/Dockerfile,"#(force_color_prompt=yes)/\1/' ~/.bashrc

# quilt is much amaze: https://wiki.debian.org/UsingQuilt#Using_quilt_with_Debian_source_packages
"
4897,f234bb15bf5075509b5e475c734f74404e9d0b2e,/debian/devel/Dockerfile,"# make sure pbuilder-dist uses a sane default mirror
"
4898,09dbe556aa85eac7cb48c2cd77e413a1fe0de682,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4899,09dbe556aa85eac7cb48c2cd77e413a1fe0de682,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4900,09dbe556aa85eac7cb48c2cd77e413a1fe0de682,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4901,09dbe556aa85eac7cb48c2cd77e413a1fe0de682,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4902,09dbe556aa85eac7cb48c2cd77e413a1fe0de682,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4903,6413e7bd54ad6826360fab13efe662cd7a1431e5,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
4904,3e8a873095bcd44f86239cfcc59c919bebce49e9,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4905,48e61382a9c58dc10b8d0d0d5aed310cd8150a9f,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
4906,9e81dfefef25592dfa1c486ab82148a1d6037aab,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4907,0afd0ce81d1a3c7331896299d6a5265739c4df5b,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4908,0afd0ce81d1a3c7331896299d6a5265739c4df5b,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4909,0afd0ce81d1a3c7331896299d6a5265739c4df5b,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4910,0afd0ce81d1a3c7331896299d6a5265739c4df5b,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4911,0afd0ce81d1a3c7331896299d6a5265739c4df5b,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4912,4d38458ffce7137dd3388dd7cbca6348465153d1,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4913,45b8f8118c33c3c17cafb8474d57ab53f4f71dd6,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4914,45b8f8118c33c3c17cafb8474d57ab53f4f71dd6,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4915,45b8f8118c33c3c17cafb8474d57ab53f4f71dd6,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4916,45b8f8118c33c3c17cafb8474d57ab53f4f71dd6,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4917,45b8f8118c33c3c17cafb8474d57ab53f4f71dd6,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4918,74c1c756573654f424e7d50dd104e149900d15a7,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4919,74c1c756573654f424e7d50dd104e149900d15a7,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4920,74c1c756573654f424e7d50dd104e149900d15a7,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4921,74c1c756573654f424e7d50dd104e149900d15a7,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4922,74c1c756573654f424e7d50dd104e149900d15a7,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4923,2fa73d6516671a271563e32b81416e955cd8113b,/snapcraft/Dockerfile,"# based initially on https://hub.docker.com/r/didrocks/snapcraft/
"
4924,2fa73d6516671a271563e32b81416e955cd8113b,/snapcraft/Dockerfile,"# enable multiverse as snapcraft cleanbuild does
#RUN sed -i 's/ universe$/ universe multiverse/' /etc/apt/sources.list

# pin specific version so we can update with a natural cache bust
"
4925,8127e9724a1d6f6405d19b082a2580a82dc63fe2,/vultr-cli/Dockerfile,"# https://github.com/vultr/vultr-cli/releases
"
4926,ef9cf9438d12236072488bc6768c0504d53636ba,/gmpydl/Dockerfile,"# https://pypi.org/project/gmusicapi/
"
4927,ef9cf9438d12236072488bc6768c0504d53636ba,/gmpydl/Dockerfile,"# https://github.com/stevenewbs/gmpydl/commits/master
# https://github.com/stevenewbs/gmpydl/releases
"
4928,2de6ba8428ca3a5c2d992152f8d798f5d18cdc01,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4929,2de6ba8428ca3a5c2d992152f8d798f5d18cdc01,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4930,2de6ba8428ca3a5c2d992152f8d798f5d18cdc01,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4931,2de6ba8428ca3a5c2d992152f8d798f5d18cdc01,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4932,2de6ba8428ca3a5c2d992152f8d798f5d18cdc01,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4933,da42cb67a73ac9536ad5cb4e72272692db669d60,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4934,9f6f4d2de420c33fc1f4883e3ccfe71fac753d64,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4935,809c799cdc170ff4cacd390fe3eef9740be971d8,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4936,fe911bd0369fe1d914e4b8957df38c0fe42a18ee,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
4937,e7cc93ff4ebb1d71aa8ec65c75545e7456c42eb7,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4938,e7cc93ff4ebb1d71aa8ec65c75545e7456c42eb7,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4939,e7cc93ff4ebb1d71aa8ec65c75545e7456c42eb7,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4940,e7cc93ff4ebb1d71aa8ec65c75545e7456c42eb7,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4941,e7cc93ff4ebb1d71aa8ec65c75545e7456c42eb7,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4942,acdb8b709ffad6b5d2c85f46aae9266f34ba7361,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4943,acdb8b709ffad6b5d2c85f46aae9266f34ba7361,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
4944,acdb8b709ffad6b5d2c85f46aae9266f34ba7361,/jenkins/Dockerfile,"# https://groups.google.com/d/msg/jenkins-infra/c7m_72vUTXE/37zw9GXhAQAJ
"
4945,acdb8b709ffad6b5d2c85f46aae9266f34ba7361,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
4946,a9a6a340f76b85930e12c1e1636e25ebbd92d2ec,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
4947,a9a6a340f76b85930e12c1e1636e25ebbd92d2ec,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
4948,a9a6a340f76b85930e12c1e1636e25ebbd92d2ec,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
4949,71cf48b313a9b708562d6ea4188dd5924239833c,/jenkins/weekly/Dockerfile,"# grab gosu for easy step-down from root
"
4950,71cf48b313a9b708562d6ea4188dd5924239833c,/jenkins/weekly/Dockerfile,"# grab tini for signal processing and zombie killing
"
4951,71cf48b313a9b708562d6ea4188dd5924239833c,/jenkins/weekly/Dockerfile,"# https://groups.google.com/d/msg/jenkins-infra/c7m_72vUTXE/37zw9GXhAQAJ
"
4952,71cf48b313a9b708562d6ea4188dd5924239833c,/jenkins/weekly/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
4953,cd6e90cf0668753b236bdf7938c5c38dcd62ebe1,/ruby-unicorn/Dockerfile,"# set a few bundle config variables so that a local .bundle in our development directory doesn't screw up our image
"
4954,cd6e90cf0668753b236bdf7938c5c38dcd62ebe1,/ruby-unicorn/Dockerfile,"# TODO find a clean way to do this here in such a way that gems like rmagick can install cleanly without first installing libmagickcore-dev
#ONBUILD ADD Gemfile /apps/rails/Gemfile
#ONBUILD ADD Gemfile.lock /apps/rails/Gemfile.lock
#ONBUILD RUN bundle install --deployment
#ONBUILD ADD . /apps/rails
"
4955,366a3004f85b9cce5d1bdeafe414c32e1620f646,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4956,9161fd6553d0cd48c07d9d1dfa243c5891f821f8,/tinygo/Dockerfile,"# the .deb (as of 0.6.0) installs to /usr/local/tinygo but doesn't add ""tinygo"" to PATH
"
4957,9161fd6553d0cd48c07d9d1dfa243c5891f821f8,/tinygo/Dockerfile,"# https://tinygo.org/getting-started/linux/

# https://github.com/tinygo-org/tinygo/releases
"
4958,ecc21838d63921733aa542bb906b9a7571ce299e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4959,ecc21838d63921733aa542bb906b9a7571ce299e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4960,ecc21838d63921733aa542bb906b9a7571ce299e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4961,ecc21838d63921733aa542bb906b9a7571ce299e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4962,ecc21838d63921733aa542bb906b9a7571ce299e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4963,4f3c297e3d694f4033315d4f9e5b5248c0a0aadc,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4964,62e574a51f4d77a500a4e5d299adade62b2177f9,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
4965,93232ce4dc415091faf219d9797bf7b0c4192ad7,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4966,c59a0145f300cc4ff07395dd03fabf47f209bb7c,/mongodb-mms/Dockerfile,"# see https://mms.mongodb.com/settings/monitoring-agent
# click on ""Ubuntu 12.04+""
"
4967,5dd4032771cdabfa70c571865e2e509361cdb7cd,/docker/experimental/dind/Dockerfile,"# https://github.com/docker/docker/blob/master/project/PACKAGERS.md#runtime-dependencies
"
4968,5dd4032771cdabfa70c571865e2e509361cdb7cd,/docker/experimental/dind/Dockerfile,"# TODO aufs-tools

"
4969,51c37f90c5c6f6c75a5b6ea1974adfba0cb32232,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4970,51c37f90c5c6f6c75a5b6ea1974adfba0cb32232,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4971,51c37f90c5c6f6c75a5b6ea1974adfba0cb32232,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4972,51c37f90c5c6f6c75a5b6ea1974adfba0cb32232,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4973,51c37f90c5c6f6c75a5b6ea1974adfba0cb32232,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4974,f0d65439bd223b132372d38065596db6b06e0eb3,/caff/Dockerfile,"# TODO move this down when COPY adheres to USER (and remove chown)
"
4975,854c15311877f0b6e8e9b789d637b4457cbafe44,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4976,854c15311877f0b6e8e9b789d637b4457cbafe44,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4977,854c15311877f0b6e8e9b789d637b4457cbafe44,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4978,854c15311877f0b6e8e9b789d637b4457cbafe44,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4979,854c15311877f0b6e8e9b789d637b4457cbafe44,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4980,a70b767eacee0aba36fd2214f9b3626e43e71cf5,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4981,a70b767eacee0aba36fd2214f9b3626e43e71cf5,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4982,a70b767eacee0aba36fd2214f9b3626e43e71cf5,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4983,a70b767eacee0aba36fd2214f9b3626e43e71cf5,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4984,a70b767eacee0aba36fd2214f9b3626e43e71cf5,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4985,562267bc549dfbe2b896631921c352769474c912,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
4986,ca4641924d1fce6dcd097727a9e34252e80ab7c6,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4987,ca4641924d1fce6dcd097727a9e34252e80ab7c6,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
4988,ca4641924d1fce6dcd097727a9e34252e80ab7c6,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
4989,ca4641924d1fce6dcd097727a9e34252e80ab7c6,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
4990,ca4641924d1fce6dcd097727a9e34252e80ab7c6,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
4991,06ebc8e79a1581045b09bb566be78092da664d49,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
4992,06ebc8e79a1581045b09bb566be78092da664d49,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
4993,06ebc8e79a1581045b09bb566be78092da664d49,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
4994,06ebc8e79a1581045b09bb566be78092da664d49,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
4995,06ebc8e79a1581045b09bb566be78092da664d49,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
4996,6876bb3ec02e7983e2eba3716d828f0aef950e66,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
4997,6876bb3ec02e7983e2eba3716d828f0aef950e66,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
4998,6876bb3ec02e7983e2eba3716d828f0aef950e66,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
4999,6876bb3ec02e7983e2eba3716d828f0aef950e66,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
5000,6876bb3ec02e7983e2eba3716d828f0aef950e66,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
5001,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/12.10/Dockerfile,"# much of this was gleaned from https://github.com/lxc/lxc/blob/lxc-0.8.0/templates/lxc-ubuntu.in

# we're going to want this bad boy installed so we can connect :)
"
5002,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/12.10/Dockerfile,"# undo some leet hax of the base image
"
5003,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/12.10/Dockerfile,"# generate a nice UTF-8 locale for our use
"
5004,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/12.10/Dockerfile,"# remove some pointless services
"
5005,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/12.10/Dockerfile,"# /lib/init/fstab: cleared out for bare-bones lxc' > /lib/init/fstab

# small fix for SSH in 13.10 (that's harmless everywhere else)
"
5006,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/12.10/Dockerfile,"# set a cheap, simple password for great convenience
"
5007,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/12.10/Dockerfile,"# we can has SSH
"
5008,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/12.10/Dockerfile,"# pepare for takeoff
"
5009,68aa2d19f805bb40e74e4b62f225cfaa9c3e54bc,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5010,9ee3c1e724b31da1a1ebdab0de134d35b91e4455,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5011,9ee3c1e724b31da1a1ebdab0de134d35b91e4455,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5012,9ee3c1e724b31da1a1ebdab0de134d35b91e4455,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5013,9ee3c1e724b31da1a1ebdab0de134d35b91e4455,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5014,9ee3c1e724b31da1a1ebdab0de134d35b91e4455,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5015,2e7d49957a98eb3b4a7e96918d3801d61168fc20,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5016,2e7d49957a98eb3b4a7e96918d3801d61168fc20,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5017,2e7d49957a98eb3b4a7e96918d3801d61168fc20,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5018,2e7d49957a98eb3b4a7e96918d3801d61168fc20,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5019,2e7d49957a98eb3b4a7e96918d3801d61168fc20,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5020,a1c89c4afae2df1363a3d07b1ebd89360a68de55,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5021,a1c89c4afae2df1363a3d07b1ebd89360a68de55,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5022,a1c89c4afae2df1363a3d07b1ebd89360a68de55,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5023,a1c89c4afae2df1363a3d07b1ebd89360a68de55,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5024,a1c89c4afae2df1363a3d07b1ebd89360a68de55,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5025,482ce46a79f1d0394b092269ba69e8024beeac1d,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5026,482ce46a79f1d0394b092269ba69e8024beeac1d,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5027,482ce46a79f1d0394b092269ba69e8024beeac1d,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5028,482ce46a79f1d0394b092269ba69e8024beeac1d,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5029,482ce46a79f1d0394b092269ba69e8024beeac1d,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5030,3b23a89c05eabe861f32d71d4728f67df9692939,/pmbootstrap/Dockerfile,"# https://gitlab.alpinelinux.org/alpine/aports/issues/11122
"
5031,3b23a89c05eabe861f32d71d4728f67df9692939,/pmbootstrap/Dockerfile,"# verify there are no errors/warnings
"
5032,3b23a89c05eabe861f32d71d4728f67df9692939,/pmbootstrap/Dockerfile,"# https://pypi.org/project/pmbootstrap/
"
5033,3b23a89c05eabe861f32d71d4728f67df9692939,/pmbootstrap/Dockerfile,"# workaround issues with transparent QEMU / binfmt detection (""fix binary"" -- qemu binaries not necessary inside chroots/namespaces)
"
5034,e23c765a61cddc9bd9e9fe1d4bb0e6cfbfc7566a,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
5035,5297ce0ed2d601e0fd3cfbeecbc87160f0ed71b3,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5036,5297ce0ed2d601e0fd3cfbeecbc87160f0ed71b3,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5037,5297ce0ed2d601e0fd3cfbeecbc87160f0ed71b3,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5038,5297ce0ed2d601e0fd3cfbeecbc87160f0ed71b3,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5039,5297ce0ed2d601e0fd3cfbeecbc87160f0ed71b3,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5040,0f90322cdcba865c131a9ca4c568aa7ba4e7b80c,/sbin-init/ubuntu/13.10/Dockerfile,"# much of this was gleaned from https://github.com/lxc/lxc/blob/lxc-0.8.0/templates/lxc-ubuntu.in

# we're going to want this bad boy installed so we can connect :)
"
5041,0f90322cdcba865c131a9ca4c568aa7ba4e7b80c,/sbin-init/ubuntu/13.10/Dockerfile,"# undo some leet hax of the base image
"
5042,0f90322cdcba865c131a9ca4c568aa7ba4e7b80c,/sbin-init/ubuntu/13.10/Dockerfile,"# generate a nice UTF-8 locale for our use
"
5043,0f90322cdcba865c131a9ca4c568aa7ba4e7b80c,/sbin-init/ubuntu/13.10/Dockerfile,"# remove some pointless services
"
5044,0f90322cdcba865c131a9ca4c568aa7ba4e7b80c,/sbin-init/ubuntu/13.10/Dockerfile,"# /lib/init/fstab: cleared out for bare-bones lxc' > /lib/init/fstab

# small fix for SSH in 13.10 (that's harmless everywhere else)
"
5045,0f90322cdcba865c131a9ca4c568aa7ba4e7b80c,/sbin-init/ubuntu/13.10/Dockerfile,"# set a cheap, simple password for great convenience
"
5046,0f90322cdcba865c131a9ca4c568aa7ba4e7b80c,/sbin-init/ubuntu/13.10/Dockerfile,"# we can has SSH
"
5047,0f90322cdcba865c131a9ca4c568aa7ba4e7b80c,/sbin-init/ubuntu/13.10/Dockerfile,"# pepare for takeoff
"
5048,44833445728d1f97e100a6f97777162ad531cc95,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5049,25b6412ae91a431113325f8d2f4a5cd88eb7ce99,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5050,25b6412ae91a431113325f8d2f4a5cd88eb7ce99,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5051,25b6412ae91a431113325f8d2f4a5cd88eb7ce99,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5052,25b6412ae91a431113325f8d2f4a5cd88eb7ce99,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5053,25b6412ae91a431113325f8d2f4a5cd88eb7ce99,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5054,76a9c408c02fc3bd472a09012dfe0d0412cc1966,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5055,76a9c408c02fc3bd472a09012dfe0d0412cc1966,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5056,76a9c408c02fc3bd472a09012dfe0d0412cc1966,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5057,76a9c408c02fc3bd472a09012dfe0d0412cc1966,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5058,76a9c408c02fc3bd472a09012dfe0d0412cc1966,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5059,449c89ebbc0b1e431dd6cd720fdd769a15330c54,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5060,cf4c6c1ec420212e5378b877516aeddee0bb078f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5061,cf4c6c1ec420212e5378b877516aeddee0bb078f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5062,cf4c6c1ec420212e5378b877516aeddee0bb078f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5063,cf4c6c1ec420212e5378b877516aeddee0bb078f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5064,cf4c6c1ec420212e5378b877516aeddee0bb078f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5065,09e19373a014c52eb35a9d07b981b9c6d31409dd,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5066,09e19373a014c52eb35a9d07b981b9c6d31409dd,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5067,09e19373a014c52eb35a9d07b981b9c6d31409dd,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5068,09e19373a014c52eb35a9d07b981b9c6d31409dd,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5069,09e19373a014c52eb35a9d07b981b9c6d31409dd,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5070,721645aac78541600cae15d046ba28afdf2f076e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5071,721645aac78541600cae15d046ba28afdf2f076e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5072,721645aac78541600cae15d046ba28afdf2f076e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5073,721645aac78541600cae15d046ba28afdf2f076e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5074,721645aac78541600cae15d046ba28afdf2f076e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5075,b29511e11e1fc10053ae307a3a74e841949d7ea1,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5076,b29511e11e1fc10053ae307a3a74e841949d7ea1,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5077,b29511e11e1fc10053ae307a3a74e841949d7ea1,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5078,b29511e11e1fc10053ae307a3a74e841949d7ea1,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5079,b29511e11e1fc10053ae307a3a74e841949d7ea1,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5080,b56c5f000960d1a677512f2abcba2d38f9a1fff8,/prometheus/Dockerfile,"# https://github.com/prometheus/prometheus/releases
"
5081,33ab463fbc95c2cec0f8201be8d05003f88ce408,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5082,f01e8099be5c23872e57197b77cd9e74fcef101c,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
5083,f01e8099be5c23872e57197b77cd9e74fcef101c,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
5084,f01e8099be5c23872e57197b77cd9e74fcef101c,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
5085,f01e8099be5c23872e57197b77cd9e74fcef101c,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
5086,f01e8099be5c23872e57197b77cd9e74fcef101c,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
5087,5cdfacd54f8f89422f79a9506d1ae6906c744b7d,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
5088,5cdfacd54f8f89422f79a9506d1ae6906c744b7d,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
5089,5cdfacd54f8f89422f79a9506d1ae6906c744b7d,/plex/media-server/Dockerfile,"# the published deb has pre/post-inst scripts that don't really apply to Docker (so we'll skip ""install"" entirely)
# (as of 1.18.5.2309, they have bugs around Docker detection, which is mostly for avoiding init behavior)
"
5090,5cdfacd54f8f89422f79a9506d1ae6906c744b7d,/plex/media-server/Dockerfile,"#	apt-get update; \
#	apt-get install /tmp/plex.deb; \
#	rm -rf /var/lib/apt/lists/*; \
"
5091,8a770950c03bdea2d6525fa169cc097765160391,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5092,2bcfb62d2faacf99cc4524d9de5561f110fbee0a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5093,2bcfb62d2faacf99cc4524d9de5561f110fbee0a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5094,2bcfb62d2faacf99cc4524d9de5561f110fbee0a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5095,2bcfb62d2faacf99cc4524d9de5561f110fbee0a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5096,2bcfb62d2faacf99cc4524d9de5561f110fbee0a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5097,bc4d16feeb040bbc6c2f003b2ed749bc55e6a776,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5098,bc4d16feeb040bbc6c2f003b2ed749bc55e6a776,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5099,bc4d16feeb040bbc6c2f003b2ed749bc55e6a776,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5100,bc4d16feeb040bbc6c2f003b2ed749bc55e6a776,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5101,bc4d16feeb040bbc6c2f003b2ed749bc55e6a776,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5102,217170cf047605cd6919b5382a8af6476431d607,/perl/Dockerfile,"# secure by default ♥ (thanks to sri!)
"
5103,217170cf047605cd6919b5382a8af6476431d607,/perl/Dockerfile,"# reinstall cpanm itself, for good measure
"
5104,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/13.04/Dockerfile,"# much of this was gleaned from https://github.com/lxc/lxc/blob/lxc-0.8.0/templates/lxc-ubuntu.in
# and then heavily modified and hacked like crazy

# we're going to want this bad boy installed so we can connect :)
"
5105,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/13.04/Dockerfile,"# undo some leet hax of the base image
"
5106,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/13.04/Dockerfile,"# generate a nice UTF-8 locale for our use
"
5107,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/13.04/Dockerfile,"# remove some pointless services
"
5108,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/13.04/Dockerfile,"# /lib/init/fstab: cleared out for bare-bones Docker' > /lib/init/fstab

# small fix for SSH in 13.10 (that's harmless everywhere else)
"
5109,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/13.04/Dockerfile,"# let Upstart know it's in a container
"
5110,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/13.04/Dockerfile,"# set a cheap, simple password for great convenience
"
5111,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/13.04/Dockerfile,"# we can has SSH
"
5112,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/13.04/Dockerfile,"# pepare for takeoff
"
5113,f6a827ea67a070853eedc8572187646b4198f736,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5114,f6a827ea67a070853eedc8572187646b4198f736,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5115,f6a827ea67a070853eedc8572187646b4198f736,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5116,f6a827ea67a070853eedc8572187646b4198f736,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5117,f6a827ea67a070853eedc8572187646b4198f736,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5118,9ddf34b9a23996600f52dbf00d079df0c2ac476f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5119,9ddf34b9a23996600f52dbf00d079df0c2ac476f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5120,9ddf34b9a23996600f52dbf00d079df0c2ac476f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5121,9ddf34b9a23996600f52dbf00d079df0c2ac476f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5122,9ddf34b9a23996600f52dbf00d079df0c2ac476f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5123,02e029ac1004fcdfe8255cc79ee9a316dbf4ce53,/makemkv/Dockerfile,"# This disc requires Java runtime (JRE), but none was found. Certain functions will fail, please install Java. See http://www.makemkv.com/bdjava/ for details.
"
5124,02e029ac1004fcdfe8255cc79ee9a316dbf4ce53,/makemkv/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
5125,02e029ac1004fcdfe8255cc79ee9a316dbf4ce53,/makemkv/Dockerfile,"# http://www.makemkv.com/forum2/viewtopic.php?f=3&t=224
"
5126,02e029ac1004fcdfe8255cc79ee9a316dbf4ce53,/makemkv/Dockerfile,"# beta code: http://www.makemkv.com/forum2/viewtopic.php?f=5&t=1053
"
5127,f0da16b2597c2954d443148ddb95a8683d49cca2,/google-cloud-print-connector/Dockerfile,"# fetch dependencies
# format: import-path=strip-components=tarball-url
"
5128,f0da16b2597c2954d443148ddb95a8683d49cca2,/google-cloud-print-connector/Dockerfile,"# https://github.com/coreos/go-systemd/releases
"
5129,f0da16b2597c2954d443148ddb95a8683d49cca2,/google-cloud-print-connector/Dockerfile,"# https://github.com/satori/go.uuid/releases
"
5130,f0da16b2597c2954d443148ddb95a8683d49cca2,/google-cloud-print-connector/Dockerfile,"# https://github.com/urfave/cli/releases
"
5131,f0da16b2597c2954d443148ddb95a8683d49cca2,/google-cloud-print-connector/Dockerfile,"# https://github.com/golang/net/commits/master
"
5132,f0da16b2597c2954d443148ddb95a8683d49cca2,/google-cloud-print-connector/Dockerfile,"# https://github.com/golang/oauth2/commits/master
"
5133,f0da16b2597c2954d443148ddb95a8683d49cca2,/google-cloud-print-connector/Dockerfile,"# https://bazaar.launchpad.net/~chipaca/go-xdg/v0/files (""view revision"")
# https://bazaar.launchpad.net/~chipaca/go-xdg/v0/revision/10?start_revid=10 (""download tarball"")
"
5134,f0da16b2597c2954d443148ddb95a8683d49cca2,/google-cloud-print-connector/Dockerfile,"#*=}""; dep=""${dep%=$strip}""; \
"
5135,f0da16b2597c2954d443148ddb95a8683d49cca2,/google-cloud-print-connector/Dockerfile,"#*=}""; strip=""${strip%=$tarball}""; \
"
5136,f0da16b2597c2954d443148ddb95a8683d49cca2,/google-cloud-print-connector/Dockerfile,"# https://github.com/google/cloud-print-connector/releases
"
5137,f0da16b2597c2954d443148ddb95a8683d49cca2,/google-cloud-print-connector/Dockerfile,"#ENV GCPC_VERSION d353d01
# https://github.com/google/cloud-print-connector/commit/d353d01
"
5138,a7a54e4c3cbe1ea048a74660b479713e346664dd,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5139,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/13.04/Dockerfile,"# much of this was gleaned from https://github.com/lxc/lxc/blob/lxc-0.8.0/templates/lxc-ubuntu.in

# we're going to want this bad boy installed so we can connect :)
"
5140,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/13.04/Dockerfile,"# undo some leet hax of the base image
"
5141,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/13.04/Dockerfile,"# generate a nice UTF-8 locale for our use
"
5142,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/13.04/Dockerfile,"# remove some pointless services
"
5143,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/13.04/Dockerfile,"# /lib/init/fstab: cleared out for bare-bones lxc' > /lib/init/fstab

# small fix for SSH in 13.10 (that's harmless everywhere else)
"
5144,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/13.04/Dockerfile,"# set a cheap, simple password for great convenience
"
5145,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/13.04/Dockerfile,"# we can has SSH
"
5146,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/13.04/Dockerfile,"# pepare for takeoff
"
5147,5421a734284f8ebe2231cc1ef1ecc1e20ba61c50,/exim4/Dockerfile,"# grab tini for signal processing and zombie killing
"
5148,3c7c7bed404009ee7aeac9421c521000017cd5cc,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5149,3c7c7bed404009ee7aeac9421c521000017cd5cc,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5150,3c7c7bed404009ee7aeac9421c521000017cd5cc,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5151,3c7c7bed404009ee7aeac9421c521000017cd5cc,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5152,3c7c7bed404009ee7aeac9421c521000017cd5cc,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5153,1f1f12aafa7f666b1b465f752c7e8f9eb08a879a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5154,1f1f12aafa7f666b1b465f752c7e8f9eb08a879a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5155,1f1f12aafa7f666b1b465f752c7e8f9eb08a879a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5156,1f1f12aafa7f666b1b465f752c7e8f9eb08a879a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5157,1f1f12aafa7f666b1b465f752c7e8f9eb08a879a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5158,7f60ec2716b80a8aa0cbf3d98aade217b9a7e297,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5159,7f60ec2716b80a8aa0cbf3d98aade217b9a7e297,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5160,7f60ec2716b80a8aa0cbf3d98aade217b9a7e297,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5161,7f60ec2716b80a8aa0cbf3d98aade217b9a7e297,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5162,7f60ec2716b80a8aa0cbf3d98aade217b9a7e297,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5163,bf73c530da22ad7985bbf9ade5d23be68a903fbb,/dind/Dockerfile,"#RUN curl -sL https://get.docker.io | sh

# let's grab the lastest ""master"" version of the install.sh script >:)
"
5164,ac0c050c990b6c81adad0287574fd8b8a6fcd452,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5165,ebea3bdb6f9568ccdfa874ab58ad76638b9d7987,/debian/devel/Dockerfile,"# normal build deps
"
5166,ebea3bdb6f9568ccdfa874ab58ad76638b9d7987,/debian/devel/Dockerfile,"# need an editor for ""dch -i""
"
5167,ebea3bdb6f9568ccdfa874ab58ad76638b9d7987,/debian/devel/Dockerfile,"# a few extra little useful things
"
5168,ebea3bdb6f9568ccdfa874ab58ad76638b9d7987,/debian/devel/Dockerfile,"# need deb-src for compiling packages
"
5169,ebea3bdb6f9568ccdfa874ab58ad76638b9d7987,/debian/devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
5170,28f5996df52805e115b04be34fa77284283c8da2,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5171,28f5996df52805e115b04be34fa77284283c8da2,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5172,28f5996df52805e115b04be34fa77284283c8da2,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5173,28f5996df52805e115b04be34fa77284283c8da2,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5174,28f5996df52805e115b04be34fa77284283c8da2,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5175,7a9df07658269c3e69835b002d12021c9a76a376,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5176,7a9df07658269c3e69835b002d12021c9a76a376,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5177,7a9df07658269c3e69835b002d12021c9a76a376,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5178,7a9df07658269c3e69835b002d12021c9a76a376,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5179,7a9df07658269c3e69835b002d12021c9a76a376,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5180,4c753abe59121a35349e62f0c5b00af2e1529654,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5181,200c6c0ec2fe3b3f609599816d67df1b59f7d43f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5182,200c6c0ec2fe3b3f609599816d67df1b59f7d43f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5183,200c6c0ec2fe3b3f609599816d67df1b59f7d43f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5184,200c6c0ec2fe3b3f609599816d67df1b59f7d43f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5185,200c6c0ec2fe3b3f609599816d67df1b59f7d43f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5186,b6c2ac0faaec239ee1c869bd8a3155ba8997bb59,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5187,b6c2ac0faaec239ee1c869bd8a3155ba8997bb59,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5188,b6c2ac0faaec239ee1c869bd8a3155ba8997bb59,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5189,b6c2ac0faaec239ee1c869bd8a3155ba8997bb59,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5190,b6c2ac0faaec239ee1c869bd8a3155ba8997bb59,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5191,6619904eb134c734d3b7f0b3b8433b883e3a4f32,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5192,f7b12458caea5e8846e0bf43d97782369a417877,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5193,f7b12458caea5e8846e0bf43d97782369a417877,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5194,f7b12458caea5e8846e0bf43d97782369a417877,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5195,f7b12458caea5e8846e0bf43d97782369a417877,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5196,f7b12458caea5e8846e0bf43d97782369a417877,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5197,0292ea40923ebb6600b48873b132bbbf46870659,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5198,53c9715b94cb4eccb30d8b11d7ef9063480d6484,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5199,53c9715b94cb4eccb30d8b11d7ef9063480d6484,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5200,53c9715b94cb4eccb30d8b11d7ef9063480d6484,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5201,53c9715b94cb4eccb30d8b11d7ef9063480d6484,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5202,53c9715b94cb4eccb30d8b11d7ef9063480d6484,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5203,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/13.10/Dockerfile,"# much of this was gleaned from https://github.com/lxc/lxc/blob/lxc-0.8.0/templates/lxc-ubuntu.in

# we're going to want this bad boy installed so we can connect :)
"
5204,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/13.10/Dockerfile,"# undo some leet hax of the base image
"
5205,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/13.10/Dockerfile,"# generate a nice UTF-8 locale for our use
"
5206,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/13.10/Dockerfile,"# remove some pointless services
"
5207,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/13.10/Dockerfile,"# /lib/init/fstab: cleared out for bare-bones lxc' > /lib/init/fstab

# small fix for SSH in 13.10 (that's harmless everywhere else)
"
5208,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/13.10/Dockerfile,"# set a cheap, simple password for great convenience
"
5209,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/13.10/Dockerfile,"# we can has SSH
"
5210,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/13.10/Dockerfile,"# pepare for takeoff
"
5211,79bfbda6ac4c24696ea3b8cda001013d99b6df3d,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5212,79bfbda6ac4c24696ea3b8cda001013d99b6df3d,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5213,79bfbda6ac4c24696ea3b8cda001013d99b6df3d,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5214,79bfbda6ac4c24696ea3b8cda001013d99b6df3d,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5215,79bfbda6ac4c24696ea3b8cda001013d99b6df3d,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5216,7c184d8e9d02dfad5b6249eb330d96debec22c9d,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
5217,7c184d8e9d02dfad5b6249eb330d96debec22c9d,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
5218,7cd9ad63c9dca4fa1e1390647e92472c6483d092,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
5219,7cd9ad63c9dca4fa1e1390647e92472c6483d092,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
5220,e76c2866be5ad8b4d00766e3fe8184c179872e51,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5221,e76c2866be5ad8b4d00766e3fe8184c179872e51,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5222,e76c2866be5ad8b4d00766e3fe8184c179872e51,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5223,e76c2866be5ad8b4d00766e3fe8184c179872e51,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5224,e76c2866be5ad8b4d00766e3fe8184c179872e51,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5225,e7deae9b38272ff7c557dbb258735cceec3becab,/nginx/Dockerfile,"# log to stderr
"
5226,e7deae9b38272ff7c557dbb258735cceec3becab,/nginx/Dockerfile,"# prevent backgrounding (for Docker)\ndaemon off;' >> /etc/nginx/nginx.conf

"
5227,dc022a2175c7f52de98f8357b57a8c6ee7e91b71,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
5228,dc022a2175c7f52de98f8357b57a8c6ee7e91b71,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
5229,f9de0f5feb4d95836cebf071977671612d46e929,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5230,f9de0f5feb4d95836cebf071977671612d46e929,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5231,f9de0f5feb4d95836cebf071977671612d46e929,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5232,f9de0f5feb4d95836cebf071977671612d46e929,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5233,f9de0f5feb4d95836cebf071977671612d46e929,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5234,17c23fd0ade4a41cc80d62ca50df21fab492ec9a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5235,17c23fd0ade4a41cc80d62ca50df21fab492ec9a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5236,17c23fd0ade4a41cc80d62ca50df21fab492ec9a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5237,17c23fd0ade4a41cc80d62ca50df21fab492ec9a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5238,17c23fd0ade4a41cc80d62ca50df21fab492ec9a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5239,95ddd97cea14dbcb863c46e020cb66f2fe7bb81f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5240,95ddd97cea14dbcb863c46e020cb66f2fe7bb81f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5241,95ddd97cea14dbcb863c46e020cb66f2fe7bb81f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5242,95ddd97cea14dbcb863c46e020cb66f2fe7bb81f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5243,95ddd97cea14dbcb863c46e020cb66f2fe7bb81f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5244,2eac1e38890fcb8184839a3202beafb09b573f0f,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5245,30ae67624ab83ebc345350c6488130a7335c2e96,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
5246,30ae67624ab83ebc345350c6488130a7335c2e96,/plex/media-server/Dockerfile,"# the published deb has pre/post-inst scripts that don't really apply to Docker (so we'll skip ""install"" entirely)
# (as of 1.18.5.2309, they have bugs around Docker detection, which is mostly for avoiding init behavior)
"
5247,30ae67624ab83ebc345350c6488130a7335c2e96,/plex/media-server/Dockerfile,"#	apt-get update; \
#	apt-get install /tmp/plex.deb; \
#	rm -rf /var/lib/apt/lists/*; \
"
5248,30ae67624ab83ebc345350c6488130a7335c2e96,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
5249,d8914e186b2eea78c5345096d282da0ee747d66f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5250,d8914e186b2eea78c5345096d282da0ee747d66f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5251,d8914e186b2eea78c5345096d282da0ee747d66f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5252,d8914e186b2eea78c5345096d282da0ee747d66f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5253,d8914e186b2eea78c5345096d282da0ee747d66f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5254,4a559f4470c5fa9a183453de051a1063452c52cf,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5255,4a559f4470c5fa9a183453de051a1063452c52cf,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5256,4a559f4470c5fa9a183453de051a1063452c52cf,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5257,4a559f4470c5fa9a183453de051a1063452c52cf,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5258,4a559f4470c5fa9a183453de051a1063452c52cf,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5259,0bff268b4aeac80fff2ca0c209f42bc4c2fab383,/nginx/Dockerfile,"# log to stderr
"
5260,0bff268b4aeac80fff2ca0c209f42bc4c2fab383,/nginx/Dockerfile,"# prevent backgrounding (for Docker)\ndaemon off;' >> /etc/nginx/nginx.conf

"
5261,912dd59359af49548c58260eb2d85e85603b66b3,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5262,be4c48c72f610648a9818807da84928b771bb77c,/slack/Dockerfile,"# the .deb file linked at https://slack.com/downloads/instructions/debian includes ""/etc/cron.daily/slack"" which sets up an APT repo entry as in the following installation

# pub   rsa4096 2016-02-18 [SCEA]
#       DB08 5A08 CA13 B8AC B917  E0F6 D938 EC0D 0386 51BD
# uid           [ unknown] https://packagecloud.io/slacktechnologies/slack (https://packagecloud.io/docs#gpg_signing) <support@packagecloud.io>
# sub   rsa4096 2016-02-18 [SEA]
"
5263,be4c48c72f610648a9818807da84928b771bb77c,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libX11-xcb.so.1: cannot open shared object file: No such file or directory
"
5264,be4c48c72f610648a9818807da84928b771bb77c,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libasound.so.2: cannot open shared object file: No such file or directory
"
5265,be4c48c72f610648a9818807da84928b771bb77c,/slack/Dockerfile,"# 3.3.3: slack: error while loading shared libraries: libgtk-3.so.0: cannot open shared object file: No such file or directory
"
5266,8ac9b9545e976c1ffe7dc862703107a56cd5b41b,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5267,8ac9b9545e976c1ffe7dc862703107a56cd5b41b,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5268,8ac9b9545e976c1ffe7dc862703107a56cd5b41b,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5269,8ac9b9545e976c1ffe7dc862703107a56cd5b41b,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5270,8ac9b9545e976c1ffe7dc862703107a56cd5b41b,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5271,6f3b2ee0f98d1abde53cf49b7bb47bba0e466cfd,/ruby-unicorn/Dockerfile,"# set a few bundle config variables so that a local .bundle in our development directory doesn't screw up our image
"
5272,6f3b2ee0f98d1abde53cf49b7bb47bba0e466cfd,/ruby-unicorn/Dockerfile,"# TODO find a clean way to do this here in such a way that gems like rmagick can install cleanly without first installing libmagickcore-dev
#ONBUILD ADD Gemfile /apps/rails/Gemfile
#ONBUILD ADD Gemfile.lock /apps/rails/Gemfile.lock
#ONBUILD RUN bundle install --deployment
#ONBUILD ADD . /apps/rails
"
5273,f2eeed62198e7337221667ba9d347026adcfa62e,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5274,c197a6558a555e397421df60e9e558211d190e01,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5275,c197a6558a555e397421df60e9e558211d190e01,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5276,c197a6558a555e397421df60e9e558211d190e01,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5277,c197a6558a555e397421df60e9e558211d190e01,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5278,c197a6558a555e397421df60e9e558211d190e01,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5279,94efa5dc41db64b65416d9fb2273156dd7794aa1,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
5280,94efa5dc41db64b65416d9fb2273156dd7794aa1,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
5281,87642ab3d17758161a4acc1347223adec05e8e75,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5282,87642ab3d17758161a4acc1347223adec05e8e75,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5283,87642ab3d17758161a4acc1347223adec05e8e75,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5284,87642ab3d17758161a4acc1347223adec05e8e75,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5285,87642ab3d17758161a4acc1347223adec05e8e75,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5286,a10eeaf58b583af82ffdab8166c7ffa6ff205b0a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5287,a10eeaf58b583af82ffdab8166c7ffa6ff205b0a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5288,a10eeaf58b583af82ffdab8166c7ffa6ff205b0a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5289,a10eeaf58b583af82ffdab8166c7ffa6ff205b0a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5290,a10eeaf58b583af82ffdab8166c7ffa6ff205b0a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5291,a6e0ca37d78d3c19105017de3fa3415df38c8224,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
5292,a6e0ca37d78d3c19105017de3fa3415df38c8224,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
5293,a6e0ca37d78d3c19105017de3fa3415df38c8224,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
5294,a6e0ca37d78d3c19105017de3fa3415df38c8224,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
5295,a6e0ca37d78d3c19105017de3fa3415df38c8224,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
5296,c1610b96ffcea268495de6bc01aa9d72c59f9392,/gmpydl/Dockerfile,"# https://pypi.org/project/gmusicapi/
"
5297,c1610b96ffcea268495de6bc01aa9d72c59f9392,/gmpydl/Dockerfile,"# https://github.com/stevenewbs/gmpydl/commits/master
# https://github.com/stevenewbs/gmpydl/releases
"
5298,3d30b33bed89b4d3896d94f59a6de6776c97b1f6,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
5299,3d30b33bed89b4d3896d94f59a6de6776c97b1f6,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
5300,2f1ea77477a44a468d3def2a610af02e106e9340,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5301,2f1ea77477a44a468d3def2a610af02e106e9340,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5302,2f1ea77477a44a468d3def2a610af02e106e9340,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5303,2f1ea77477a44a468d3def2a610af02e106e9340,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5304,2f1ea77477a44a468d3def2a610af02e106e9340,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5305,6f9755bcfd1e7609365af603a5c466ab3aa7bed5,/phpmyadmin/Dockerfile,"# https://www.phpmyadmin.net/downloads/
"
5306,6f9755bcfd1e7609365af603a5c466ab3aa7bed5,/phpmyadmin/Dockerfile,"# https://docs.phpmyadmin.net/en/latest/setup.html#verifying-phpmyadmin-releases
"
5307,6f9755bcfd1e7609365af603a5c466ab3aa7bed5,/phpmyadmin/Dockerfile,"# Since July 2015 all phpMyAdmin releases are cryptographically signed by the releasing developer, who through January 2016 was Marc Delisle.
"
5308,6f9755bcfd1e7609365af603a5c466ab3aa7bed5,/phpmyadmin/Dockerfile,"# Beginning in January 2016, the release manager is Isaac Bennetch.
"
5309,6f9755bcfd1e7609365af603a5c466ab3aa7bed5,/phpmyadmin/Dockerfile,"# Some additional downloads (for example themes) might be signed by Michal Čihař.
"
5310,2ceb773f3089d42b6e5d55b2af76243788c87d11,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
5311,da00fad425e2e4da260234d0cdaa059f0a60144b,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5312,da00fad425e2e4da260234d0cdaa059f0a60144b,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5313,da00fad425e2e4da260234d0cdaa059f0a60144b,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5314,da00fad425e2e4da260234d0cdaa059f0a60144b,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5315,da00fad425e2e4da260234d0cdaa059f0a60144b,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5316,a2d88bd03783c3afb59d105e52d868068ff2dccc,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5317,a2d88bd03783c3afb59d105e52d868068ff2dccc,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5318,a2d88bd03783c3afb59d105e52d868068ff2dccc,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5319,a2d88bd03783c3afb59d105e52d868068ff2dccc,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5320,a2d88bd03783c3afb59d105e52d868068ff2dccc,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5321,553d308ba91850bb95e82a324ac274e65ed26a11,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
5322,553d308ba91850bb95e82a324ac274e65ed26a11,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
5323,553d308ba91850bb95e82a324ac274e65ed26a11,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
5324,2adecd36345c58934648f46b156c9e4d5f9dedc6,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
5325,2adecd36345c58934648f46b156c9e4d5f9dedc6,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
5326,2adecd36345c58934648f46b156c9e4d5f9dedc6,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
5327,2adecd36345c58934648f46b156c9e4d5f9dedc6,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
5328,2adecd36345c58934648f46b156c9e4d5f9dedc6,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
5329,fc23190e5615691b0c8234cb6cbcea87a02c46e7,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
5330,fc23190e5615691b0c8234cb6cbcea87a02c46e7,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
5331,fc23190e5615691b0c8234cb6cbcea87a02c46e7,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
5332,fc23190e5615691b0c8234cb6cbcea87a02c46e7,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
5333,fc23190e5615691b0c8234cb6cbcea87a02c46e7,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
5334,2fbb2dc63bb9a0554f36778dae372c029f2c4025,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5335,2fbb2dc63bb9a0554f36778dae372c029f2c4025,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5336,2fbb2dc63bb9a0554f36778dae372c029f2c4025,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5337,2fbb2dc63bb9a0554f36778dae372c029f2c4025,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5338,2fbb2dc63bb9a0554f36778dae372c029f2c4025,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5339,77e3230125a7aa6d620906695d872d03ac9ac83c,/docker/master/dind/Dockerfile,"# https://github.com/docker/docker/blob/master/project/PACKAGERS.md#runtime-dependencies
"
5340,77e3230125a7aa6d620906695d872d03ac9ac83c,/docker/master/dind/Dockerfile,"# TODO aufs-tools

"
5341,44833445728d1f97e100a6f97777162ad531cc95,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5342,44833445728d1f97e100a6f97777162ad531cc95,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5343,44833445728d1f97e100a6f97777162ad531cc95,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5344,44833445728d1f97e100a6f97777162ad531cc95,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5345,44833445728d1f97e100a6f97777162ad531cc95,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5346,26b05718b07b66a4eb6626033039798ab9cbce44,/docker/master/dind/Dockerfile,"# https://github.com/docker/docker/blob/master/project/PACKAGERS.md#runtime-dependencies
"
5347,26b05718b07b66a4eb6626033039798ab9cbce44,/docker/master/dind/Dockerfile,"# TODO aufs-tools

"
5348,b6b9ecf948ba53ccbc995113905035a3d4474a68,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5349,b6b9ecf948ba53ccbc995113905035a3d4474a68,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5350,b6b9ecf948ba53ccbc995113905035a3d4474a68,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5351,b6b9ecf948ba53ccbc995113905035a3d4474a68,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5352,b6b9ecf948ba53ccbc995113905035a3d4474a68,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5353,90ba5e598ea846c93567c53660aec5cebf9fbdc4,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5354,90ba5e598ea846c93567c53660aec5cebf9fbdc4,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5355,90ba5e598ea846c93567c53660aec5cebf9fbdc4,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5356,90ba5e598ea846c93567c53660aec5cebf9fbdc4,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5357,90ba5e598ea846c93567c53660aec5cebf9fbdc4,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5358,2486226e6976e142dc942c38459d3d5b42b6ed71,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5359,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/12.04/Dockerfile,"# much of this was gleaned from https://github.com/lxc/lxc/blob/lxc-0.8.0/templates/lxc-ubuntu.in

# we're going to want this bad boy installed so we can connect :)
"
5360,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/12.04/Dockerfile,"# undo some leet hax of the base image
"
5361,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/12.04/Dockerfile,"# generate a nice UTF-8 locale for our use
"
5362,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/12.04/Dockerfile,"# remove some pointless services
"
5363,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/12.04/Dockerfile,"# /lib/init/fstab: cleared out for bare-bones lxc' > /lib/init/fstab

# small fix for SSH in 13.10 (that's harmless everywhere else)
"
5364,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/12.04/Dockerfile,"# set a cheap, simple password for great convenience
"
5365,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/12.04/Dockerfile,"# we can has SSH
"
5366,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/12.04/Dockerfile,"# pepare for takeoff
"
5367,8f734d5102a2f0b1b909749fecde52ae2b997cd0,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5368,8f734d5102a2f0b1b909749fecde52ae2b997cd0,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5369,8f734d5102a2f0b1b909749fecde52ae2b997cd0,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5370,8f734d5102a2f0b1b909749fecde52ae2b997cd0,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5371,8f734d5102a2f0b1b909749fecde52ae2b997cd0,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5372,5baf4ce6cc1f142f748c9847cb8cdea059f80482,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5373,9c81a836b8aff77429f27b400809df29dd15fcbc,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5374,9c81a836b8aff77429f27b400809df29dd15fcbc,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5375,9c81a836b8aff77429f27b400809df29dd15fcbc,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5376,9c81a836b8aff77429f27b400809df29dd15fcbc,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5377,9c81a836b8aff77429f27b400809df29dd15fcbc,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5378,34fa4944b6df22493cfd0395e6b913b5fda1e136,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5379,34fa4944b6df22493cfd0395e6b913b5fda1e136,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5380,34fa4944b6df22493cfd0395e6b913b5fda1e136,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5381,34fa4944b6df22493cfd0395e6b913b5fda1e136,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5382,34fa4944b6df22493cfd0395e6b913b5fda1e136,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5383,ef5f8ad7a107bad04c9410fcab4fcd8f092b7ea5,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5384,ef5f8ad7a107bad04c9410fcab4fcd8f092b7ea5,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5385,ef5f8ad7a107bad04c9410fcab4fcd8f092b7ea5,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5386,ef5f8ad7a107bad04c9410fcab4fcd8f092b7ea5,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5387,ef5f8ad7a107bad04c9410fcab4fcd8f092b7ea5,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5388,6b87e5e020895b7ff4a189fe139722e9fe409ae5,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5389,6b87e5e020895b7ff4a189fe139722e9fe409ae5,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5390,6b87e5e020895b7ff4a189fe139722e9fe409ae5,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5391,6b87e5e020895b7ff4a189fe139722e9fe409ae5,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5392,6b87e5e020895b7ff4a189fe139722e9fe409ae5,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5393,98de29fce1937503dd88a45af27117e1a7692704,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5394,98de29fce1937503dd88a45af27117e1a7692704,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5395,98de29fce1937503dd88a45af27117e1a7692704,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5396,98de29fce1937503dd88a45af27117e1a7692704,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5397,98de29fce1937503dd88a45af27117e1a7692704,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5398,ad79fd7c4b5de26e95629761618e6f0ceb55adaa,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5399,ad79fd7c4b5de26e95629761618e6f0ceb55adaa,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5400,ad79fd7c4b5de26e95629761618e6f0ceb55adaa,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5401,ad79fd7c4b5de26e95629761618e6f0ceb55adaa,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5402,ad79fd7c4b5de26e95629761618e6f0ceb55adaa,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5403,68cb6970da1789a2bbd651fc677cb8165be1ac93,/dind/Dockerfile,"#RUN curl -sL https://get.docker.io | sh

# let's grab the lastest ""master"" version of the install.sh script >:)
"
5404,e2763d1d2ce36979a95c76e4b55cd388a0e0fcdc,/certbot/Dockerfile,"# Executable not found: can't find the executable for the dialog-like program
"
5405,e2763d1d2ce36979a95c76e4b55cd388a0e0fcdc,/certbot/Dockerfile,"#VOLUME /etc/letsencrypt
"
5406,e2763d1d2ce36979a95c76e4b55cd388a0e0fcdc,/certbot/Dockerfile,"#VOLUME /var/log/letsencrypt

"
5407,468a679fe8a86802e25a84299e6c754438d12575,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
5408,468a679fe8a86802e25a84299e6c754438d12575,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
5409,468a679fe8a86802e25a84299e6c754438d12575,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
5410,468a679fe8a86802e25a84299e6c754438d12575,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
5411,468a679fe8a86802e25a84299e6c754438d12575,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
5412,b5a8c636092cd472f94365f19ac47cd7a341cb1d,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5413,b5a8c636092cd472f94365f19ac47cd7a341cb1d,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5414,b5a8c636092cd472f94365f19ac47cd7a341cb1d,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5415,b5a8c636092cd472f94365f19ac47cd7a341cb1d,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5416,b5a8c636092cd472f94365f19ac47cd7a341cb1d,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5417,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/12.04/Dockerfile,"# much of this was gleaned from https://github.com/lxc/lxc/blob/lxc-0.8.0/templates/lxc-ubuntu.in
# and then heavily modified and hacked like crazy

# we're going to want this bad boy installed so we can connect :)
"
5418,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/12.04/Dockerfile,"# undo some leet hax of the base image
"
5419,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/12.04/Dockerfile,"# generate a nice UTF-8 locale for our use
"
5420,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/12.04/Dockerfile,"# remove some pointless services
"
5421,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/12.04/Dockerfile,"# /lib/init/fstab: cleared out for bare-bones Docker' > /lib/init/fstab

# small fix for SSH in 13.10 (that's harmless everywhere else)
"
5422,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/12.04/Dockerfile,"# let Upstart know it's in a container
"
5423,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/12.04/Dockerfile,"# set a cheap, simple password for great convenience
"
5424,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/12.04/Dockerfile,"# we can has SSH
"
5425,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/12.04/Dockerfile,"# pepare for takeoff
"
5426,7ccdbe125933f966e534c36227b2eacd1419847f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5427,7ccdbe125933f966e534c36227b2eacd1419847f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5428,7ccdbe125933f966e534c36227b2eacd1419847f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5429,7ccdbe125933f966e534c36227b2eacd1419847f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5430,7ccdbe125933f966e534c36227b2eacd1419847f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5431,a9c203e1dd11a03f344a3394d92ca143aebf10b8,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5432,0f90322cdcba865c131a9ca4c568aa7ba4e7b80c,/sbin-init/ubuntu/12.10/Dockerfile,"# much of this was gleaned from https://github.com/lxc/lxc/blob/lxc-0.8.0/templates/lxc-ubuntu.in

# we're going to want this bad boy installed so we can connect :)
"
5433,0f90322cdcba865c131a9ca4c568aa7ba4e7b80c,/sbin-init/ubuntu/12.10/Dockerfile,"# undo some leet hax of the base image
"
5434,0f90322cdcba865c131a9ca4c568aa7ba4e7b80c,/sbin-init/ubuntu/12.10/Dockerfile,"# generate a nice UTF-8 locale for our use
"
5435,0f90322cdcba865c131a9ca4c568aa7ba4e7b80c,/sbin-init/ubuntu/12.10/Dockerfile,"# remove some pointless services
"
5436,0f90322cdcba865c131a9ca4c568aa7ba4e7b80c,/sbin-init/ubuntu/12.10/Dockerfile,"# /lib/init/fstab: cleared out for bare-bones lxc' > /lib/init/fstab

# small fix for SSH in 13.10 (that's harmless everywhere else)
"
5437,0f90322cdcba865c131a9ca4c568aa7ba4e7b80c,/sbin-init/ubuntu/12.10/Dockerfile,"# set a cheap, simple password for great convenience
"
5438,0f90322cdcba865c131a9ca4c568aa7ba4e7b80c,/sbin-init/ubuntu/12.10/Dockerfile,"# we can has SSH
"
5439,0f90322cdcba865c131a9ca4c568aa7ba4e7b80c,/sbin-init/ubuntu/12.10/Dockerfile,"# pepare for takeoff
"
5440,0feb5200ad32ffd51eb4e1e8592d08948f0812af,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5441,56421eb2ff460123ad7ad647a8c69ee0099b15a4,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5442,56421eb2ff460123ad7ad647a8c69ee0099b15a4,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5443,56421eb2ff460123ad7ad647a8c69ee0099b15a4,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5444,56421eb2ff460123ad7ad647a8c69ee0099b15a4,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5445,56421eb2ff460123ad7ad647a8c69ee0099b15a4,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5446,f35aaa0f0d264c4a60608e9e65c625146408e1cb,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5447,91267d9de69b0752be171975864cf5f444dc3a98,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
5448,91267d9de69b0752be171975864cf5f444dc3a98,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
5449,91267d9de69b0752be171975864cf5f444dc3a98,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
5450,013061b164378e8ae3a4ec5d24db140460888bad,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
5451,013061b164378e8ae3a4ec5d24db140460888bad,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
5452,fc470b4916b0698e16421fafb40edc8413482808,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
5453,fc470b4916b0698e16421fafb40edc8413482808,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
5454,fc470b4916b0698e16421fafb40edc8413482808,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
5455,fc470b4916b0698e16421fafb40edc8413482808,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
5456,fc470b4916b0698e16421fafb40edc8413482808,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
5457,40c2b8fbe48295eba56b4c39115b405efa6f81d7,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5458,40c2b8fbe48295eba56b4c39115b405efa6f81d7,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5459,40c2b8fbe48295eba56b4c39115b405efa6f81d7,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5460,40c2b8fbe48295eba56b4c39115b405efa6f81d7,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5461,40c2b8fbe48295eba56b4c39115b405efa6f81d7,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5462,1933e0f2d4e0be99c8920665ea04e8006f460572,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
5463,1933e0f2d4e0be99c8920665ea04e8006f460572,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
5464,ca95c79bbbf058cbc469f6982826651eaf930c5c,/mongodb-mms/Dockerfile,"# see https://mms.mongodb.com/settings/monitoring-agent
# click on ""Ubuntu 12.04+""
"
5465,8317349dbaddcb7b03564584f222f4a4e37d4879,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5466,5695aaa4d373a92d8931add1a25b2d5edf6bd5ad,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5467,5695aaa4d373a92d8931add1a25b2d5edf6bd5ad,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5468,5695aaa4d373a92d8931add1a25b2d5edf6bd5ad,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5469,5695aaa4d373a92d8931add1a25b2d5edf6bd5ad,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5470,5695aaa4d373a92d8931add1a25b2d5edf6bd5ad,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5471,1d74b1779ff134fc3c48f5979f640d573d30b3d8,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
5472,1d74b1779ff134fc3c48f5979f640d573d30b3d8,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
5473,1d74b1779ff134fc3c48f5979f640d573d30b3d8,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
5474,1d74b1779ff134fc3c48f5979f640d573d30b3d8,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
5475,1d74b1779ff134fc3c48f5979f640d573d30b3d8,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
5476,9c9eed5a7a9d3d8c703b0dd92bcd51b907e1f3e0,/exim4/Dockerfile,"# grab tini for signal processing and zombie killing
"
5477,4f4d2243a309e0683c86c44df99634c964d47f53,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
5478,4f4d2243a309e0683c86c44df99634c964d47f53,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
5479,4f4d2243a309e0683c86c44df99634c964d47f53,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
5480,6f827776c98fb919f8e5dd906aef6fb2ba60a778,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5481,6f827776c98fb919f8e5dd906aef6fb2ba60a778,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5482,6f827776c98fb919f8e5dd906aef6fb2ba60a778,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5483,6f827776c98fb919f8e5dd906aef6fb2ba60a778,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5484,6f827776c98fb919f8e5dd906aef6fb2ba60a778,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5485,cfb8e1ec050cc0320bebb5c08126348c908a447a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5486,cfb8e1ec050cc0320bebb5c08126348c908a447a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5487,cfb8e1ec050cc0320bebb5c08126348c908a447a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5488,cfb8e1ec050cc0320bebb5c08126348c908a447a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5489,cfb8e1ec050cc0320bebb5c08126348c908a447a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5490,2682c095a24da1177f62ee145134e54905961d46,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5491,2682c095a24da1177f62ee145134e54905961d46,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5492,2682c095a24da1177f62ee145134e54905961d46,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5493,2682c095a24da1177f62ee145134e54905961d46,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5494,2682c095a24da1177f62ee145134e54905961d46,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5495,89206d08e80bc66c8768cf1aeeedb65d1e126736,/gmvault/Dockerfile,"# for Python 2
"
5496,22ef5495ae38d9f2e5c50ca59cd1123fc76944e6,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5497,aeb543e72e4688c8ec9a55e418102b70bb5ba5b3,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5498,057e67391a415cee25f119bcf4023cb4fd0e2365,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5499,c63395af342259fca0972373eb55cbae84075d9a,/debian/ubuntu-devel/Dockerfile,"# normal build deps
"
5500,c63395af342259fca0972373eb55cbae84075d9a,/debian/ubuntu-devel/Dockerfile,"# need an editor for ""dch -i""
"
5501,c63395af342259fca0972373eb55cbae84075d9a,/debian/ubuntu-devel/Dockerfile,"# a few extra little useful things
"
5502,c63395af342259fca0972373eb55cbae84075d9a,/debian/ubuntu-devel/Dockerfile,"# need deb-src for compiling packages
"
5503,c63395af342259fca0972373eb55cbae84075d9a,/debian/ubuntu-devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
5504,c63395af342259fca0972373eb55cbae84075d9a,/debian/ubuntu-devel/Dockerfile,"# for ssh to debian hosts, let's make sure we know their fingerprints <3
"
5505,c63395af342259fca0972373eb55cbae84075d9a,/debian/ubuntu-devel/Dockerfile,"# make sure things are pretty
"
5506,c63395af342259fca0972373eb55cbae84075d9a,/debian/ubuntu-devel/Dockerfile,"#(force_color_prompt=yes)/\1/' /root/.bashrc

"
5507,5e93cc395b3dfc9546eb9523044754c4cd9af669,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5508,5e93cc395b3dfc9546eb9523044754c4cd9af669,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5509,5e93cc395b3dfc9546eb9523044754c4cd9af669,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5510,5e93cc395b3dfc9546eb9523044754c4cd9af669,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5511,5e93cc395b3dfc9546eb9523044754c4cd9af669,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5512,ddf64adf1a6c26d5adf9c8fa1c895d01da9834ca,/network-toolbox/alpine/Dockerfile,"# TODO add ""nbtscan"" when we get to Alpine 3.12 (if it makes it out of edge)
# https://pkgs.alpinelinux.org/packages?name=nbtscan&branch=edge&arch=x86_64

"
5513,ef30e1a74a2208b78f6bea3c64201fd332d2bb86,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5514,7ab16829510457b5557b2d9b7d78ff3eb7430e63,/docker-master/dind/Dockerfile,"# https://github.com/docker/docker/blob/master/project/PACKAGERS.md#runtime-dependencies
"
5515,7ab16829510457b5557b2d9b7d78ff3eb7430e63,/docker-master/dind/Dockerfile,"# pigz: https://github.com/moby/moby/pull/35697 (faster gzip implementation)
"
5516,7ab16829510457b5557b2d9b7d78ff3eb7430e63,/docker-master/dind/Dockerfile,"# only install zfs if it's available for the current architecture
# https://git.alpinelinux.org/cgit/aports/tree/main/zfs/APKBUILD?h=3.6-stable#n9 (""all !armhf !ppc64le"" as of 2017-11-01)
# ""apk info XYZ"" exits with a zero exit code but no output when the package exists but not for this arch
"
5517,7ab16829510457b5557b2d9b7d78ff3eb7430e63,/docker-master/dind/Dockerfile,"# TODO aufs-tools

# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
"
5518,7ab16829510457b5557b2d9b7d78ff3eb7430e63,/docker-master/dind/Dockerfile,"# https://github.com/docker/docker/tree/master/hack/dind
"
5519,a621a562535dca04e6775535799a91d9e08603a1,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5520,a621a562535dca04e6775535799a91d9e08603a1,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5521,a621a562535dca04e6775535799a91d9e08603a1,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5522,a621a562535dca04e6775535799a91d9e08603a1,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5523,a621a562535dca04e6775535799a91d9e08603a1,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5524,02042c331baf96a01030574465fdb4f519108e06,/qemu/Dockerfile,"#		qemu-system \
#		qemu-utils \
"
5525,02042c331baf96a01030574465fdb4f519108e06,/qemu/Dockerfile,"# https://www.qemu.org/download/#source
"
5526,02042c331baf96a01030574465fdb4f519108e06,/qemu/Dockerfile,"# TODO verify signature
"
5527,4273e44a64c793266d94e2a811a9a52b5ab28fb3,/jenkins/lts/Dockerfile,"# grab gosu for easy step-down from root
"
5528,4273e44a64c793266d94e2a811a9a52b5ab28fb3,/jenkins/lts/Dockerfile,"# grab tini for signal processing and zombie killing
"
5529,4273e44a64c793266d94e2a811a9a52b5ab28fb3,/jenkins/lts/Dockerfile,"# https://groups.google.com/d/msg/jenkins-infra/c7m_72vUTXE/37zw9GXhAQAJ
"
5530,4273e44a64c793266d94e2a811a9a52b5ab28fb3,/jenkins/lts/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
5531,0cbcd9ce34cce9552175eebdbc7677222aec7fe7,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5532,ad11c20be75175d214165a75f01c366b010f08d8,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5533,ee73b48191b8c685fd3b2eba8f2891a70447a68c,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5534,ee73b48191b8c685fd3b2eba8f2891a70447a68c,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5535,ee73b48191b8c685fd3b2eba8f2891a70447a68c,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5536,ee73b48191b8c685fd3b2eba8f2891a70447a68c,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5537,ee73b48191b8c685fd3b2eba8f2891a70447a68c,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5538,533af93df928eece8240c2ae264aab298aed8109,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5539,533af93df928eece8240c2ae264aab298aed8109,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5540,533af93df928eece8240c2ae264aab298aed8109,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5541,533af93df928eece8240c2ae264aab298aed8109,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5542,533af93df928eece8240c2ae264aab298aed8109,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5543,3f5483ffa4f790d4a4da610421f0b62ee7c3cdca,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5544,b8d353d54485d02947f12dbc3e1ce9ada9e01ec6,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5545,b8d353d54485d02947f12dbc3e1ce9ada9e01ec6,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5546,b8d353d54485d02947f12dbc3e1ce9ada9e01ec6,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5547,b8d353d54485d02947f12dbc3e1ce9ada9e01ec6,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5548,b8d353d54485d02947f12dbc3e1ce9ada9e01ec6,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5549,bf73c530da22ad7985bbf9ade5d23be68a903fbb,/xen-orchestra/Dockerfile,"# see https://github.com/vatesfr/xo/blob/master/installation.md

"
5550,bf73c530da22ad7985bbf9ade5d23be68a903fbb,/xen-orchestra/Dockerfile,"# TODO use links to get a redis server/database instead (since that's where configuration actually goes)
"
5551,bf73c530da22ad7985bbf9ade5d23be68a903fbb,/xen-orchestra/Dockerfile,"# TODO see note above about redis
"
5552,07ab09c1195cae440f6bedd69c6f9f1a0286e710,/jenkins/lts/Dockerfile,"# grab gosu for easy step-down from root
"
5553,07ab09c1195cae440f6bedd69c6f9f1a0286e710,/jenkins/lts/Dockerfile,"# grab tini for signal processing and zombie killing
"
5554,07ab09c1195cae440f6bedd69c6f9f1a0286e710,/jenkins/lts/Dockerfile,"# https://groups.google.com/d/msg/jenkins-infra/c7m_72vUTXE/37zw9GXhAQAJ
"
5555,07ab09c1195cae440f6bedd69c6f9f1a0286e710,/jenkins/lts/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
5556,e82cab7b2df1469999675601c23243711f151890,/xen-orchestra/Dockerfile,"# see https://xen-orchestra.com/docs/from_the_sources.html

"
5557,e82cab7b2df1469999675601c23243711f151890,/xen-orchestra/Dockerfile,"# https://github.com/nodejs/node-gyp/releases
"
5558,e82cab7b2df1469999675601c23243711f151890,/xen-orchestra/Dockerfile,"# https://github.com/vatesfr/xen-orchestra/releases
"
5559,e82cab7b2df1469999675601c23243711f151890,/xen-orchestra/Dockerfile,"#		-e ""s!#'/' = '/path/to/xo-web/dist/'!'/' = '../xo-web/dist/'!"" \
"
5560,e82cab7b2df1469999675601c23243711f151890,/xen-orchestra/Dockerfile,"#uri = 'redis://.*'!uri = 'redis://redis:6379'!"" \
"
5561,e82cab7b2df1469999675601c23243711f151890,/xen-orchestra/Dockerfile,"#' config.toml | grep '../xo-web/dist'; \
"
5562,cfe86f8a9ef4ce69b0d56084dbe904b4b01cbbbe,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
5563,cfe86f8a9ef4ce69b0d56084dbe904b4b01cbbbe,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
5564,cfe86f8a9ef4ce69b0d56084dbe904b4b01cbbbe,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
5565,cfe86f8a9ef4ce69b0d56084dbe904b4b01cbbbe,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
5566,cfe86f8a9ef4ce69b0d56084dbe904b4b01cbbbe,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
5567,735d75f9f2383a2b09f133dd9e00551a51b48811,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5568,735d75f9f2383a2b09f133dd9e00551a51b48811,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5569,735d75f9f2383a2b09f133dd9e00551a51b48811,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5570,735d75f9f2383a2b09f133dd9e00551a51b48811,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5571,735d75f9f2383a2b09f133dd9e00551a51b48811,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5572,7bb7b72637a7c79aefe7e93ba98bb3f1fdeeaeeb,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
5573,7bb7b72637a7c79aefe7e93ba98bb3f1fdeeaeeb,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
5574,7bb7b72637a7c79aefe7e93ba98bb3f1fdeeaeeb,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
5575,7bb7b72637a7c79aefe7e93ba98bb3f1fdeeaeeb,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
5576,7bb7b72637a7c79aefe7e93ba98bb3f1fdeeaeeb,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
5577,968d6ab3e87045113fdae3bfd4f6c64883ed9e5e,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5578,cf0761a37b5b172432e967ed9e8572652c6488a1,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5579,cf0761a37b5b172432e967ed9e8572652c6488a1,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5580,cf0761a37b5b172432e967ed9e8572652c6488a1,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5581,cf0761a37b5b172432e967ed9e8572652c6488a1,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5582,cf0761a37b5b172432e967ed9e8572652c6488a1,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5583,222640dc6f61e1ad5eaf2393c0e75e9229f30eb1,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5584,58ef8362978d2832c284d81bc2fd74469fc7fedc,/certbot/Dockerfile,"# Executable not found: can't find the executable for the dialog-like program
"
5585,58ef8362978d2832c284d81bc2fd74469fc7fedc,/certbot/Dockerfile,"#VOLUME /etc/letsencrypt
"
5586,58ef8362978d2832c284d81bc2fd74469fc7fedc,/certbot/Dockerfile,"#VOLUME /var/log/letsencrypt

"
5587,eb88aef25e6c923aeb854cef0a07bdc8f1fbddfa,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5588,eb88aef25e6c923aeb854cef0a07bdc8f1fbddfa,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5589,eb88aef25e6c923aeb854cef0a07bdc8f1fbddfa,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5590,eb88aef25e6c923aeb854cef0a07bdc8f1fbddfa,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5591,eb88aef25e6c923aeb854cef0a07bdc8f1fbddfa,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5592,20d156a6af8eef85582bca9649560583b967be14,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5593,20d156a6af8eef85582bca9649560583b967be14,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5594,20d156a6af8eef85582bca9649560583b967be14,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5595,20d156a6af8eef85582bca9649560583b967be14,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5596,20d156a6af8eef85582bca9649560583b967be14,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5597,3693913204220041aa3630d31a8552a635327549,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5598,3693913204220041aa3630d31a8552a635327549,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5599,3693913204220041aa3630d31a8552a635327549,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5600,3693913204220041aa3630d31a8552a635327549,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5601,3693913204220041aa3630d31a8552a635327549,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5602,3b290aa040ef99d88531e6b3127a787cd7a8212d,/xen-orchestra/Dockerfile,"# see https://github.com/vatesfr/xo/blob/master/installation.md

"
5603,3b290aa040ef99d88531e6b3127a787cd7a8212d,/xen-orchestra/Dockerfile,"#CMD [""./xo-server/xo-server""]
# see https://github.com/vatesfr/xo-server/pull/28
"
5604,848b89e8272c2689af1499cc7642d3f3c9a31337,/toybox/Dockerfile,"# ideally, we'd use official static binary releases from http://landley.net/toybox/downloads/binaries/ but they don't include the (pending) ""sh"" implementation so they're not quite enough for a full system yet

"
5605,848b89e8272c2689af1499cc7642d3f3c9a31337,/toybox/Dockerfile,"# https://landley.net/toybox/downloads/?C=M;O=D
# https://github.com/landley/toybox/releases
"
5606,848b89e8272c2689af1499cc7642d3f3c9a31337,/toybox/Dockerfile,"# TODO set ""TARGET"" appropriately based on ""apk --print-arch"" to avoid ""uname -m"" detection
"
5607,848b89e8272c2689af1499cc7642d3f3c9a31337,/toybox/Dockerfile,"# (we set ""BUILTIN=1"" to avoid cpio / initramfs creation)

"
5608,c436151c22782711051c7aac067689c9f58142f7,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
5609,c436151c22782711051c7aac067689c9f58142f7,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
5610,c436151c22782711051c7aac067689c9f58142f7,/plex/media-server/Dockerfile,"# the published deb has pre/post-inst scripts that don't really apply to Docker (so we'll skip ""install"" entirely)
# (as of 1.18.5.2309, they have bugs around Docker detection, which is mostly for avoiding init behavior)
"
5611,c436151c22782711051c7aac067689c9f58142f7,/plex/media-server/Dockerfile,"#	apt-get update; \
#	apt-get install /tmp/plex.deb; \
#	rm -rf /var/lib/apt/lists/*; \
"
5612,225bfed7e35bf9123f0e6c48fcb2df7964ee37bf,/docker/experimental/dind/Dockerfile,"# https://github.com/docker/docker/blob/master/project/PACKAGERS.md#runtime-dependencies
"
5613,225bfed7e35bf9123f0e6c48fcb2df7964ee37bf,/docker/experimental/dind/Dockerfile,"# TODO aufs-tools

"
5614,b839cad3cab77bf9f5234c55122cc819fe590386,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5615,b839cad3cab77bf9f5234c55122cc819fe590386,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5616,b839cad3cab77bf9f5234c55122cc819fe590386,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5617,b839cad3cab77bf9f5234c55122cc819fe590386,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5618,b839cad3cab77bf9f5234c55122cc819fe590386,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5619,24972b52a019afdd5ef26ef7cdf5f90d4381e6e2,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5620,24972b52a019afdd5ef26ef7cdf5f90d4381e6e2,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5621,24972b52a019afdd5ef26ef7cdf5f90d4381e6e2,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5622,24972b52a019afdd5ef26ef7cdf5f90d4381e6e2,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5623,24972b52a019afdd5ef26ef7cdf5f90d4381e6e2,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5624,687c04d09254703f07e099f500750bd15f0bb149,/makemkv/Dockerfile,"# This disc requires Java runtime (JRE), but none was found. Certain functions will fail, please install Java. See http://www.makemkv.com/bdjava/ for details.
"
5625,687c04d09254703f07e099f500750bd15f0bb149,/makemkv/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
5626,687c04d09254703f07e099f500750bd15f0bb149,/makemkv/Dockerfile,"# FPL_MainFeature detection only seemed to work with OpenJDK 9 (8 was insufficient)
"
5627,687c04d09254703f07e099f500750bd15f0bb149,/makemkv/Dockerfile,"# Unable to execute external program 'ccextractor' as its path is not set in preferences
# Failed to execute external program 'ccextractor' from location '/usr/local/bin/mmccextr'
# (but it doesn't exist in the perferences dialog...)
"
5628,687c04d09254703f07e099f500750bd15f0bb149,/makemkv/Dockerfile,"# http://www.makemkv.com/forum2/viewtopic.php?f=3&t=224
"
5629,687c04d09254703f07e099f500750bd15f0bb149,/makemkv/Dockerfile,"# beta code: http://www.makemkv.com/forum2/viewtopic.php?f=5&t=1053
"
5630,687c04d09254703f07e099f500750bd15f0bb149,/makemkv/Dockerfile,"# pub   dsa2048 2017-05-26 [SC]
#       2ECF 2330 5F1F C0B3 2001  6733 94E3 083A 1804 2697
# uid           [ unknown] MakeMKV (signature) <support@makemkv.com>
"
5631,055a805cbf08d4b81c5d892f18f39c89fd387aa6,/google-cloud-print-connector/Dockerfile,"# fetch dependencies
# format: import-path=strip-components=tarball-url
"
5632,055a805cbf08d4b81c5d892f18f39c89fd387aa6,/google-cloud-print-connector/Dockerfile,"# https://github.com/coreos/go-systemd/releases
"
5633,055a805cbf08d4b81c5d892f18f39c89fd387aa6,/google-cloud-print-connector/Dockerfile,"# https://github.com/satori/go.uuid/releases
"
5634,055a805cbf08d4b81c5d892f18f39c89fd387aa6,/google-cloud-print-connector/Dockerfile,"# https://github.com/urfave/cli/releases
"
5635,055a805cbf08d4b81c5d892f18f39c89fd387aa6,/google-cloud-print-connector/Dockerfile,"# https://github.com/golang/net/commits/master
"
5636,055a805cbf08d4b81c5d892f18f39c89fd387aa6,/google-cloud-print-connector/Dockerfile,"# https://github.com/golang/oauth2/commits/master
"
5637,055a805cbf08d4b81c5d892f18f39c89fd387aa6,/google-cloud-print-connector/Dockerfile,"# https://bazaar.launchpad.net/~chipaca/go-xdg/v0/files (""view revision"")
# https://bazaar.launchpad.net/~chipaca/go-xdg/v0/revision/10?start_revid=10 (""download tarball"")
"
5638,055a805cbf08d4b81c5d892f18f39c89fd387aa6,/google-cloud-print-connector/Dockerfile,"#*=}""; dep=""${dep%=$strip}""; \
"
5639,055a805cbf08d4b81c5d892f18f39c89fd387aa6,/google-cloud-print-connector/Dockerfile,"#*=}""; strip=""${strip%=$tarball}""; \
"
5640,055a805cbf08d4b81c5d892f18f39c89fd387aa6,/google-cloud-print-connector/Dockerfile,"# https://github.com/google/cloud-print-connector/releases
"
5641,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/14.04/Dockerfile,"# much of this was gleaned from https://github.com/lxc/lxc/blob/lxc-0.8.0/templates/lxc-ubuntu.in
# and then heavily modified and hacked like crazy

# we're going to want this bad boy installed so we can connect :)
"
5642,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/14.04/Dockerfile,"# undo some leet hax of the base image
"
5643,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/14.04/Dockerfile,"# generate a nice UTF-8 locale for our use
"
5644,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/14.04/Dockerfile,"# remove some pointless services
"
5645,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/14.04/Dockerfile,"# /lib/init/fstab: cleared out for bare-bones Docker' > /lib/init/fstab

# small fix for SSH in 13.10 (that's harmless everywhere else)
"
5646,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/14.04/Dockerfile,"# let Upstart know it's in a container
"
5647,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/14.04/Dockerfile,"# set a cheap, simple password for great convenience
"
5648,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/14.04/Dockerfile,"# we can has SSH
"
5649,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/14.04/Dockerfile,"# pepare for takeoff
"
5650,b68fff80a3fb051634d62e9eceff2fe910becfc9,/certbot/Dockerfile,"# Executable not found: can't find the executable for the dialog-like program
"
5651,b68fff80a3fb051634d62e9eceff2fe910becfc9,/certbot/Dockerfile,"#VOLUME /etc/letsencrypt
"
5652,b68fff80a3fb051634d62e9eceff2fe910becfc9,/certbot/Dockerfile,"#VOLUME /var/log/letsencrypt

"
5653,eec36249372608582d36ff397d5cc5121687d755,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5654,65ccc70123010247ec8e1a25b9ebd7f6412c0ba3,/skype/Dockerfile,"# see https://repo.skype.com

"
5655,65ccc70123010247ec8e1a25b9ebd7f6412c0ba3,/skype/Dockerfile,"# wget is invoked by skypeforlinux for crash reports
"
5656,65ccc70123010247ec8e1a25b9ebd7f6412c0ba3,/skype/Dockerfile,"# https://repo.skype.com/data/SKYPE-GPG-KEY
"
5657,65ccc70123010247ec8e1a25b9ebd7f6412c0ba3,/skype/Dockerfile,"# pub   2048R/DF7587C3 2016-06-22 [expires: 2021-06-21]
#       Key fingerprint = D404 0146 BE39 7250 9FD5  7FC7 1F30 45A5 DF75 87C3
# uid                  Skype Linux Client Repository <se-um@microsoft.com>
# sub   2048R/A4EBB320 2016-06-22 [expires: 2021-06-21]
"
5658,9c30a632b2fbc7d28d88d8266450ee8d34e3b2a1,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5659,1e2679daf5ab9015b0814299d980b62379494b51,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5660,35bb6340c0da83a3898c2e816b5948b3957be423,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5661,2838bca40e8972caf36d6a7c58ea08a499e61abf,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5662,2838bca40e8972caf36d6a7c58ea08a499e61abf,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5663,2838bca40e8972caf36d6a7c58ea08a499e61abf,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5664,2838bca40e8972caf36d6a7c58ea08a499e61abf,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5665,2838bca40e8972caf36d6a7c58ea08a499e61abf,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5666,ab48d733f52bf18641286c000c635b69cbd0ab98,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5667,ab48d733f52bf18641286c000c635b69cbd0ab98,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5668,ab48d733f52bf18641286c000c635b69cbd0ab98,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5669,ab48d733f52bf18641286c000c635b69cbd0ab98,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5670,ab48d733f52bf18641286c000c635b69cbd0ab98,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5671,017096d4b05bcdf7d9898209589297c382a546c3,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5672,017096d4b05bcdf7d9898209589297c382a546c3,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5673,017096d4b05bcdf7d9898209589297c382a546c3,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5674,017096d4b05bcdf7d9898209589297c382a546c3,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5675,017096d4b05bcdf7d9898209589297c382a546c3,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5676,024de6a6e9bafa4fa55258cf3ccd185cfd8729c4,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5677,024de6a6e9bafa4fa55258cf3ccd185cfd8729c4,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5678,024de6a6e9bafa4fa55258cf3ccd185cfd8729c4,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5679,024de6a6e9bafa4fa55258cf3ccd185cfd8729c4,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5680,024de6a6e9bafa4fa55258cf3ccd185cfd8729c4,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5681,42ea42be4a458598eb150f1990c21d611715942c,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
5682,42ea42be4a458598eb150f1990c21d611715942c,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
5683,42ea42be4a458598eb150f1990c21d611715942c,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
5684,42ea42be4a458598eb150f1990c21d611715942c,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
5685,42ea42be4a458598eb150f1990c21d611715942c,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
5686,c731d30f76a765e35d79f92553a727bc531467b1,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5687,c731d30f76a765e35d79f92553a727bc531467b1,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5688,c731d30f76a765e35d79f92553a727bc531467b1,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5689,c731d30f76a765e35d79f92553a727bc531467b1,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5690,c731d30f76a765e35d79f92553a727bc531467b1,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5691,8778266e960777a923ea8e9be101f7851c27edda,/gmpydl/Dockerfile,"# https://pypi.org/project/gmusicapi/
"
5692,8778266e960777a923ea8e9be101f7851c27edda,/gmpydl/Dockerfile,"# https://github.com/stevenewbs/gmpydl/commits/master
# https://github.com/stevenewbs/gmpydl/releases
"
5693,7db83497c9fa5b74c2feab34b8c6acd36ed1b985,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5694,be12396d36c048a5f3c0b510f2a3c148263725c8,/diffoscope/Dockerfile,"# xxd (xxd not available in path. Falling back to Python hexlify.)
"
5695,be12396d36c048a5f3c0b510f2a3c148263725c8,/diffoscope/Dockerfile,"# readelf ('readelf' not available in path. Falling back to binary comparison.)
"
5696,be12396d36c048a5f3c0b510f2a3c148263725c8,/diffoscope/Dockerfile,"# for ""diffoscope --progress""
"
5697,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/Dockerfile.template,"# much of this was gleaned from https://github.com/lxc/lxc/blob/lxc-0.8.0/templates/lxc-ubuntu.in
# and then heavily modified and hacked like crazy

# we're going to want this bad boy installed so we can connect :)
"
5698,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/Dockerfile.template,"# undo some leet hax of the base image
"
5699,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/Dockerfile.template,"# generate a nice UTF-8 locale for our use
"
5700,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/Dockerfile.template,"# remove some pointless services
"
5701,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/Dockerfile.template,"# /lib/init/fstab: cleared out for bare-bones Docker' > /lib/init/fstab

# small fix for SSH in 13.10 (that's harmless everywhere else)
"
5702,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/Dockerfile.template,"# let Upstart know it's in a container
"
5703,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/Dockerfile.template,"# set a cheap, simple password for great convenience
"
5704,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/Dockerfile.template,"# we can has SSH
"
5705,c4f86111caa8c8eab8e1b3a58cdebcf86807169c,/sbin-init/ubuntu/upstart/Dockerfile.template,"# pepare for takeoff
"
5706,525015fb28dc52ca19bedfecad4460d271f6aee0,/makemkv/Dockerfile,"# TODO find some way to include ccextractor (currently buster-only)

# FPL_MainFeature detection only seemed to work with OpenJDK 9 (8 was insufficient)
"
5707,525015fb28dc52ca19bedfecad4460d271f6aee0,/makemkv/Dockerfile,"# This disc requires Java runtime (JRE), but none was found. Certain functions will fail, please install Java. See http://www.makemkv.com/bdjava/ for details.
"
5708,525015fb28dc52ca19bedfecad4460d271f6aee0,/makemkv/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
5709,525015fb28dc52ca19bedfecad4460d271f6aee0,/makemkv/Dockerfile,"# http://www.makemkv.com/forum2/viewtopic.php?f=3&t=224
"
5710,525015fb28dc52ca19bedfecad4460d271f6aee0,/makemkv/Dockerfile,"# beta code: http://www.makemkv.com/forum2/viewtopic.php?f=5&t=1053
"
5711,525015fb28dc52ca19bedfecad4460d271f6aee0,/makemkv/Dockerfile,"# pub   dsa2048 2017-05-26 [SC]
#       2ECF 2330 5F1F C0B3 2001  6733 94E3 083A 1804 2697
# uid           [ unknown] MakeMKV (signature) <support@makemkv.com>
"
5712,19bbac46d221f91f3e54cb4e95df20fc77f6b2d9,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5713,19bbac46d221f91f3e54cb4e95df20fc77f6b2d9,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5714,19bbac46d221f91f3e54cb4e95df20fc77f6b2d9,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5715,19bbac46d221f91f3e54cb4e95df20fc77f6b2d9,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5716,19bbac46d221f91f3e54cb4e95df20fc77f6b2d9,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5717,c08de462ca9d9c02bd715fe7fef6b8a51e2c204a,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
5718,c08de462ca9d9c02bd715fe7fef6b8a51e2c204a,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
5719,c08de462ca9d9c02bd715fe7fef6b8a51e2c204a,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
5720,d1cbfedbde2d11ba6130f6690bffb29273dccdc6,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5721,d1cbfedbde2d11ba6130f6690bffb29273dccdc6,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5722,d1cbfedbde2d11ba6130f6690bffb29273dccdc6,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5723,d1cbfedbde2d11ba6130f6690bffb29273dccdc6,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5724,d1cbfedbde2d11ba6130f6690bffb29273dccdc6,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5725,77635a3bd228bd053e82f83935aa6d1c8db55387,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
5726,52ad7a1e45f4f92477692d5f2982af599fdc5f7e,/speedtest/Dockerfile,"# https://www.speedtest.net/apps/cli#download
"
5727,52ad7a1e45f4f92477692d5f2982af599fdc5f7e,/speedtest/Dockerfile,"# Ookla's ""armhf"" is armv6 (just like Alpine's), which is fair game for ARMv7 devices
"
5728,52ad7a1e45f4f92477692d5f2982af599fdc5f7e,/speedtest/Dockerfile,"# Ookla's bare ""arm"" arch is armv5, which Alpine doesn't support :(
"
5729,52ad7a1e45f4f92477692d5f2982af599fdc5f7e,/speedtest/Dockerfile,"#download)""; exit 1 ;; \
"
5730,7b7fa29852537dfcb255e13ab3aa8648238b7169,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
5731,7b7fa29852537dfcb255e13ab3aa8648238b7169,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
5732,7b7fa29852537dfcb255e13ab3aa8648238b7169,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
5733,7b7fa29852537dfcb255e13ab3aa8648238b7169,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
5734,7b7fa29852537dfcb255e13ab3aa8648238b7169,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
5735,3aa9317235978f35e0c073d3077b0f792878b0e4,/mongodb-mms/Dockerfile,"# see https://mms.mongodb.com/settings/monitoring-agent
# click on ""Ubuntu 12.04+""
"
5736,dfb52b433a1965fd06cf8e7e5526685efa942262,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
5737,dfb52b433a1965fd06cf8e7e5526685efa942262,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
5738,745b91b7a95066392e6d85fc0a986b6919fa724e,/docker-master/dind/Dockerfile,"# https://github.com/docker/docker/blob/master/project/PACKAGERS.md#runtime-dependencies
"
5739,745b91b7a95066392e6d85fc0a986b6919fa724e,/docker-master/dind/Dockerfile,"# pigz: https://github.com/moby/moby/pull/35697 (faster gzip implementation)
"
5740,745b91b7a95066392e6d85fc0a986b6919fa724e,/docker-master/dind/Dockerfile,"# only install zfs if it's available for the current architecture
# https://git.alpinelinux.org/cgit/aports/tree/main/zfs/APKBUILD?h=3.6-stable#n9 (""all !armhf !ppc64le"" as of 2017-11-01)
# ""apk info XYZ"" exits with a zero exit code but no output when the package exists but not for this arch
"
5741,745b91b7a95066392e6d85fc0a986b6919fa724e,/docker-master/dind/Dockerfile,"# TODO aufs-tools

# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
"
5742,745b91b7a95066392e6d85fc0a986b6919fa724e,/docker-master/dind/Dockerfile,"# https://github.com/docker/docker/tree/master/hack/dind
"
5743,e1377cec96e613b6d4c4375b3bc443dbbcfbd680,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
5744,e1377cec96e613b6d4c4375b3bc443dbbcfbd680,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
5745,e1377cec96e613b6d4c4375b3bc443dbbcfbd680,/plex/media-server/Dockerfile,"# the published deb has pre/post-inst scripts that don't really apply to Docker (so we'll skip ""install"" entirely)
# (as of 1.18.5.2309, they have bugs around Docker detection, which is mostly for avoiding init behavior)
"
5746,e1377cec96e613b6d4c4375b3bc443dbbcfbd680,/plex/media-server/Dockerfile,"#	apt-get update; \
#	apt-get install /tmp/plex.deb; \
#	rm -rf /var/lib/apt/lists/*; \
"
5747,2b3b9ed7ad5e76ff28e78b0d4736760dfc4124e6,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5748,fac051467a974e15e14869bc3ff14c709c8994e6,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5749,fac051467a974e15e14869bc3ff14c709c8994e6,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5750,fac051467a974e15e14869bc3ff14c709c8994e6,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5751,fac051467a974e15e14869bc3ff14c709c8994e6,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5752,fac051467a974e15e14869bc3ff14c709c8994e6,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5753,019e3dafeac4116b4547194b6452de9de76610dd,/docker-master/dind/Dockerfile,"# https://github.com/docker/docker/blob/master/project/PACKAGERS.md#runtime-dependencies
"
5754,019e3dafeac4116b4547194b6452de9de76610dd,/docker-master/dind/Dockerfile,"# pigz: https://github.com/moby/moby/pull/35697 (faster gzip implementation)
"
5755,019e3dafeac4116b4547194b6452de9de76610dd,/docker-master/dind/Dockerfile,"# only install zfs if it's available for the current architecture
# https://git.alpinelinux.org/cgit/aports/tree/main/zfs/APKBUILD?h=3.6-stable#n9 (""all !armhf !ppc64le"" as of 2017-11-01)
# ""apk info XYZ"" exits with a zero exit code but no output when the package exists but not for this arch
"
5756,019e3dafeac4116b4547194b6452de9de76610dd,/docker-master/dind/Dockerfile,"# TODO aufs-tools

# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
"
5757,019e3dafeac4116b4547194b6452de9de76610dd,/docker-master/dind/Dockerfile,"# https://github.com/docker/docker/tree/master/hack/dind
"
5758,9c19333ee4084e54c7ad34af7728d0863152e0b1,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5759,9c19333ee4084e54c7ad34af7728d0863152e0b1,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5760,9c19333ee4084e54c7ad34af7728d0863152e0b1,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5761,9c19333ee4084e54c7ad34af7728d0863152e0b1,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5762,9c19333ee4084e54c7ad34af7728d0863152e0b1,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5763,96b9245ab1c352c4fb3063185f09534fb53079ca,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5764,96b9245ab1c352c4fb3063185f09534fb53079ca,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5765,96b9245ab1c352c4fb3063185f09534fb53079ca,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5766,96b9245ab1c352c4fb3063185f09534fb53079ca,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5767,96b9245ab1c352c4fb3063185f09534fb53079ca,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5768,bbdfa31baeeefdddd9d49bed6a4cc4d47ddcb37c,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5769,45d8e4ab5b00616f531c93c0bc835a60357a6e8a,/docker/master/dind/Dockerfile,"# https://github.com/docker/docker/blob/master/project/PACKAGERS.md#runtime-dependencies
"
5770,45d8e4ab5b00616f531c93c0bc835a60357a6e8a,/docker/master/dind/Dockerfile,"# TODO aufs-tools

# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
"
5771,56a0d5d7759e6af44c0d3579f18ea1ab1c5c1eab,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5772,03318e27a81a29e230a2e48821c90022cc4fa918,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5773,03318e27a81a29e230a2e48821c90022cc4fa918,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5774,03318e27a81a29e230a2e48821c90022cc4fa918,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5775,03318e27a81a29e230a2e48821c90022cc4fa918,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5776,03318e27a81a29e230a2e48821c90022cc4fa918,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5777,ce77490b94072399efd35b857a844a49049a9d8a,/apt-cacher-ng/Dockerfile,"# grab tini for signal processing and zombie killing
"
5778,ef9cf9438d12236072488bc6768c0504d53636ba,/vultr-cli/Dockerfile,"# https://github.com/vultr/vultr-cli/releases
"
5779,26e7709d4d607ba5d75d653ce30357f2777bb81a,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5780,7e9b9cd0fc7251b8eae3797f6c2386c8b5819400,/containerd/Dockerfile,"# runtime deps
"
5781,7e9b9cd0fc7251b8eae3797f6c2386c8b5819400,/containerd/Dockerfile,"# https://github.com/opencontainers/runc/releases
"
5782,7e9b9cd0fc7251b8eae3797f6c2386c8b5819400,/containerd/Dockerfile,"# TODO .asc / .sha256sum
"
5783,7e9b9cd0fc7251b8eae3797f6c2386c8b5819400,/containerd/Dockerfile,"# https://github.com/containerd/containerd/releases
"
5784,ad2bc3161453a16a1ddea9b503eddd7373c359c9,/syncthing/Dockerfile,"# gpg: key BCE524C7: public key ""Jakob Borg (calmh) <jakob@nym.se>"" imported
"
5785,78421daf6271cf08dba86d9595492faf96857ff5,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
5786,78421daf6271cf08dba86d9595492faf96857ff5,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
5787,06c08e65063f739bc4090e7682ddcb7938223bfa,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5788,06c08e65063f739bc4090e7682ddcb7938223bfa,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5789,06c08e65063f739bc4090e7682ddcb7938223bfa,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5790,06c08e65063f739bc4090e7682ddcb7938223bfa,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5791,06c08e65063f739bc4090e7682ddcb7938223bfa,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5792,8b4a24f4aa131f73c031b04abeb64042aa921c64,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5793,8b4a24f4aa131f73c031b04abeb64042aa921c64,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5794,8b4a24f4aa131f73c031b04abeb64042aa921c64,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5795,8b4a24f4aa131f73c031b04abeb64042aa921c64,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5796,8b4a24f4aa131f73c031b04abeb64042aa921c64,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5797,43efa06d4cb32ed6250e25f4d91931c91d0c4d51,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5798,43efa06d4cb32ed6250e25f4d91931c91d0c4d51,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5799,43efa06d4cb32ed6250e25f4d91931c91d0c4d51,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5800,43efa06d4cb32ed6250e25f4d91931c91d0c4d51,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5801,43efa06d4cb32ed6250e25f4d91931c91d0c4d51,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5802,a73aae08eba3a496ef293b4edb3cda8efdab8f14,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5803,5c3ca334caa1e71f0c92803c000220e706b83550,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
5804,5c3ca334caa1e71f0c92803c000220e706b83550,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
5805,5c3ca334caa1e71f0c92803c000220e706b83550,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
5806,5c3ca334caa1e71f0c92803c000220e706b83550,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
5807,5c3ca334caa1e71f0c92803c000220e706b83550,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
5808,386fe7fba3f211dc4c2e75c186ddbec823af0c3b,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5809,386fe7fba3f211dc4c2e75c186ddbec823af0c3b,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5810,386fe7fba3f211dc4c2e75c186ddbec823af0c3b,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5811,386fe7fba3f211dc4c2e75c186ddbec823af0c3b,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5812,386fe7fba3f211dc4c2e75c186ddbec823af0c3b,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5813,f76442cee0e3ec934672643a72aeca61244bb789,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5814,f76442cee0e3ec934672643a72aeca61244bb789,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5815,f76442cee0e3ec934672643a72aeca61244bb789,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5816,f76442cee0e3ec934672643a72aeca61244bb789,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5817,f76442cee0e3ec934672643a72aeca61244bb789,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5818,0ecd51e33b9558cc5e3cb76ef6c4d151ae49fcde,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
5819,28a0c426de765f75b4d4c306ba01855d50fb407d,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5820,28a0c426de765f75b4d4c306ba01855d50fb407d,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5821,28a0c426de765f75b4d4c306ba01855d50fb407d,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5822,28a0c426de765f75b4d4c306ba01855d50fb407d,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5823,28a0c426de765f75b4d4c306ba01855d50fb407d,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5824,104703669dbf11d2076cbd3d22ecc685de1d7e1e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5825,104703669dbf11d2076cbd3d22ecc685de1d7e1e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5826,104703669dbf11d2076cbd3d22ecc685de1d7e1e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5827,104703669dbf11d2076cbd3d22ecc685de1d7e1e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5828,104703669dbf11d2076cbd3d22ecc685de1d7e1e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5829,13704609d96fa166614c61074e03d51dd1a90db4,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5830,c208bb459c193c8e69f54159bd488753f733ea13,/diffoscope/Dockerfile,"# xxd (xxd not available in path. Falling back to Python hexlify.)
"
5831,c208bb459c193c8e69f54159bd488753f733ea13,/diffoscope/Dockerfile,"# readelf ('readelf' not available in path. Falling back to binary comparison.)
"
5832,c208bb459c193c8e69f54159bd488753f733ea13,/diffoscope/Dockerfile,"# for ""diffoscope --progress""
"
5833,b4f763299cef9cfd66ec1cd670e9629535b47799,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5834,b4f763299cef9cfd66ec1cd670e9629535b47799,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5835,b4f763299cef9cfd66ec1cd670e9629535b47799,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5836,b4f763299cef9cfd66ec1cd670e9629535b47799,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5837,b4f763299cef9cfd66ec1cd670e9629535b47799,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5838,126a5c8932a314e87e97b11dc492f7b54bd6cc4c,/skype/Dockerfile,"# see https://repo.skype.com

"
5839,126a5c8932a314e87e97b11dc492f7b54bd6cc4c,/skype/Dockerfile,"# wget is invoked by skypeforlinux for crash reports
"
5840,126a5c8932a314e87e97b11dc492f7b54bd6cc4c,/skype/Dockerfile,"# https://repo.skype.com/data/SKYPE-GPG-KEY
"
5841,126a5c8932a314e87e97b11dc492f7b54bd6cc4c,/skype/Dockerfile,"# pub   2048R/DF7587C3 2016-06-22 [expires: 2021-06-21]
#       Key fingerprint = D404 0146 BE39 7250 9FD5  7FC7 1F30 45A5 DF75 87C3
# uid                  Skype Linux Client Repository <se-um@microsoft.com>
# sub   2048R/A4EBB320 2016-06-22 [expires: 2021-06-21]
"
5842,13307b8cc5be215cd5b8b1b5e80be8249b81080b,/moosefs/Dockerfile,"# mfscli (and cgi) are Python-based
"
5843,13307b8cc5be215cd5b8b1b5e80be8249b81080b,/moosefs/Dockerfile,"# mfsmount needs ""fusermount""
"
5844,13307b8cc5be215cd5b8b1b5e80be8249b81080b,/moosefs/Dockerfile,"# allow running mfsmount as non-root
"
5845,13307b8cc5be215cd5b8b1b5e80be8249b81080b,/moosefs/Dockerfile,"#user_allow_other$/user_allow_other/' /etc/fuse.conf

"
5846,13307b8cc5be215cd5b8b1b5e80be8249b81080b,/moosefs/Dockerfile,"# https://github.com/moosefs/moosefs/releases
"
5847,13307b8cc5be215cd5b8b1b5e80be8249b81080b,/moosefs/Dockerfile,"# prep the default configuration so things generally work Out-of-the-Box
"
5848,13307b8cc5be215cd5b8b1b5e80be8249b81080b,/moosefs/Dockerfile,"# allow us to run as an arbitrary user but still modify configuration
"
5849,13307b8cc5be215cd5b8b1b5e80be8249b81080b,/moosefs/Dockerfile,"# prep a scratch space with appropriate permissions to be able to do quick prototyping Out-of-the-Box
"
5850,13307b8cc5be215cd5b8b1b5e80be8249b81080b,/moosefs/Dockerfile,"# without this, the Python-based mfscli ""-f"" flag refuses to use UTF-8 box-drawing characters
"
5851,564ae5120f13f8b011e5a106267d23d79695b02f,/vultr-cli/Dockerfile,"# https://github.com/vultr/vultr-cli/releases
"
5852,5d53bdf16fdd3b61c71e3240c8ed0523b996777f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5853,5d53bdf16fdd3b61c71e3240c8ed0523b996777f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5854,5d53bdf16fdd3b61c71e3240c8ed0523b996777f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5855,5d53bdf16fdd3b61c71e3240c8ed0523b996777f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5856,5d53bdf16fdd3b61c71e3240c8ed0523b996777f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5857,594d002fe0451e273b6bde774cb56365e305e70e,/github-pages/Dockerfile,"# https://pages.github.com/versions/
"
5858,99cb360a3bb2e208729a714d567c0013ff3552d8,/gmpydl/Dockerfile,"# https://pypi.org/project/gmusicapi/
"
5859,99cb360a3bb2e208729a714d567c0013ff3552d8,/gmpydl/Dockerfile,"# https://github.com/stevenewbs/gmpydl/commits/master
# https://github.com/stevenewbs/gmpydl/releases
"
5860,1cf46b50e4ffa46e968de9c4c7eaec0c843d67f0,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
5861,1cf46b50e4ffa46e968de9c4c7eaec0c843d67f0,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
5862,1cf46b50e4ffa46e968de9c4c7eaec0c843d67f0,/jenkins/Dockerfile,"# workaround ""apt-key adv --recv-keys"" hanging in stretch and above
"
5863,d23c96ecf116e2c72716eec4efb5cc663a902a2c,/ehour/Dockerfile,"# https://ehour.nl/download/downloadfile.php?get=ehour-latest-standalone-unix.sh
# https://ehour.nl/download/downloadfile.php?get=ehour-1.4.3-standalone-unix.sh
"
5864,d11dd1b935625c4834c4acc5ee83901062bf94c7,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
5865,d11dd1b935625c4834c4acc5ee83901062bf94c7,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
5866,d11dd1b935625c4834c4acc5ee83901062bf94c7,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
5867,d11dd1b935625c4834c4acc5ee83901062bf94c7,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
5868,d11dd1b935625c4834c4acc5ee83901062bf94c7,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
5869,991e715fd1ec26d6b3314aa38018c730d38508c3,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5870,4a704ddafdc175f11990a0f1acb1dd5aae9b198c,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
5871,4a704ddafdc175f11990a0f1acb1dd5aae9b198c,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
5872,4a704ddafdc175f11990a0f1acb1dd5aae9b198c,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
5873,cb0178c9a060b87904a436d0a82ca87c25558cfe,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5874,cb0178c9a060b87904a436d0a82ca87c25558cfe,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5875,cb0178c9a060b87904a436d0a82ca87c25558cfe,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5876,cb0178c9a060b87904a436d0a82ca87c25558cfe,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5877,cb0178c9a060b87904a436d0a82ca87c25558cfe,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5878,5725f76184b10bc1e8b461dc893432129852675d,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
5879,bab64b2783388a10aef2eba3574791f58635b962,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5880,bab64b2783388a10aef2eba3574791f58635b962,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5881,bab64b2783388a10aef2eba3574791f58635b962,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5882,bab64b2783388a10aef2eba3574791f58635b962,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5883,bab64b2783388a10aef2eba3574791f58635b962,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5884,b4faa1b18678b0655b236d87bf9b61f66617d1db,/sbuild/Dockerfile,"# run with ""--cap-add SYS_ADMIN"" so that sbuild can ""mount"" in the chroots it creates

"
5885,b4faa1b18678b0655b236d87bf9b61f66617d1db,/sbuild/Dockerfile,"# https://gist.github.com/tianon/a0080cbca558e4b907fe
# (useful sbuild-related scripts)
"
5886,b4faa1b18678b0655b236d87bf9b61f66617d1db,/sbuild/Dockerfile,"# usage: download-debuerreotype-tarball.sh suite [arch]
#    ie: download-debuerreotype-tarball.sh stretch
#        download-debuerreotype-tarball.sh sid i386
"
5887,5abdc4200c4317adeef4f09935fd73c5848a0dad,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5888,7d2c0ed3f348c98317a14fe2ef0b9e0b8b1c96f9,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5889,f6579df406fa81ecdcf158b4fc9e3e31cd9cef67,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
5890,f6579df406fa81ecdcf158b4fc9e3e31cd9cef67,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
5891,f6579df406fa81ecdcf158b4fc9e3e31cd9cef67,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
5892,f6579df406fa81ecdcf158b4fc9e3e31cd9cef67,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
5893,f6579df406fa81ecdcf158b4fc9e3e31cd9cef67,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
5894,fa4bfac997276fc31ce23a8b1c2d62ab507bbb06,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
5895,dd36567895230b2ed3da303aaaabcf289b3208e3,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
5896,dd36567895230b2ed3da303aaaabcf289b3208e3,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
"
5897,b32f332699ed7527daadf868e43eed3733316168,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5898,b32f332699ed7527daadf868e43eed3733316168,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5899,b32f332699ed7527daadf868e43eed3733316168,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5900,b32f332699ed7527daadf868e43eed3733316168,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5901,b32f332699ed7527daadf868e43eed3733316168,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5902,b81069ae5c37fe94962f82ae50bf004d760c396f,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5903,4a23d04f96aa0de3e9dcea31e4f9b82c9192886d,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5904,1fdee9302c8901a16601199614ff8cb5cf9b8825,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5905,1fdee9302c8901a16601199614ff8cb5cf9b8825,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5906,1fdee9302c8901a16601199614ff8cb5cf9b8825,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5907,1fdee9302c8901a16601199614ff8cb5cf9b8825,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5908,1fdee9302c8901a16601199614ff8cb5cf9b8825,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5909,6619904eb134c734d3b7f0b3b8433b883e3a4f32,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5910,6619904eb134c734d3b7f0b3b8433b883e3a4f32,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5911,6619904eb134c734d3b7f0b3b8433b883e3a4f32,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5912,6619904eb134c734d3b7f0b3b8433b883e3a4f32,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5913,6619904eb134c734d3b7f0b3b8433b883e3a4f32,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5914,4ac2c621acb7e822103632ee4a488c09023d644c,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5915,4ac2c621acb7e822103632ee4a488c09023d644c,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5916,4ac2c621acb7e822103632ee4a488c09023d644c,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5917,4ac2c621acb7e822103632ee4a488c09023d644c,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5918,4ac2c621acb7e822103632ee4a488c09023d644c,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5919,5ef0739094fdb8b187e986e95f4372111a14342e,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5920,de5a284c574116b0ca899c93f50d307037ed755e,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
5921,de5a284c574116b0ca899c93f50d307037ed755e,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
5922,de5a284c574116b0ca899c93f50d307037ed755e,/jenkins/Dockerfile,"# workaround ""apt-key adv --recv-keys"" hanging in stretch and above
"
5923,1c96fba804c65c9ba9559fe3dffd91d83bc376a0,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5924,1c96fba804c65c9ba9559fe3dffd91d83bc376a0,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5925,1c96fba804c65c9ba9559fe3dffd91d83bc376a0,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5926,1c96fba804c65c9ba9559fe3dffd91d83bc376a0,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5927,1c96fba804c65c9ba9559fe3dffd91d83bc376a0,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5928,2d73ca022b8eca61f70bf15fb489cb87edaed870,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5929,2d73ca022b8eca61f70bf15fb489cb87edaed870,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5930,2d73ca022b8eca61f70bf15fb489cb87edaed870,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5931,2d73ca022b8eca61f70bf15fb489cb87edaed870,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5932,2d73ca022b8eca61f70bf15fb489cb87edaed870,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5933,1011bc890d51975889e23002378190d79dd05092,/skype/Dockerfile,"# see https://repo.skype.com

"
5934,1011bc890d51975889e23002378190d79dd05092,/skype/Dockerfile,"# https://repo.skype.com/data/SKYPE-GPG-KEY
"
5935,1011bc890d51975889e23002378190d79dd05092,/skype/Dockerfile,"# pub   2048R/DF7587C3 2016-06-22 [expires: 2021-06-21]
#       Key fingerprint = D404 0146 BE39 7250 9FD5  7FC7 1F30 45A5 DF75 87C3
# uid                  Skype Linux Client Repository <se-um@microsoft.com>
# sub   2048R/A4EBB320 2016-06-22 [expires: 2021-06-21]
"
5936,5ba81c50ce3eea2303b2f249f278f00789efa594,/github-pages/Dockerfile,"# https://pages.github.com/versions/
"
5937,419cb3229b081e530d91e7c025a3782621772b26,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
5938,419cb3229b081e530d91e7c025a3782621772b26,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
5939,419cb3229b081e530d91e7c025a3782621772b26,/jenkins/Dockerfile,"# workaround ""apt-key adv --recv-keys"" hanging in stretch and above
"
5940,c42418329661fb6cc280f4278f90bb47a55aca6b,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5941,c42418329661fb6cc280f4278f90bb47a55aca6b,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5942,c42418329661fb6cc280f4278f90bb47a55aca6b,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5943,c42418329661fb6cc280f4278f90bb47a55aca6b,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5944,c42418329661fb6cc280f4278f90bb47a55aca6b,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5945,efcfeb51674d19406b8f89496336decb2cf13b07,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5946,9acbd78c4f4f669332e96719056c34ee1c9be3ab,/debian/devel/Dockerfile,"# normal build deps
"
5947,9acbd78c4f4f669332e96719056c34ee1c9be3ab,/debian/devel/Dockerfile,"# need an editor for ""dch -i""
"
5948,9acbd78c4f4f669332e96719056c34ee1c9be3ab,/debian/devel/Dockerfile,"# a few extra little useful things
"
5949,9acbd78c4f4f669332e96719056c34ee1c9be3ab,/debian/devel/Dockerfile,"# need deb-src for compiling packages
"
5950,9acbd78c4f4f669332e96719056c34ee1c9be3ab,/debian/devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
5951,ed744df645272aa5d7e55d11a7f2da1245fe1b48,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5952,2f26bca1f8ce8677ee4dbbe82f173dfd47349d4a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5953,2f26bca1f8ce8677ee4dbbe82f173dfd47349d4a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5954,2f26bca1f8ce8677ee4dbbe82f173dfd47349d4a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5955,2f26bca1f8ce8677ee4dbbe82f173dfd47349d4a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5956,2f26bca1f8ce8677ee4dbbe82f173dfd47349d4a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5957,9ebc2d8feac9e211d481e5a81d22e2852351c0e8,/moosefs/Dockerfile,"# mfscli (and cgi) are Python-based
"
5958,9ebc2d8feac9e211d481e5a81d22e2852351c0e8,/moosefs/Dockerfile,"# mfsmount needs ""fusermount""
"
5959,9ebc2d8feac9e211d481e5a81d22e2852351c0e8,/moosefs/Dockerfile,"# allow running mfsmount as non-root
"
5960,9ebc2d8feac9e211d481e5a81d22e2852351c0e8,/moosefs/Dockerfile,"#user_allow_other$/user_allow_other/' /etc/fuse.conf

"
5961,9ebc2d8feac9e211d481e5a81d22e2852351c0e8,/moosefs/Dockerfile,"# https://github.com/moosefs/moosefs/releases
"
5962,9ebc2d8feac9e211d481e5a81d22e2852351c0e8,/moosefs/Dockerfile,"# prep the default configuration so things generally work Out-of-the-Box
"
5963,9ebc2d8feac9e211d481e5a81d22e2852351c0e8,/moosefs/Dockerfile,"# allow us to run as an arbitrary user but still modify configuration
"
5964,9ebc2d8feac9e211d481e5a81d22e2852351c0e8,/moosefs/Dockerfile,"# prep a scratch space with appropriate permissions to be able to do quick prototyping Out-of-the-Box
"
5965,9ebc2d8feac9e211d481e5a81d22e2852351c0e8,/moosefs/Dockerfile,"# without this, the Python-based mfscli ""-f"" flag refuses to use UTF-8 box-drawing characters
"
5966,24ce8518ff33dca4a4196539a4cc0044b78d9091,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5967,0ca59d4a4fc15e6752d9d258e45a69c3911416db,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5968,0ca59d4a4fc15e6752d9d258e45a69c3911416db,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5969,0ca59d4a4fc15e6752d9d258e45a69c3911416db,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5970,0ca59d4a4fc15e6752d9d258e45a69c3911416db,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5971,0ca59d4a4fc15e6752d9d258e45a69c3911416db,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5972,f9e1ef067753e0833bb1448f802fa62f73c81732,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5973,79472611978592fab5c9da4b25aea0b36b774804,/slack/Dockerfile,"# the .deb file linked at https://slack.com/downloads/instructions/debian includes ""/etc/cron.daily/slack"" which sets up an APT repo entry as in the following installation

# pub   rsa4096 2016-02-18 [SCEA]
#       DB08 5A08 CA13 B8AC B917  E0F6 D938 EC0D 0386 51BD
# uid           [ unknown] https://packagecloud.io/slacktechnologies/slack (https://packagecloud.io/docs#gpg_signing) <support@packagecloud.io>
# sub   rsa4096 2016-02-18 [SEA]
"
5974,79472611978592fab5c9da4b25aea0b36b774804,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libX11-xcb.so.1: cannot open shared object file: No such file or directory
"
5975,79472611978592fab5c9da4b25aea0b36b774804,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libasound.so.2: cannot open shared object file: No such file or directory
"
5976,d62085ef9d3615060f8eba94d4d3de99f904577e,/sbuild/Dockerfile,"# run with ""--cap-add SYS_ADMIN"" so that sbuild can ""mount"" in the chroots it creates

"
5977,d62085ef9d3615060f8eba94d4d3de99f904577e,/sbuild/Dockerfile,"# https://github.com/tianon/debian-bin
# useful debian-related (esp. sbuild) scripts
"
5978,d62085ef9d3615060f8eba94d4d3de99f904577e,/sbuild/Dockerfile,"# usage: download-debuerreotype-tarball.sh suite [arch]
#    ie: download-debuerreotype-tarball.sh stretch
#        download-debuerreotype-tarball.sh sid i386
"
5979,5e9f314c98dc9613228c4c178ebeef76376a34b4,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5980,457708d5019166d98353ac0790107b78a6f52ce1,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5981,613e2bc07c88e0e0b9f834cfb94c44eba9a702cb,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
5982,d1322e7278f12a22755eacffd21cc2a49ca79a46,/nginx/Dockerfile,"# prevent backgrounding (for Docker)\ndaemon off;' >> /etc/nginx/nginx.conf

"
5983,0afd0ce81d1a3c7331896299d6a5265739c4df5b,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
5984,3ba083adcc3388902614fe60467240c7839b0ca1,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
5985,3ba083adcc3388902614fe60467240c7839b0ca1,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
5986,f7ef7446498a095b03a7680144ce4af304171d1d,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5987,f7ef7446498a095b03a7680144ce4af304171d1d,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5988,f7ef7446498a095b03a7680144ce4af304171d1d,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
5989,f7ef7446498a095b03a7680144ce4af304171d1d,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
5990,f7ef7446498a095b03a7680144ce4af304171d1d,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
5991,03a8272a06f76fa23512ccb7083d45f0bd71aefb,/qemu/Dockerfile,"#		qemu-system \
#		qemu-utils \
"
5992,03a8272a06f76fa23512ccb7083d45f0bd71aefb,/qemu/Dockerfile,"# https://www.qemu.org/download/#source
"
5993,03a8272a06f76fa23512ccb7083d45f0bd71aefb,/qemu/Dockerfile,"# TODO verify signature
"
5994,03a8272a06f76fa23512ccb7083d45f0bd71aefb,/qemu/Dockerfile,"# system targets
# (https://sources.debian.org/src/qemu/stretch/debian/rules/#L57-L61, slimmed)
"
5995,03a8272a06f76fa23512ccb7083d45f0bd71aefb,/qemu/Dockerfile,"# user targets
# (https://sources.debian.org/src/qemu/stretch/debian/rules/#L81-L86, slimmed)
"
5996,03a8272a06f76fa23512ccb7083d45f0bd71aefb,/qemu/Dockerfile,"#		--enable-rbd \
#		--enable-vde \
"
5997,2c000404ff4a156dd605e7f181bf29ede4497e97,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
5998,2c000404ff4a156dd605e7f181bf29ede4497e97,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
5999,2c000404ff4a156dd605e7f181bf29ede4497e97,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6000,2c000404ff4a156dd605e7f181bf29ede4497e97,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6001,2c000404ff4a156dd605e7f181bf29ede4497e97,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6002,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/14.04/Dockerfile,"# much of this was gleaned from https://github.com/lxc/lxc/blob/lxc-0.8.0/templates/lxc-ubuntu.in

# we're going to want this bad boy installed so we can connect :)
"
6003,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/14.04/Dockerfile,"# undo some leet hax of the base image
"
6004,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/14.04/Dockerfile,"# generate a nice UTF-8 locale for our use
"
6005,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/14.04/Dockerfile,"# remove some pointless services
"
6006,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/14.04/Dockerfile,"# /lib/init/fstab: cleared out for bare-bones lxc' > /lib/init/fstab

# small fix for SSH in 13.10 (that's harmless everywhere else)
"
6007,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/14.04/Dockerfile,"# set a cheap, simple password for great convenience
"
6008,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/14.04/Dockerfile,"# we can has SSH
"
6009,e4b7cbaea20ba29771f6cbd427d4873abe54b3f4,/sbin-init/ubuntu/upstart/14.04/Dockerfile,"# pepare for takeoff
"
6010,83a5100a9b45f22cc4cde2e84e55e84e2a20b122,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6011,83a5100a9b45f22cc4cde2e84e55e84e2a20b122,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6012,83a5100a9b45f22cc4cde2e84e55e84e2a20b122,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6013,83a5100a9b45f22cc4cde2e84e55e84e2a20b122,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6014,83a5100a9b45f22cc4cde2e84e55e84e2a20b122,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6015,f114da72c2fef9965301ca6fc8c0edbfdb7565db,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6016,f114da72c2fef9965301ca6fc8c0edbfdb7565db,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6017,f114da72c2fef9965301ca6fc8c0edbfdb7565db,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6018,f114da72c2fef9965301ca6fc8c0edbfdb7565db,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6019,f114da72c2fef9965301ca6fc8c0edbfdb7565db,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6020,7070c4ed21790c8cab1284668ebac0b9d12195a1,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6021,7070c4ed21790c8cab1284668ebac0b9d12195a1,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6022,7070c4ed21790c8cab1284668ebac0b9d12195a1,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6023,7070c4ed21790c8cab1284668ebac0b9d12195a1,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6024,7070c4ed21790c8cab1284668ebac0b9d12195a1,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6025,daf6eac3cd5c8a0f31b7b18f5889eba2f89a8d1c,/gmpydl/Dockerfile,"# https://pypi.org/project/gmusicapi/
"
6026,daf6eac3cd5c8a0f31b7b18f5889eba2f89a8d1c,/gmpydl/Dockerfile,"# https://github.com/stevenewbs/gmpydl/commits/master
# https://github.com/stevenewbs/gmpydl/releases
"
6027,a63e2edf4c374d357d6010920b6bdd85545d6bfe,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6028,a63e2edf4c374d357d6010920b6bdd85545d6bfe,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6029,a63e2edf4c374d357d6010920b6bdd85545d6bfe,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6030,a63e2edf4c374d357d6010920b6bdd85545d6bfe,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6031,a63e2edf4c374d357d6010920b6bdd85545d6bfe,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6032,dc2425bc640e3fc6c081e72346bcbbaf770eed3e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6033,dc2425bc640e3fc6c081e72346bcbbaf770eed3e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6034,dc2425bc640e3fc6c081e72346bcbbaf770eed3e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6035,dc2425bc640e3fc6c081e72346bcbbaf770eed3e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6036,dc2425bc640e3fc6c081e72346bcbbaf770eed3e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6037,9b80bf2e769ce3bc55bc12fcb070361cdfb510da,/debian/devel/Dockerfile,"# normal build deps
"
6038,9b80bf2e769ce3bc55bc12fcb070361cdfb510da,/debian/devel/Dockerfile,"# need deb-src for compiling packages
"
6039,9b80bf2e769ce3bc55bc12fcb070361cdfb510da,/debian/devel/Dockerfile,"# let's make apt list package versions, since those are handy during devel
"
6040,9b80bf2e769ce3bc55bc12fcb070361cdfb510da,/debian/devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
6041,9b80bf2e769ce3bc55bc12fcb070361cdfb510da,/debian/devel/Dockerfile,"# for ssh to debian hosts, let's make sure we know their fingerprints <3
"
6042,9b80bf2e769ce3bc55bc12fcb070361cdfb510da,/debian/devel/Dockerfile,"# make sure things are pretty
"
6043,9b80bf2e769ce3bc55bc12fcb070361cdfb510da,/debian/devel/Dockerfile,"#(force_color_prompt=yes)/\1/' ~/.bashrc

# quilt is much amaze: https://wiki.debian.org/UsingQuilt#Using_quilt_with_Debian_source_packages
"
6044,4eb57d6f2014bd5eb7fce2bc56e19ccccc36bf0c,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6045,4eb57d6f2014bd5eb7fce2bc56e19ccccc36bf0c,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6046,4eb57d6f2014bd5eb7fce2bc56e19ccccc36bf0c,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6047,4eb57d6f2014bd5eb7fce2bc56e19ccccc36bf0c,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6048,4eb57d6f2014bd5eb7fce2bc56e19ccccc36bf0c,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6049,02d99fe65b851d11f8a6393d8048b7f394a9520f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6050,02d99fe65b851d11f8a6393d8048b7f394a9520f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6051,02d99fe65b851d11f8a6393d8048b7f394a9520f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6052,02d99fe65b851d11f8a6393d8048b7f394a9520f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6053,02d99fe65b851d11f8a6393d8048b7f394a9520f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6054,c42418329661fb6cc280f4278f90bb47a55aca6b,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6055,a36d07cf0899b9e381eaed0b19449dd1dfa4366f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6056,a36d07cf0899b9e381eaed0b19449dd1dfa4366f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6057,a36d07cf0899b9e381eaed0b19449dd1dfa4366f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6058,a36d07cf0899b9e381eaed0b19449dd1dfa4366f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6059,a36d07cf0899b9e381eaed0b19449dd1dfa4366f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6060,24b957d5ace76d2b7bb23842cf31405ecc59ebd2,/certbot/Dockerfile,"# Executable not found: can't find the executable for the dialog-like program
"
6061,24b957d5ace76d2b7bb23842cf31405ecc59ebd2,/certbot/Dockerfile,"#VOLUME /etc/letsencrypt
"
6062,24b957d5ace76d2b7bb23842cf31405ecc59ebd2,/certbot/Dockerfile,"#VOLUME /var/log/letsencrypt

"
6063,2855c025e1158e96fd8d973a6b1cf85fb6f0452f,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6064,63d7d19b28f74e119f64260a6cb67df0d55a8d71,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6065,01b4fda7ce367930a68689b5bd5fa4f45a6f7a7d,/debian/ubuntu-devel/Dockerfile,"# let's make apt list package versions, since those are handy during devel
"
6066,01b4fda7ce367930a68689b5bd5fa4f45a6f7a7d,/debian/ubuntu-devel/Dockerfile,"# normal build deps
"
6067,01b4fda7ce367930a68689b5bd5fa4f45a6f7a7d,/debian/ubuntu-devel/Dockerfile,"# for some reason ""tzdata"" is prompting via debconf via Readline, which hangs
"
6068,01b4fda7ce367930a68689b5bd5fa4f45a6f7a7d,/debian/ubuntu-devel/Dockerfile,"# get dh-make-golang from Git since it's so rapidly changing
"
6069,01b4fda7ce367930a68689b5bd5fa4f45a6f7a7d,/debian/ubuntu-devel/Dockerfile,"# need deb-src for compiling packages
"
6070,01b4fda7ce367930a68689b5bd5fa4f45a6f7a7d,/debian/ubuntu-devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
6071,01b4fda7ce367930a68689b5bd5fa4f45a6f7a7d,/debian/ubuntu-devel/Dockerfile,"# for ssh to debian hosts, let's make sure we know their fingerprints <3
"
6072,01b4fda7ce367930a68689b5bd5fa4f45a6f7a7d,/debian/ubuntu-devel/Dockerfile,"# make sure things are pretty
"
6073,01b4fda7ce367930a68689b5bd5fa4f45a6f7a7d,/debian/ubuntu-devel/Dockerfile,"#(force_color_prompt=yes)/\1/' ~/.bashrc

# quilt is much amaze: https://wiki.debian.org/UsingQuilt#Using_quilt_with_Debian_source_packages
"
6074,01b4fda7ce367930a68689b5bd5fa4f45a6f7a7d,/debian/ubuntu-devel/Dockerfile,"# make sure pbuilder-dist uses a sane default mirror
"
6075,ac63b33bfe5da5cbcb00505ea474a3f9a2cf6f0f,/debian/devel/Dockerfile,"# let's make apt list package versions, since those are handy during devel
"
6076,ac63b33bfe5da5cbcb00505ea474a3f9a2cf6f0f,/debian/devel/Dockerfile,"# normal build deps
"
6077,ac63b33bfe5da5cbcb00505ea474a3f9a2cf6f0f,/debian/devel/Dockerfile,"# need deb-src for compiling packages
"
6078,ac63b33bfe5da5cbcb00505ea474a3f9a2cf6f0f,/debian/devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
6079,ac63b33bfe5da5cbcb00505ea474a3f9a2cf6f0f,/debian/devel/Dockerfile,"# for ssh to debian hosts, let's make sure we know their fingerprints <3
"
6080,ac63b33bfe5da5cbcb00505ea474a3f9a2cf6f0f,/debian/devel/Dockerfile,"# make sure things are pretty
"
6081,ac63b33bfe5da5cbcb00505ea474a3f9a2cf6f0f,/debian/devel/Dockerfile,"#(force_color_prompt=yes)/\1/' ~/.bashrc

# quilt is much amaze: https://wiki.debian.org/UsingQuilt#Using_quilt_with_Debian_source_packages
"
6082,ac63b33bfe5da5cbcb00505ea474a3f9a2cf6f0f,/debian/devel/Dockerfile,"# make sure pbuilder-dist uses a sane default mirror
"
6083,545a7dda246933112c4e9a0fdf07392b1dfdf482,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6084,452a6706dcad8040ad598533463df86b38a71178,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6085,452a6706dcad8040ad598533463df86b38a71178,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6086,452a6706dcad8040ad598533463df86b38a71178,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6087,452a6706dcad8040ad598533463df86b38a71178,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6088,452a6706dcad8040ad598533463df86b38a71178,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6089,427907dc3330195188c9b6995f096bb42810d139,/vultr-cli/Dockerfile,"# https://github.com/vultr/vultr-cli/releases
"
6090,84096e77d40dd5adddd7ae1c260a6d7410ab572c,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6091,84096e77d40dd5adddd7ae1c260a6d7410ab572c,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6092,84096e77d40dd5adddd7ae1c260a6d7410ab572c,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6093,84096e77d40dd5adddd7ae1c260a6d7410ab572c,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6094,84096e77d40dd5adddd7ae1c260a6d7410ab572c,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6095,58d526208c66ebc23e7e64169f7508bec96b031e,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
6096,58d526208c66ebc23e7e64169f7508bec96b031e,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
6097,58d526208c66ebc23e7e64169f7508bec96b031e,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
6098,58d526208c66ebc23e7e64169f7508bec96b031e,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
6099,58d526208c66ebc23e7e64169f7508bec96b031e,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
6100,f45a984d5a2621bf73968ffdc0e1a242fb5be1d2,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6101,f45a984d5a2621bf73968ffdc0e1a242fb5be1d2,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6102,f45a984d5a2621bf73968ffdc0e1a242fb5be1d2,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6103,f45a984d5a2621bf73968ffdc0e1a242fb5be1d2,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6104,f45a984d5a2621bf73968ffdc0e1a242fb5be1d2,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6105,d7cb60495ab60f9eea1f5b54ff21ebe577f599ca,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6106,d7cb60495ab60f9eea1f5b54ff21ebe577f599ca,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6107,d7cb60495ab60f9eea1f5b54ff21ebe577f599ca,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6108,d7cb60495ab60f9eea1f5b54ff21ebe577f599ca,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6109,d7cb60495ab60f9eea1f5b54ff21ebe577f599ca,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6110,af670abf164116ae10da0f0712dce67132ded08c,/diffoscope/Dockerfile,"# xxd (xxd not available in path. Falling back to Python hexlify.)
"
6111,af670abf164116ae10da0f0712dce67132ded08c,/diffoscope/Dockerfile,"# readelf ('readelf' not available in path. Falling back to binary comparison.)
"
6112,af670abf164116ae10da0f0712dce67132ded08c,/diffoscope/Dockerfile,"# for ""diffoscope --progress""
"
6113,db346082a1737771c8d52faa2ff7f55c71e2002c,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6114,db346082a1737771c8d52faa2ff7f55c71e2002c,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6115,db346082a1737771c8d52faa2ff7f55c71e2002c,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6116,db346082a1737771c8d52faa2ff7f55c71e2002c,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6117,db346082a1737771c8d52faa2ff7f55c71e2002c,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6118,8deeccf4f55ec7272edc03fab764469583e0f6c1,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
6119,8deeccf4f55ec7272edc03fab764469583e0f6c1,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
6120,8deeccf4f55ec7272edc03fab764469583e0f6c1,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
6121,8deeccf4f55ec7272edc03fab764469583e0f6c1,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
6122,8deeccf4f55ec7272edc03fab764469583e0f6c1,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
6123,c6f1320c42c5faa745eb4f139aa1e9564bdadc47,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6124,309fa94a94fdf1fa73b3159d18e2e8c086a14b27,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
6125,30bb127dd4ccd7865e537f6204df40a9af437cf6,/certbot/Dockerfile,"# Executable not found: can't find the executable for the dialog-like program
"
6126,30bb127dd4ccd7865e537f6204df40a9af437cf6,/certbot/Dockerfile,"#VOLUME /etc/letsencrypt
"
6127,30bb127dd4ccd7865e537f6204df40a9af437cf6,/certbot/Dockerfile,"#VOLUME /var/log/letsencrypt

"
6128,04eea46aff60c9c54b58cb8e1926ff4c42285a04,/debian/devel/Dockerfile,"# normal build deps
"
6129,04eea46aff60c9c54b58cb8e1926ff4c42285a04,/debian/devel/Dockerfile,"# need an editor for ""dch -i""
"
6130,04eea46aff60c9c54b58cb8e1926ff4c42285a04,/debian/devel/Dockerfile,"# a few extra little useful things
"
6131,04eea46aff60c9c54b58cb8e1926ff4c42285a04,/debian/devel/Dockerfile,"# need deb-src for compiling packages
"
6132,04eea46aff60c9c54b58cb8e1926ff4c42285a04,/debian/devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
6133,edc5fcd2e5512a9e8dc062cab2eb0622714e43a7,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6134,edc5fcd2e5512a9e8dc062cab2eb0622714e43a7,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6135,edc5fcd2e5512a9e8dc062cab2eb0622714e43a7,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6136,edc5fcd2e5512a9e8dc062cab2eb0622714e43a7,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6137,edc5fcd2e5512a9e8dc062cab2eb0622714e43a7,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6138,ab44499d8915c74329a1c44ed54f4bf8c3720e82,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6139,ab44499d8915c74329a1c44ed54f4bf8c3720e82,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6140,ab44499d8915c74329a1c44ed54f4bf8c3720e82,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6141,ab44499d8915c74329a1c44ed54f4bf8c3720e82,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6142,ab44499d8915c74329a1c44ed54f4bf8c3720e82,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6143,baf89e3d27cd633c593b85762c7640e11b179560,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6144,baf89e3d27cd633c593b85762c7640e11b179560,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6145,baf89e3d27cd633c593b85762c7640e11b179560,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6146,baf89e3d27cd633c593b85762c7640e11b179560,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6147,baf89e3d27cd633c593b85762c7640e11b179560,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6148,9e2e7adc3bb030b68883d8eebd0f110b7c94e6c1,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6149,9e2e7adc3bb030b68883d8eebd0f110b7c94e6c1,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6150,9e2e7adc3bb030b68883d8eebd0f110b7c94e6c1,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6151,9e2e7adc3bb030b68883d8eebd0f110b7c94e6c1,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6152,9e2e7adc3bb030b68883d8eebd0f110b7c94e6c1,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6153,42ef7fb249b813242de3f8727b2d37469c19edc8,/vultr-cli/Dockerfile,"# https://github.com/vultr/vultr-cli/releases
"
6154,5072bd76d8b74c0e430cff74c8ebbb01eefbc781,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6155,5072bd76d8b74c0e430cff74c8ebbb01eefbc781,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6156,5072bd76d8b74c0e430cff74c8ebbb01eefbc781,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6157,5072bd76d8b74c0e430cff74c8ebbb01eefbc781,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6158,5072bd76d8b74c0e430cff74c8ebbb01eefbc781,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6159,34b92ffae172dcfad64fce5a203c8386faea92f0,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
6160,34b92ffae172dcfad64fce5a203c8386faea92f0,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
6161,aab9c36959706989b268bb0a2f1edaa91dff08b8,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6162,aab9c36959706989b268bb0a2f1edaa91dff08b8,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6163,aab9c36959706989b268bb0a2f1edaa91dff08b8,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6164,aab9c36959706989b268bb0a2f1edaa91dff08b8,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6165,aab9c36959706989b268bb0a2f1edaa91dff08b8,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6166,8d232535bd0923422beb8b98604a274d5f8f72ce,/phpmyadmin/Dockerfile,"# https://www.phpmyadmin.net/downloads/
"
6167,8d232535bd0923422beb8b98604a274d5f8f72ce,/phpmyadmin/Dockerfile,"# https://docs.phpmyadmin.net/en/latest/setup.html#verifying-phpmyadmin-releases
"
6168,8d232535bd0923422beb8b98604a274d5f8f72ce,/phpmyadmin/Dockerfile,"# Since July 2015 all phpMyAdmin releases are cryptographically signed by the releasing developer, who through January 2016 was Marc Delisle.
"
6169,8d232535bd0923422beb8b98604a274d5f8f72ce,/phpmyadmin/Dockerfile,"# Beginning in January 2016, the release manager is Isaac Bennetch.
"
6170,8d232535bd0923422beb8b98604a274d5f8f72ce,/phpmyadmin/Dockerfile,"# Some additional downloads (for example themes) might be signed by Michal Čihař.
"
6171,48f3f9a3a5961548c8cda7272b93387d6f9e5332,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
6172,48f3f9a3a5961548c8cda7272b93387d6f9e5332,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
6173,48f3f9a3a5961548c8cda7272b93387d6f9e5332,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
6174,48f3f9a3a5961548c8cda7272b93387d6f9e5332,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
6175,48f3f9a3a5961548c8cda7272b93387d6f9e5332,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
6176,344e887fd79840b920b857f7f9b9dcc098c758cf,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6177,344e887fd79840b920b857f7f9b9dcc098c758cf,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6178,344e887fd79840b920b857f7f9b9dcc098c758cf,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6179,344e887fd79840b920b857f7f9b9dcc098c758cf,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6180,344e887fd79840b920b857f7f9b9dcc098c758cf,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6181,0ef6f5be8438d0788278fedfc3383eba0767a574,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6182,0ef6f5be8438d0788278fedfc3383eba0767a574,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6183,0ef6f5be8438d0788278fedfc3383eba0767a574,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6184,0ef6f5be8438d0788278fedfc3383eba0767a574,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6185,0ef6f5be8438d0788278fedfc3383eba0767a574,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6186,870730a2f53f72bccc4b16a98907ef8070f888e3,/docker/master/dind/Dockerfile,"# https://github.com/docker/docker/blob/master/project/PACKAGERS.md#runtime-dependencies
"
6187,870730a2f53f72bccc4b16a98907ef8070f888e3,/docker/master/dind/Dockerfile,"# TODO aufs-tools

"
6188,83a4e8dfc8f2cd610a20da2a9191d24f4534310f,/syncthing/Dockerfile,"# gpg: key BCE524C7: public key ""Jakob Borg (calmh) <jakob@nym.se>"" imported
"
6189,5fec4eb06440d21fad0641e1d544457da823cfd9,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6190,5fec4eb06440d21fad0641e1d544457da823cfd9,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6191,5fec4eb06440d21fad0641e1d544457da823cfd9,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6192,5fec4eb06440d21fad0641e1d544457da823cfd9,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6193,5fec4eb06440d21fad0641e1d544457da823cfd9,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6194,b81069ae5c37fe94962f82ae50bf004d760c396f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6195,b81069ae5c37fe94962f82ae50bf004d760c396f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6196,b81069ae5c37fe94962f82ae50bf004d760c396f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6197,b81069ae5c37fe94962f82ae50bf004d760c396f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6198,b81069ae5c37fe94962f82ae50bf004d760c396f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6199,af8839282d3364de82f6a7fc1ed17526216b0cff,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6200,af8839282d3364de82f6a7fc1ed17526216b0cff,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6201,af8839282d3364de82f6a7fc1ed17526216b0cff,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6202,af8839282d3364de82f6a7fc1ed17526216b0cff,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6203,af8839282d3364de82f6a7fc1ed17526216b0cff,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6204,952f3431f910f7eac2b7d398aba3634174c25a62,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6205,952f3431f910f7eac2b7d398aba3634174c25a62,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6206,952f3431f910f7eac2b7d398aba3634174c25a62,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6207,952f3431f910f7eac2b7d398aba3634174c25a62,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6208,952f3431f910f7eac2b7d398aba3634174c25a62,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6209,16a206d40a80ccc737b3088f570f327a66f963c4,/makemkv/Dockerfile,"# http://www.makemkv.com/forum2/viewtopic.php?f=3&t=224
"
6210,16a206d40a80ccc737b3088f570f327a66f963c4,/makemkv/Dockerfile,"# beta code: http://www.makemkv.com/forum2/viewtopic.php?f=5&t=1053
"
6211,a17ee588759f9e4b1f8d5ae3738bdc4e727c034f,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6212,ae289e48e76e24482f2976f2cac116f2a3ab14e5,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6213,ae289e48e76e24482f2976f2cac116f2a3ab14e5,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6214,ae289e48e76e24482f2976f2cac116f2a3ab14e5,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6215,ae289e48e76e24482f2976f2cac116f2a3ab14e5,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6216,ae289e48e76e24482f2976f2cac116f2a3ab14e5,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6217,f776d3ee1a1642b8fc7cdda3335e29d0bc45a94c,/skype/Dockerfile,"# see https://repo.skype.com

"
6218,f776d3ee1a1642b8fc7cdda3335e29d0bc45a94c,/skype/Dockerfile,"# wget is invoked by skypeforlinux for crash reports
"
6219,f776d3ee1a1642b8fc7cdda3335e29d0bc45a94c,/skype/Dockerfile,"# https://repo.skype.com/data/SKYPE-GPG-KEY
"
6220,f776d3ee1a1642b8fc7cdda3335e29d0bc45a94c,/skype/Dockerfile,"# pub   2048R/DF7587C3 2016-06-22 [expires: 2021-06-21]
#       Key fingerprint = D404 0146 BE39 7250 9FD5  7FC7 1F30 45A5 DF75 87C3
# uid                  Skype Linux Client Repository <se-um@microsoft.com>
# sub   2048R/A4EBB320 2016-06-22 [expires: 2021-06-21]
"
6221,12411baa44a0ae2f0aa0e0a909333f85f417672f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6222,12411baa44a0ae2f0aa0e0a909333f85f417672f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6223,12411baa44a0ae2f0aa0e0a909333f85f417672f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6224,12411baa44a0ae2f0aa0e0a909333f85f417672f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6225,12411baa44a0ae2f0aa0e0a909333f85f417672f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6226,58fe414db3ce38355fe641941ed2f2c557584fb4,/exim4/Dockerfile,"# grab tini for signal processing and zombie killing
"
6227,58fe414db3ce38355fe641941ed2f2c557584fb4,/exim4/Dockerfile,"# https://blog.dhampir.no/content/exim4-line-length-in-debian-stretch-mail-delivery-failed-returning-message-to-sender
# https://serverfault.com/a/881197
# https://bugs.debian.org/828801
"
6228,802fae90e6457d81bc19f7582446d86792273e7e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6229,802fae90e6457d81bc19f7582446d86792273e7e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6230,802fae90e6457d81bc19f7582446d86792273e7e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6231,802fae90e6457d81bc19f7582446d86792273e7e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6232,802fae90e6457d81bc19f7582446d86792273e7e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6233,7a74519e3243ecfba7e50f06f0e6a2dcf1f2655f,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
6234,7a74519e3243ecfba7e50f06f0e6a2dcf1f2655f,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
6235,7a74519e3243ecfba7e50f06f0e6a2dcf1f2655f,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
6236,ce8e1f6ce5266b3044a876b473e97e6377b10bef,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6237,ce8e1f6ce5266b3044a876b473e97e6377b10bef,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6238,ce8e1f6ce5266b3044a876b473e97e6377b10bef,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6239,ce8e1f6ce5266b3044a876b473e97e6377b10bef,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6240,ce8e1f6ce5266b3044a876b473e97e6377b10bef,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6241,d972ce15dfdccb763fccf6896fc0269662eb952f,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6242,afa0e0f4de0661da78620f2d9d201a4431c096e1,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6243,e3872662187caddf9bf72536532a2e197df12b51,/makemkv/Dockerfile,"# TODO find some way to include ccextractor (currently buster-only)

# FPL_MainFeature detection only seemed to work with OpenJDK 9 (8 was insufficient)
"
6244,e3872662187caddf9bf72536532a2e197df12b51,/makemkv/Dockerfile,"# This disc requires Java runtime (JRE), but none was found. Certain functions will fail, please install Java. See http://www.makemkv.com/bdjava/ for details.
"
6245,e3872662187caddf9bf72536532a2e197df12b51,/makemkv/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
6246,e3872662187caddf9bf72536532a2e197df12b51,/makemkv/Dockerfile,"# http://www.makemkv.com/forum2/viewtopic.php?f=3&t=224
"
6247,e3872662187caddf9bf72536532a2e197df12b51,/makemkv/Dockerfile,"# beta code: http://www.makemkv.com/forum2/viewtopic.php?f=5&t=1053
"
6248,e3872662187caddf9bf72536532a2e197df12b51,/makemkv/Dockerfile,"# pub   dsa2048 2017-05-26 [SC]
#       2ECF 2330 5F1F C0B3 2001  6733 94E3 083A 1804 2697
# uid           [ unknown] MakeMKV (signature) <support@makemkv.com>
"
6249,e0704457007309c8a1684ea0906367b4bcb7ad6f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6250,e0704457007309c8a1684ea0906367b4bcb7ad6f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6251,e0704457007309c8a1684ea0906367b4bcb7ad6f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6252,e0704457007309c8a1684ea0906367b4bcb7ad6f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6253,e0704457007309c8a1684ea0906367b4bcb7ad6f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6254,d17b242c3198b6be8174beaf33fb5a1a865960dd,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6255,ab9f49e4731ab2c00e86f73e955389dc736f0970,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6256,22ecdf9c9e19529f7796fc5872f99f370fd11092,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6257,22ecdf9c9e19529f7796fc5872f99f370fd11092,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6258,22ecdf9c9e19529f7796fc5872f99f370fd11092,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6259,22ecdf9c9e19529f7796fc5872f99f370fd11092,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6260,22ecdf9c9e19529f7796fc5872f99f370fd11092,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6261,b95a86fc8274cee0eb03192c6591f53ca86e20db,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6262,71c380557e0aa5c3ac14c8b6523ba6301d71e963,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6263,71c380557e0aa5c3ac14c8b6523ba6301d71e963,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6264,71c380557e0aa5c3ac14c8b6523ba6301d71e963,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6265,71c380557e0aa5c3ac14c8b6523ba6301d71e963,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6266,71c380557e0aa5c3ac14c8b6523ba6301d71e963,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6267,42485a6aa684db6fd0ef9ebe8c80d85fac435c6e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6268,42485a6aa684db6fd0ef9ebe8c80d85fac435c6e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6269,42485a6aa684db6fd0ef9ebe8c80d85fac435c6e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6270,42485a6aa684db6fd0ef9ebe8c80d85fac435c6e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6271,42485a6aa684db6fd0ef9ebe8c80d85fac435c6e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6272,ba3540870fbfa8f36263e4ae497ab250c61953cb,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6273,ba3540870fbfa8f36263e4ae497ab250c61953cb,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6274,ba3540870fbfa8f36263e4ae497ab250c61953cb,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6275,ba3540870fbfa8f36263e4ae497ab250c61953cb,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6276,ba3540870fbfa8f36263e4ae497ab250c61953cb,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6277,5261523130ed903d812693fe68cd2aa623e3a49a,/diffoscope/Dockerfile,"# xxd (xxd not available in path. Falling back to Python hexlify.)
"
6278,5261523130ed903d812693fe68cd2aa623e3a49a,/diffoscope/Dockerfile,"# readelf ('readelf' not available in path. Falling back to binary comparison.)
"
6279,2a6981d496b0420d976fb5c182b58d0975862b7a,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6280,b63789818ddcd494d1d845f9cfd225c34c0159dd,/jenkins/weekly/Dockerfile,"# grab gosu for easy step-down from root
"
6281,b63789818ddcd494d1d845f9cfd225c34c0159dd,/jenkins/weekly/Dockerfile,"# grab tini for signal processing and zombie killing
"
6282,b63789818ddcd494d1d845f9cfd225c34c0159dd,/jenkins/weekly/Dockerfile,"# https://groups.google.com/d/msg/jenkins-infra/c7m_72vUTXE/37zw9GXhAQAJ
"
6283,b63789818ddcd494d1d845f9cfd225c34c0159dd,/jenkins/weekly/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
6284,9e81dfefef25592dfa1c486ab82148a1d6037aab,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6285,9e81dfefef25592dfa1c486ab82148a1d6037aab,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6286,9e81dfefef25592dfa1c486ab82148a1d6037aab,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6287,9e81dfefef25592dfa1c486ab82148a1d6037aab,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6288,9e81dfefef25592dfa1c486ab82148a1d6037aab,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6289,4f36b6b08f2a622dd38f7250a12cd7d400b4a051,/jenkins/Dockerfile,"#RUN groupadd user && useradd --create-home --home-dir /home/user -g user user

"
6290,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/Dockerfile.template,"# much of this was gleaned from https://github.com/lxc/lxc/blob/lxc-0.8.0/templates/lxc-ubuntu.in

# we're going to want this bad boy installed so we can connect :)
"
6291,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/Dockerfile.template,"# undo some leet hax of the base image
"
6292,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/Dockerfile.template,"# generate a nice UTF-8 locale for our use
"
6293,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/Dockerfile.template,"# remove some pointless services
"
6294,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/Dockerfile.template,"# /lib/init/fstab: cleared out for bare-bones lxc' > /lib/init/fstab

# small fix for SSH in 13.10 (that's harmless everywhere else)
"
6295,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/Dockerfile.template,"# set a cheap, simple password for great convenience
"
6296,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/Dockerfile.template,"# we can has SSH
"
6297,e6a5cd2e84c8b28efb8b4ea9346d3d94f6af2c3a,/sbin-init/ubuntu/upstart/Dockerfile.template,"# pepare for takeoff
"
6298,2623d23d6ee282239796d9a632b2f6f5e567a0a8,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6299,2623d23d6ee282239796d9a632b2f6f5e567a0a8,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6300,2623d23d6ee282239796d9a632b2f6f5e567a0a8,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6301,2623d23d6ee282239796d9a632b2f6f5e567a0a8,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6302,2623d23d6ee282239796d9a632b2f6f5e567a0a8,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6303,9c2af355db170417d896572355cf0ab5a7408335,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6304,9c2af355db170417d896572355cf0ab5a7408335,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6305,9c2af355db170417d896572355cf0ab5a7408335,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6306,9c2af355db170417d896572355cf0ab5a7408335,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6307,9c2af355db170417d896572355cf0ab5a7408335,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6308,fc87bade551fcc37c5c536a34af8eea25e5880cc,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6309,fc87bade551fcc37c5c536a34af8eea25e5880cc,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6310,fc87bade551fcc37c5c536a34af8eea25e5880cc,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6311,fc87bade551fcc37c5c536a34af8eea25e5880cc,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6312,fc87bade551fcc37c5c536a34af8eea25e5880cc,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6313,ebc211fa8208807e942826b8e89214445bfe79b5,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6314,ebc211fa8208807e942826b8e89214445bfe79b5,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6315,ebc211fa8208807e942826b8e89214445bfe79b5,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6316,ebc211fa8208807e942826b8e89214445bfe79b5,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6317,ebc211fa8208807e942826b8e89214445bfe79b5,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6318,e435b192e3ba964601581168ab1c27945712cc8b,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6319,e435b192e3ba964601581168ab1c27945712cc8b,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6320,e435b192e3ba964601581168ab1c27945712cc8b,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6321,e435b192e3ba964601581168ab1c27945712cc8b,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6322,e435b192e3ba964601581168ab1c27945712cc8b,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6323,56a0d5d7759e6af44c0d3579f18ea1ab1c5c1eab,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6324,56a0d5d7759e6af44c0d3579f18ea1ab1c5c1eab,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6325,56a0d5d7759e6af44c0d3579f18ea1ab1c5c1eab,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6326,56a0d5d7759e6af44c0d3579f18ea1ab1c5c1eab,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6327,56a0d5d7759e6af44c0d3579f18ea1ab1c5c1eab,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6328,b3ec7b06a7cc501e975eb8ceaced2c7e45c59175,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6329,505dbe9c1047f8716560045e97f909442629123b,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6330,505dbe9c1047f8716560045e97f909442629123b,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6331,505dbe9c1047f8716560045e97f909442629123b,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6332,505dbe9c1047f8716560045e97f909442629123b,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6333,505dbe9c1047f8716560045e97f909442629123b,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6334,1de0cdc7f5402384d2f4bbdacd3fc234de2ef9b5,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6335,63c70d0871f93ec8604cf71c9f1524f650b0cf49,/diffoscope/Dockerfile,"# xxd (xxd not available in path. Falling back to Python hexlify.)
"
6336,63c70d0871f93ec8604cf71c9f1524f650b0cf49,/diffoscope/Dockerfile,"# readelf ('readelf' not available in path. Falling back to binary comparison.)
"
6337,63c70d0871f93ec8604cf71c9f1524f650b0cf49,/diffoscope/Dockerfile,"# for ""diffoscope --progress""
"
6338,c5a8707b4263ccb5a623a09e4b9da425f627b5a2,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6339,c5a8707b4263ccb5a623a09e4b9da425f627b5a2,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6340,c5a8707b4263ccb5a623a09e4b9da425f627b5a2,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6341,c5a8707b4263ccb5a623a09e4b9da425f627b5a2,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6342,c5a8707b4263ccb5a623a09e4b9da425f627b5a2,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6343,cf4c6c1ec420212e5378b877516aeddee0bb078f,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6344,d3ec404ff094fc80bf2159dc6717b1745eb8a0e8,/debian/devel/Dockerfile,"# let's make apt list package versions, since those are handy during devel
"
6345,d3ec404ff094fc80bf2159dc6717b1745eb8a0e8,/debian/devel/Dockerfile,"# normal build deps
"
6346,d3ec404ff094fc80bf2159dc6717b1745eb8a0e8,/debian/devel/Dockerfile,"# get dh-make-golang from Git since it's so rapidly changing
"
6347,d3ec404ff094fc80bf2159dc6717b1745eb8a0e8,/debian/devel/Dockerfile,"# need deb-src for compiling packages
"
6348,d3ec404ff094fc80bf2159dc6717b1745eb8a0e8,/debian/devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
6349,d3ec404ff094fc80bf2159dc6717b1745eb8a0e8,/debian/devel/Dockerfile,"# for ssh to debian hosts, let's make sure we know their fingerprints <3
"
6350,d3ec404ff094fc80bf2159dc6717b1745eb8a0e8,/debian/devel/Dockerfile,"# make sure things are pretty
"
6351,d3ec404ff094fc80bf2159dc6717b1745eb8a0e8,/debian/devel/Dockerfile,"#(force_color_prompt=yes)/\1/' ~/.bashrc

# quilt is much amaze: https://wiki.debian.org/UsingQuilt#Using_quilt_with_Debian_source_packages
"
6352,d3ec404ff094fc80bf2159dc6717b1745eb8a0e8,/debian/devel/Dockerfile,"# make sure pbuilder-dist uses a sane default mirror
"
6353,36a3b7b3d7aaf28d573191dc2cad889a0a9518e8,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6354,36a3b7b3d7aaf28d573191dc2cad889a0a9518e8,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6355,36a3b7b3d7aaf28d573191dc2cad889a0a9518e8,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6356,36a3b7b3d7aaf28d573191dc2cad889a0a9518e8,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6357,36a3b7b3d7aaf28d573191dc2cad889a0a9518e8,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6358,cae04cf800de7599d8aacc64bf7a775c26440e1a,/makemkv/Dockerfile,"# This disc requires Java runtime (JRE), but none was found. Certain functions will fail, please install Java. See http://www.makemkv.com/bdjava/ for details.
"
6359,cae04cf800de7599d8aacc64bf7a775c26440e1a,/makemkv/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
6360,cae04cf800de7599d8aacc64bf7a775c26440e1a,/makemkv/Dockerfile,"# FPL_MainFeature detection only seemed to work with OpenJDK 9 (8 was insufficient)
"
6361,cae04cf800de7599d8aacc64bf7a775c26440e1a,/makemkv/Dockerfile,"# Unable to execute external program 'ccextractor' as its path is not set in preferences
# Failed to execute external program 'ccextractor' from location '/usr/local/bin/mmccextr'
# (but it doesn't exist in the perferences dialog...)
"
6362,cae04cf800de7599d8aacc64bf7a775c26440e1a,/makemkv/Dockerfile,"# http://www.makemkv.com/forum2/viewtopic.php?f=3&t=224
"
6363,cae04cf800de7599d8aacc64bf7a775c26440e1a,/makemkv/Dockerfile,"# beta code: http://www.makemkv.com/forum2/viewtopic.php?f=5&t=1053
"
6364,cae04cf800de7599d8aacc64bf7a775c26440e1a,/makemkv/Dockerfile,"# pub   dsa2048 2017-05-26 [SC]
#       2ECF 2330 5F1F C0B3 2001  6733 94E3 083A 1804 2697
# uid           [ unknown] MakeMKV (signature) <support@makemkv.com>
"
6365,dcb548158911cadfd58c84a0235f05f22e557510,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6366,dcb548158911cadfd58c84a0235f05f22e557510,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6367,dcb548158911cadfd58c84a0235f05f22e557510,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6368,dcb548158911cadfd58c84a0235f05f22e557510,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6369,dcb548158911cadfd58c84a0235f05f22e557510,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6370,0343e6676b9a4a9d3d1aaa0cee52f87a1a389678,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6371,0343e6676b9a4a9d3d1aaa0cee52f87a1a389678,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6372,0343e6676b9a4a9d3d1aaa0cee52f87a1a389678,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6373,0343e6676b9a4a9d3d1aaa0cee52f87a1a389678,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6374,0343e6676b9a4a9d3d1aaa0cee52f87a1a389678,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6375,3cf2725c67d088f5ad9adbbd456caccfbbcda788,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6376,3cf2725c67d088f5ad9adbbd456caccfbbcda788,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6377,3cf2725c67d088f5ad9adbbd456caccfbbcda788,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6378,3cf2725c67d088f5ad9adbbd456caccfbbcda788,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6379,3cf2725c67d088f5ad9adbbd456caccfbbcda788,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6380,9280fda90d1b0c128ff3b55dcd6a9da8121fb1e5,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
6381,735d75f9f2383a2b09f133dd9e00551a51b48811,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6382,0feb5200ad32ffd51eb4e1e8592d08948f0812af,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6383,0feb5200ad32ffd51eb4e1e8592d08948f0812af,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6384,0feb5200ad32ffd51eb4e1e8592d08948f0812af,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6385,0feb5200ad32ffd51eb4e1e8592d08948f0812af,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6386,0feb5200ad32ffd51eb4e1e8592d08948f0812af,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6387,5494cafb185cc0bdc8739c6302b9083afcab052e,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6388,2d7a3feffce13c90fa5f44bde62ae10ae5f49227,/gmpydl/Dockerfile,"# https://pypi.org/project/gmusicapi/
"
6389,2d7a3feffce13c90fa5f44bde62ae10ae5f49227,/gmpydl/Dockerfile,"# https://github.com/stevenewbs/gmpydl/commits/master
# https://github.com/stevenewbs/gmpydl/releases
"
6390,5abdc4200c4317adeef4f09935fd73c5848a0dad,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6391,5abdc4200c4317adeef4f09935fd73c5848a0dad,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6392,5abdc4200c4317adeef4f09935fd73c5848a0dad,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6393,5abdc4200c4317adeef4f09935fd73c5848a0dad,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6394,5abdc4200c4317adeef4f09935fd73c5848a0dad,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6395,7be55256195ce693f35691a89e3ceec25a59aa8c,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
6396,7be55256195ce693f35691a89e3ceec25a59aa8c,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
6397,7be55256195ce693f35691a89e3ceec25a59aa8c,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
6398,234292612eb51175b34cb6b4033783d2393cbc4d,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6399,234292612eb51175b34cb6b4033783d2393cbc4d,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6400,234292612eb51175b34cb6b4033783d2393cbc4d,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6401,234292612eb51175b34cb6b4033783d2393cbc4d,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6402,234292612eb51175b34cb6b4033783d2393cbc4d,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6403,912dd59359af49548c58260eb2d85e85603b66b3,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6404,912dd59359af49548c58260eb2d85e85603b66b3,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6405,912dd59359af49548c58260eb2d85e85603b66b3,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6406,912dd59359af49548c58260eb2d85e85603b66b3,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6407,912dd59359af49548c58260eb2d85e85603b66b3,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6408,c621e1ce3500963ce2b1937b3a74db2bcf4ebdfb,/bash/4.3/Dockerfile,"# gpg: key 64EA74AB: public key ""Chet Ramey <chet@cwru.edu>"" imported
"
6409,c621e1ce3500963ce2b1937b3a74db2bcf4ebdfb,/bash/4.3/Dockerfile,"# https://ftp.gnu.org/gnu/bash/?C=M;O=D
"
6410,c621e1ce3500963ce2b1937b3a74db2bcf4ebdfb,/bash/4.3/Dockerfile,"# https://ftp.gnu.org/gnu/bash/bash-4.3-patches/?C=M;O=D
"
6411,c621e1ce3500963ce2b1937b3a74db2bcf4ebdfb,/bash/4.3/Dockerfile,"# prefixed with ""_"" since ""$BASH..."" have meaning in Bash parlance

"
6412,c621e1ce3500963ce2b1937b3a74db2bcf4ebdfb,/bash/4.3/Dockerfile,"# delete a few installed bits for smaller image size
"
6413,08ab543517c4ad60fd0cd58d3abe8262d206854d,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6414,08ab543517c4ad60fd0cd58d3abe8262d206854d,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6415,08ab543517c4ad60fd0cd58d3abe8262d206854d,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6416,08ab543517c4ad60fd0cd58d3abe8262d206854d,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6417,08ab543517c4ad60fd0cd58d3abe8262d206854d,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6418,bb0dbda54e9999fd24dcd3f4481106940e4e2956,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
6419,bb0dbda54e9999fd24dcd3f4481106940e4e2956,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
6420,bb0dbda54e9999fd24dcd3f4481106940e4e2956,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
6421,d8c15e9e58579a077a026442f6e36c3ee60937f4,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6422,d8c15e9e58579a077a026442f6e36c3ee60937f4,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6423,d8c15e9e58579a077a026442f6e36c3ee60937f4,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6424,d8c15e9e58579a077a026442f6e36c3ee60937f4,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6425,d8c15e9e58579a077a026442f6e36c3ee60937f4,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6426,47bd1f67a9ea76095a5d1f8f6c5bf268ecadeba7,/apt-cacher-ng/Dockerfile,"# grab tini for signal processing and zombie killing
"
6427,627dd6824df765dd178a784d8eede4612a5b9f37,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6428,ed110f4e091209668fffe18d693d4fa0781814ac,/certbot/Dockerfile,"# Executable not found: can't find the executable for the dialog-like program
"
6429,ed110f4e091209668fffe18d693d4fa0781814ac,/certbot/Dockerfile,"#VOLUME /etc/letsencrypt
"
6430,ed110f4e091209668fffe18d693d4fa0781814ac,/certbot/Dockerfile,"#VOLUME /var/log/letsencrypt

"
6431,5d7a451b25d1817bb0dbb912ce7e09a7c91b46fe,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6432,5d7a451b25d1817bb0dbb912ce7e09a7c91b46fe,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6433,5d7a451b25d1817bb0dbb912ce7e09a7c91b46fe,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6434,5d7a451b25d1817bb0dbb912ce7e09a7c91b46fe,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6435,5d7a451b25d1817bb0dbb912ce7e09a7c91b46fe,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6436,91457a97da61f5dca8907f55d7c8b65be6cfc1d0,/tinygo/Dockerfile,"# the .deb (as of 0.6.0) installs to /usr/local/tinygo but doesn't add ""tinygo"" to PATH
"
6437,91457a97da61f5dca8907f55d7c8b65be6cfc1d0,/tinygo/Dockerfile,"# https://tinygo.org/getting-started/linux/

# https://github.com/tinygo-org/tinygo/releases
"
6438,c731d30f76a765e35d79f92553a727bc531467b1,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6439,c9e98dbeceabcc079642964d5fa63fe3f7132ac1,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6440,c9e98dbeceabcc079642964d5fa63fe3f7132ac1,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6441,c9e98dbeceabcc079642964d5fa63fe3f7132ac1,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6442,c9e98dbeceabcc079642964d5fa63fe3f7132ac1,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6443,c9e98dbeceabcc079642964d5fa63fe3f7132ac1,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6444,b9ad2c256c324cc75481a426dd2a259c86444456,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6445,b9ad2c256c324cc75481a426dd2a259c86444456,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6446,b9ad2c256c324cc75481a426dd2a259c86444456,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6447,b9ad2c256c324cc75481a426dd2a259c86444456,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6448,b9ad2c256c324cc75481a426dd2a259c86444456,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6449,8348bc504bb75f2d1be29445e4558f17a311a3c5,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
6450,6b97c9776eef0b411bf8f0b8971addfd7635c1f8,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
6451,6e7e2afef3cc8f4ebf52bd2439cc812d477dda3e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6452,6e7e2afef3cc8f4ebf52bd2439cc812d477dda3e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6453,6e7e2afef3cc8f4ebf52bd2439cc812d477dda3e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6454,6e7e2afef3cc8f4ebf52bd2439cc812d477dda3e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6455,6e7e2afef3cc8f4ebf52bd2439cc812d477dda3e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6456,6ec484fcad3364f13417f423fcda78e29c2d6cf0,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6457,ecc1d36cd90a59622a1d8e67acca30a304ef5624,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6458,fd353e63810e09e76b6b3aa7e8bdf3960fd8ec62,/vultr-cli/Dockerfile,"# https://github.com/vultr/vultr-cli/releases
"
6459,b8250a46d48969625118914982979d8cc0ebce71,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
6460,5c67b6fc4454a6f496aab767bde88036d121638a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6461,5c67b6fc4454a6f496aab767bde88036d121638a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6462,5c67b6fc4454a6f496aab767bde88036d121638a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6463,5c67b6fc4454a6f496aab767bde88036d121638a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6464,5c67b6fc4454a6f496aab767bde88036d121638a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6465,5bf54a718c9a133f2f6a93dfbe99faa541a3725a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6466,5bf54a718c9a133f2f6a93dfbe99faa541a3725a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6467,5bf54a718c9a133f2f6a93dfbe99faa541a3725a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6468,5bf54a718c9a133f2f6a93dfbe99faa541a3725a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6469,5bf54a718c9a133f2f6a93dfbe99faa541a3725a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6470,c3747f9cae8ddea7ab20678f9080404566c77b8b,/certbot/Dockerfile,"# Executable not found: can't find the executable for the dialog-like program
"
6471,c3747f9cae8ddea7ab20678f9080404566c77b8b,/certbot/Dockerfile,"#VOLUME /etc/letsencrypt
"
6472,c3747f9cae8ddea7ab20678f9080404566c77b8b,/certbot/Dockerfile,"#VOLUME /var/log/letsencrypt

"
6473,5072bd76d8b74c0e430cff74c8ebbb01eefbc781,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6474,f84280ef47393b585e38e86994de77d605f11028,/containerd/Dockerfile,"# runtime deps
"
6475,f84280ef47393b585e38e86994de77d605f11028,/containerd/Dockerfile,"# https://github.com/opencontainers/runc/releases
"
6476,f84280ef47393b585e38e86994de77d605f11028,/containerd/Dockerfile,"# TODO .asc / .sha256sum
"
6477,f84280ef47393b585e38e86994de77d605f11028,/containerd/Dockerfile,"# https://github.com/containerd/containerd/releases
"
6478,add656bf362f68ec56f780276e470499372b2509,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
6479,add656bf362f68ec56f780276e470499372b2509,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
6480,add656bf362f68ec56f780276e470499372b2509,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
6481,add656bf362f68ec56f780276e470499372b2509,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
6482,add656bf362f68ec56f780276e470499372b2509,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
6483,c3ef9168f1dce53ebbc24f3e017153aaaff8e9f1,/debian/devel/Dockerfile,"# normal build deps
"
6484,c3ef9168f1dce53ebbc24f3e017153aaaff8e9f1,/debian/devel/Dockerfile,"# need deb-src for compiling packages
"
6485,c3ef9168f1dce53ebbc24f3e017153aaaff8e9f1,/debian/devel/Dockerfile,"# let's make apt list package versions, since those are handy during devel
"
6486,c3ef9168f1dce53ebbc24f3e017153aaaff8e9f1,/debian/devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
6487,c3ef9168f1dce53ebbc24f3e017153aaaff8e9f1,/debian/devel/Dockerfile,"# for ssh to debian hosts, let's make sure we know their fingerprints <3
"
6488,c3ef9168f1dce53ebbc24f3e017153aaaff8e9f1,/debian/devel/Dockerfile,"# make sure things are pretty
"
6489,c3ef9168f1dce53ebbc24f3e017153aaaff8e9f1,/debian/devel/Dockerfile,"#(force_color_prompt=yes)/\1/' ~/.bashrc

# quilt is much amaze: https://wiki.debian.org/UsingQuilt#Using_quilt_with_Debian_source_packages
"
6490,8ee083d05997d166a7fa822d00df351589ebb41c,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
6491,8ee083d05997d166a7fa822d00df351589ebb41c,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
6492,8ee083d05997d166a7fa822d00df351589ebb41c,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
6493,5611ddf36001ca35d63e65b5b35d061ab4518c29,/google-cloud-print-connector/Dockerfile,"# fetch dependencies
# format: import-path=strip-components=tarball-url
"
6494,5611ddf36001ca35d63e65b5b35d061ab4518c29,/google-cloud-print-connector/Dockerfile,"# https://github.com/coreos/go-systemd/releases
"
6495,5611ddf36001ca35d63e65b5b35d061ab4518c29,/google-cloud-print-connector/Dockerfile,"# https://github.com/satori/go.uuid/releases
"
6496,5611ddf36001ca35d63e65b5b35d061ab4518c29,/google-cloud-print-connector/Dockerfile,"# https://github.com/urfave/cli/releases
"
6497,5611ddf36001ca35d63e65b5b35d061ab4518c29,/google-cloud-print-connector/Dockerfile,"# https://github.com/golang/net/commits/master
"
6498,5611ddf36001ca35d63e65b5b35d061ab4518c29,/google-cloud-print-connector/Dockerfile,"# https://github.com/golang/oauth2/commits/master
"
6499,5611ddf36001ca35d63e65b5b35d061ab4518c29,/google-cloud-print-connector/Dockerfile,"# https://bazaar.launchpad.net/~chipaca/go-xdg/v0/files (""view revision"")
# https://bazaar.launchpad.net/~chipaca/go-xdg/v0/revision/10?start_revid=10 (""download tarball"")
"
6500,5611ddf36001ca35d63e65b5b35d061ab4518c29,/google-cloud-print-connector/Dockerfile,"#*=}""; dep=""${dep%=$strip}""; \
"
6501,5611ddf36001ca35d63e65b5b35d061ab4518c29,/google-cloud-print-connector/Dockerfile,"#*=}""; strip=""${strip%=$tarball}""; \
"
6502,5611ddf36001ca35d63e65b5b35d061ab4518c29,/google-cloud-print-connector/Dockerfile,"# https://github.com/google/cloud-print-connector/releases
"
6503,5611ddf36001ca35d63e65b5b35d061ab4518c29,/google-cloud-print-connector/Dockerfile,"#ENV GOOGLE_CLOUD_PRINT_CONNECTOR_VERSION d353d01
# https://github.com/google/cloud-print-connector/commit/d353d01
"
6504,130c97d5ddb367b5617751b288cecd3f657e5a57,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
6505,130c97d5ddb367b5617751b288cecd3f657e5a57,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
6506,130c97d5ddb367b5617751b288cecd3f657e5a57,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
6507,7e2a9707b57ae2be72f74d8edea42fbf6b025414,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6508,7e2a9707b57ae2be72f74d8edea42fbf6b025414,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6509,7e2a9707b57ae2be72f74d8edea42fbf6b025414,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6510,7e2a9707b57ae2be72f74d8edea42fbf6b025414,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6511,7e2a9707b57ae2be72f74d8edea42fbf6b025414,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6512,ae4b9237b18a673275bbc64d16226be8bcd85f15,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6513,ae4b9237b18a673275bbc64d16226be8bcd85f15,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6514,ae4b9237b18a673275bbc64d16226be8bcd85f15,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6515,ae4b9237b18a673275bbc64d16226be8bcd85f15,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6516,ae4b9237b18a673275bbc64d16226be8bcd85f15,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6517,3555ad5aff785c05e2014aa4178c5b765d0f5355,/kafka/Dockerfile,"# https://kafka.apache.org/downloads.html
"
6518,20eda41a17ff694fd39df2f48ff0f25741b04639,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6519,20eda41a17ff694fd39df2f48ff0f25741b04639,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6520,20eda41a17ff694fd39df2f48ff0f25741b04639,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6521,20eda41a17ff694fd39df2f48ff0f25741b04639,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6522,20eda41a17ff694fd39df2f48ff0f25741b04639,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6523,16e3530560a285675e3ef794d9ffa1e62ca7ed98,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6524,16e3530560a285675e3ef794d9ffa1e62ca7ed98,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6525,16e3530560a285675e3ef794d9ffa1e62ca7ed98,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6526,16e3530560a285675e3ef794d9ffa1e62ca7ed98,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6527,16e3530560a285675e3ef794d9ffa1e62ca7ed98,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6528,019e3dafeac4116b4547194b6452de9de76610dd,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6529,afbc60fd74b62663f05eef51a01e39a22022d6d4,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6530,afbc60fd74b62663f05eef51a01e39a22022d6d4,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6531,afbc60fd74b62663f05eef51a01e39a22022d6d4,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6532,afbc60fd74b62663f05eef51a01e39a22022d6d4,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6533,afbc60fd74b62663f05eef51a01e39a22022d6d4,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6534,ba21df78746f83b82960e500a8024fc165a33fa6,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
6535,a9e884b0803de7f237c2b5d36a5f0c23d14467a5,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6536,a9e884b0803de7f237c2b5d36a5f0c23d14467a5,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6537,a9e884b0803de7f237c2b5d36a5f0c23d14467a5,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6538,a9e884b0803de7f237c2b5d36a5f0c23d14467a5,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6539,a9e884b0803de7f237c2b5d36a5f0c23d14467a5,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6540,99861d35fc0dc5e2a3ac91300c435987673d564e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6541,99861d35fc0dc5e2a3ac91300c435987673d564e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6542,99861d35fc0dc5e2a3ac91300c435987673d564e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6543,99861d35fc0dc5e2a3ac91300c435987673d564e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6544,99861d35fc0dc5e2a3ac91300c435987673d564e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6545,27f10740fc307dd0f847e4857981a612be34ba0f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6546,27f10740fc307dd0f847e4857981a612be34ba0f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6547,27f10740fc307dd0f847e4857981a612be34ba0f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6548,27f10740fc307dd0f847e4857981a612be34ba0f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6549,27f10740fc307dd0f847e4857981a612be34ba0f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6550,b6144573262026530b06e311ac1b62e3081e4ecb,/network-toolbox/alpine/Dockerfile,"# TODO add ""nbtscan"" when we get to Alpine 3.11 (if it makes it out of edge)
# https://pkgs.alpinelinux.org/packages?name=nbtscan&branch=edge&arch=x86_64

"
6551,6c6ff5d797a8db57548d81da0a146817ae493501,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
6552,6c6ff5d797a8db57548d81da0a146817ae493501,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
6553,6c6ff5d797a8db57548d81da0a146817ae493501,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
6554,6c6ff5d797a8db57548d81da0a146817ae493501,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
6555,6c6ff5d797a8db57548d81da0a146817ae493501,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
6556,671d6fe58493eed2af553679b5d9315270e26900,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6557,671d6fe58493eed2af553679b5d9315270e26900,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6558,671d6fe58493eed2af553679b5d9315270e26900,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6559,671d6fe58493eed2af553679b5d9315270e26900,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6560,671d6fe58493eed2af553679b5d9315270e26900,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6561,0515241b31dd58ed8e6f4eb63311f160a0707014,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6562,0515241b31dd58ed8e6f4eb63311f160a0707014,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6563,0515241b31dd58ed8e6f4eb63311f160a0707014,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6564,0515241b31dd58ed8e6f4eb63311f160a0707014,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6565,0515241b31dd58ed8e6f4eb63311f160a0707014,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6566,e056e65a80ab89aa2e6e8e0a97b2a910a5a9c8de,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6567,81bd7e941e87d08790c95a104c33e1b54d1259f3,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
6568,81bd7e941e87d08790c95a104c33e1b54d1259f3,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
6569,81bd7e941e87d08790c95a104c33e1b54d1259f3,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
6570,2466479a462dd3d9abbf6f181967c5a5328f3db7,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
6571,e1bd7de6ca5f4d34a2cb9224e1521cf95b6e932e,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6572,6eb0341246f34d7f512167f91b674e6023013c1b,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6573,6eb0341246f34d7f512167f91b674e6023013c1b,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6574,6eb0341246f34d7f512167f91b674e6023013c1b,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6575,6eb0341246f34d7f512167f91b674e6023013c1b,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6576,6eb0341246f34d7f512167f91b674e6023013c1b,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6577,8f53c52c8ae91a5cdd82f4914560218b40fc52ae,/debian/ubuntu-devel/Dockerfile,"# let's make apt list package versions, since those are handy during devel
"
6578,8f53c52c8ae91a5cdd82f4914560218b40fc52ae,/debian/ubuntu-devel/Dockerfile,"# normal build deps
"
6579,8f53c52c8ae91a5cdd82f4914560218b40fc52ae,/debian/ubuntu-devel/Dockerfile,"# get dh-make-golang from Git since it's so rapidly changing
"
6580,8f53c52c8ae91a5cdd82f4914560218b40fc52ae,/debian/ubuntu-devel/Dockerfile,"# need deb-src for compiling packages
"
6581,8f53c52c8ae91a5cdd82f4914560218b40fc52ae,/debian/ubuntu-devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
6582,8f53c52c8ae91a5cdd82f4914560218b40fc52ae,/debian/ubuntu-devel/Dockerfile,"# for ssh to debian hosts, let's make sure we know their fingerprints <3
"
6583,8f53c52c8ae91a5cdd82f4914560218b40fc52ae,/debian/ubuntu-devel/Dockerfile,"# make sure things are pretty
"
6584,8f53c52c8ae91a5cdd82f4914560218b40fc52ae,/debian/ubuntu-devel/Dockerfile,"#(force_color_prompt=yes)/\1/' ~/.bashrc

# quilt is much amaze: https://wiki.debian.org/UsingQuilt#Using_quilt_with_Debian_source_packages
"
6585,8f53c52c8ae91a5cdd82f4914560218b40fc52ae,/debian/ubuntu-devel/Dockerfile,"# make sure pbuilder-dist uses a sane default mirror
"
6586,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/Dockerfile.template,"# much of this was gleaned from https://github.com/lxc/lxc/blob/lxc-0.8.0/templates/lxc-ubuntu.in
# and then heavily modified and hacked like crazy

# we're going to want this bad boy installed so we can connect :)
"
6587,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/Dockerfile.template,"# undo some leet hax of the base image
"
6588,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/Dockerfile.template,"# generate a nice UTF-8 locale for our use
"
6589,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/Dockerfile.template,"# remove some pointless services
"
6590,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/Dockerfile.template,"# /lib/init/fstab: cleared out for bare-bones Docker' > /lib/init/fstab

# small fix for SSH in 13.10 (that's harmless everywhere else)
"
6591,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/Dockerfile.template,"# let Upstart know it's in a container
"
6592,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/Dockerfile.template,"# set a cheap, simple password for great convenience
"
6593,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/Dockerfile.template,"# we can has SSH
"
6594,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/Dockerfile.template,"# prepare for takeoff
"
6595,774cdc2074ea02b413ada34e3466aa8ba33a41cc,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6596,87c3ef6e50dbc600b6775e1ca851d18b8a290d08,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6597,bab541eee2600239626c08aefc61a4bb8a0b9fc4,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6598,bab541eee2600239626c08aefc61a4bb8a0b9fc4,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6599,bab541eee2600239626c08aefc61a4bb8a0b9fc4,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6600,bab541eee2600239626c08aefc61a4bb8a0b9fc4,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6601,bab541eee2600239626c08aefc61a4bb8a0b9fc4,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6602,855d8fa15068fd51f8f42d59dc5b4859424f28b2,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6603,855d8fa15068fd51f8f42d59dc5b4859424f28b2,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6604,855d8fa15068fd51f8f42d59dc5b4859424f28b2,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6605,855d8fa15068fd51f8f42d59dc5b4859424f28b2,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6606,855d8fa15068fd51f8f42d59dc5b4859424f28b2,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6607,11602d45fd935ae346045097de9b345d8e2a66a1,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6608,11602d45fd935ae346045097de9b345d8e2a66a1,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6609,11602d45fd935ae346045097de9b345d8e2a66a1,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6610,11602d45fd935ae346045097de9b345d8e2a66a1,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6611,11602d45fd935ae346045097de9b345d8e2a66a1,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6612,608c10dca9eb4d2a413ec95aab84275225c7f523,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
6613,e24f02a877e65a800d108a53b1a3933672d6af90,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
6614,e24f02a877e65a800d108a53b1a3933672d6af90,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
"
6615,f42eba34e1c4f45c169193126cf965391da8ffe3,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6616,f42eba34e1c4f45c169193126cf965391da8ffe3,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6617,f42eba34e1c4f45c169193126cf965391da8ffe3,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6618,f42eba34e1c4f45c169193126cf965391da8ffe3,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6619,f42eba34e1c4f45c169193126cf965391da8ffe3,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6620,638419eadc962691d519852cce0cffbb35b51298,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6621,638419eadc962691d519852cce0cffbb35b51298,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6622,638419eadc962691d519852cce0cffbb35b51298,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6623,638419eadc962691d519852cce0cffbb35b51298,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6624,638419eadc962691d519852cce0cffbb35b51298,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6625,98df9cbde165576bf6bee980487d9fc1fd51e320,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
6626,af8839282d3364de82f6a7fc1ed17526216b0cff,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6627,0730449d5a13f92aeecadc2686f27dc2e446082d,/network-toolbox/debian/Dockerfile,"# dangit, wireshark-common!  *shakes fist*
"
6628,80ff4a8190d78feb83ca94b907e266cadbab8da2,/bash/3.2/Dockerfile,"# gpg: key 64EA74AB: public key ""Chet Ramey <chet@cwru.edu>"" imported
"
6629,80ff4a8190d78feb83ca94b907e266cadbab8da2,/bash/3.2/Dockerfile,"# https://ftp.gnu.org/gnu/bash/?C=M;O=D
"
6630,80ff4a8190d78feb83ca94b907e266cadbab8da2,/bash/3.2/Dockerfile,"# https://ftp.gnu.org/gnu/bash/bash-3.2-patches/?C=M;O=D
"
6631,80ff4a8190d78feb83ca94b907e266cadbab8da2,/bash/3.2/Dockerfile,"# prefixed with ""_"" since ""$BASH..."" have meaning in Bash parlance

"
6632,80ff4a8190d78feb83ca94b907e266cadbab8da2,/bash/3.2/Dockerfile,"# parallel jobs workaround borrowed from Alpine :)
"
6633,80ff4a8190d78feb83ca94b907e266cadbab8da2,/bash/3.2/Dockerfile,"# delete a few installed bits for smaller image size
"
6634,ef9cf9438d12236072488bc6768c0504d53636ba,/google-cloud-print-connector/Dockerfile,"# fetch dependencies
# format: import-path=strip-components=tarball-url
"
6635,ef9cf9438d12236072488bc6768c0504d53636ba,/google-cloud-print-connector/Dockerfile,"# https://github.com/coreos/go-systemd/releases
"
6636,ef9cf9438d12236072488bc6768c0504d53636ba,/google-cloud-print-connector/Dockerfile,"# https://github.com/satori/go.uuid/releases
# (https://github.com/satori/go.uuid/commit/0ef6afb2f6cdd6cdaeee3885a95099c63f18fc8c -- hopefully we'll get a newer release than v1.2.0 soonish)
"
6637,ef9cf9438d12236072488bc6768c0504d53636ba,/google-cloud-print-connector/Dockerfile,"# https://github.com/urfave/cli/releases
"
6638,ef9cf9438d12236072488bc6768c0504d53636ba,/google-cloud-print-connector/Dockerfile,"# https://github.com/golang/net/commits/master
"
6639,ef9cf9438d12236072488bc6768c0504d53636ba,/google-cloud-print-connector/Dockerfile,"# https://github.com/golang/oauth2/commits/master
"
6640,ef9cf9438d12236072488bc6768c0504d53636ba,/google-cloud-print-connector/Dockerfile,"# https://bazaar.launchpad.net/~chipaca/go-xdg/v0/files (""view revision"")
# https://bazaar.launchpad.net/~chipaca/go-xdg/v0/revision/10?start_revid=10 (""download tarball"")
"
6641,ef9cf9438d12236072488bc6768c0504d53636ba,/google-cloud-print-connector/Dockerfile,"#*=}""; dep=""${dep%=$strip}""; \
"
6642,ef9cf9438d12236072488bc6768c0504d53636ba,/google-cloud-print-connector/Dockerfile,"#*=}""; strip=""${strip%=$tarball}""; \
"
6643,ef9cf9438d12236072488bc6768c0504d53636ba,/google-cloud-print-connector/Dockerfile,"# https://github.com/google/cloud-print-connector/releases
"
6644,387da35f43d148bc8e318712502c9886f4b32dff,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6645,387da35f43d148bc8e318712502c9886f4b32dff,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6646,387da35f43d148bc8e318712502c9886f4b32dff,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6647,387da35f43d148bc8e318712502c9886f4b32dff,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6648,387da35f43d148bc8e318712502c9886f4b32dff,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6649,95aef5802557ad25b2e39713cf8f176942a6772a,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
6650,95aef5802557ad25b2e39713cf8f176942a6772a,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
6651,95aef5802557ad25b2e39713cf8f176942a6772a,/jenkins/Dockerfile,"# workaround ""apt-key adv --recv-keys"" hanging in stretch and above
"
6652,90aedceabf022231205123de6c5d0403809e190a,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6653,89ef27de1d575c0c031b682b5ccfe6778f85b761,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6654,afbc60fd74b62663f05eef51a01e39a22022d6d4,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6655,7e227e2ca062b32eb1f098724d8c70c2c7f6fe2e,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
6656,7e227e2ca062b32eb1f098724d8c70c2c7f6fe2e,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
6657,7e227e2ca062b32eb1f098724d8c70c2c7f6fe2e,/plex/media-server/Dockerfile,"# the published deb has pre/post-inst scripts that don't really apply to Docker (so we'll skip ""install"" entirely)
# (as of 1.18.5.2309, they have bugs around Docker detection, which is mostly for avoiding init behavior)
"
6658,7e227e2ca062b32eb1f098724d8c70c2c7f6fe2e,/plex/media-server/Dockerfile,"#	apt-get update; \
#	apt-get install /tmp/plex.deb; \
#	rm -rf /var/lib/apt/lists/*; \
"
6659,5ec89c6f5ac25040733739f34bab266c1618f83b,/network-toolbox/alpine/Dockerfile,"# TODO add ""nbtscan"" when we get to Alpine 3.9 (if it makes it out of edge for 3.9)

"
6660,bc02ee1af3ddd77ede2498d95d340a9de7feb176,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6661,d151a31169c17a9aefaae44bffb580b0e3132424,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
6662,263c6df064aed242fbd000e53887e62b693fd784,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
6663,263c6df064aed242fbd000e53887e62b693fd784,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
6664,263c6df064aed242fbd000e53887e62b693fd784,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
6665,fd49d14b89d473bc4c509c4f4629be603c88d1e1,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6666,fd49d14b89d473bc4c509c4f4629be603c88d1e1,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6667,fd49d14b89d473bc4c509c4f4629be603c88d1e1,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6668,fd49d14b89d473bc4c509c4f4629be603c88d1e1,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6669,fd49d14b89d473bc4c509c4f4629be603c88d1e1,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6670,40e728409e8c10696d6605cb712edb330a8eab18,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6671,40e728409e8c10696d6605cb712edb330a8eab18,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6672,40e728409e8c10696d6605cb712edb330a8eab18,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6673,40e728409e8c10696d6605cb712edb330a8eab18,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6674,40e728409e8c10696d6605cb712edb330a8eab18,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6675,30855cfdef3f7ea7e33e56ea8fad2e45df0064a1,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
6676,30855cfdef3f7ea7e33e56ea8fad2e45df0064a1,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
6677,30855cfdef3f7ea7e33e56ea8fad2e45df0064a1,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
6678,30855cfdef3f7ea7e33e56ea8fad2e45df0064a1,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
6679,30855cfdef3f7ea7e33e56ea8fad2e45df0064a1,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
6680,c1610b96ffcea268495de6bc01aa9d72c59f9392,/prometheus/Dockerfile,"# https://github.com/prometheus/prometheus/releases
"
6681,57916a91748a5f96f1fa6840cdfc35971beca2a6,/gmpydl/Dockerfile,"# https://pypi.org/project/gmusicapi/
"
6682,57916a91748a5f96f1fa6840cdfc35971beca2a6,/gmpydl/Dockerfile,"# https://github.com/stevenewbs/gmpydl/commits/master
# https://github.com/stevenewbs/gmpydl/releases
"
6683,42402fd8187dbddb2f0ca8135c22121260070d16,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6684,42402fd8187dbddb2f0ca8135c22121260070d16,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6685,42402fd8187dbddb2f0ca8135c22121260070d16,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6686,42402fd8187dbddb2f0ca8135c22121260070d16,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6687,42402fd8187dbddb2f0ca8135c22121260070d16,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6688,bec18512011904f89e3c4c2b1e4106adec6eb80d,/xen-orchestra/Dockerfile,"# see https://xen-orchestra.com/docs/from_the_sources.html

"
6689,bec18512011904f89e3c4c2b1e4106adec6eb80d,/xen-orchestra/Dockerfile,"# https://github.com/vatesfr/xen-orchestra/releases
"
6690,bec18512011904f89e3c4c2b1e4106adec6eb80d,/xen-orchestra/Dockerfile,"# https://github.com/yarnpkg/yarn/issues/6312 -- error https://registry.yarnpkg.com/flatmap-stream/-/flatmap-stream-0.1.1.tgz: Extracting tar content of undefined failed, the file appears to be corrupt: ""Unexpected end of data""
"
6691,bec18512011904f89e3c4c2b1e4106adec6eb80d,/xen-orchestra/Dockerfile,"#'/': '/path/to/xo-web/dist/'!'/': '../xo-web/dist/'!"" \
"
6692,bec18512011904f89e3c4c2b1e4106adec6eb80d,/xen-orchestra/Dockerfile,"#uri: redis://.*!uri: 'redis://redis:6379'!"" \
"
6693,291449b9d10911a54c0483f60850d37ae9b2725e,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6694,8397cecb1297f11416fe87c202681e6e2819d0ad,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6695,8397cecb1297f11416fe87c202681e6e2819d0ad,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6696,8397cecb1297f11416fe87c202681e6e2819d0ad,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6697,8397cecb1297f11416fe87c202681e6e2819d0ad,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6698,8397cecb1297f11416fe87c202681e6e2819d0ad,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6699,db45c5cf13126f98da109412ded452e2047e54cf,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6700,e9344783aa8ffd95f2b748c834645ef9d0b1e45b,/makemkv/Dockerfile,"# FPL_MainFeature detection only seemed to work with OpenJDK 9 (8 was insufficient)
"
6701,e9344783aa8ffd95f2b748c834645ef9d0b1e45b,/makemkv/Dockerfile,"# This disc requires Java runtime (JRE), but none was found. Certain functions will fail, please install Java. See http://www.makemkv.com/bdjava/ for details.
"
6702,e9344783aa8ffd95f2b748c834645ef9d0b1e45b,/makemkv/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
6703,e9344783aa8ffd95f2b748c834645ef9d0b1e45b,/makemkv/Dockerfile,"# http://www.makemkv.com/forum2/viewtopic.php?f=3&t=224
"
6704,e9344783aa8ffd95f2b748c834645ef9d0b1e45b,/makemkv/Dockerfile,"# beta code: http://www.makemkv.com/forum2/viewtopic.php?f=5&t=1053
"
6705,e9344783aa8ffd95f2b748c834645ef9d0b1e45b,/makemkv/Dockerfile,"# pub   dsa2048 2017-05-26 [SC]
#       2ECF 2330 5F1F C0B3 2001  6733 94E3 083A 1804 2697
# uid           [ unknown] MakeMKV (signature) <support@makemkv.com>
"
6706,ab9eaaa9f95b7b98c206929afc0cd547613050bd,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6707,ab9eaaa9f95b7b98c206929afc0cd547613050bd,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6708,ab9eaaa9f95b7b98c206929afc0cd547613050bd,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6709,ab9eaaa9f95b7b98c206929afc0cd547613050bd,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6710,ab9eaaa9f95b7b98c206929afc0cd547613050bd,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6711,fe5b9a8b28e652fa7709deba5b42cb4f7b6276f2,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6712,ba7f83a99e18000475accf7caf785285d682ea26,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6713,6d63a61871677c29630e6010aa7842e5d1202915,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6714,6d63a61871677c29630e6010aa7842e5d1202915,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6715,6d63a61871677c29630e6010aa7842e5d1202915,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6716,6d63a61871677c29630e6010aa7842e5d1202915,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6717,6d63a61871677c29630e6010aa7842e5d1202915,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6718,a4e8152f6afbe8ccbf65871882ff425a850921db,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6719,a4e8152f6afbe8ccbf65871882ff425a850921db,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6720,a4e8152f6afbe8ccbf65871882ff425a850921db,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6721,a4e8152f6afbe8ccbf65871882ff425a850921db,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6722,a4e8152f6afbe8ccbf65871882ff425a850921db,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6723,dccef11024ffd7f4fa2d22f93e404e4210a61008,/steam/Dockerfile,"# zenity is used during early startup for dialogs and progress bars
"
6724,dccef11024ffd7f4fa2d22f93e404e4210a61008,/steam/Dockerfile,"# wget is used for uploading crash dumps
"
6725,dccef11024ffd7f4fa2d22f93e404e4210a61008,/steam/Dockerfile,"# needed for ""dbus-launch"" (not sure what that's used for)
"
6726,dccef11024ffd7f4fa2d22f93e404e4210a61008,/steam/Dockerfile,"# needed for ""localedef"" below
"
6727,dccef11024ffd7f4fa2d22f93e404e4210a61008,/steam/Dockerfile,"# WARNING: setlocale('en_US.UTF-8') failed, using locale: 'C'. International characters may not work.
"
6728,dccef11024ffd7f4fa2d22f93e404e4210a61008,/steam/Dockerfile,"# create a default ""steam"" user for running the container without root privileges
"
6729,dccef11024ffd7f4fa2d22f93e404e4210a61008,/steam/Dockerfile,"# https://github.com/ValveSoftware/steam-for-linux#getting-started
# http://media.steampowered.com/client/installer/steam.deb redirects to https://repo.steampowered.com/steam/archive/precise/steam_latest.deb
# https://repo.steampowered.com/steam/archive/precise/?C=M&O=D
# https://repo.steampowered.com/steam/archive/precise/?C=N&O=D
# ""steam_latest.deb"" is a symlink to ""steam-launcher_X.X.X.X_all.deb""
# https://repo.steampowered.com/steam/dists/precise/steam/binary-amd64/Packages (current version, current SHA256)
"
6730,dccef11024ffd7f4fa2d22f93e404e4210a61008,/steam/Dockerfile,"# let's head off a few of the things steam will want to install immediately
"
6731,dccef11024ffd7f4fa2d22f93e404e4210a61008,/steam/Dockerfile,"# installing libfontconfig1 from Ubuntu stops some runtime-related fontconfig errors/warnings (https://github.com/ValveSoftware/steam-for-linux/issues/3307#issuecomment-506650268)
"
6732,dccef11024ffd7f4fa2d22f93e404e4210a61008,/steam/Dockerfile,"# useful when using ""--env DEBUGGER=gdb"" or ""--env DEBUGGER=strace"" to debug steam startup issues
#RUN set -eux; \
#	apt-get update; \
#	apt-get install -y --no-install-recommends \
#		gdb \
#		strace \
#	; \
#	rm -rf /var/lib/apt/lists/*

"
6733,cac420e4b61469caacfb99947d45f320ffe75019,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6734,cac420e4b61469caacfb99947d45f320ffe75019,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6735,cac420e4b61469caacfb99947d45f320ffe75019,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6736,cac420e4b61469caacfb99947d45f320ffe75019,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6737,cac420e4b61469caacfb99947d45f320ffe75019,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6738,4c2a17bf781c5fb5543afa1f5c6c0d440077178b,/handbrake/Dockerfile,"# https://handbrake.fr/downloads.php
# https://launchpad.net/~stebbins/+archive/ubuntu/handbrake-releases
"
6739,fda7a0db94f16fb463959ed44f123ae520a8c423,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6740,2ce23b58d2e875217aa5389fbc664f947beef0fd,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6741,2ce23b58d2e875217aa5389fbc664f947beef0fd,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6742,2ce23b58d2e875217aa5389fbc664f947beef0fd,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6743,2ce23b58d2e875217aa5389fbc664f947beef0fd,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6744,2ce23b58d2e875217aa5389fbc664f947beef0fd,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6745,924d3bc607044dfac90dff7f52fc0f17c770adcd,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6746,924d3bc607044dfac90dff7f52fc0f17c770adcd,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6747,924d3bc607044dfac90dff7f52fc0f17c770adcd,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6748,924d3bc607044dfac90dff7f52fc0f17c770adcd,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6749,924d3bc607044dfac90dff7f52fc0f17c770adcd,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6750,9621ded67a11c8c44eaf96c62fca429462c65870,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
6751,9621ded67a11c8c44eaf96c62fca429462c65870,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
6752,9621ded67a11c8c44eaf96c62fca429462c65870,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
6753,9621ded67a11c8c44eaf96c62fca429462c65870,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
6754,9621ded67a11c8c44eaf96c62fca429462c65870,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
6755,8d26a641b3ada81edbf03c178190af88eea4805f,/apt-cacher-ng/Dockerfile,"# grab tini for signal processing and zombie killing
"
6756,b342ee74189a50f9b0ec3aab8da1f6e506f97b7a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6757,b342ee74189a50f9b0ec3aab8da1f6e506f97b7a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6758,b342ee74189a50f9b0ec3aab8da1f6e506f97b7a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6759,b342ee74189a50f9b0ec3aab8da1f6e506f97b7a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6760,b342ee74189a50f9b0ec3aab8da1f6e506f97b7a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6761,d47dc9327d3ca880a45d5e2a5246d3c215aca145,/google-cloud-print-connector/Dockerfile,"# fetch dependencies
# format: import-path=strip-components=tarball-url
"
6762,d47dc9327d3ca880a45d5e2a5246d3c215aca145,/google-cloud-print-connector/Dockerfile,"# https://github.com/coreos/go-systemd/releases
"
6763,d47dc9327d3ca880a45d5e2a5246d3c215aca145,/google-cloud-print-connector/Dockerfile,"# https://github.com/satori/go.uuid/releases
# (https://github.com/satori/go.uuid/commit/0ef6afb2f6cdd6cdaeee3885a95099c63f18fc8c -- hopefully we'll get a newer release than v1.2.0 soonish)
"
6764,d47dc9327d3ca880a45d5e2a5246d3c215aca145,/google-cloud-print-connector/Dockerfile,"# https://github.com/urfave/cli/releases
"
6765,d47dc9327d3ca880a45d5e2a5246d3c215aca145,/google-cloud-print-connector/Dockerfile,"# https://github.com/golang/net/commits/master
"
6766,d47dc9327d3ca880a45d5e2a5246d3c215aca145,/google-cloud-print-connector/Dockerfile,"# https://github.com/golang/oauth2/commits/master
"
6767,d47dc9327d3ca880a45d5e2a5246d3c215aca145,/google-cloud-print-connector/Dockerfile,"# https://bazaar.launchpad.net/~chipaca/go-xdg/v0/files (""view revision"")
# https://bazaar.launchpad.net/~chipaca/go-xdg/v0/revision/10?start_revid=10 (""download tarball"")
"
6768,d47dc9327d3ca880a45d5e2a5246d3c215aca145,/google-cloud-print-connector/Dockerfile,"#*=}""; dep=""${dep%=$strip}""; \
"
6769,d47dc9327d3ca880a45d5e2a5246d3c215aca145,/google-cloud-print-connector/Dockerfile,"#*=}""; strip=""${strip%=$tarball}""; \
"
6770,d47dc9327d3ca880a45d5e2a5246d3c215aca145,/google-cloud-print-connector/Dockerfile,"# https://github.com/google/cloud-print-connector/releases
"
6771,569ff6eb8da258997f0f5b25475ff0f3d20f3c3b,/nylas/sync-engine/Dockerfile,"# tell pynacl to use system libsodium
"
6772,569ff6eb8da258997f0f5b25475ff0f3d20f3c3b,/nylas/sync-engine/Dockerfile,"#ENV SYNC_VERSION v0.3.0 # 2014 :'(
"
6773,569ff6eb8da258997f0f5b25475ff0f3d20f3c3b,/nylas/sync-engine/Dockerfile,"# https://github.com/eventable/vobject/issues/2
"
6774,569ff6eb8da258997f0f5b25475ff0f3d20f3c3b,/nylas/sync-engine/Dockerfile,"# ugh, NameError: name 'PROTOCOL_SSLv3' is not defined
"
6775,569ff6eb8da258997f0f5b25475ff0f3d20f3c3b,/nylas/sync-engine/Dockerfile," # TODO inbox-api or inbox-start
"
6776,c18ee35b3930208073f5d2eab05eee410104608e,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
6777,1c8615545aeb05ad39e722784e733b644eef66a9,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6778,2d4245b6106bd0356937a7a2aa0d5f8f55f3e7c6,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6779,2d4245b6106bd0356937a7a2aa0d5f8f55f3e7c6,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6780,2d4245b6106bd0356937a7a2aa0d5f8f55f3e7c6,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6781,2d4245b6106bd0356937a7a2aa0d5f8f55f3e7c6,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6782,2d4245b6106bd0356937a7a2aa0d5f8f55f3e7c6,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6783,55c7ecf67dcdf72249ef87400e31cea15071bf47,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6784,7af873e468a1a4e38acefe00df51a019ba45e148,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6785,4f60c1140542729bcc61ac53239778a602720ec3,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6786,4f60c1140542729bcc61ac53239778a602720ec3,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6787,4f60c1140542729bcc61ac53239778a602720ec3,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6788,4f60c1140542729bcc61ac53239778a602720ec3,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6789,4f60c1140542729bcc61ac53239778a602720ec3,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6790,5c891e6ec0fad445e2edf8a62396fd5a8ea96088,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6791,5c891e6ec0fad445e2edf8a62396fd5a8ea96088,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6792,5c891e6ec0fad445e2edf8a62396fd5a8ea96088,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6793,5c891e6ec0fad445e2edf8a62396fd5a8ea96088,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6794,5c891e6ec0fad445e2edf8a62396fd5a8ea96088,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6795,71a4e2db4348d1c87de20e86777647799dd373bc,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6796,71a4e2db4348d1c87de20e86777647799dd373bc,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6797,71a4e2db4348d1c87de20e86777647799dd373bc,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6798,71a4e2db4348d1c87de20e86777647799dd373bc,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6799,71a4e2db4348d1c87de20e86777647799dd373bc,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6800,12be212ad2942a0a6885f607bddfad0690cec078,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6801,12be212ad2942a0a6885f607bddfad0690cec078,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6802,12be212ad2942a0a6885f607bddfad0690cec078,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6803,12be212ad2942a0a6885f607bddfad0690cec078,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6804,12be212ad2942a0a6885f607bddfad0690cec078,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6805,4bc9e1a50ee138a12cef4333288ef4d8a1c16344,/network-toolbox/alpine/Dockerfile,"# TODO add ""nbtscan"" when we get to Alpine 3.10 (if it makes it out of edge for 3.10)

"
6806,4ae2b85f07236a0597a4b1d6992a11e9e2f8f7be,/docker-master/dind/Dockerfile,"# https://github.com/docker/docker/blob/master/project/PACKAGERS.md#runtime-dependencies
"
6807,4ae2b85f07236a0597a4b1d6992a11e9e2f8f7be,/docker-master/dind/Dockerfile,"# pigz: https://github.com/moby/moby/pull/35697 (faster gzip implementation)
"
6808,4ae2b85f07236a0597a4b1d6992a11e9e2f8f7be,/docker-master/dind/Dockerfile,"# only install zfs if it's available for the current architecture
# https://git.alpinelinux.org/cgit/aports/tree/main/zfs/APKBUILD?h=3.6-stable#n9 (""all !armhf !ppc64le"" as of 2017-11-01)
# ""apk info XYZ"" exits with a zero exit code but no output when the package exists but not for this arch
"
6809,4ae2b85f07236a0597a4b1d6992a11e9e2f8f7be,/docker-master/dind/Dockerfile,"# TODO aufs-tools

# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
"
6810,4ae2b85f07236a0597a4b1d6992a11e9e2f8f7be,/docker-master/dind/Dockerfile,"# https://github.com/docker/docker/tree/master/hack/dind
"
6811,e8d23c4ed71b3c6a56103beb59799aac657fe9a3,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
6812,e8d23c4ed71b3c6a56103beb59799aac657fe9a3,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
6813,e8d23c4ed71b3c6a56103beb59799aac657fe9a3,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
6814,e8d23c4ed71b3c6a56103beb59799aac657fe9a3,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
6815,e8d23c4ed71b3c6a56103beb59799aac657fe9a3,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
6816,f808f780de6760bc7a9aab0209908337239ac134,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6817,f808f780de6760bc7a9aab0209908337239ac134,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6818,f808f780de6760bc7a9aab0209908337239ac134,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6819,f808f780de6760bc7a9aab0209908337239ac134,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6820,f808f780de6760bc7a9aab0209908337239ac134,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6821,8b2200c6618bf2e6dd0ca06a8cf14f4800d9d746,/certbot/Dockerfile,"# Executable not found: can't find the executable for the dialog-like program
"
6822,8b2200c6618bf2e6dd0ca06a8cf14f4800d9d746,/certbot/Dockerfile,"#VOLUME /etc/letsencrypt

"
6823,a6a54908654cf1b71e017edbf57e886a8e58a8dd,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6824,e91e346cd451a0ade2e993a31cb9bf6cdc6bffe4,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6825,e91e346cd451a0ade2e993a31cb9bf6cdc6bffe4,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6826,e91e346cd451a0ade2e993a31cb9bf6cdc6bffe4,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6827,e91e346cd451a0ade2e993a31cb9bf6cdc6bffe4,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6828,e91e346cd451a0ade2e993a31cb9bf6cdc6bffe4,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6829,ad11c20be75175d214165a75f01c366b010f08d8,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6830,ad11c20be75175d214165a75f01c366b010f08d8,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6831,ad11c20be75175d214165a75f01c366b010f08d8,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6832,ad11c20be75175d214165a75f01c366b010f08d8,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6833,ad11c20be75175d214165a75f01c366b010f08d8,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6834,52808176d508ba2566bb6874a006b77e61130e4f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6835,52808176d508ba2566bb6874a006b77e61130e4f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6836,52808176d508ba2566bb6874a006b77e61130e4f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6837,52808176d508ba2566bb6874a006b77e61130e4f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6838,52808176d508ba2566bb6874a006b77e61130e4f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6839,c590fb33e69194f8ef52a83a883e5c74ce748804,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6840,c590fb33e69194f8ef52a83a883e5c74ce748804,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6841,c590fb33e69194f8ef52a83a883e5c74ce748804,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6842,c590fb33e69194f8ef52a83a883e5c74ce748804,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6843,c590fb33e69194f8ef52a83a883e5c74ce748804,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6844,59b7cb4b0b92ee19fec10ea7bb4ef6c1dca11626,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6845,59b7cb4b0b92ee19fec10ea7bb4ef6c1dca11626,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6846,59b7cb4b0b92ee19fec10ea7bb4ef6c1dca11626,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6847,59b7cb4b0b92ee19fec10ea7bb4ef6c1dca11626,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6848,59b7cb4b0b92ee19fec10ea7bb4ef6c1dca11626,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6849,48fd3664e2ea5ee07cb44e4aba693a4f98e4787f,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
6850,48fd3664e2ea5ee07cb44e4aba693a4f98e4787f,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
6851,48fd3664e2ea5ee07cb44e4aba693a4f98e4787f,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
6852,48fd3664e2ea5ee07cb44e4aba693a4f98e4787f,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
6853,48fd3664e2ea5ee07cb44e4aba693a4f98e4787f,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
6854,5efda9f324d0ed43d84ea1079e8f9cd16af4b278,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6855,5efda9f324d0ed43d84ea1079e8f9cd16af4b278,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6856,5efda9f324d0ed43d84ea1079e8f9cd16af4b278,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6857,5efda9f324d0ed43d84ea1079e8f9cd16af4b278,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6858,5efda9f324d0ed43d84ea1079e8f9cd16af4b278,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6859,9d198d06feba57cd6e67b7af4133601319291a0e,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6860,a01a28ff89b0ffac82961d2ab0c641848aea46ee,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6861,a01a28ff89b0ffac82961d2ab0c641848aea46ee,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6862,a01a28ff89b0ffac82961d2ab0c641848aea46ee,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6863,a01a28ff89b0ffac82961d2ab0c641848aea46ee,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6864,a01a28ff89b0ffac82961d2ab0c641848aea46ee,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6865,89d647c71941a6aa16ac65e4f6d301daf474f87c,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6866,89d647c71941a6aa16ac65e4f6d301daf474f87c,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6867,89d647c71941a6aa16ac65e4f6d301daf474f87c,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6868,89d647c71941a6aa16ac65e4f6d301daf474f87c,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6869,89d647c71941a6aa16ac65e4f6d301daf474f87c,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6870,c38013d7313e17bfa1e0d187d850d58889e5b2ca,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
6871,c38013d7313e17bfa1e0d187d850d58889e5b2ca,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
"
6872,8c93250f43183de5253311cc159acc368cdaeac2,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
6873,8c93250f43183de5253311cc159acc368cdaeac2,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
6874,8c93250f43183de5253311cc159acc368cdaeac2,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
6875,5078d9ea965e684b753d32086753b37ca85a4bc5,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6876,5078d9ea965e684b753d32086753b37ca85a4bc5,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6877,5078d9ea965e684b753d32086753b37ca85a4bc5,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6878,5078d9ea965e684b753d32086753b37ca85a4bc5,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6879,5078d9ea965e684b753d32086753b37ca85a4bc5,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6880,b523f44a5fe86f40a6460096059da36f431a7e60,/skype/Dockerfile,"# see https://repo.skype.com

"
6881,b523f44a5fe86f40a6460096059da36f431a7e60,/skype/Dockerfile,"# wget is invoked by skypeforlinux for crash reports
"
6882,b523f44a5fe86f40a6460096059da36f431a7e60,/skype/Dockerfile,"# https://repo.skype.com/data/SKYPE-GPG-KEY
"
6883,b523f44a5fe86f40a6460096059da36f431a7e60,/skype/Dockerfile,"# pub   2048R/DF7587C3 2016-06-22 [expires: 2021-06-21]
#       Key fingerprint = D404 0146 BE39 7250 9FD5  7FC7 1F30 45A5 DF75 87C3
# uid                  Skype Linux Client Repository <se-um@microsoft.com>
# sub   2048R/A4EBB320 2016-06-22 [expires: 2021-06-21]
"
6884,c3747f9cae8ddea7ab20678f9080404566c77b8b,/diffoscope/Dockerfile,"# xxd (xxd not available in path. Falling back to Python hexlify.)
"
6885,c3747f9cae8ddea7ab20678f9080404566c77b8b,/diffoscope/Dockerfile,"# readelf ('readelf' not available in path. Falling back to binary comparison.)
"
6886,c3747f9cae8ddea7ab20678f9080404566c77b8b,/diffoscope/Dockerfile,"# for ""diffoscope --progress""
"
6887,ea436ae814d27c907db77a079d5ab27fa7b8158b,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6888,ea436ae814d27c907db77a079d5ab27fa7b8158b,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6889,ea436ae814d27c907db77a079d5ab27fa7b8158b,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6890,ea436ae814d27c907db77a079d5ab27fa7b8158b,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6891,ea436ae814d27c907db77a079d5ab27fa7b8158b,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6892,f76625b25aacf0f04dd9f189b22db64411dbad10,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
6893,f76625b25aacf0f04dd9f189b22db64411dbad10,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
6894,8d26a641b3ada81edbf03c178190af88eea4805f,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
6895,8d26a641b3ada81edbf03c178190af88eea4805f,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
6896,8d26a641b3ada81edbf03c178190af88eea4805f,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
6897,8d26a641b3ada81edbf03c178190af88eea4805f,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
6898,8d26a641b3ada81edbf03c178190af88eea4805f,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
6899,67f35fb5415a6749eda6a8ce53cd54850e7204d2,/jenkins/lts/Dockerfile,"# grab gosu for easy step-down from root
"
6900,67f35fb5415a6749eda6a8ce53cd54850e7204d2,/jenkins/lts/Dockerfile,"# grab tini for signal processing and zombie killing
"
6901,67f35fb5415a6749eda6a8ce53cd54850e7204d2,/jenkins/lts/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
6902,f29962219b71baf9424ddf655fae1772eb794093,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6903,f29962219b71baf9424ddf655fae1772eb794093,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6904,f29962219b71baf9424ddf655fae1772eb794093,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6905,f29962219b71baf9424ddf655fae1772eb794093,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6906,f29962219b71baf9424ddf655fae1772eb794093,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6907,44284689dfcf38788c87d6b6cf1811113f4ce670,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6908,44284689dfcf38788c87d6b6cf1811113f4ce670,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6909,44284689dfcf38788c87d6b6cf1811113f4ce670,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6910,44284689dfcf38788c87d6b6cf1811113f4ce670,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6911,44284689dfcf38788c87d6b6cf1811113f4ce670,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6912,7bb7b72637a7c79aefe7e93ba98bb3f1fdeeaeeb,/google-musicmanager/Dockerfile,"# https://www.google.com/linuxrepositories/
"
6913,7bb7b72637a7c79aefe7e93ba98bb3f1fdeeaeeb,/google-musicmanager/Dockerfile,"# pub   rsa4096 2016-04-12 [SC]
#       EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796
# uid           [ unknown] Google Inc. (Linux Packages Signing Authority) <linux-packages-keymaster@google.com>
# sub   rsa4096 2016-04-12 [S] [expires: 2019-04-12]
"
6914,7bb7b72637a7c79aefe7e93ba98bb3f1fdeeaeeb,/google-musicmanager/Dockerfile,"# pub   dsa1024 2007-03-08 [SC]
#       4CCA 1EAF 950C EE4A B839  76DC A040 830F 7FAC 5991
# uid           [ unknown] Google, Inc. Linux Package Signing Key <linux-packages-keymaster@google.com>
# sub   elg2048 2007-03-08 [E]
#		4CCA1EAF950CEE4AB83976DCA040830F7FAC5991

"
6915,7bb7b72637a7c79aefe7e93ba98bb3f1fdeeaeeb,/google-musicmanager/Dockerfile,"# only stretch+ supports --armor in trusted.gpg.asc
#	gpg --batch --export --armor $GPG_KEYS | tee /etc/apt/trusted.gpg.d/google.gpg.asc; \
"
6916,37a9ceec83dd306f904f340809d97b89fea335c8,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
6917,c8c95b0e130d480b6203957a3be8b85dc238ede4,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6918,c8c95b0e130d480b6203957a3be8b85dc238ede4,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6919,c8c95b0e130d480b6203957a3be8b85dc238ede4,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6920,c8c95b0e130d480b6203957a3be8b85dc238ede4,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6921,c8c95b0e130d480b6203957a3be8b85dc238ede4,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6922,3918e63e2098f8f479953e4a69d5cf54af419bf8,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6923,23e8b00f9d9cc8812d613fe0099aba5e92cffa2c,/certbot/Dockerfile,"# Executable not found: can't find the executable for the dialog-like program
"
6924,23e8b00f9d9cc8812d613fe0099aba5e92cffa2c,/certbot/Dockerfile,"#VOLUME /etc/letsencrypt
"
6925,23e8b00f9d9cc8812d613fe0099aba5e92cffa2c,/certbot/Dockerfile,"#VOLUME /var/log/letsencrypt

"
6926,a23e8a01709500441a66c44b348c30d4141671b0,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6927,a23e8a01709500441a66c44b348c30d4141671b0,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6928,a23e8a01709500441a66c44b348c30d4141671b0,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6929,a23e8a01709500441a66c44b348c30d4141671b0,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6930,a23e8a01709500441a66c44b348c30d4141671b0,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6931,b17ad0ffbbbff617457eb65f76ef413d43f1020a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6932,b17ad0ffbbbff617457eb65f76ef413d43f1020a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6933,b17ad0ffbbbff617457eb65f76ef413d43f1020a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6934,b17ad0ffbbbff617457eb65f76ef413d43f1020a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6935,b17ad0ffbbbff617457eb65f76ef413d43f1020a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6936,a5bfeeccd48e05cedfc1ff03326b582b63ecc335,/phpmyadmin/Dockerfile,"# https://docs.phpmyadmin.net/en/latest/setup.html#verifying-phpmyadmin-releases
"
6937,a5bfeeccd48e05cedfc1ff03326b582b63ecc335,/phpmyadmin/Dockerfile,"# Since July 2015 all phpMyAdmin releases are cryptographically signed by the releasing developer, who through January 2016 was Marc Delisle.
"
6938,a5bfeeccd48e05cedfc1ff03326b582b63ecc335,/phpmyadmin/Dockerfile,"# Beginning in January 2016, the release manager is Isaac Bennetch.
"
6939,a5bfeeccd48e05cedfc1ff03326b582b63ecc335,/phpmyadmin/Dockerfile,"# Some additional downloads (for example themes) might be signed by Michal Čihař.
"
6940,93114d0d08ae995531e6fbe7e75ebfe98fdfca70,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
6941,93114d0d08ae995531e6fbe7e75ebfe98fdfca70,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
6942,93114d0d08ae995531e6fbe7e75ebfe98fdfca70,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
6943,fb143694a23510b119eb5f6107d6ef59eb453985,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6944,fb143694a23510b119eb5f6107d6ef59eb453985,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6945,fb143694a23510b119eb5f6107d6ef59eb453985,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6946,fb143694a23510b119eb5f6107d6ef59eb453985,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6947,fb143694a23510b119eb5f6107d6ef59eb453985,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6948,dc78cc220ac49c558570ba918c8d7cf9103a130f,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6949,8fb8ad2bf8d2b17b0167c67d58d18c4f14e89e51,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6950,8fb8ad2bf8d2b17b0167c67d58d18c4f14e89e51,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6951,8fb8ad2bf8d2b17b0167c67d58d18c4f14e89e51,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6952,8fb8ad2bf8d2b17b0167c67d58d18c4f14e89e51,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6953,8fb8ad2bf8d2b17b0167c67d58d18c4f14e89e51,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6954,ce4a34a6cfa4004bfbf7c49505791c88082da86a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6955,ce4a34a6cfa4004bfbf7c49505791c88082da86a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6956,ce4a34a6cfa4004bfbf7c49505791c88082da86a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6957,ce4a34a6cfa4004bfbf7c49505791c88082da86a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6958,ce4a34a6cfa4004bfbf7c49505791c88082da86a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6959,8a78007305dcc653f5df8d9556616c45fede0141,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6960,8a78007305dcc653f5df8d9556616c45fede0141,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6961,8a78007305dcc653f5df8d9556616c45fede0141,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6962,8a78007305dcc653f5df8d9556616c45fede0141,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6963,8a78007305dcc653f5df8d9556616c45fede0141,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6964,bc8e40e3082c2ab7edd67fc46ab99c4091cfdec5,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6965,bc8e40e3082c2ab7edd67fc46ab99c4091cfdec5,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6966,bc8e40e3082c2ab7edd67fc46ab99c4091cfdec5,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6967,bc8e40e3082c2ab7edd67fc46ab99c4091cfdec5,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6968,bc8e40e3082c2ab7edd67fc46ab99c4091cfdec5,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6969,dad1b703c9fd09007aa50d78528430ca89a80b65,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6970,dad1b703c9fd09007aa50d78528430ca89a80b65,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6971,dad1b703c9fd09007aa50d78528430ca89a80b65,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6972,dad1b703c9fd09007aa50d78528430ca89a80b65,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6973,dad1b703c9fd09007aa50d78528430ca89a80b65,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6974,558a93df9fe8552e60dee09803230e4b359968b6,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6975,3c1fb98438b1a3d00ad875012ad9ce33555be29e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6976,3c1fb98438b1a3d00ad875012ad9ce33555be29e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6977,3c1fb98438b1a3d00ad875012ad9ce33555be29e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6978,3c1fb98438b1a3d00ad875012ad9ce33555be29e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
6979,3c1fb98438b1a3d00ad875012ad9ce33555be29e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
6980,a85e514ba3857fe878aaae715328bf4e657b4e38,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
6981,a85e514ba3857fe878aaae715328bf4e657b4e38,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
6982,a85e514ba3857fe878aaae715328bf4e657b4e38,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
6983,e70ed5c98aac048e665d18a3ff5d37cd673cf2e0,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
6984,e70ed5c98aac048e665d18a3ff5d37cd673cf2e0,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
6985,e70ed5c98aac048e665d18a3ff5d37cd673cf2e0,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
6986,e70ed5c98aac048e665d18a3ff5d37cd673cf2e0,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
6987,e70ed5c98aac048e665d18a3ff5d37cd673cf2e0,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
6988,b5fb98cec4fab3647d4a1ddbe14aedf7427acbf4,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6989,fefa85a99123e22e2bd6057ddc6fab59214a2ea1,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6990,7bb7b72637a7c79aefe7e93ba98bb3f1fdeeaeeb,/phpmyadmin/Dockerfile,"# https://www.phpmyadmin.net/downloads/
"
6991,7bb7b72637a7c79aefe7e93ba98bb3f1fdeeaeeb,/phpmyadmin/Dockerfile,"# https://docs.phpmyadmin.net/en/latest/setup.html#verifying-phpmyadmin-releases
"
6992,7bb7b72637a7c79aefe7e93ba98bb3f1fdeeaeeb,/phpmyadmin/Dockerfile,"# Since July 2015 all phpMyAdmin releases are cryptographically signed by the releasing developer, who through January 2016 was Marc Delisle.
"
6993,7bb7b72637a7c79aefe7e93ba98bb3f1fdeeaeeb,/phpmyadmin/Dockerfile,"# Beginning in January 2016, the release manager is Isaac Bennetch.
"
6994,7bb7b72637a7c79aefe7e93ba98bb3f1fdeeaeeb,/phpmyadmin/Dockerfile,"# Some additional downloads (for example themes) might be signed by Michal Čihař.
"
6995,2f918683657a53d3ef1dfdbf193f623c9ee95378,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
6996,4c31382218d786d782fc71c5d8b526ae301101f6,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
6997,4c31382218d786d782fc71c5d8b526ae301101f6,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
6998,4c31382218d786d782fc71c5d8b526ae301101f6,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
6999,4c31382218d786d782fc71c5d8b526ae301101f6,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7000,4c31382218d786d782fc71c5d8b526ae301101f6,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7001,2c73f58336c499dd29efeed4edd8156894895d38,/mongodb-mms/Dockerfile,"# see https://mms.mongodb.com/settings/monitoring-agent
# click on ""Ubuntu 12.04+""
"
7002,2c73f58336c499dd29efeed4edd8156894895d38,/mongodb-mms/Dockerfile,"# missing dep in mms.deb
"
7003,6b664e388a678641867968bc16310e9acbc87f50,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7004,6b664e388a678641867968bc16310e9acbc87f50,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7005,6b664e388a678641867968bc16310e9acbc87f50,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7006,6b664e388a678641867968bc16310e9acbc87f50,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7007,6b664e388a678641867968bc16310e9acbc87f50,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7008,16cc287460a79f452b7fee2d3589736699797865,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7009,16cc287460a79f452b7fee2d3589736699797865,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7010,16cc287460a79f452b7fee2d3589736699797865,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7011,16cc287460a79f452b7fee2d3589736699797865,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7012,16cc287460a79f452b7fee2d3589736699797865,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7013,01d21e34e8cd7a2b0a6a9d5e92876006bbfe7dd5,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7014,01d21e34e8cd7a2b0a6a9d5e92876006bbfe7dd5,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7015,01d21e34e8cd7a2b0a6a9d5e92876006bbfe7dd5,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7016,01d21e34e8cd7a2b0a6a9d5e92876006bbfe7dd5,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7017,01d21e34e8cd7a2b0a6a9d5e92876006bbfe7dd5,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7018,b7f8b0079fb7f43cccf30e87f6a5eea30d993f5b,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7019,4b4737e79fcb79160188596fa12c6bb997019c0a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7020,4b4737e79fcb79160188596fa12c6bb997019c0a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7021,4b4737e79fcb79160188596fa12c6bb997019c0a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7022,4b4737e79fcb79160188596fa12c6bb997019c0a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7023,4b4737e79fcb79160188596fa12c6bb997019c0a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7024,55d2592583fece054021d1725c221f228d03b499,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7025,55d2592583fece054021d1725c221f228d03b499,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7026,55d2592583fece054021d1725c221f228d03b499,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7027,55d2592583fece054021d1725c221f228d03b499,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7028,55d2592583fece054021d1725c221f228d03b499,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7029,1da9c5a78e1c4cbfcaf59b951f35bd7f2ab2b560,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7030,1da9c5a78e1c4cbfcaf59b951f35bd7f2ab2b560,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7031,1da9c5a78e1c4cbfcaf59b951f35bd7f2ab2b560,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7032,1da9c5a78e1c4cbfcaf59b951f35bd7f2ab2b560,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7033,1da9c5a78e1c4cbfcaf59b951f35bd7f2ab2b560,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7034,89ef27de1d575c0c031b682b5ccfe6778f85b761,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7035,89ef27de1d575c0c031b682b5ccfe6778f85b761,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7036,89ef27de1d575c0c031b682b5ccfe6778f85b761,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7037,89ef27de1d575c0c031b682b5ccfe6778f85b761,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7038,89ef27de1d575c0c031b682b5ccfe6778f85b761,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7039,443043d99ef379e7070a061f12af810c5263bfb0,/xen-orchestra/Dockerfile,"# see https://github.com/vatesfr/xo/blob/a269af702992616f67b7bcf066eac0a1124ac8bf/doc/installation/manual_installation.md

#RUN apt-get update && apt-get install -y ruby-compass

"
7040,443043d99ef379e7070a061f12af810c5263bfb0,/xen-orchestra/Dockerfile,"#'/': '/path/to/xo-web/dist/'!'/': '../web/dist/'!"" .xo-server.yaml

"
7041,bafe443f7db71cd24f6bbbe0aef49cd6011d418f,/diffoscope/Dockerfile,"# xxd (xxd not available in path. Falling back to Python hexlify.)
"
7042,bafe443f7db71cd24f6bbbe0aef49cd6011d418f,/diffoscope/Dockerfile,"# readelf ('readelf' not available in path. Falling back to binary comparison.)
"
7043,bafe443f7db71cd24f6bbbe0aef49cd6011d418f,/diffoscope/Dockerfile,"# for ""diffoscope --progress""
"
7044,4b41b8b5ae32b74ed0259897d6123010374d233b,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7045,ef190231d8bccc078cdd14d150e935b87afa478d,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7046,ef190231d8bccc078cdd14d150e935b87afa478d,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7047,ef190231d8bccc078cdd14d150e935b87afa478d,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7048,ef190231d8bccc078cdd14d150e935b87afa478d,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7049,ef190231d8bccc078cdd14d150e935b87afa478d,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7050,be35a85e076599a7da83b7f4185fbfce7566ff43,/makemkv/Dockerfile,"# FPL_MainFeature detection only seemed to work with OpenJDK 9 (8 was insufficient)
"
7051,be35a85e076599a7da83b7f4185fbfce7566ff43,/makemkv/Dockerfile,"# This disc requires Java runtime (JRE), but none was found. Certain functions will fail, please install Java. See http://www.makemkv.com/bdjava/ for details.
"
7052,be35a85e076599a7da83b7f4185fbfce7566ff43,/makemkv/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
7053,be35a85e076599a7da83b7f4185fbfce7566ff43,/makemkv/Dockerfile,"# http://www.makemkv.com/forum2/viewtopic.php?f=3&t=224
"
7054,be35a85e076599a7da83b7f4185fbfce7566ff43,/makemkv/Dockerfile,"# beta code: http://www.makemkv.com/forum2/viewtopic.php?f=5&t=1053
"
7055,be35a85e076599a7da83b7f4185fbfce7566ff43,/makemkv/Dockerfile,"# pub   dsa2048 2017-05-26 [SC]
#       2ECF 2330 5F1F C0B3 2001  6733 94E3 083A 1804 2697
# uid           [ unknown] MakeMKV (signature) <support@makemkv.com>
"
7056,c76474c668922ea048344995e7e2de9debf0d809,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7057,b88639eee9395c6c7567ba8ea76231ab6391b924,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7058,b88639eee9395c6c7567ba8ea76231ab6391b924,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7059,b88639eee9395c6c7567ba8ea76231ab6391b924,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7060,b88639eee9395c6c7567ba8ea76231ab6391b924,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7061,b88639eee9395c6c7567ba8ea76231ab6391b924,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7062,f45ba3a9b9f5627c412beb10aa2cfda3c01b32a5,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7063,f45ba3a9b9f5627c412beb10aa2cfda3c01b32a5,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7064,f45ba3a9b9f5627c412beb10aa2cfda3c01b32a5,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7065,f45ba3a9b9f5627c412beb10aa2cfda3c01b32a5,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7066,f45ba3a9b9f5627c412beb10aa2cfda3c01b32a5,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7067,0a1e9a9598ac21b6b38d860b2b61864780aad387,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7068,0a1e9a9598ac21b6b38d860b2b61864780aad387,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
7069,0a1e9a9598ac21b6b38d860b2b61864780aad387,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
7070,0a1e9a9598ac21b6b38d860b2b61864780aad387,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
7071,0a1e9a9598ac21b6b38d860b2b61864780aad387,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
7072,a43c5d9e777f019fbd51948a1cf314da28bfcdfc,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7073,a43c5d9e777f019fbd51948a1cf314da28bfcdfc,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7074,a43c5d9e777f019fbd51948a1cf314da28bfcdfc,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7075,a43c5d9e777f019fbd51948a1cf314da28bfcdfc,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7076,a43c5d9e777f019fbd51948a1cf314da28bfcdfc,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7077,c318e967c039c0f9e1994b9571776b499a5f55ce,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7078,c318e967c039c0f9e1994b9571776b499a5f55ce,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7079,c318e967c039c0f9e1994b9571776b499a5f55ce,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7080,c318e967c039c0f9e1994b9571776b499a5f55ce,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7081,c318e967c039c0f9e1994b9571776b499a5f55ce,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7082,682bb2a2ad1b05d04fd1403c0171bc7f53aee6b0,/github-hub/Dockerfile,"# https://github.com/github/hub/releases
"
7083,d98acadacdcabbfc6a4ca0f4470bc2a9569eaa75,/github-pages/Dockerfile,"# https://pages.github.com/versions/
"
7084,d9e83eda0e2aff62aa15c32e28519e0721d5c151,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7085,d9e83eda0e2aff62aa15c32e28519e0721d5c151,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
7086,d9e83eda0e2aff62aa15c32e28519e0721d5c151,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
7087,d9e83eda0e2aff62aa15c32e28519e0721d5c151,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
7088,d9e83eda0e2aff62aa15c32e28519e0721d5c151,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
7089,2ee4105b2c5a1adab8338adb21762603be41313f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7090,2ee4105b2c5a1adab8338adb21762603be41313f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7091,2ee4105b2c5a1adab8338adb21762603be41313f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7092,2ee4105b2c5a1adab8338adb21762603be41313f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7093,2ee4105b2c5a1adab8338adb21762603be41313f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7094,c5b385b8fe2cf998b34f3edba0101d92274a5173,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7095,b5156c871d15abaa217ac78314e1a0d2ea8c50d2,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7096,b5156c871d15abaa217ac78314e1a0d2ea8c50d2,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7097,b5156c871d15abaa217ac78314e1a0d2ea8c50d2,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7098,b5156c871d15abaa217ac78314e1a0d2ea8c50d2,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7099,b5156c871d15abaa217ac78314e1a0d2ea8c50d2,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7100,9bbfdc2a8abaf87edec42dff46095f5943395871,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7101,9bbfdc2a8abaf87edec42dff46095f5943395871,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7102,9bbfdc2a8abaf87edec42dff46095f5943395871,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7103,9bbfdc2a8abaf87edec42dff46095f5943395871,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7104,9bbfdc2a8abaf87edec42dff46095f5943395871,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7105,742aa57f5d6effcb0f74b5ea7a0e89cc813f89de,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
7106,742aa57f5d6effcb0f74b5ea7a0e89cc813f89de,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
"
7107,a537f78672e7ff092f6d573ab666aed2a67aa328,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7108,a537f78672e7ff092f6d573ab666aed2a67aa328,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
7109,a537f78672e7ff092f6d573ab666aed2a67aa328,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
7110,a537f78672e7ff092f6d573ab666aed2a67aa328,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
7111,a537f78672e7ff092f6d573ab666aed2a67aa328,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
7112,856b633ebeb76d846682adcf0e9a75251d9ee75c,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7113,856b633ebeb76d846682adcf0e9a75251d9ee75c,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7114,856b633ebeb76d846682adcf0e9a75251d9ee75c,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7115,856b633ebeb76d846682adcf0e9a75251d9ee75c,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7116,856b633ebeb76d846682adcf0e9a75251d9ee75c,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7117,de5c94e7bdb03da9481177e29a6f26ca55ded7a1,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7118,de5c94e7bdb03da9481177e29a6f26ca55ded7a1,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7119,de5c94e7bdb03da9481177e29a6f26ca55ded7a1,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7120,de5c94e7bdb03da9481177e29a6f26ca55ded7a1,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7121,de5c94e7bdb03da9481177e29a6f26ca55ded7a1,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7122,47c8b3b6c97e636cc18b43a56650759a76eb5230,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7123,47c8b3b6c97e636cc18b43a56650759a76eb5230,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
7124,47c8b3b6c97e636cc18b43a56650759a76eb5230,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
7125,47c8b3b6c97e636cc18b43a56650759a76eb5230,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
7126,47c8b3b6c97e636cc18b43a56650759a76eb5230,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
7127,c4a16fcccd060c0fc2c22e9ec77af05b6e8532b8,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7128,5b58c47c7bda28d60a4391360a51eb4d7236b408,/familysearch-indexing/Dockerfile,"# TODO add a very lightweight browser for opening help and/or registration
"
7129,4996cea4369c41780c5478f350d823acd73b0522,/sbuild/Dockerfile,"# run with ""--cap-add SYS_ADMIN"" so that sbuild can ""mount"" in the chroots it creates

"
7130,4996cea4369c41780c5478f350d823acd73b0522,/sbuild/Dockerfile,"# https://gist.github.com/tianon/a0080cbca558e4b907fe
# (useful sbuild-related scripts)
"
7131,4996cea4369c41780c5478f350d823acd73b0522,/sbuild/Dockerfile,"# usage: download-debuerreotype-tarball.sh suite [arch]
#    ie: download-debuerreotype-tarball.sh stretch
#        download-debuerreotype-tarball.sh sid i386
"
7132,13704609d96fa166614c61074e03d51dd1a90db4,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7133,13704609d96fa166614c61074e03d51dd1a90db4,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7134,13704609d96fa166614c61074e03d51dd1a90db4,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7135,13704609d96fa166614c61074e03d51dd1a90db4,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7136,13704609d96fa166614c61074e03d51dd1a90db4,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7137,d50f9b27f7180df087038088f7a384799149a7a8,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7138,88f64e871d3ce0239b23d6200968ffffb0b3577e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7139,88f64e871d3ce0239b23d6200968ffffb0b3577e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7140,88f64e871d3ce0239b23d6200968ffffb0b3577e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7141,88f64e871d3ce0239b23d6200968ffffb0b3577e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7142,88f64e871d3ce0239b23d6200968ffffb0b3577e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7143,d84e0dad8c8e8261a9f8fbadfd8e5e1fbe0d818d,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7144,d84e0dad8c8e8261a9f8fbadfd8e5e1fbe0d818d,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7145,d84e0dad8c8e8261a9f8fbadfd8e5e1fbe0d818d,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7146,d84e0dad8c8e8261a9f8fbadfd8e5e1fbe0d818d,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7147,d84e0dad8c8e8261a9f8fbadfd8e5e1fbe0d818d,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7148,93232ce4dc415091faf219d9797bf7b0c4192ad7,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7149,93232ce4dc415091faf219d9797bf7b0c4192ad7,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7150,93232ce4dc415091faf219d9797bf7b0c4192ad7,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7151,93232ce4dc415091faf219d9797bf7b0c4192ad7,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7152,93232ce4dc415091faf219d9797bf7b0c4192ad7,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7153,37b6af798174f569c38756c9cd469d7f43c8931e,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7154,b75192e738df95860b618be8effd4aeb7eb8b50c,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7155,b75192e738df95860b618be8effd4aeb7eb8b50c,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7156,b75192e738df95860b618be8effd4aeb7eb8b50c,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7157,b75192e738df95860b618be8effd4aeb7eb8b50c,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7158,b75192e738df95860b618be8effd4aeb7eb8b50c,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7159,5611ddf36001ca35d63e65b5b35d061ab4518c29,/robomongo/Dockerfile,"# install dependencies...
"
7160,b12db5306938484e757965961525a56fcc6f0b75,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7161,b12db5306938484e757965961525a56fcc6f0b75,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7162,b12db5306938484e757965961525a56fcc6f0b75,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7163,b12db5306938484e757965961525a56fcc6f0b75,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7164,b12db5306938484e757965961525a56fcc6f0b75,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7165,f45a984d5a2621bf73968ffdc0e1a242fb5be1d2,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7166,bc47e511bc2ad037db72b81ce9a63a99aeb4d4e5,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7167,bc47e511bc2ad037db72b81ce9a63a99aeb4d4e5,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7168,bc47e511bc2ad037db72b81ce9a63a99aeb4d4e5,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7169,bc47e511bc2ad037db72b81ce9a63a99aeb4d4e5,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7170,bc47e511bc2ad037db72b81ce9a63a99aeb4d4e5,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7171,97dc18fc618be136f305c8c2ef450046ed385e63,/diffoscope/Dockerfile,"# xxd (xxd not available in path. Falling back to Python hexlify.)
"
7172,97dc18fc618be136f305c8c2ef450046ed385e63,/diffoscope/Dockerfile,"# readelf ('readelf' not available in path. Falling back to binary comparison.)
"
7173,97dc18fc618be136f305c8c2ef450046ed385e63,/diffoscope/Dockerfile,"# for ""diffoscope --progress""
"
7174,861c5480a46ec27cd5c8b16db0e929bf6d943bfa,/snapcraft/Dockerfile,"# based initially on https://hub.docker.com/r/didrocks/snapcraft/
"
7175,861c5480a46ec27cd5c8b16db0e929bf6d943bfa,/snapcraft/Dockerfile,"# enable multiverse as snapcraft cleanbuild does
"
7176,861c5480a46ec27cd5c8b16db0e929bf6d943bfa,/snapcraft/Dockerfile,"# pin specific version so we can update with a natural cache bust
"
7177,11779a653be0467fca1792e7ac070279dad7b173,/slack/Dockerfile,"# the .deb file linked at https://slack.com/downloads/instructions/debian includes ""/etc/cron.daily/slack"" which sets up an APT repo entry as in the following installation

# pub   rsa4096 2016-02-18 [SCEA]
#       DB08 5A08 CA13 B8AC B917  E0F6 D938 EC0D 0386 51BD
# uid           [ unknown] https://packagecloud.io/slacktechnologies/slack (https://packagecloud.io/docs#gpg_signing) <support@packagecloud.io>
# sub   rsa4096 2016-02-18 [SEA]
"
7178,11779a653be0467fca1792e7ac070279dad7b173,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libX11-xcb.so.1: cannot open shared object file: No such file or directory
"
7179,11779a653be0467fca1792e7ac070279dad7b173,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libasound.so.2: cannot open shared object file: No such file or directory
"
7180,11779a653be0467fca1792e7ac070279dad7b173,/slack/Dockerfile,"# 3.3.3: slack: error while loading shared libraries: libgtk-3.so.0: cannot open shared object file: No such file or directory
"
7181,11779a653be0467fca1792e7ac070279dad7b173,/slack/Dockerfile,"# 4.4.0: Error: libxkbfile.so.1: cannot open shared object file: No such file or directory
"
7182,11779a653be0467fca1792e7ac070279dad7b173,/slack/Dockerfile,"# 4.4.0: libGL error: failed to load driver: (i915_dri.so, i194, i965, swrast_dir.so, swrast)
"
7183,f1261c9f45f1813b4a561b8de1f7c8c4d075cc96,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7184,c4c2812e3a0826f4689e3d32dfad6e3c09e4b29f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7185,c4c2812e3a0826f4689e3d32dfad6e3c09e4b29f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7186,c4c2812e3a0826f4689e3d32dfad6e3c09e4b29f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7187,c4c2812e3a0826f4689e3d32dfad6e3c09e4b29f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7188,c4c2812e3a0826f4689e3d32dfad6e3c09e4b29f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7189,4da669cd5935346825b021f8bd7d565e0c9033c4,/vultr-cli/Dockerfile,"# https://github.com/vultr/vultr-cli/releases
"
7190,ac4ccc232f72433ccb38d0d41fdf5b2740b00ce5,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7191,ac4ccc232f72433ccb38d0d41fdf5b2740b00ce5,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7192,ac4ccc232f72433ccb38d0d41fdf5b2740b00ce5,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7193,ac4ccc232f72433ccb38d0d41fdf5b2740b00ce5,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7194,ac4ccc232f72433ccb38d0d41fdf5b2740b00ce5,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7195,ba9d3c89bbe2d60e1a3974ef7e8c1caa95948dcc,/robomongo/Dockerfile,"# install dependencies...
"
7196,96c35807b88d9f5ca3320857d1bd04c3e5f05946,/vultr-cli/Dockerfile,"# https://github.com/vultr/vultr-cli/releases
"
7197,dd29c3fc1ca4109f21b70b9619c38a58d76aaa0c,/debian/ubuntu-devel/Dockerfile,"# let's make apt list package versions, since those are handy during devel
"
7198,dd29c3fc1ca4109f21b70b9619c38a58d76aaa0c,/debian/ubuntu-devel/Dockerfile,"# normal build deps
"
7199,dd29c3fc1ca4109f21b70b9619c38a58d76aaa0c,/debian/ubuntu-devel/Dockerfile,"# need deb-src for compiling packages
"
7200,dd29c3fc1ca4109f21b70b9619c38a58d76aaa0c,/debian/ubuntu-devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
7201,dd29c3fc1ca4109f21b70b9619c38a58d76aaa0c,/debian/ubuntu-devel/Dockerfile,"# for ssh to debian hosts, let's make sure we know their fingerprints <3
"
7202,dd29c3fc1ca4109f21b70b9619c38a58d76aaa0c,/debian/ubuntu-devel/Dockerfile,"# make sure things are pretty
"
7203,dd29c3fc1ca4109f21b70b9619c38a58d76aaa0c,/debian/ubuntu-devel/Dockerfile,"#(force_color_prompt=yes)/\1/' ~/.bashrc

# quilt is much amaze: https://wiki.debian.org/UsingQuilt#Using_quilt_with_Debian_source_packages
"
7204,dd29c3fc1ca4109f21b70b9619c38a58d76aaa0c,/debian/ubuntu-devel/Dockerfile,"# make sure pbuilder-dist uses a sane default mirror
"
7205,c5eb09017bb7303093659b1a062e3730f344188a,/makemkv/Dockerfile,"# This disc requires Java runtime (JRE), but none was found. Certain functions will fail, please install Java. See http://www.makemkv.com/bdjava/ for details.
"
7206,c5eb09017bb7303093659b1a062e3730f344188a,/makemkv/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
7207,c5eb09017bb7303093659b1a062e3730f344188a,/makemkv/Dockerfile,"# FPL_MainFeature detection only seemed to work with OpenJDK 9 (8 was insufficient)
"
7208,c5eb09017bb7303093659b1a062e3730f344188a,/makemkv/Dockerfile,"# Unable to execute external program 'ccextractor' as its path is not set in preferences
# Failed to execute external program 'ccextractor' from location '/usr/local/bin/mmccextr'
# (but it doesn't exist in the perferences dialog...)
"
7209,c5eb09017bb7303093659b1a062e3730f344188a,/makemkv/Dockerfile,"# http://www.makemkv.com/forum2/viewtopic.php?f=3&t=224
"
7210,c5eb09017bb7303093659b1a062e3730f344188a,/makemkv/Dockerfile,"# beta code: http://www.makemkv.com/forum2/viewtopic.php?f=5&t=1053
"
7211,c5eb09017bb7303093659b1a062e3730f344188a,/makemkv/Dockerfile,"# pub   dsa2048 2017-05-26 [SC]
#       2ECF 2330 5F1F C0B3 2001  6733 94E3 083A 1804 2697
# uid           [ unknown] MakeMKV (signature) <support@makemkv.com>
"
7212,272d594b8604170cc1d41f88fe6bf146f897054c,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7213,272d594b8604170cc1d41f88fe6bf146f897054c,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7214,272d594b8604170cc1d41f88fe6bf146f897054c,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7215,272d594b8604170cc1d41f88fe6bf146f897054c,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7216,272d594b8604170cc1d41f88fe6bf146f897054c,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7217,1011bc890d51975889e23002378190d79dd05092,/phpmyadmin/Dockerfile,"# https://docs.phpmyadmin.net/en/latest/setup.html#verifying-phpmyadmin-releases
"
7218,1011bc890d51975889e23002378190d79dd05092,/phpmyadmin/Dockerfile,"# Since July 2015 all phpMyAdmin releases are cryptographically signed by the releasing developer, who through January 2016 was Marc Delisle.
"
7219,1011bc890d51975889e23002378190d79dd05092,/phpmyadmin/Dockerfile,"# Beginning in January 2016, the release manager is Isaac Bennetch.
"
7220,1011bc890d51975889e23002378190d79dd05092,/phpmyadmin/Dockerfile,"# Some additional downloads (for example themes) might be signed by Michal Čihař.
"
7221,24d83725b7b01736da82b29516d9d18a027bcdcc,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7222,24d83725b7b01736da82b29516d9d18a027bcdcc,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7223,24d83725b7b01736da82b29516d9d18a027bcdcc,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7224,24d83725b7b01736da82b29516d9d18a027bcdcc,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7225,24d83725b7b01736da82b29516d9d18a027bcdcc,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7226,a7fe179d2013cc04daed6eea84c010f9053283b4,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7227,a7fe179d2013cc04daed6eea84c010f9053283b4,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
7228,a7fe179d2013cc04daed6eea84c010f9053283b4,/jenkins/Dockerfile,"# workaround ""apt-key adv --recv-keys"" hanging in stretch and above
"
7229,ee9f313c3ccbaa7832f9fee07b720175c73d3347,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7230,41956a5c14ff889f17bf31e77bdd841c840866c9,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7231,0a5b58d7b2857f96bcbbff2f176a9766cdbddcd9,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
7232,2de6ba8428ca3a5c2d992152f8d798f5d18cdc01,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7233,b75f19d02df461f58160fc11827bfc4615e4f347,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7234,bfa84464c847b4d3c4a06d354885d40a1cd12a5d,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7235,bfa84464c847b4d3c4a06d354885d40a1cd12a5d,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
7236,bfa84464c847b4d3c4a06d354885d40a1cd12a5d,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
7237,bfa84464c847b4d3c4a06d354885d40a1cd12a5d,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
7238,bfa84464c847b4d3c4a06d354885d40a1cd12a5d,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
7239,9c1b2d8ec519cd9a4730f33e9acc3cf088092998,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7240,9c1b2d8ec519cd9a4730f33e9acc3cf088092998,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7241,9c1b2d8ec519cd9a4730f33e9acc3cf088092998,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7242,9c1b2d8ec519cd9a4730f33e9acc3cf088092998,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7243,9c1b2d8ec519cd9a4730f33e9acc3cf088092998,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7244,048cc30ab14d5f3a9b09a3c36260b9a680a76c3d,/steam/Dockerfile,"# zenity is used during early startup for dialogs and progress bars
"
7245,048cc30ab14d5f3a9b09a3c36260b9a680a76c3d,/steam/Dockerfile,"# wget is used for uploading crash dumps
"
7246,048cc30ab14d5f3a9b09a3c36260b9a680a76c3d,/steam/Dockerfile,"# needed for ""dbus-launch"" (not sure what that's used for)
"
7247,048cc30ab14d5f3a9b09a3c36260b9a680a76c3d,/steam/Dockerfile,"# needed for ""localedef"" below
"
7248,048cc30ab14d5f3a9b09a3c36260b9a680a76c3d,/steam/Dockerfile,"# WARNING: setlocale('en_US.UTF-8') failed, using locale: 'C'. International characters may not work.
"
7249,048cc30ab14d5f3a9b09a3c36260b9a680a76c3d,/steam/Dockerfile,"# create a default ""steam"" user for running the container without root privileges
"
7250,048cc30ab14d5f3a9b09a3c36260b9a680a76c3d,/steam/Dockerfile,"# https://github.com/ValveSoftware/steam-for-linux#getting-started
# http://media.steampowered.com/client/installer/steam.deb redirects to https://repo.steampowered.com/steam/archive/precise/steam_latest.deb
# https://repo.steampowered.com/steam/archive/precise/?C=M&O=D
# https://repo.steampowered.com/steam/archive/precise/?C=N&O=D
# ""steam_latest.deb"" is a symlink to ""steam-launcher_X.X.X.X_all.deb""
# https://repo.steampowered.com/steam/dists/precise/steam/binary-amd64/Packages (current version, current SHA256)
"
7251,048cc30ab14d5f3a9b09a3c36260b9a680a76c3d,/steam/Dockerfile,"# let's head off a few of the things steam will want to install immediately
"
7252,048cc30ab14d5f3a9b09a3c36260b9a680a76c3d,/steam/Dockerfile,"# installing libfontconfig1 from Ubuntu stops some runtime-related fontconfig errors/warnings (https://github.com/ValveSoftware/steam-for-linux/issues/3307#issuecomment-506650268)
"
7253,048cc30ab14d5f3a9b09a3c36260b9a680a76c3d,/steam/Dockerfile,"# useful when using ""--env DEBUGGER=gdb"" or ""--env DEBUGGER=strace"" to debug steam startup issues
#RUN set -eux; \
#	apt-get update; \
#	apt-get install -y --no-install-recommends \
#		gdb \
#		strace \
#	; \
#	rm -rf /var/lib/apt/lists/*

"
7254,7b7bbc1f1e1fdf2f604f3c46522e80afe88ecf2f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7255,7b7bbc1f1e1fdf2f604f3c46522e80afe88ecf2f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7256,7b7bbc1f1e1fdf2f604f3c46522e80afe88ecf2f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7257,7b7bbc1f1e1fdf2f604f3c46522e80afe88ecf2f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7258,7b7bbc1f1e1fdf2f604f3c46522e80afe88ecf2f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7259,7f29ea6024e89afb03c6be4f5c6f4cf339925808,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7260,7f29ea6024e89afb03c6be4f5c6f4cf339925808,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7261,7f29ea6024e89afb03c6be4f5c6f4cf339925808,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7262,7f29ea6024e89afb03c6be4f5c6f4cf339925808,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7263,7f29ea6024e89afb03c6be4f5c6f4cf339925808,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7264,287456c3c38cf5ca202c56b5da8b91e5d2ed3976,/docker-tianon/Dockerfile,"# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
"
7265,f1faa5ff7e266c9f683b52494ada25a2970fb475,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7266,39fbd36b3ab314692aadf188690597f4fee39303,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7267,32f6a5fe1f03d923a5e94f71a430159484d55490,/docker/master/dind/Dockerfile,"# https://github.com/docker/docker/blob/master/project/PACKAGERS.md#runtime-dependencies
"
7268,32f6a5fe1f03d923a5e94f71a430159484d55490,/docker/master/dind/Dockerfile,"# TODO aufs-tools

"
7269,0398d8c076fed924aa2aec87374aa7bed83d701c,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7270,7d4b40f4b98100f811fda3e7990226c46ce62e4f,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7271,7d4b40f4b98100f811fda3e7990226c46ce62e4f,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
7272,7d4b40f4b98100f811fda3e7990226c46ce62e4f,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
7273,7d4b40f4b98100f811fda3e7990226c46ce62e4f,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
7274,7d4b40f4b98100f811fda3e7990226c46ce62e4f,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
7275,61df5f9fb92c254b9c4918ef7bdf7aad8d7ba013,/vultr-cli/Dockerfile,"# https://github.com/vultr/vultr-cli/releases
"
7276,d3e3348dec6c01f11dfd109520a73ea2dd1c6871,/vultr-cli/Dockerfile,"# https://github.com/vultr/vultr-cli/releases
"
7277,9a6a1e3709dc029799ec367c5c0b4b75639cf4c6,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7278,9a6a1e3709dc029799ec367c5c0b4b75639cf4c6,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7279,9a6a1e3709dc029799ec367c5c0b4b75639cf4c6,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7280,9a6a1e3709dc029799ec367c5c0b4b75639cf4c6,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7281,9a6a1e3709dc029799ec367c5c0b4b75639cf4c6,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7282,9c0f5052431fdc0bc9f44764a3338acee6126a8e,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7283,fbef218e19026b860a47bdd79e306ea72fbc3a65,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7284,db3b0048aa8865c5a1a2c4d75ab0f2dcb639a9e6,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
7285,76b9beae0083b4eecb3ae291a0d5e64cba247aa9,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7286,76b9beae0083b4eecb3ae291a0d5e64cba247aa9,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7287,76b9beae0083b4eecb3ae291a0d5e64cba247aa9,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7288,76b9beae0083b4eecb3ae291a0d5e64cba247aa9,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7289,76b9beae0083b4eecb3ae291a0d5e64cba247aa9,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7290,6f8ed12e24c47887de6365f08dcbd0bd652a0749,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7291,8073dfc2af27b71298f0130acab2b3653b31907f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7292,8073dfc2af27b71298f0130acab2b3653b31907f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7293,8073dfc2af27b71298f0130acab2b3653b31907f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7294,8073dfc2af27b71298f0130acab2b3653b31907f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7295,8073dfc2af27b71298f0130acab2b3653b31907f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7296,bfc16e94062e82971d3c8f1a3586cd0cdb29daa3,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7297,bfc16e94062e82971d3c8f1a3586cd0cdb29daa3,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7298,bfc16e94062e82971d3c8f1a3586cd0cdb29daa3,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7299,bfc16e94062e82971d3c8f1a3586cd0cdb29daa3,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7300,bfc16e94062e82971d3c8f1a3586cd0cdb29daa3,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7301,907806bc888f65751b6d464ded31c0c610a1a014,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7302,907806bc888f65751b6d464ded31c0c610a1a014,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
7303,907806bc888f65751b6d464ded31c0c610a1a014,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
7304,907806bc888f65751b6d464ded31c0c610a1a014,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
7305,907806bc888f65751b6d464ded31c0c610a1a014,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
7306,bb91faee2b3009d724b0ab6489cd793f0a8319cf,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7307,ee6b42952e48ec1caa45a6dde2bd83efdbd4e227,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7308,419de1e1e3c4b7af575cf099bc2bfd17d3db41d7,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7309,419de1e1e3c4b7af575cf099bc2bfd17d3db41d7,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7310,419de1e1e3c4b7af575cf099bc2bfd17d3db41d7,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7311,419de1e1e3c4b7af575cf099bc2bfd17d3db41d7,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7312,419de1e1e3c4b7af575cf099bc2bfd17d3db41d7,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7313,304779cec09bd297dfc5b3ab421ba240f6be9b92,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7314,304779cec09bd297dfc5b3ab421ba240f6be9b92,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7315,304779cec09bd297dfc5b3ab421ba240f6be9b92,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7316,304779cec09bd297dfc5b3ab421ba240f6be9b92,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7317,304779cec09bd297dfc5b3ab421ba240f6be9b92,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7318,26468c8cd5ecdc81baa889e3c54dd730ebc23f2e,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7319,1de0cdc7f5402384d2f4bbdacd3fc234de2ef9b5,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7320,1de0cdc7f5402384d2f4bbdacd3fc234de2ef9b5,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7321,1de0cdc7f5402384d2f4bbdacd3fc234de2ef9b5,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7322,1de0cdc7f5402384d2f4bbdacd3fc234de2ef9b5,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7323,1de0cdc7f5402384d2f4bbdacd3fc234de2ef9b5,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7324,924ceb0932cdee536b4c384806970ac44a1c8886,/debian/devel/Dockerfile,"# normal build deps
"
7325,924ceb0932cdee536b4c384806970ac44a1c8886,/debian/devel/Dockerfile,"# need an editor for ""dch -i""
"
7326,924ceb0932cdee536b4c384806970ac44a1c8886,/debian/devel/Dockerfile,"# a few extra little useful things
"
7327,924ceb0932cdee536b4c384806970ac44a1c8886,/debian/devel/Dockerfile,"# need deb-src for compiling packages
"
7328,924ceb0932cdee536b4c384806970ac44a1c8886,/debian/devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
7329,924ceb0932cdee536b4c384806970ac44a1c8886,/debian/devel/Dockerfile,"# for ssh to debian hosts, let's make sure we know their fingerprints <3
"
7330,924ceb0932cdee536b4c384806970ac44a1c8886,/debian/devel/Dockerfile,"# make sure things are pretty
"
7331,924ceb0932cdee536b4c384806970ac44a1c8886,/debian/devel/Dockerfile,"#(force_color_prompt=yes)/\1/' /root/.bashrc

# quilt is much amaze: https://wiki.debian.org/UsingQuilt#Using_quilt_with_Debian_source_packages
"
7332,e1bd7de6ca5f4d34a2cb9224e1521cf95b6e932e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7333,e1bd7de6ca5f4d34a2cb9224e1521cf95b6e932e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7334,e1bd7de6ca5f4d34a2cb9224e1521cf95b6e932e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7335,e1bd7de6ca5f4d34a2cb9224e1521cf95b6e932e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7336,e1bd7de6ca5f4d34a2cb9224e1521cf95b6e932e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7337,e24ac976873626061c2489fc643225cfd70bc9cb,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7338,e24ac976873626061c2489fc643225cfd70bc9cb,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7339,e24ac976873626061c2489fc643225cfd70bc9cb,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7340,e24ac976873626061c2489fc643225cfd70bc9cb,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7341,e24ac976873626061c2489fc643225cfd70bc9cb,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7342,3eb65a851f7179f12b34b61182657e59c0700cdd,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7343,9e9ebd039a7af7e3ae6b0ffd773ecac5cc56bf0e,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7344,5a734dddbc5242cf37782c4dcec4343a928b34c7,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7345,5a734dddbc5242cf37782c4dcec4343a928b34c7,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7346,5a734dddbc5242cf37782c4dcec4343a928b34c7,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7347,5a734dddbc5242cf37782c4dcec4343a928b34c7,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7348,5a734dddbc5242cf37782c4dcec4343a928b34c7,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7349,9e7be54a8368f1069b3e2547a76a1f3dac08f971,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7350,9e7be54a8368f1069b3e2547a76a1f3dac08f971,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
7351,9e7be54a8368f1069b3e2547a76a1f3dac08f971,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
7352,9884bab8ee98a10858eb3d53b9a1db2ae3d33271,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7353,9884bab8ee98a10858eb3d53b9a1db2ae3d33271,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7354,9884bab8ee98a10858eb3d53b9a1db2ae3d33271,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7355,9884bab8ee98a10858eb3d53b9a1db2ae3d33271,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7356,9884bab8ee98a10858eb3d53b9a1db2ae3d33271,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7357,791f4978024f6190b8c626e76379978a05627f46,/tinygo/Dockerfile,"# the .deb (as of 0.6.0) installs to /usr/local/tinygo but doesn't add ""tinygo"" to PATH
"
7358,791f4978024f6190b8c626e76379978a05627f46,/tinygo/Dockerfile,"# https://tinygo.org/getting-started/linux/

# https://github.com/tinygo-org/tinygo/releases
"
7359,c2b4f974f44bc4aed93c4db48e7a46e8179a3ce8,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7360,8ccce1d747d1f5a9f366bdb283da9f723efd8522,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7361,8ccce1d747d1f5a9f366bdb283da9f723efd8522,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7362,8ccce1d747d1f5a9f366bdb283da9f723efd8522,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7363,8ccce1d747d1f5a9f366bdb283da9f723efd8522,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7364,8ccce1d747d1f5a9f366bdb283da9f723efd8522,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7365,53ce9371559772dbff3d3fb4cd65877f2d8b6a05,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7366,cb9d0f76483cdbbbfaf9b23b92cde53500571cd6,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7367,cb9d0f76483cdbbbfaf9b23b92cde53500571cd6,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7368,cb9d0f76483cdbbbfaf9b23b92cde53500571cd6,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7369,cb9d0f76483cdbbbfaf9b23b92cde53500571cd6,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7370,cb9d0f76483cdbbbfaf9b23b92cde53500571cd6,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7371,abfb759eb858d5a294dd60678e4b736b13abd3b1,/certbot/Dockerfile,"# Executable not found: can't find the executable for the dialog-like program
"
7372,abfb759eb858d5a294dd60678e4b736b13abd3b1,/certbot/Dockerfile,"#VOLUME /etc/letsencrypt
"
7373,abfb759eb858d5a294dd60678e4b736b13abd3b1,/certbot/Dockerfile,"#VOLUME /var/log/letsencrypt

"
7374,d56de3a48e38bfcb4186e16dc2a6efceb9ed9964,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7375,d56de3a48e38bfcb4186e16dc2a6efceb9ed9964,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7376,d56de3a48e38bfcb4186e16dc2a6efceb9ed9964,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7377,d56de3a48e38bfcb4186e16dc2a6efceb9ed9964,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7378,d56de3a48e38bfcb4186e16dc2a6efceb9ed9964,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7379,fb39b3ae027ef1ecba0d0d9408d9d072be1fd838,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7380,fb39b3ae027ef1ecba0d0d9408d9d072be1fd838,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7381,fb39b3ae027ef1ecba0d0d9408d9d072be1fd838,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7382,fb39b3ae027ef1ecba0d0d9408d9d072be1fd838,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7383,fb39b3ae027ef1ecba0d0d9408d9d072be1fd838,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7384,6fedb8959ccb915dcef35e1be68e11e0bf87e255,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7385,6fedb8959ccb915dcef35e1be68e11e0bf87e255,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
7386,6fedb8959ccb915dcef35e1be68e11e0bf87e255,/jenkins/Dockerfile,"# workaround ""apt-key adv --recv-keys"" hanging in stretch and above
"
7387,9eaa1f31dfdff8fcfe9204f9bdce8bdec8a8977c,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
7388,9eaa1f31dfdff8fcfe9204f9bdce8bdec8a8977c,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
7389,9eaa1f31dfdff8fcfe9204f9bdce8bdec8a8977c,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
7390,d9ad93722f3cb117acad653becfb576c187183f2,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7391,8878fa82ac434e3a22304ae650fd72953b44f739,/dind/Dockerfile,"#RUN curl -sLS https://get.docker.io | sh

# let's grab the lastest ""master"" version of the install.sh script >:)
"
7392,e1d4516ab3ac0158e3a6900426561a27d5066646,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7393,e1d4516ab3ac0158e3a6900426561a27d5066646,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
7394,e1d4516ab3ac0158e3a6900426561a27d5066646,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
7395,e1d4516ab3ac0158e3a6900426561a27d5066646,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
7396,e1d4516ab3ac0158e3a6900426561a27d5066646,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
7397,9d918afa63d589fc295e3c8d1bb943d109c25335,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7398,9d918afa63d589fc295e3c8d1bb943d109c25335,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7399,9d918afa63d589fc295e3c8d1bb943d109c25335,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7400,9d918afa63d589fc295e3c8d1bb943d109c25335,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7401,9d918afa63d589fc295e3c8d1bb943d109c25335,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7402,d84221d6efa2fd7958e23cbc2f2cd2ad638ff320,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7403,20891713de91a8b592a5d008165d0a126149757a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7404,20891713de91a8b592a5d008165d0a126149757a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7405,20891713de91a8b592a5d008165d0a126149757a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7406,20891713de91a8b592a5d008165d0a126149757a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7407,20891713de91a8b592a5d008165d0a126149757a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7408,cdef14b2017d86bf06b3efb7eac9434d15547cef,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7409,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/12.04/Dockerfile,"# much of this was gleaned from https://github.com/lxc/lxc/blob/lxc-0.8.0/templates/lxc-ubuntu.in
# and then heavily modified and hacked like crazy

# we're going to want this bad boy installed so we can connect :)
"
7410,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/12.04/Dockerfile,"# undo some leet hax of the base image
"
7411,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/12.04/Dockerfile,"# generate a nice UTF-8 locale for our use
"
7412,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/12.04/Dockerfile,"# remove some pointless services
"
7413,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/12.04/Dockerfile,"# /lib/init/fstab: cleared out for bare-bones Docker' > /lib/init/fstab

# small fix for SSH in 13.10 (that's harmless everywhere else)
"
7414,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/12.04/Dockerfile,"# let Upstart know it's in a container
"
7415,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/12.04/Dockerfile,"# set a cheap, simple password for great convenience
"
7416,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/12.04/Dockerfile,"# we can has SSH
"
7417,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/12.04/Dockerfile,"# prepare for takeoff
"
7418,a4774fecff6c4df78e07a310f579b6889dc28f75,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7419,a4774fecff6c4df78e07a310f579b6889dc28f75,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7420,a4774fecff6c4df78e07a310f579b6889dc28f75,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7421,a4774fecff6c4df78e07a310f579b6889dc28f75,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7422,a4774fecff6c4df78e07a310f579b6889dc28f75,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7423,8d9a55265741f411de3766f136746f1231a74ac8,/diffoscope/Dockerfile,"# xxd (xxd not available in path. Falling back to Python hexlify.)
"
7424,8d9a55265741f411de3766f136746f1231a74ac8,/diffoscope/Dockerfile,"# readelf ('readelf' not available in path. Falling back to binary comparison.)
"
7425,8d9a55265741f411de3766f136746f1231a74ac8,/diffoscope/Dockerfile,"# for ""diffoscope --progress""
"
7426,9c1b2d8ec519cd9a4730f33e9acc3cf088092998,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7427,2c5f720d107e67827fc622b3c6d8a4c84d78d870,/bash/4.1/Dockerfile,"# gpg: key 64EA74AB: public key ""Chet Ramey <chet@cwru.edu>"" imported
"
7428,2c5f720d107e67827fc622b3c6d8a4c84d78d870,/bash/4.1/Dockerfile,"# https://ftp.gnu.org/gnu/bash/?C=M;O=D
"
7429,2c5f720d107e67827fc622b3c6d8a4c84d78d870,/bash/4.1/Dockerfile,"# https://ftp.gnu.org/gnu/bash/bash-4.1-patches/?C=M;O=D
"
7430,2c5f720d107e67827fc622b3c6d8a4c84d78d870,/bash/4.1/Dockerfile,"# prefixed with ""_"" since ""$BASH..."" have meaning in Bash parlance

"
7431,2c5f720d107e67827fc622b3c6d8a4c84d78d870,/bash/4.1/Dockerfile,"# delete a few installed bits for smaller image size
"
7432,38a3c66e1604bcb54b017edbc149d9e3be27250a,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7433,370d6d8dfdfb227cfb845236b12adabab0621c6b,/mutt-gmail/Dockerfile,"# a browser is necessary!
"
7434,370d6d8dfdfb227cfb845236b12adabab0621c6b,/mutt-gmail/Dockerfile,"# my preferred editor :) (see also muttrc)
"
7435,370d6d8dfdfb227cfb845236b12adabab0621c6b,/mutt-gmail/Dockerfile,"# ""No authenticators available""
"
7436,370d6d8dfdfb227cfb845236b12adabab0621c6b,/mutt-gmail/Dockerfile,"# ""GPGME: CMS protocol not available""
"
7437,df966bd85ec8ee2d918eef64d6a93eeee3cf4930,/docker/experimental/dind/Dockerfile,"# https://github.com/docker/docker/blob/master/project/PACKAGERS.md#runtime-dependencies
"
7438,df966bd85ec8ee2d918eef64d6a93eeee3cf4930,/docker/experimental/dind/Dockerfile,"# TODO aufs-tools

"
7439,dbf9c84e433a47065f96a477fc3c604cf0249edc,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7440,dbf9c84e433a47065f96a477fc3c604cf0249edc,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7441,dbf9c84e433a47065f96a477fc3c604cf0249edc,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7442,dbf9c84e433a47065f96a477fc3c604cf0249edc,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7443,dbf9c84e433a47065f96a477fc3c604cf0249edc,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7444,820c2d591c6cdad056e77dcc8f4d51366dff4b13,/mongodb-mms/Dockerfile,"# see https://mms.mongodb.com/settings/monitoring-agent
# click on ""Ubuntu 12.04+""
"
7445,fcc818131c9706ed7545ca952768dbe16f2d5673,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7446,fcc818131c9706ed7545ca952768dbe16f2d5673,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7447,fcc818131c9706ed7545ca952768dbe16f2d5673,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7448,fcc818131c9706ed7545ca952768dbe16f2d5673,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7449,fcc818131c9706ed7545ca952768dbe16f2d5673,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7450,eff16dd2c9dc8d5d3456cb6c6a8d25105949a772,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7451,eff16dd2c9dc8d5d3456cb6c6a8d25105949a772,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
7452,eff16dd2c9dc8d5d3456cb6c6a8d25105949a772,/jenkins/Dockerfile,"# workaround ""apt-key adv --recv-keys"" hanging in stretch and above
"
7453,217170cf047605cd6919b5382a8af6476431d607,/mojo/Dockerfile,"# TODO pin a version
"
7454,217170cf047605cd6919b5382a8af6476431d607,/mojo/Dockerfile,"# TODO pin versions
"
7455,217170cf047605cd6919b5382a8af6476431d607,/mojo/Dockerfile,"# the tests for IO::Socket::SSL like to hang... :(

# https://metacpan.org/pod/release/SRI/Mojolicious-7.94/lib/Mojo/IOLoop.pm#DESCRIPTION
"
7456,217170cf047605cd6919b5382a8af6476431d607,/mojo/Dockerfile,"# epoll (Linux)
"
7457,957cfe67bb94c4f0794f7b3c91740fdc88bb3596,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7458,957cfe67bb94c4f0794f7b3c91740fdc88bb3596,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
7459,957cfe67bb94c4f0794f7b3c91740fdc88bb3596,/jenkins/Dockerfile,"# https://groups.google.com/d/msg/jenkins-infra/c7m_72vUTXE/37zw9GXhAQAJ
"
7460,957cfe67bb94c4f0794f7b3c91740fdc88bb3596,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
7461,960e2f131ba7a80bf022991938ffa7f1fb70c135,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7462,2bcfb62d2faacf99cc4524d9de5561f110fbee0a,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7463,48a97250c07689e9069c26441258482025004154,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7464,48a97250c07689e9069c26441258482025004154,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7465,48a97250c07689e9069c26441258482025004154,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7466,48a97250c07689e9069c26441258482025004154,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7467,48a97250c07689e9069c26441258482025004154,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7468,d6e6b49ee2a4102101e65540500b62066699532c,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7469,d6e6b49ee2a4102101e65540500b62066699532c,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7470,d6e6b49ee2a4102101e65540500b62066699532c,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7471,d6e6b49ee2a4102101e65540500b62066699532c,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7472,d6e6b49ee2a4102101e65540500b62066699532c,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7473,5d8d1325f974ae536a079fb3bff04bf701261f22,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7474,5d8d1325f974ae536a079fb3bff04bf701261f22,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7475,5d8d1325f974ae536a079fb3bff04bf701261f22,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7476,5d8d1325f974ae536a079fb3bff04bf701261f22,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7477,5d8d1325f974ae536a079fb3bff04bf701261f22,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7478,4c753abe59121a35349e62f0c5b00af2e1529654,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7479,4c753abe59121a35349e62f0c5b00af2e1529654,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7480,4c753abe59121a35349e62f0c5b00af2e1529654,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7481,4c753abe59121a35349e62f0c5b00af2e1529654,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7482,4c753abe59121a35349e62f0c5b00af2e1529654,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7483,d4f3fb040fc30fadf43ccbd2a75799bf00862ecf,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7484,d4f3fb040fc30fadf43ccbd2a75799bf00862ecf,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7485,d4f3fb040fc30fadf43ccbd2a75799bf00862ecf,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7486,d4f3fb040fc30fadf43ccbd2a75799bf00862ecf,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7487,d4f3fb040fc30fadf43ccbd2a75799bf00862ecf,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7488,c3747f9cae8ddea7ab20678f9080404566c77b8b,/ymlfmt/Dockerfile,"# https://pypi.org/project/ruamel.yaml/
"
7489,8e0d023c5caa4901566c59a4a5079c7f646d609b,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7490,8e0d023c5caa4901566c59a4a5079c7f646d609b,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7491,8e0d023c5caa4901566c59a4a5079c7f646d609b,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7492,8e0d023c5caa4901566c59a4a5079c7f646d609b,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7493,8e0d023c5caa4901566c59a4a5079c7f646d609b,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7494,f47529c182330448e8aab49fa00cf3642c95ccb2,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7495,f47529c182330448e8aab49fa00cf3642c95ccb2,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
7496,f47529c182330448e8aab49fa00cf3642c95ccb2,/jenkins/Dockerfile,"# workaround ""apt-key adv --recv-keys"" hanging in stretch and above
"
7497,43cc3715310f0a844dd8ba118ee3ad5e3f1958e6,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7498,43cc3715310f0a844dd8ba118ee3ad5e3f1958e6,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7499,43cc3715310f0a844dd8ba118ee3ad5e3f1958e6,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7500,43cc3715310f0a844dd8ba118ee3ad5e3f1958e6,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7501,43cc3715310f0a844dd8ba118ee3ad5e3f1958e6,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7502,dd4a53aa2e13e827e8e02a43056b678b99238b9c,/syncthing/Dockerfile,"# gpg: key BCE524C7: public key ""Jakob Borg (calmh) <jakob@nym.se>"" imported
"
7503,b4e3d3cf7a98d179762696e5a4f4661abf22e785,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7504,b4e3d3cf7a98d179762696e5a4f4661abf22e785,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7505,b4e3d3cf7a98d179762696e5a4f4661abf22e785,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7506,b4e3d3cf7a98d179762696e5a4f4661abf22e785,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7507,b4e3d3cf7a98d179762696e5a4f4661abf22e785,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7508,e0c66d9512fff829c6eb5ec02869ba77fd58bdbe,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
7509,b95a86fc8274cee0eb03192c6591f53ca86e20db,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7510,b95a86fc8274cee0eb03192c6591f53ca86e20db,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7511,b95a86fc8274cee0eb03192c6591f53ca86e20db,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7512,b95a86fc8274cee0eb03192c6591f53ca86e20db,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7513,b95a86fc8274cee0eb03192c6591f53ca86e20db,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7514,ac78e01e4644d123f93f2c794b94b79f473b450d,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7515,991e715fd1ec26d6b3314aa38018c730d38508c3,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7516,991e715fd1ec26d6b3314aa38018c730d38508c3,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7517,991e715fd1ec26d6b3314aa38018c730d38508c3,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7518,991e715fd1ec26d6b3314aa38018c730d38508c3,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7519,991e715fd1ec26d6b3314aa38018c730d38508c3,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7520,59886f0f8156f05a4b05f4b2b8782e2175ca4a76,/skype/Dockerfile,"# see https://repo.skype.com

"
7521,59886f0f8156f05a4b05f4b2b8782e2175ca4a76,/skype/Dockerfile,"# https://repo.skype.com/data/SKYPE-GPG-KEY
"
7522,59886f0f8156f05a4b05f4b2b8782e2175ca4a76,/skype/Dockerfile,"# pub   2048R/DF7587C3 2016-06-22 [expires: 2021-06-21]
#       Key fingerprint = D404 0146 BE39 7250 9FD5  7FC7 1F30 45A5 DF75 87C3
# uid                  Skype Linux Client Repository <se-um@microsoft.com>
# sub   2048R/A4EBB320 2016-06-22 [expires: 2021-06-21]
"
7523,d3dce85b40bba79314681a2125b372087107c079,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7524,d3dce85b40bba79314681a2125b372087107c079,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7525,d3dce85b40bba79314681a2125b372087107c079,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7526,d3dce85b40bba79314681a2125b372087107c079,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7527,d3dce85b40bba79314681a2125b372087107c079,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7528,bd7e1e03eb34641263ad8dcdc0e6eef010712f03,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7529,bd7e1e03eb34641263ad8dcdc0e6eef010712f03,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
7530,bd7e1e03eb34641263ad8dcdc0e6eef010712f03,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
7531,bd7e1e03eb34641263ad8dcdc0e6eef010712f03,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
7532,bd7e1e03eb34641263ad8dcdc0e6eef010712f03,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
7533,fc3466630344745d980338134ae89d8988fe72d3,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7534,fc3466630344745d980338134ae89d8988fe72d3,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7535,fc3466630344745d980338134ae89d8988fe72d3,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7536,fc3466630344745d980338134ae89d8988fe72d3,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7537,fc3466630344745d980338134ae89d8988fe72d3,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7538,69a8d295fd451a8430721d0881c08d3e2f051ca5,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7539,69a8d295fd451a8430721d0881c08d3e2f051ca5,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7540,69a8d295fd451a8430721d0881c08d3e2f051ca5,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7541,69a8d295fd451a8430721d0881c08d3e2f051ca5,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7542,69a8d295fd451a8430721d0881c08d3e2f051ca5,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7543,1a0d23caca1c4e3de43e5b76cb62deb14ccece17,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7544,1a0d23caca1c4e3de43e5b76cb62deb14ccece17,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7545,1a0d23caca1c4e3de43e5b76cb62deb14ccece17,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7546,1a0d23caca1c4e3de43e5b76cb62deb14ccece17,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7547,1a0d23caca1c4e3de43e5b76cb62deb14ccece17,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7548,0459e55dafaec66e18d15fedee8d68b36a5f4d38,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7549,0459e55dafaec66e18d15fedee8d68b36a5f4d38,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7550,0459e55dafaec66e18d15fedee8d68b36a5f4d38,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7551,0459e55dafaec66e18d15fedee8d68b36a5f4d38,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7552,0459e55dafaec66e18d15fedee8d68b36a5f4d38,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7553,7bb7b72637a7c79aefe7e93ba98bb3f1fdeeaeeb,/exim4/Dockerfile,"# grab tini for signal processing and zombie killing
"
7554,7bb7b72637a7c79aefe7e93ba98bb3f1fdeeaeeb,/exim4/Dockerfile,"# https://blog.dhampir.no/content/exim4-line-length-in-debian-stretch-mail-delivery-failed-returning-message-to-sender
# https://serverfault.com/a/881197
# https://bugs.debian.org/828801
"
7555,888a53ef4ad2d1d56ff16d0d572b2ddc072c7748,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7556,888a53ef4ad2d1d56ff16d0d572b2ddc072c7748,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
7557,888a53ef4ad2d1d56ff16d0d572b2ddc072c7748,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
7558,888a53ef4ad2d1d56ff16d0d572b2ddc072c7748,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
7559,888a53ef4ad2d1d56ff16d0d572b2ddc072c7748,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
7560,5335006dc1ec19760337b5194f1d747f39777cf2,/skype/Dockerfile,"# see https://repo.skype.com

"
7561,5335006dc1ec19760337b5194f1d747f39777cf2,/skype/Dockerfile,"# https://repo.skype.com/data/SKYPE-GPG-KEY
"
7562,5335006dc1ec19760337b5194f1d747f39777cf2,/skype/Dockerfile,"# pub   2048R/DF7587C3 2016-06-22 [expires: 2021-06-21]
#       Key fingerprint = D404 0146 BE39 7250 9FD5  7FC7 1F30 45A5 DF75 87C3
# uid                  Skype Linux Client Repository <se-um@microsoft.com>
# sub   2048R/A4EBB320 2016-06-22 [expires: 2021-06-21]
"
7563,90d86ad63c4a06b7d04d14ad830381b876183b3c,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
7564,d56de3a48e38bfcb4186e16dc2a6efceb9ed9964,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7565,2eef0a96f3a390fc5709a7aa236628cbbdac9c53,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7566,2eef0a96f3a390fc5709a7aa236628cbbdac9c53,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7567,2eef0a96f3a390fc5709a7aa236628cbbdac9c53,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7568,2eef0a96f3a390fc5709a7aa236628cbbdac9c53,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7569,2eef0a96f3a390fc5709a7aa236628cbbdac9c53,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7570,3e0d50cc2a629f7eaa546d05022479375a573162,/google-musicmanager/Dockerfile,"# https://www.google.com/linuxrepositories/
"
7571,3e0d50cc2a629f7eaa546d05022479375a573162,/google-musicmanager/Dockerfile,"# pub   rsa4096 2016-04-12 [SC]
#       EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796
# uid           [ unknown] Google Inc. (Linux Packages Signing Authority) <linux-packages-keymaster@google.com>
# sub   rsa4096 2016-04-12 [S] [expires: 2019-04-12]
"
7572,3e0d50cc2a629f7eaa546d05022479375a573162,/google-musicmanager/Dockerfile,"# pub   dsa1024 2007-03-08 [SC]
#       4CCA 1EAF 950C EE4A B839  76DC A040 830F 7FAC 5991
# uid           [ unknown] Google, Inc. Linux Package Signing Key <linux-packages-keymaster@google.com>
# sub   elg2048 2007-03-08 [E]
#		4CCA1EAF950CEE4AB83976DCA040830F7FAC5991

"
7573,3e0d50cc2a629f7eaa546d05022479375a573162,/google-musicmanager/Dockerfile,"# only stretch+ supports --armor in trusted.gpg.asc
#	gpg --export --armor $GPG_KEYS | tee /etc/apt/trusted.gpg.d/google.gpg.asc; \
"
7574,3839f20948900084dfb766ca6bf34bed458af812,/makemkv/Dockerfile,"# This disc requires Java runtime (JRE), but none was found. Certain functions will fail, please install Java. See http://www.makemkv.com/bdjava/ for details.
"
7575,3839f20948900084dfb766ca6bf34bed458af812,/makemkv/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
7576,3839f20948900084dfb766ca6bf34bed458af812,/makemkv/Dockerfile,"# FPL_MainFeature detection only seemed to work with OpenJDK 9 (8 was insufficient)
"
7577,3839f20948900084dfb766ca6bf34bed458af812,/makemkv/Dockerfile,"# http://www.makemkv.com/forum2/viewtopic.php?f=3&t=224
"
7578,3839f20948900084dfb766ca6bf34bed458af812,/makemkv/Dockerfile,"# beta code: http://www.makemkv.com/forum2/viewtopic.php?f=5&t=1053
"
7579,3839f20948900084dfb766ca6bf34bed458af812,/makemkv/Dockerfile,"# pub   dsa2048 2017-05-26 [SC]
#       2ECF 2330 5F1F C0B3 2001  6733 94E3 083A 1804 2697
# uid           [ unknown] MakeMKV (signature) <support@makemkv.com>
"
7580,293dea5a804eccd6508cf60fc8a121b693f652de,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7581,cf588d32013982d7b9a37f7ecd5052168b29b933,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7582,cf588d32013982d7b9a37f7ecd5052168b29b933,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7583,cf588d32013982d7b9a37f7ecd5052168b29b933,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7584,cf588d32013982d7b9a37f7ecd5052168b29b933,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7585,cf588d32013982d7b9a37f7ecd5052168b29b933,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7586,62cf23c2b8f38a650f4d2bf6291260596ed9f952,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7587,62cf23c2b8f38a650f4d2bf6291260596ed9f952,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7588,62cf23c2b8f38a650f4d2bf6291260596ed9f952,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7589,62cf23c2b8f38a650f4d2bf6291260596ed9f952,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7590,62cf23c2b8f38a650f4d2bf6291260596ed9f952,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7591,7eaebf64865f70f9ddf958e053a1b183a662df04,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7592,7eaebf64865f70f9ddf958e053a1b183a662df04,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7593,7eaebf64865f70f9ddf958e053a1b183a662df04,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7594,7eaebf64865f70f9ddf958e053a1b183a662df04,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7595,7eaebf64865f70f9ddf958e053a1b183a662df04,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7596,ac158e710ebec223929f54c873114b80878678b7,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7597,ac158e710ebec223929f54c873114b80878678b7,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7598,ac158e710ebec223929f54c873114b80878678b7,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7599,ac158e710ebec223929f54c873114b80878678b7,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7600,ac158e710ebec223929f54c873114b80878678b7,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7601,5a62d280cd13b5cba677eee152e8842cffe60248,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7602,5a62d280cd13b5cba677eee152e8842cffe60248,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7603,5a62d280cd13b5cba677eee152e8842cffe60248,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7604,5a62d280cd13b5cba677eee152e8842cffe60248,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7605,5a62d280cd13b5cba677eee152e8842cffe60248,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7606,72f1b5b516034813e4060a177e6af9e766020129,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7607,72f1b5b516034813e4060a177e6af9e766020129,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7608,72f1b5b516034813e4060a177e6af9e766020129,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7609,72f1b5b516034813e4060a177e6af9e766020129,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7610,72f1b5b516034813e4060a177e6af9e766020129,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7611,bf65ddace6124612045f163fdbb4fa740ebb3ae3,/docker-tianon/Dockerfile,"# https://github.com/docker-library/docker/pull/166
#   dockerd-entrypoint.sh uses DOCKER_TLS_CERTDIR for auto-generating TLS certificates
#   docker-entrypoint.sh uses DOCKER_TLS_CERTDIR for auto-setting DOCKER_TLS_VERIFY and DOCKER_CERT_PATH
# (For this to work, at least the ""client"" subdirectory of this path needs to be shared between the client and server containers via a volume, ""docker cp"", or other means of data sharing.)
"
7612,bf65ddace6124612045f163fdbb4fa740ebb3ae3,/docker-tianon/Dockerfile,"# also, ensure the directory pre-exists and has wide enough permissions for ""dockerd-entrypoint.sh"" to create subdirectories, even when run in ""rootless"" mode
"
7613,bf65ddace6124612045f163fdbb4fa740ebb3ae3,/docker-tianon/Dockerfile,"# (doing both /certs and /certs/client so that if Docker does a ""copy-up"" into a volume defined on /certs/client, it will ""do the right thing"" by default in a way that still works for rootless users)

"
7614,bf65ddace6124612045f163fdbb4fa740ebb3ae3,/docker-tianon/Dockerfile,"# dind

"
7615,bf65ddace6124612045f163fdbb4fa740ebb3ae3,/docker-tianon/Dockerfile,"# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
"
7616,a925d11edaf928b50c833de8a5ba9088551e4c17,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7617,a925d11edaf928b50c833de8a5ba9088551e4c17,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7618,a925d11edaf928b50c833de8a5ba9088551e4c17,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7619,a925d11edaf928b50c833de8a5ba9088551e4c17,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7620,a925d11edaf928b50c833de8a5ba9088551e4c17,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7621,d88f028897e528e47ab15d8e3b75e2e1457c45d6,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7622,d88f028897e528e47ab15d8e3b75e2e1457c45d6,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7623,d88f028897e528e47ab15d8e3b75e2e1457c45d6,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7624,d88f028897e528e47ab15d8e3b75e2e1457c45d6,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7625,d88f028897e528e47ab15d8e3b75e2e1457c45d6,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7626,eb38827fca1496b909ee80134589d5850cc4a5a1,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7627,eb38827fca1496b909ee80134589d5850cc4a5a1,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
7628,eb38827fca1496b909ee80134589d5850cc4a5a1,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
7629,d7b3d4178857cfb88019e1d09784a2f4372583b7,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7630,e6a3343fbca49365f1a64cca88574b1299293ed7,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7631,8e12d01c4ceebf305705c18a16e39989b16e0089,/syncthing/Dockerfile,"# gpg: key BCE524C7: public key ""Jakob Borg (calmh) <jakob@nym.se>"" imported
"
7632,e446f979a74c09765b5c880d103a44dd7758f3fe,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7633,0fd96789e65637f482593aa050586a7e00fd3760,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
7634,954af8b86629e5d3954a1fd6efe807f2dc2399ac,/tinygo/Dockerfile,"# the .deb (as of 0.6.0) installs to /usr/local/tinygo but doesn't add ""tinygo"" to PATH
"
7635,954af8b86629e5d3954a1fd6efe807f2dc2399ac,/tinygo/Dockerfile,"# https://tinygo.org/getting-started/linux/

# https://github.com/tinygo-org/tinygo/releases
"
7636,d3085887288ee4329036d05b10b4d8823a1e0c4d,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
7637,e5bc34b6ffad0926e3f89b9e7ff2aa85fae112f0,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7638,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/14.04/Dockerfile,"# much of this was gleaned from https://github.com/lxc/lxc/blob/lxc-0.8.0/templates/lxc-ubuntu.in
# and then heavily modified and hacked like crazy

# we're going to want this bad boy installed so we can connect :)
"
7639,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/14.04/Dockerfile,"# undo some leet hax of the base image
"
7640,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/14.04/Dockerfile,"# generate a nice UTF-8 locale for our use
"
7641,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/14.04/Dockerfile,"# remove some pointless services
"
7642,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/14.04/Dockerfile,"# /lib/init/fstab: cleared out for bare-bones Docker' > /lib/init/fstab

# small fix for SSH in 13.10 (that's harmless everywhere else)
"
7643,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/14.04/Dockerfile,"# let Upstart know it's in a container
"
7644,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/14.04/Dockerfile,"# set a cheap, simple password for great convenience
"
7645,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/14.04/Dockerfile,"# we can has SSH
"
7646,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/14.04/Dockerfile,"# prepare for takeoff
"
7647,8c08cd3e829dc48494c3567b3c8706cc29389ba6,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7648,799e49e0531d26bfc992bc2bbd4429c1de297f29,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7649,56f879f14bdc88baefd533c73cb688b9d4f1a987,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7650,56f879f14bdc88baefd533c73cb688b9d4f1a987,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7651,56f879f14bdc88baefd533c73cb688b9d4f1a987,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7652,56f879f14bdc88baefd533c73cb688b9d4f1a987,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7653,56f879f14bdc88baefd533c73cb688b9d4f1a987,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7654,42193871834fe996b021a5b8129abe3bd6b4e4b2,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7655,a6d29deac5f3dde1182c08ac80314d2b8643697f,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7656,a6d29deac5f3dde1182c08ac80314d2b8643697f,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
7657,a6d29deac5f3dde1182c08ac80314d2b8643697f,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
7658,a6d29deac5f3dde1182c08ac80314d2b8643697f,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
7659,a6d29deac5f3dde1182c08ac80314d2b8643697f,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
7660,5d8abfae130c52b1dac0156c6794fe5ca2a92b76,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7661,60f592f73144aeb547bd4e51d4682291fc9c305c,/mongodb-mms/Dockerfile,"# see https://mms.mongodb.com/settings/monitoring-agent
# click on ""Ubuntu 12.04+""
"
7662,60f592f73144aeb547bd4e51d4682291fc9c305c,/mongodb-mms/Dockerfile,"# missing dep in mms.deb
"
7663,7f532cfbc201fc4c67393c25e44a468ab763cb32,/kafka/Dockerfile,"# https://kafka.apache.org/downloads.html
"
7664,7f532cfbc201fc4c67393c25e44a468ab763cb32,/kafka/Dockerfile,"# https://issues.apache.org/jira/browse/INFRA-8753?focusedCommentId=14735394#comment-14735394
"
7665,7f532cfbc201fc4c67393c25e44a468ab763cb32,/kafka/Dockerfile,"# if the version is outdated, we might have to pull from the dist/archive :/
"
7666,7f532cfbc201fc4c67393c25e44a468ab763cb32,/kafka/Dockerfile,"# not all the mirrors actually carry the .asc files :'(
"
7667,e03db50a504e4c2d9754273a2967f6ce8bdd2154,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7668,e03db50a504e4c2d9754273a2967f6ce8bdd2154,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7669,e03db50a504e4c2d9754273a2967f6ce8bdd2154,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7670,e03db50a504e4c2d9754273a2967f6ce8bdd2154,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7671,e03db50a504e4c2d9754273a2967f6ce8bdd2154,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7672,3c7c7bed404009ee7aeac9421c521000017cd5cc,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7673,5ed05dc153e6c0e39ef049df029cb11264de6553,/makemkv/Dockerfile,"# This disc requires Java runtime (JRE), but none was found. Certain functions will fail, please install Java. See http://www.makemkv.com/bdjava/ for details.
"
7674,5ed05dc153e6c0e39ef049df029cb11264de6553,/makemkv/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
7675,5ed05dc153e6c0e39ef049df029cb11264de6553,/makemkv/Dockerfile,"# FPL_MainFeature detection only seemed to work with OpenJDK 9 (8 was insufficient)
"
7676,5ed05dc153e6c0e39ef049df029cb11264de6553,/makemkv/Dockerfile,"# Unable to execute external program 'ccextractor' as its path is not set in preferences
# Failed to execute external program 'ccextractor' from location '/usr/local/bin/mmccextr'
# (but it doesn't exist in the perferences dialog...)
"
7677,5ed05dc153e6c0e39ef049df029cb11264de6553,/makemkv/Dockerfile,"# http://www.makemkv.com/forum2/viewtopic.php?f=3&t=224
"
7678,5ed05dc153e6c0e39ef049df029cb11264de6553,/makemkv/Dockerfile,"# beta code: http://www.makemkv.com/forum2/viewtopic.php?f=5&t=1053
"
7679,5ed05dc153e6c0e39ef049df029cb11264de6553,/makemkv/Dockerfile,"# pub   dsa2048 2017-05-26 [SC]
#       2ECF 2330 5F1F C0B3 2001  6733 94E3 083A 1804 2697
# uid           [ unknown] MakeMKV (signature) <support@makemkv.com>
"
7680,774333c69fa8b03703356bb92346866287098c8f,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7681,774333c69fa8b03703356bb92346866287098c8f,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
7682,774333c69fa8b03703356bb92346866287098c8f,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
7683,80f1e6f3331de8c1dc0a82e90c43c9a1efc07383,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7684,80f1e6f3331de8c1dc0a82e90c43c9a1efc07383,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7685,80f1e6f3331de8c1dc0a82e90c43c9a1efc07383,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7686,80f1e6f3331de8c1dc0a82e90c43c9a1efc07383,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7687,80f1e6f3331de8c1dc0a82e90c43c9a1efc07383,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7688,dc2aac00c92b56ff4e00eb832260daca8ac80161,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7689,27c3ac724e24f69dd52ee9991dcf726f2cb94c22,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7690,aad3391472c1e25612c3486643d08de9dd4d1876,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7691,aad3391472c1e25612c3486643d08de9dd4d1876,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7692,aad3391472c1e25612c3486643d08de9dd4d1876,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7693,aad3391472c1e25612c3486643d08de9dd4d1876,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7694,aad3391472c1e25612c3486643d08de9dd4d1876,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7695,7260b59db86ff29c5a9e604ba857795362003071,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7696,7260b59db86ff29c5a9e604ba857795362003071,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7697,7260b59db86ff29c5a9e604ba857795362003071,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7698,7260b59db86ff29c5a9e604ba857795362003071,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7699,7260b59db86ff29c5a9e604ba857795362003071,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7700,f6b063a9f4ff5d746ee8a440958ea2ce4bf670c7,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7701,f6b063a9f4ff5d746ee8a440958ea2ce4bf670c7,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
7702,f6b063a9f4ff5d746ee8a440958ea2ce4bf670c7,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
7703,f6b063a9f4ff5d746ee8a440958ea2ce4bf670c7,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
7704,f6b063a9f4ff5d746ee8a440958ea2ce4bf670c7,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
7705,bf280dd05298c804b7aeb674b5019c6be51f4a16,/google-cloud-print-connector/Dockerfile,"# fetch dependencies
# format: import-path=strip-components=tarball-url
"
7706,bf280dd05298c804b7aeb674b5019c6be51f4a16,/google-cloud-print-connector/Dockerfile,"# https://github.com/coreos/go-systemd/releases
"
7707,bf280dd05298c804b7aeb674b5019c6be51f4a16,/google-cloud-print-connector/Dockerfile,"# https://github.com/satori/go.uuid/releases
"
7708,bf280dd05298c804b7aeb674b5019c6be51f4a16,/google-cloud-print-connector/Dockerfile,"# https://github.com/urfave/cli/releases
"
7709,bf280dd05298c804b7aeb674b5019c6be51f4a16,/google-cloud-print-connector/Dockerfile,"# https://github.com/golang/net/commits/master
"
7710,bf280dd05298c804b7aeb674b5019c6be51f4a16,/google-cloud-print-connector/Dockerfile,"# https://github.com/golang/oauth2/commits/master
"
7711,bf280dd05298c804b7aeb674b5019c6be51f4a16,/google-cloud-print-connector/Dockerfile,"# https://bazaar.launchpad.net/~chipaca/go-xdg/v0/files (""view revision"")
# https://bazaar.launchpad.net/~chipaca/go-xdg/v0/revision/10?start_revid=10 (""download tarball"")
"
7712,bf280dd05298c804b7aeb674b5019c6be51f4a16,/google-cloud-print-connector/Dockerfile,"#*=}""; dep=""${dep%=$strip}""; \
"
7713,bf280dd05298c804b7aeb674b5019c6be51f4a16,/google-cloud-print-connector/Dockerfile,"#*=}""; strip=""${strip%=$tarball}""; \
"
7714,bf280dd05298c804b7aeb674b5019c6be51f4a16,/google-cloud-print-connector/Dockerfile,"# https://github.com/google/cloud-print-connector/releases
"
7715,fcc0aad9df0539b398bf2822147eb4aeab5cb005,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7716,411047ef1ca2cc9ad07033680475386c31500e1f,/toybox/Dockerfile,"# ideally, we'd use official static binary releases from http://landley.net/toybox/downloads/binaries/ but they don't include the (pending) ""sh"" implementation so they're not quite enough for a full system yet

"
7717,411047ef1ca2cc9ad07033680475386c31500e1f,/toybox/Dockerfile,"# https://landley.net/toybox/downloads/?C=M;O=D
# https://github.com/landley/toybox/releases
"
7718,411047ef1ca2cc9ad07033680475386c31500e1f,/toybox/Dockerfile,"# (we set ""BUILTIN=1"" to avoid cpio / initramfs creation because we aren't building / don't need a kernel)

"
7719,a2f473344d194f756d4ce3aaeed3a1d8a74af59e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7720,a2f473344d194f756d4ce3aaeed3a1d8a74af59e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7721,a2f473344d194f756d4ce3aaeed3a1d8a74af59e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7722,a2f473344d194f756d4ce3aaeed3a1d8a74af59e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7723,a2f473344d194f756d4ce3aaeed3a1d8a74af59e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7724,8c9a6085a5048c34002576a2fa6a0df5ff0ddb5d,/diffoscope/Dockerfile,"# xxd (xxd not available in path. Falling back to Python hexlify.)
"
7725,8c9a6085a5048c34002576a2fa6a0df5ff0ddb5d,/diffoscope/Dockerfile,"# readelf ('readelf' not available in path. Falling back to binary comparison.)
"
7726,8c9a6085a5048c34002576a2fa6a0df5ff0ddb5d,/diffoscope/Dockerfile,"# for ""diffoscope --progress""
"
7727,674b7dec4ade68cfa4719e2c5e7fbeda36a5963a,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
7728,674b7dec4ade68cfa4719e2c5e7fbeda36a5963a,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
7729,674b7dec4ade68cfa4719e2c5e7fbeda36a5963a,/plex/media-server/Dockerfile,"# the published deb has pre/post-inst scripts that don't really apply to Docker (so we'll skip ""install"" entirely)
# (as of 1.18.5.2309, they have bugs around Docker detection, which is mostly for avoiding init behavior)
"
7730,674b7dec4ade68cfa4719e2c5e7fbeda36a5963a,/plex/media-server/Dockerfile,"#	apt-get update; \
#	apt-get install /tmp/plex.deb; \
#	rm -rf /var/lib/apt/lists/*; \
"
7731,9bbfdc2a8abaf87edec42dff46095f5943395871,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7732,40665c2d2de92ebc99c9542807ace5832c6a627b,/lutris/Dockerfile,"# install Wine
#   https://github.com/lutris/docs/blob/f2bf5ca14f280e3c58d2306581294d57650c0cc2/WineDependencies.md
#   https://wiki.winehq.org/Ubuntu
"
7733,40665c2d2de92ebc99c9542807ace5832c6a627b,/lutris/Dockerfile,"# https://dl.winehq.org/wine-builds/ubuntu/dists/focal/main/binary-amd64/?C=N;O=D
# https://www.winehq.org/news/
"
7734,40665c2d2de92ebc99c9542807ace5832c6a627b,/lutris/Dockerfile,"# ""Add SDL2 Backports PPA (for Faudio package):""
"
7735,40665c2d2de92ebc99c9542807ace5832c6a627b,/lutris/Dockerfile,"# ""For compatibility reasons, install these additional libraries:""
"
7736,40665c2d2de92ebc99c9542807ace5832c6a627b,/lutris/Dockerfile,"# https://github.com/Winetricks/winetricks/releases
"
7737,40665c2d2de92ebc99c9542807ace5832c6a627b,/lutris/Dockerfile,"# https://launchpad.net/~lutris-team/+archive/ubuntu/lutris?field.series_filter=focal
"
7738,40665c2d2de92ebc99c9542807ace5832c6a627b,/lutris/Dockerfile,"# https://github.com/lutris/docs/blob/f2bf5ca14f280e3c58d2306581294d57650c0cc2/InstallingDrivers.md
"
7739,40665c2d2de92ebc99c9542807ace5832c6a627b,/lutris/Dockerfile,"# gi.repository.GLib.Error: g-exec-error-quark: Failed to execute child process “dbus-launch” (No such file or directory) (8)
"
7740,40665c2d2de92ebc99c9542807ace5832c6a627b,/lutris/Dockerfile,"# /lutris-home/games/battle.net/state-cache-merge/state-cache-update.sh: line 8: zenity: command not found
"
7741,900c6bee0810ab4dbe36e76b55a9b647f4a4f780,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7742,900c6bee0810ab4dbe36e76b55a9b647f4a4f780,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7743,900c6bee0810ab4dbe36e76b55a9b647f4a4f780,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7744,900c6bee0810ab4dbe36e76b55a9b647f4a4f780,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7745,900c6bee0810ab4dbe36e76b55a9b647f4a4f780,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7746,91a465cf6f27da45f8d907db0f1640a2eecea53b,/dind/Dockerfile,"#RUN curl -sLS https://get.docker.io | sh

# let's grab the lastest ""master"" version of the install.sh script >:)
"
7747,600905de4e5ccc241154b1495a18b8f26677240b,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7748,7f6b804c988447bf3fdb461b9719f51036366dd7,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7749,7f6b804c988447bf3fdb461b9719f51036366dd7,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7750,7f6b804c988447bf3fdb461b9719f51036366dd7,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7751,7f6b804c988447bf3fdb461b9719f51036366dd7,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7752,7f6b804c988447bf3fdb461b9719f51036366dd7,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7753,f1261c9f45f1813b4a561b8de1f7c8c4d075cc96,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7754,f1261c9f45f1813b4a561b8de1f7c8c4d075cc96,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7755,f1261c9f45f1813b4a561b8de1f7c8c4d075cc96,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7756,f1261c9f45f1813b4a561b8de1f7c8c4d075cc96,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7757,f1261c9f45f1813b4a561b8de1f7c8c4d075cc96,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7758,8606236d585af4e1cbae27e0ca05cb68af32dce0,/exim4/Dockerfile,"# grab tini for signal processing and zombie killing
"
7759,8606236d585af4e1cbae27e0ca05cb68af32dce0,/exim4/Dockerfile,"# https://blog.dhampir.no/content/exim4-line-length-in-debian-stretch-mail-delivery-failed-returning-message-to-sender
# https://serverfault.com/a/881197
# https://bugs.debian.org/828801
"
7760,2b3b9ed7ad5e76ff28e78b0d4736760dfc4124e6,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7761,2b3b9ed7ad5e76ff28e78b0d4736760dfc4124e6,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7762,2b3b9ed7ad5e76ff28e78b0d4736760dfc4124e6,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7763,2b3b9ed7ad5e76ff28e78b0d4736760dfc4124e6,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7764,2b3b9ed7ad5e76ff28e78b0d4736760dfc4124e6,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7765,53584982fc2064909657bf4c5ec814f7579812af,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7766,53584982fc2064909657bf4c5ec814f7579812af,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7767,53584982fc2064909657bf4c5ec814f7579812af,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7768,53584982fc2064909657bf4c5ec814f7579812af,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7769,53584982fc2064909657bf4c5ec814f7579812af,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7770,3f40a2d259c5dec76803e4f8fb6bc8f8013d9b84,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7771,3f40a2d259c5dec76803e4f8fb6bc8f8013d9b84,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
7772,3f40a2d259c5dec76803e4f8fb6bc8f8013d9b84,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
7773,3f40a2d259c5dec76803e4f8fb6bc8f8013d9b84,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
7774,3f40a2d259c5dec76803e4f8fb6bc8f8013d9b84,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
7775,06cdf029bdfc9de17550d26989d5a365fa48128b,/makemkv/Dockerfile,"# http://www.makemkv.com/forum2/viewtopic.php?f=3&t=224
"
7776,06cdf029bdfc9de17550d26989d5a365fa48128b,/makemkv/Dockerfile,"# beta code: http://www.makemkv.com/forum2/viewtopic.php?f=5&t=1053
"
7777,e8ff394e8f8040bb55d0d34f1df6a2ebac60be38,/qemu/Dockerfile,"#		qemu-system \
#		qemu-utils \
"
7778,e8ff394e8f8040bb55d0d34f1df6a2ebac60be38,/qemu/Dockerfile,"# https://www.qemu.org/download/#source
"
7779,e8ff394e8f8040bb55d0d34f1df6a2ebac60be38,/qemu/Dockerfile,"# TODO verify signature
"
7780,e8ff394e8f8040bb55d0d34f1df6a2ebac60be38,/qemu/Dockerfile,"# system targets
# (https://sources.debian.org/src/qemu/stretch/debian/rules/#L57-L61, slimmed)
"
7781,e8ff394e8f8040bb55d0d34f1df6a2ebac60be38,/qemu/Dockerfile,"# user targets
# (https://sources.debian.org/src/qemu/stretch/debian/rules/#L81-L86, slimmed)
"
7782,e8ff394e8f8040bb55d0d34f1df6a2ebac60be38,/qemu/Dockerfile,"#		--enable-rbd \
#		--enable-vde \
"
7783,f08eb0a72c7cdc67f48d0e3b02325dac20def159,/jenkins/weekly/Dockerfile,"# grab gosu for easy step-down from root
"
7784,f08eb0a72c7cdc67f48d0e3b02325dac20def159,/jenkins/weekly/Dockerfile,"# grab tini for signal processing and zombie killing
"
7785,f08eb0a72c7cdc67f48d0e3b02325dac20def159,/jenkins/weekly/Dockerfile,"# https://groups.google.com/d/msg/jenkins-infra/c7m_72vUTXE/37zw9GXhAQAJ
"
7786,f08eb0a72c7cdc67f48d0e3b02325dac20def159,/jenkins/weekly/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
7787,73c0c656a0a02276fc85ef342b73ab5e8c6542d3,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7788,73c0c656a0a02276fc85ef342b73ab5e8c6542d3,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7789,73c0c656a0a02276fc85ef342b73ab5e8c6542d3,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7790,73c0c656a0a02276fc85ef342b73ab5e8c6542d3,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7791,73c0c656a0a02276fc85ef342b73ab5e8c6542d3,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7792,63959176d777fabd87b34391df22eeccef520422,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7793,63959176d777fabd87b34391df22eeccef520422,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7794,63959176d777fabd87b34391df22eeccef520422,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7795,63959176d777fabd87b34391df22eeccef520422,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7796,63959176d777fabd87b34391df22eeccef520422,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7797,398aaa6cbd911c4c788ac2f5f187e4afe40b3dc0,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7798,398aaa6cbd911c4c788ac2f5f187e4afe40b3dc0,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7799,398aaa6cbd911c4c788ac2f5f187e4afe40b3dc0,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7800,398aaa6cbd911c4c788ac2f5f187e4afe40b3dc0,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7801,398aaa6cbd911c4c788ac2f5f187e4afe40b3dc0,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7802,7732b1f22b125108bfad4e6e5e7f5a8d959b072c,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7803,c59841623f23a3064bad4a0cf000ff01cad41f42,/debian/devel/Dockerfile,"# let's make apt list package versions, since those are handy during devel
"
7804,c59841623f23a3064bad4a0cf000ff01cad41f42,/debian/devel/Dockerfile,"# normal build deps
"
7805,c59841623f23a3064bad4a0cf000ff01cad41f42,/debian/devel/Dockerfile,"# get dh-make-golang from Git since it's so rapidly changing
"
7806,c59841623f23a3064bad4a0cf000ff01cad41f42,/debian/devel/Dockerfile,"# need deb-src for compiling packages
"
7807,c59841623f23a3064bad4a0cf000ff01cad41f42,/debian/devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
7808,c59841623f23a3064bad4a0cf000ff01cad41f42,/debian/devel/Dockerfile,"# for ssh to debian hosts, let's make sure we know their fingerprints <3
"
7809,c59841623f23a3064bad4a0cf000ff01cad41f42,/debian/devel/Dockerfile,"# make sure things are pretty
"
7810,c59841623f23a3064bad4a0cf000ff01cad41f42,/debian/devel/Dockerfile,"#(force_color_prompt=yes)/\1/' ~/.bashrc

# quilt is much amaze: https://wiki.debian.org/UsingQuilt#Using_quilt_with_Debian_source_packages
"
7811,c59841623f23a3064bad4a0cf000ff01cad41f42,/debian/devel/Dockerfile,"# make sure pbuilder-dist uses a sane default mirror
"
7812,b33fcf6823e681845b08740af38e989117c42dd6,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7813,b33fcf6823e681845b08740af38e989117c42dd6,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
7814,b33fcf6823e681845b08740af38e989117c42dd6,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
7815,b33fcf6823e681845b08740af38e989117c42dd6,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
7816,b33fcf6823e681845b08740af38e989117c42dd6,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
7817,dd69664f5fa50efbb5a328e3bb80f0a9a6fe4ced,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7818,dd69664f5fa50efbb5a328e3bb80f0a9a6fe4ced,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7819,dd69664f5fa50efbb5a328e3bb80f0a9a6fe4ced,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7820,dd69664f5fa50efbb5a328e3bb80f0a9a6fe4ced,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7821,dd69664f5fa50efbb5a328e3bb80f0a9a6fe4ced,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7822,200c6c0ec2fe3b3f609599816d67df1b59f7d43f,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7823,1011bc890d51975889e23002378190d79dd05092,/snapcraft/Dockerfile,"# based initially on https://hub.docker.com/r/didrocks/snapcraft/
"
7824,1011bc890d51975889e23002378190d79dd05092,/snapcraft/Dockerfile,"# enable multiverse as snapcraft cleanbuild does
"
7825,1011bc890d51975889e23002378190d79dd05092,/snapcraft/Dockerfile,"# pin specific version so we can update with a natural cache bust
"
7826,441bfeb2caffa3b66cfcfcdfe76b13149e2527ed,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7827,441bfeb2caffa3b66cfcfcdfe76b13149e2527ed,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
7828,441bfeb2caffa3b66cfcfcdfe76b13149e2527ed,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
7829,bfed2767f3e52dde34a62f03294d71346859a7b5,/network-toolbox/alpine/Dockerfile,"# TODO add ""nbtscan"" when we get to Alpine 3.11 (if it makes it out of edge)
# https://pkgs.alpinelinux.org/packages?name=nbtscan&branch=edge&arch=x86_64

"
7830,683b8535bdd4dd7208f4f90386e6a8911acee8e6,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7831,683b8535bdd4dd7208f4f90386e6a8911acee8e6,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7832,683b8535bdd4dd7208f4f90386e6a8911acee8e6,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7833,683b8535bdd4dd7208f4f90386e6a8911acee8e6,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7834,683b8535bdd4dd7208f4f90386e6a8911acee8e6,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7835,5b2ba61e2241b22c89786d73ab47216160b89b36,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7836,dfb51563fe0b5080dba06b12bbe9e120268058a0,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7837,dfb51563fe0b5080dba06b12bbe9e120268058a0,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7838,dfb51563fe0b5080dba06b12bbe9e120268058a0,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7839,dfb51563fe0b5080dba06b12bbe9e120268058a0,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7840,dfb51563fe0b5080dba06b12bbe9e120268058a0,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7841,835fe9b8fc264be2002fd26c1c0c34cc712a3881,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
7842,835fe9b8fc264be2002fd26c1c0c34cc712a3881,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
7843,49f2b3d98a72eb075f0a66749d80e1922a253961,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7844,5d0b4491cc087a01d30c8ae84f29fafd486ee206,/ehour/Dockerfile,"# https://ehour.nl/download/downloadfile.php?get=ehour-latest-standalone-unix.sh
# https://ehour.nl/download/downloadfile.php?get=ehour-1.4.3-standalone-unix.sh
"
7845,d36642051d421ca96da60272cde8e7df40b7ed25,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
7846,ef9cf9438d12236072488bc6768c0504d53636ba,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7847,ef9cf9438d12236072488bc6768c0504d53636ba,/docker-master/Dockerfile,"# (no SHA file artifacts on download.docker.com yet as of 2017-06-07)

"
7848,ef9cf9438d12236072488bc6768c0504d53636ba,/docker-master/Dockerfile,"# https://github.com/docker-library/docker/pull/166
#   dockerd-entrypoint.sh uses DOCKER_TLS_CERTDIR for auto-generating TLS certificates
#   docker-entrypoint.sh uses DOCKER_TLS_CERTDIR for auto-setting DOCKER_TLS_VERIFY and DOCKER_CERT_PATH
# (For this to work, at least the ""client"" subdirectory of this path needs to be shared between the client and server containers via a volume, ""docker cp"", or other means of data sharing.)
"
7849,ef9cf9438d12236072488bc6768c0504d53636ba,/docker-master/Dockerfile,"# also, ensure the directory pre-exists and has wide enough permissions for ""dockerd-entrypoint.sh"" to create subdirectories, even when run in ""rootless"" mode
"
7850,ef9cf9438d12236072488bc6768c0504d53636ba,/docker-master/Dockerfile,"# (doing both /certs and /certs/client so that if Docker does a ""copy-up"" into a volume defined on /certs/client, it will ""do the right thing"" by default in a way that still works for rootless users)

"
7851,169a8f582b142bad00c03c0d22c449515bcf340d,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7852,169a8f582b142bad00c03c0d22c449515bcf340d,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7853,169a8f582b142bad00c03c0d22c449515bcf340d,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7854,169a8f582b142bad00c03c0d22c449515bcf340d,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7855,169a8f582b142bad00c03c0d22c449515bcf340d,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7856,ed4a6828a071f48b524098558a19021ec7cb9b0b,/mongodb-server/Dockerfile,"# we need stdout logging and binding on 0.0.0.0
"
7857,ed4a6828a071f48b524098558a19021ec7cb9b0b,/mongodb-server/Dockerfile,"#logpath/g; \
"
7858,08d36ebbea5d8c12ede1fac2086eba88c28320cb,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7859,08d36ebbea5d8c12ede1fac2086eba88c28320cb,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
7860,08d36ebbea5d8c12ede1fac2086eba88c28320cb,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
7861,3b0e925eb46d6ade792879f610b1d59ce4ed9bfe,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7862,c50bb1272a2f5ff5f1990018bb96038874c2f041,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7863,c50bb1272a2f5ff5f1990018bb96038874c2f041,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7864,c50bb1272a2f5ff5f1990018bb96038874c2f041,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7865,c50bb1272a2f5ff5f1990018bb96038874c2f041,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7866,c50bb1272a2f5ff5f1990018bb96038874c2f041,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7867,e3872662187caddf9bf72536532a2e197df12b51,/google-musicmanager/Dockerfile,"# https://www.google.com/linuxrepositories/
"
7868,e3872662187caddf9bf72536532a2e197df12b51,/google-musicmanager/Dockerfile,"# pub   rsa4096 2016-04-12 [SC]
#       EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796
# uid           [ unknown] Google Inc. (Linux Packages Signing Authority) <linux-packages-keymaster@google.com>
# sub   rsa4096 2016-04-12 [S] [expires: 2019-04-12]
"
7869,e3872662187caddf9bf72536532a2e197df12b51,/google-musicmanager/Dockerfile,"# pub   dsa1024 2007-03-08 [SC]
#       4CCA 1EAF 950C EE4A B839  76DC A040 830F 7FAC 5991
# uid           [ unknown] Google, Inc. Linux Package Signing Key <linux-packages-keymaster@google.com>
# sub   elg2048 2007-03-08 [E]
#		4CCA1EAF950CEE4AB83976DCA040830F7FAC5991

"
7870,43ecd12ca97a7c92651ad3d706f86903416f171a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7871,43ecd12ca97a7c92651ad3d706f86903416f171a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7872,43ecd12ca97a7c92651ad3d706f86903416f171a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7873,43ecd12ca97a7c92651ad3d706f86903416f171a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7874,43ecd12ca97a7c92651ad3d706f86903416f171a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7875,96302d4c1cf6ab69dda1b7bd106f22e5e995a3ce,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7876,96302d4c1cf6ab69dda1b7bd106f22e5e995a3ce,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7877,96302d4c1cf6ab69dda1b7bd106f22e5e995a3ce,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7878,96302d4c1cf6ab69dda1b7bd106f22e5e995a3ce,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7879,96302d4c1cf6ab69dda1b7bd106f22e5e995a3ce,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7880,a252864bafd25b3776b5ab61b4c3f0c2a94de441,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7881,a252864bafd25b3776b5ab61b4c3f0c2a94de441,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7882,a252864bafd25b3776b5ab61b4c3f0c2a94de441,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7883,a252864bafd25b3776b5ab61b4c3f0c2a94de441,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7884,a252864bafd25b3776b5ab61b4c3f0c2a94de441,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7885,90e8e9af32b27a45937f6b823b8776502b938556,/jenkins/weekly/Dockerfile,"# grab gosu for easy step-down from root
"
7886,90e8e9af32b27a45937f6b823b8776502b938556,/jenkins/weekly/Dockerfile,"# grab tini for signal processing and zombie killing
"
7887,90e8e9af32b27a45937f6b823b8776502b938556,/jenkins/weekly/Dockerfile,"# https://groups.google.com/d/msg/jenkins-infra/c7m_72vUTXE/37zw9GXhAQAJ
"
7888,90e8e9af32b27a45937f6b823b8776502b938556,/jenkins/weekly/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
7889,8a770950c03bdea2d6525fa169cc097765160391,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7890,8a770950c03bdea2d6525fa169cc097765160391,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7891,8a770950c03bdea2d6525fa169cc097765160391,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7892,8a770950c03bdea2d6525fa169cc097765160391,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7893,8a770950c03bdea2d6525fa169cc097765160391,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7894,007825e7a78bd969bf9b9e3b80859f965691ce40,/phpmyadmin/Dockerfile,"# https://www.phpmyadmin.net/downloads/
"
7895,007825e7a78bd969bf9b9e3b80859f965691ce40,/phpmyadmin/Dockerfile,"# https://docs.phpmyadmin.net/en/latest/setup.html#verifying-phpmyadmin-releases
"
7896,007825e7a78bd969bf9b9e3b80859f965691ce40,/phpmyadmin/Dockerfile,"# Since July 2015 all phpMyAdmin releases are cryptographically signed by the releasing developer, who through January 2016 was Marc Delisle.
"
7897,007825e7a78bd969bf9b9e3b80859f965691ce40,/phpmyadmin/Dockerfile,"# Beginning in January 2016, the release manager is Isaac Bennetch.
"
7898,007825e7a78bd969bf9b9e3b80859f965691ce40,/phpmyadmin/Dockerfile,"# Some additional downloads (for example themes) might be signed by Michal Čihař.
"
7899,b949be7e7afb1e97686f36b3ea995bade77f53a0,/diffoscope/Dockerfile,"# xxd (xxd not available in path. Falling back to Python hexlify.)
"
7900,b949be7e7afb1e97686f36b3ea995bade77f53a0,/diffoscope/Dockerfile,"# readelf ('readelf' not available in path. Falling back to binary comparison.)
"
7901,b949be7e7afb1e97686f36b3ea995bade77f53a0,/diffoscope/Dockerfile,"# for ""diffoscope --progress""
"
7902,120073662b9e94af8d826cc550aeb049397066cc,/diffoscope/Dockerfile,"# xxd (xxd not available in path. Falling back to Python hexlify.)
"
7903,120073662b9e94af8d826cc550aeb049397066cc,/diffoscope/Dockerfile,"# readelf ('readelf' not available in path. Falling back to binary comparison.)
"
7904,412da3e76717481dd793b269dd1a1b6e3ee0b51a,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7905,412da3e76717481dd793b269dd1a1b6e3ee0b51a,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
7906,412da3e76717481dd793b269dd1a1b6e3ee0b51a,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
7907,a621a562535dca04e6775535799a91d9e08603a1,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7908,4f90341582d6d4c101e198fe073ff93812740a0f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7909,4f90341582d6d4c101e198fe073ff93812740a0f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7910,4f90341582d6d4c101e198fe073ff93812740a0f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7911,4f90341582d6d4c101e198fe073ff93812740a0f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7912,4f90341582d6d4c101e198fe073ff93812740a0f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7913,513cd96049b6730f1164b565dfb6554ae8a10bce,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7914,513cd96049b6730f1164b565dfb6554ae8a10bce,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
7915,513cd96049b6730f1164b565dfb6554ae8a10bce,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
7916,2aaf3fcaf59bc6d98b04c85bf01bc574c5d818a1,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7917,6fed6c458e929113a000c9192496f370c19bf862,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7918,6fed6c458e929113a000c9192496f370c19bf862,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7919,6fed6c458e929113a000c9192496f370c19bf862,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7920,6fed6c458e929113a000c9192496f370c19bf862,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7921,6fed6c458e929113a000c9192496f370c19bf862,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7922,40de22777daa5cefe4176fb29031f3e07f77c60c,/mutt-gmail/Dockerfile,"# a browser is necessary!
"
7923,40de22777daa5cefe4176fb29031f3e07f77c60c,/mutt-gmail/Dockerfile,"# my preferred editor :) (see also muttrc)
"
7924,498396b336a7f4afe42072bc48bf77410ecfa969,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7925,498396b336a7f4afe42072bc48bf77410ecfa969,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7926,498396b336a7f4afe42072bc48bf77410ecfa969,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7927,498396b336a7f4afe42072bc48bf77410ecfa969,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7928,498396b336a7f4afe42072bc48bf77410ecfa969,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7929,6f8ed12e24c47887de6365f08dcbd0bd652a0749,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7930,6f8ed12e24c47887de6365f08dcbd0bd652a0749,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7931,6f8ed12e24c47887de6365f08dcbd0bd652a0749,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7932,6f8ed12e24c47887de6365f08dcbd0bd652a0749,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7933,6f8ed12e24c47887de6365f08dcbd0bd652a0749,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7934,c1610b96ffcea268495de6bc01aa9d72c59f9392,/certbot/Dockerfile,"# Executable not found: can't find the executable for the dialog-like program
"
7935,c1610b96ffcea268495de6bc01aa9d72c59f9392,/certbot/Dockerfile,"#VOLUME /etc/letsencrypt
"
7936,c1610b96ffcea268495de6bc01aa9d72c59f9392,/certbot/Dockerfile,"#VOLUME /var/log/letsencrypt

"
7937,351d3fe5e470ef1b75e810f2dfba38c836c716f1,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7938,351d3fe5e470ef1b75e810f2dfba38c836c716f1,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7939,351d3fe5e470ef1b75e810f2dfba38c836c716f1,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7940,351d3fe5e470ef1b75e810f2dfba38c836c716f1,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7941,351d3fe5e470ef1b75e810f2dfba38c836c716f1,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7942,c0092cbdbf387a838a3944b8f95001c26e6601c8,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7943,adaa95f093734795175b24bc3a3c6a8ec4cba912,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7944,adaa95f093734795175b24bc3a3c6a8ec4cba912,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7945,adaa95f093734795175b24bc3a3c6a8ec4cba912,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7946,adaa95f093734795175b24bc3a3c6a8ec4cba912,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7947,adaa95f093734795175b24bc3a3c6a8ec4cba912,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7948,1e2679daf5ab9015b0814299d980b62379494b51,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7949,1e2679daf5ab9015b0814299d980b62379494b51,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7950,1e2679daf5ab9015b0814299d980b62379494b51,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7951,1e2679daf5ab9015b0814299d980b62379494b51,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7952,1e2679daf5ab9015b0814299d980b62379494b51,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7953,bb516f45da70aaa6f247d903f28cd6513e7087f3,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7954,bb516f45da70aaa6f247d903f28cd6513e7087f3,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
7955,bb516f45da70aaa6f247d903f28cd6513e7087f3,/jenkins/Dockerfile,"# https://groups.google.com/d/msg/jenkins-infra/c7m_72vUTXE/37zw9GXhAQAJ
"
7956,bb516f45da70aaa6f247d903f28cd6513e7087f3,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
7957,dff1a5455ae128fc4295e647aa04f1d1c15de0a1,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
7958,dff1a5455ae128fc4295e647aa04f1d1c15de0a1,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
"
7959,df6eebd693f0c283deddf1373b93349a22366cff,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7960,df6eebd693f0c283deddf1373b93349a22366cff,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7961,df6eebd693f0c283deddf1373b93349a22366cff,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7962,df6eebd693f0c283deddf1373b93349a22366cff,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7963,df6eebd693f0c283deddf1373b93349a22366cff,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7964,440d438ffb78fc31778ba2a3c7d60359ae4c0e11,/sbuild/Dockerfile,"# run with ""--cap-add SYS_ADMIN"" so that sbuild can ""mount"" in the chroots it creates

"
7965,440d438ffb78fc31778ba2a3c7d60359ae4c0e11,/sbuild/Dockerfile,"# https://github.com/tianon/debian-bin
# useful debian-related (esp. sbuild) scripts
"
7966,440d438ffb78fc31778ba2a3c7d60359ae4c0e11,/sbuild/Dockerfile,"# usage: download-debuerreotype-tarball.sh suite [arch]
#    ie: download-debuerreotype-tarball.sh stretch
#        download-debuerreotype-tarball.sh sid i386
"
7967,eeb6b78ca3b45e065941fe4d97dea8e01714fc46,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7968,eeb6b78ca3b45e065941fe4d97dea8e01714fc46,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7969,eeb6b78ca3b45e065941fe4d97dea8e01714fc46,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7970,eeb6b78ca3b45e065941fe4d97dea8e01714fc46,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7971,eeb6b78ca3b45e065941fe4d97dea8e01714fc46,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7972,03a9d14489e6bd0e958cc7081536784eee11008a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7973,03a9d14489e6bd0e958cc7081536784eee11008a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7974,03a9d14489e6bd0e958cc7081536784eee11008a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7975,03a9d14489e6bd0e958cc7081536784eee11008a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7976,03a9d14489e6bd0e958cc7081536784eee11008a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7977,c338e5d6d98b124a45ad16e06ca3d7f0ca7c4908,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7978,c338e5d6d98b124a45ad16e06ca3d7f0ca7c4908,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7979,c338e5d6d98b124a45ad16e06ca3d7f0ca7c4908,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7980,c338e5d6d98b124a45ad16e06ca3d7f0ca7c4908,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7981,c338e5d6d98b124a45ad16e06ca3d7f0ca7c4908,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7982,af013103ede09d56f60d0c4287402f767ab4dc12,/containerd/Dockerfile,"# runtime deps
"
7983,af013103ede09d56f60d0c4287402f767ab4dc12,/containerd/Dockerfile,"# https://github.com/opencontainers/runc/releases
"
7984,af013103ede09d56f60d0c4287402f767ab4dc12,/containerd/Dockerfile,"# TODO .asc / .sha256sum
"
7985,af013103ede09d56f60d0c4287402f767ab4dc12,/containerd/Dockerfile,"# https://github.com/containerd/containerd/releases
"
7986,720f492a57116c7d0300e70d5b491384dbcb8c50,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
7987,720f492a57116c7d0300e70d5b491384dbcb8c50,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
7988,720f492a57116c7d0300e70d5b491384dbcb8c50,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
7989,720f492a57116c7d0300e70d5b491384dbcb8c50,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
7990,720f492a57116c7d0300e70d5b491384dbcb8c50,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
7991,a925d11edaf928b50c833de8a5ba9088551e4c17,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
7992,9bcd03e0322b5d30e71f4fbc69563ed586802b19,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7993,9bcd03e0322b5d30e71f4fbc69563ed586802b19,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
7994,9bcd03e0322b5d30e71f4fbc69563ed586802b19,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
7995,9bcd03e0322b5d30e71f4fbc69563ed586802b19,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
7996,9bcd03e0322b5d30e71f4fbc69563ed586802b19,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
7997,ccf056b7fe79c67dea619c7a35e343bb6c575a15,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
7998,ccf056b7fe79c67dea619c7a35e343bb6c575a15,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
7999,ccf056b7fe79c67dea619c7a35e343bb6c575a15,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
8000,ccf056b7fe79c67dea619c7a35e343bb6c575a15,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
8001,ccf056b7fe79c67dea619c7a35e343bb6c575a15,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
8002,6890a71e73c1be0ce47e0278e0eabc28eb50bf19,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8003,6890a71e73c1be0ce47e0278e0eabc28eb50bf19,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8004,6890a71e73c1be0ce47e0278e0eabc28eb50bf19,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8005,6890a71e73c1be0ce47e0278e0eabc28eb50bf19,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8006,6890a71e73c1be0ce47e0278e0eabc28eb50bf19,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8007,8ef075012ed34e552adc8a1a25734bca08782d1f,/slack/Dockerfile,"# used as a fake browser so clicked URLs (and internal Slack behavior that wants to open a browser) pop up with a URL + clipboard instead of silently doing nothing
"
8008,8ef075012ed34e552adc8a1a25734bca08782d1f,/slack/Dockerfile,"# the .deb file linked at https://slack.com/downloads/instructions/debian includes ""/etc/cron.daily/slack"" which sets up an APT repo entry as in the following installation

# pub   rsa4096 2016-02-18 [SCEA]
#       DB08 5A08 CA13 B8AC B917  E0F6 D938 EC0D 0386 51BD
# uid           [ unknown] https://packagecloud.io/slacktechnologies/slack (https://packagecloud.io/docs#gpg_signing) <support@packagecloud.io>
# sub   rsa4096 2016-02-18 [SEA]
"
8009,8ef075012ed34e552adc8a1a25734bca08782d1f,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libX11-xcb.so.1: cannot open shared object file: No such file or directory
"
8010,8ef075012ed34e552adc8a1a25734bca08782d1f,/slack/Dockerfile,"# 3.0.2: slack: error while loading shared libraries: libasound.so.2: cannot open shared object file: No such file or directory
"
8011,8ef075012ed34e552adc8a1a25734bca08782d1f,/slack/Dockerfile,"# 3.3.3: slack: error while loading shared libraries: libgtk-3.so.0: cannot open shared object file: No such file or directory
"
8012,8ef075012ed34e552adc8a1a25734bca08782d1f,/slack/Dockerfile,"# 4.4.0: Error: libxkbfile.so.1: cannot open shared object file: No such file or directory
"
8013,8ef075012ed34e552adc8a1a25734bca08782d1f,/slack/Dockerfile,"# 4.4.0: libGL error: failed to load driver: (i915_dri.so, i194, i965, swrast_dir.so, swrast)
"
8014,74c1c756573654f424e7d50dd104e149900d15a7,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
8015,5611ddf36001ca35d63e65b5b35d061ab4518c29,/mongodb-mms/Dockerfile,"# see https://mms.mongodb.com/settings/monitoring-agent
# click on ""Ubuntu 12.04+""
"
8016,5611ddf36001ca35d63e65b5b35d061ab4518c29,/mongodb-mms/Dockerfile,"# missing dep in mms.deb
"
8017,7cc0727bc035751798399e3efc29d2ecdb1e6223,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
8018,7cc0727bc035751798399e3efc29d2ecdb1e6223,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
8019,7cc0727bc035751798399e3efc29d2ecdb1e6223,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
8020,2692bacca1472d4e541d868a081010cd52a5d9c2,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
8021,2e5377c34d1ac0f577f4bdfaf561e94df55dede1,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
8022,bc7006bad1c3cbf5ffbc71b4de743d78f83bd8d6,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
8023,8f268166258d2826574a987130a0eafe1f34223d,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8024,8f268166258d2826574a987130a0eafe1f34223d,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8025,8f268166258d2826574a987130a0eafe1f34223d,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8026,8f268166258d2826574a987130a0eafe1f34223d,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8027,8f268166258d2826574a987130a0eafe1f34223d,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8028,4f3c297e3d694f4033315d4f9e5b5248c0a0aadc,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8029,4f3c297e3d694f4033315d4f9e5b5248c0a0aadc,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8030,4f3c297e3d694f4033315d4f9e5b5248c0a0aadc,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8031,4f3c297e3d694f4033315d4f9e5b5248c0a0aadc,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8032,4f3c297e3d694f4033315d4f9e5b5248c0a0aadc,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8033,b15eec0e5dadf480a7b1ad3ba05ba7c2c176c802,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8034,b15eec0e5dadf480a7b1ad3ba05ba7c2c176c802,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8035,b15eec0e5dadf480a7b1ad3ba05ba7c2c176c802,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8036,b15eec0e5dadf480a7b1ad3ba05ba7c2c176c802,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8037,b15eec0e5dadf480a7b1ad3ba05ba7c2c176c802,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8038,d3c2d2a87a3a5678cc992895b4ac4d6d92523bc2,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
8039,16243eae94d9f611d158fb2dc03a0393630c47cc,/speedtest/Dockerfile,"# https://www.speedtest.net/apps/cli#download
"
8040,16243eae94d9f611d158fb2dc03a0393630c47cc,/speedtest/Dockerfile,"# TODO verify that ookla's ""armhf"" really is armv6
"
8041,16243eae94d9f611d158fb2dc03a0393630c47cc,/speedtest/Dockerfile,"# TODO figure out what ookla means by their bare ""arm"" arch
"
8042,16243eae94d9f611d158fb2dc03a0393630c47cc,/speedtest/Dockerfile,"#download)""; exit 1 ;; \
"
8043,e31916679af1168acca03df0e237863a7751b00b,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8044,e31916679af1168acca03df0e237863a7751b00b,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8045,e31916679af1168acca03df0e237863a7751b00b,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8046,e31916679af1168acca03df0e237863a7751b00b,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8047,e31916679af1168acca03df0e237863a7751b00b,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8048,aeb6e22348109a52a08f3fe8071fbb2afd2cea30,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8049,aeb6e22348109a52a08f3fe8071fbb2afd2cea30,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8050,aeb6e22348109a52a08f3fe8071fbb2afd2cea30,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8051,aeb6e22348109a52a08f3fe8071fbb2afd2cea30,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8052,aeb6e22348109a52a08f3fe8071fbb2afd2cea30,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8053,e854b648841f28e11087c810a4588fbf5e71f244,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
8054,49de7440a88e2ab634cdeddc685b74b0de71e3c7,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
8055,49de7440a88e2ab634cdeddc685b74b0de71e3c7,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
8056,49de7440a88e2ab634cdeddc685b74b0de71e3c7,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
8057,49de7440a88e2ab634cdeddc685b74b0de71e3c7,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
8058,49de7440a88e2ab634cdeddc685b74b0de71e3c7,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
8059,04c8eb2f94d4694b4f330b178eb959225b1f9e2b,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
8060,04c8eb2f94d4694b4f330b178eb959225b1f9e2b,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
"
8061,03dc862238ad35e438da873c8a8eeba13f933b39,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8062,03dc862238ad35e438da873c8a8eeba13f933b39,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8063,03dc862238ad35e438da873c8a8eeba13f933b39,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8064,03dc862238ad35e438da873c8a8eeba13f933b39,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8065,03dc862238ad35e438da873c8a8eeba13f933b39,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8066,90f2557271b550326d206a70cf3e7af86fac0b21,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8067,90f2557271b550326d206a70cf3e7af86fac0b21,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8068,90f2557271b550326d206a70cf3e7af86fac0b21,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8069,90f2557271b550326d206a70cf3e7af86fac0b21,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8070,90f2557271b550326d206a70cf3e7af86fac0b21,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8071,b5a8c636092cd472f94365f19ac47cd7a341cb1d,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
8072,1f1f802ffd39beaa33eb67b78db6f5b158c9f965,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8073,1f1f802ffd39beaa33eb67b78db6f5b158c9f965,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8074,1f1f802ffd39beaa33eb67b78db6f5b158c9f965,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8075,1f1f802ffd39beaa33eb67b78db6f5b158c9f965,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8076,1f1f802ffd39beaa33eb67b78db6f5b158c9f965,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8077,ffdbf1c1c08068890a46565907c160be7b06d86f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8078,ffdbf1c1c08068890a46565907c160be7b06d86f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8079,ffdbf1c1c08068890a46565907c160be7b06d86f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8080,ffdbf1c1c08068890a46565907c160be7b06d86f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8081,ffdbf1c1c08068890a46565907c160be7b06d86f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8082,b8eb67b19b1cc6548d3ce2d7e1f46e9053405295,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8083,b8eb67b19b1cc6548d3ce2d7e1f46e9053405295,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8084,b8eb67b19b1cc6548d3ce2d7e1f46e9053405295,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8085,b8eb67b19b1cc6548d3ce2d7e1f46e9053405295,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8086,b8eb67b19b1cc6548d3ce2d7e1f46e9053405295,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8087,81748916bea22af13edf1de9de54d4c367f0b5e6,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8088,81748916bea22af13edf1de9de54d4c367f0b5e6,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8089,81748916bea22af13edf1de9de54d4c367f0b5e6,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8090,81748916bea22af13edf1de9de54d4c367f0b5e6,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8091,81748916bea22af13edf1de9de54d4c367f0b5e6,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8092,90564c0d3ffb5f707f2d3c49d4a9f871b5b24511,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8093,90564c0d3ffb5f707f2d3c49d4a9f871b5b24511,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8094,90564c0d3ffb5f707f2d3c49d4a9f871b5b24511,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8095,90564c0d3ffb5f707f2d3c49d4a9f871b5b24511,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8096,90564c0d3ffb5f707f2d3c49d4a9f871b5b24511,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8097,37151e603dc92562d781dec3e88bdebf2b013c14,/mutt-gmail/Dockerfile,"# a browser is necessary!
"
8098,37151e603dc92562d781dec3e88bdebf2b013c14,/mutt-gmail/Dockerfile,"# my preferred editor :) (see also muttrc)
"
8099,2733bf5befe88d52b6e4126956499f97441871a6,/docker-tianon/Dockerfile,"# DOCKER_HOST=ssh://... -- https://github.com/docker/cli/pull/1014
"
8100,2733bf5befe88d52b6e4126956499f97441871a6,/docker-tianon/Dockerfile,"# https://doi-janky.infosiftr.net/job/tianon/job/docker-deb/job/repo/lastSuccessfulBuild/artifact/pool/buster/main/amd64/
"
8101,2733bf5befe88d52b6e4126956499f97441871a6,/docker-tianon/Dockerfile,"# https://github.com/docker-library/docker/pull/166
#   dockerd-entrypoint.sh uses DOCKER_TLS_CERTDIR for auto-generating TLS certificates
#   docker-entrypoint.sh uses DOCKER_TLS_CERTDIR for auto-setting DOCKER_TLS_VERIFY and DOCKER_CERT_PATH
# (For this to work, at least the ""client"" subdirectory of this path needs to be shared between the client and server containers via a volume, ""docker cp"", or other means of data sharing.)
"
8102,2733bf5befe88d52b6e4126956499f97441871a6,/docker-tianon/Dockerfile,"# also, ensure the directory pre-exists and has wide enough permissions for ""dockerd-entrypoint.sh"" to create subdirectories, even when run in ""rootless"" mode
"
8103,2733bf5befe88d52b6e4126956499f97441871a6,/docker-tianon/Dockerfile,"# (doing both /certs and /certs/client so that if Docker does a ""copy-up"" into a volume defined on /certs/client, it will ""do the right thing"" by default in a way that still works for rootless users)

# dind

"
8104,2733bf5befe88d52b6e4126956499f97441871a6,/docker-tianon/Dockerfile,"# pigz: https://github.com/moby/moby/pull/35697 (faster gzip implementation)
"
8105,2733bf5befe88d52b6e4126956499f97441871a6,/docker-tianon/Dockerfile,"# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
"
8106,2733bf5befe88d52b6e4126956499f97441871a6,/docker-tianon/Dockerfile,"# https://github.com/docker/docker/tree/master/hack/dind
#ENV DIND_COMMIT 130b0bc6032cc675d064e1cc62626cacc9c07a57

#RUN set -eux; \
#	wget -O /usr/local/bin/dind ""https://raw.githubusercontent.com/docker/docker/${DIND_COMMIT}/hack/dind""; \
#	chmod +x /usr/local/bin/dind

"
8107,f9ea39bf92b32b3a66e204c089e5a014f89f6b30,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8108,f9ea39bf92b32b3a66e204c089e5a014f89f6b30,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8109,f9ea39bf92b32b3a66e204c089e5a014f89f6b30,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8110,f9ea39bf92b32b3a66e204c089e5a014f89f6b30,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8111,f9ea39bf92b32b3a66e204c089e5a014f89f6b30,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8112,3e9d1801ed0979555a279368c13e217a495eef1d,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
8113,3e9d1801ed0979555a279368c13e217a495eef1d,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
8114,3e9d1801ed0979555a279368c13e217a495eef1d,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
8115,cc2775314f1a13a31a7286eef5f3cb564653df6c,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8116,cc2775314f1a13a31a7286eef5f3cb564653df6c,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8117,cc2775314f1a13a31a7286eef5f3cb564653df6c,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8118,cc2775314f1a13a31a7286eef5f3cb564653df6c,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8119,cc2775314f1a13a31a7286eef5f3cb564653df6c,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8120,d90178645cd2ed4c6af84b48d9fae1fa415d5499,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8121,d90178645cd2ed4c6af84b48d9fae1fa415d5499,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8122,d90178645cd2ed4c6af84b48d9fae1fa415d5499,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8123,d90178645cd2ed4c6af84b48d9fae1fa415d5499,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8124,d90178645cd2ed4c6af84b48d9fae1fa415d5499,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8125,4a956a012803e3fabcfef5a50a4fd2e7d97215d7,/mongodb-mms/Dockerfile,"# see https://mms.mongodb.com/settings/monitoring-agent
# click on ""Ubuntu 12.04+""
"
8126,b4b3cdc75f689854e7c72b86dc451e9f4051bf29,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8127,b4b3cdc75f689854e7c72b86dc451e9f4051bf29,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8128,b4b3cdc75f689854e7c72b86dc451e9f4051bf29,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8129,b4b3cdc75f689854e7c72b86dc451e9f4051bf29,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8130,b4b3cdc75f689854e7c72b86dc451e9f4051bf29,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8131,1dad3650f05b0ed6e6dd5b59e0e0542a0b2c54b6,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8132,1dad3650f05b0ed6e6dd5b59e0e0542a0b2c54b6,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8133,1dad3650f05b0ed6e6dd5b59e0e0542a0b2c54b6,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8134,1dad3650f05b0ed6e6dd5b59e0e0542a0b2c54b6,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8135,1dad3650f05b0ed6e6dd5b59e0e0542a0b2c54b6,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8136,3c83094a14225692f4709d6d98bf6a36e1c4f4ab,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8137,3c83094a14225692f4709d6d98bf6a36e1c4f4ab,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8138,3c83094a14225692f4709d6d98bf6a36e1c4f4ab,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8139,3c83094a14225692f4709d6d98bf6a36e1c4f4ab,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8140,3c83094a14225692f4709d6d98bf6a36e1c4f4ab,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8141,f6f2bfe595695f2b3225f39181bac5da7293f1de,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
8142,f6f2bfe595695f2b3225f39181bac5da7293f1de,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
8143,f6f2bfe595695f2b3225f39181bac5da7293f1de,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
8144,f6f2bfe595695f2b3225f39181bac5da7293f1de,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
8145,f6f2bfe595695f2b3225f39181bac5da7293f1de,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
8146,45f1f4eefb32425eafb85687ec4487d4f961d37f,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
8147,45f1f4eefb32425eafb85687ec4487d4f961d37f,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
8148,45f1f4eefb32425eafb85687ec4487d4f961d37f,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
8149,45f1f4eefb32425eafb85687ec4487d4f961d37f,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
8150,45f1f4eefb32425eafb85687ec4487d4f961d37f,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
8151,ebdf7b69268218249c50749d16ae5f2d415dc2fd,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8152,ebdf7b69268218249c50749d16ae5f2d415dc2fd,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8153,ebdf7b69268218249c50749d16ae5f2d415dc2fd,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8154,ebdf7b69268218249c50749d16ae5f2d415dc2fd,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8155,ebdf7b69268218249c50749d16ae5f2d415dc2fd,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8156,1010881875924ee9b5bdc8443dd4d31b14151369,/vultr-cli/Dockerfile,"# https://github.com/vultr/vultr-cli/releases
"
8157,baf2dfc13afcee35d9b2e8e5779b79947ba6bf31,/nylas/sync-engine/Dockerfile,"# install pip from upstream (since ""python-pip"" is too old)
"
8158,baf2dfc13afcee35d9b2e8e5779b79947ba6bf31,/nylas/sync-engine/Dockerfile,"# tell pynacl to use system libsodium
"
8159,baf2dfc13afcee35d9b2e8e5779b79947ba6bf31,/nylas/sync-engine/Dockerfile,"#ENV SYNC_VERSION v0.3.0 # 2014 :'(
"
8160,baf2dfc13afcee35d9b2e8e5779b79947ba6bf31,/nylas/sync-engine/Dockerfile,"# ugh, NameError: name 'PROTOCOL_SSLv3' is not defined
"
8161,baf2dfc13afcee35d9b2e8e5779b79947ba6bf31,/nylas/sync-engine/Dockerfile," # TODO inbox-api or inbox-start
"
8162,7601adf23cf659c4e22962f89f518333e8a3b775,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
8163,7601adf23cf659c4e22962f89f518333e8a3b775,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
8164,7601adf23cf659c4e22962f89f518333e8a3b775,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
8165,37ed313954dcca783b8eb9f119ca84dcc6deff0d,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
8166,37ed313954dcca783b8eb9f119ca84dcc6deff0d,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
8167,37ed313954dcca783b8eb9f119ca84dcc6deff0d,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
8168,37ed313954dcca783b8eb9f119ca84dcc6deff0d,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
8169,37ed313954dcca783b8eb9f119ca84dcc6deff0d,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
8170,aa1660fb5057a32e7461a350605bbe9bd6e151ca,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8171,aa1660fb5057a32e7461a350605bbe9bd6e151ca,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8172,aa1660fb5057a32e7461a350605bbe9bd6e151ca,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8173,aa1660fb5057a32e7461a350605bbe9bd6e151ca,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8174,aa1660fb5057a32e7461a350605bbe9bd6e151ca,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8175,0496c92f87947fad432e3703162d3f6751017c45,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8176,0496c92f87947fad432e3703162d3f6751017c45,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8177,0496c92f87947fad432e3703162d3f6751017c45,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8178,0496c92f87947fad432e3703162d3f6751017c45,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8179,0496c92f87947fad432e3703162d3f6751017c45,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8180,08246e7be5b33bf8fb300e30804a8433af06e32f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8181,08246e7be5b33bf8fb300e30804a8433af06e32f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8182,08246e7be5b33bf8fb300e30804a8433af06e32f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8183,08246e7be5b33bf8fb300e30804a8433af06e32f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8184,08246e7be5b33bf8fb300e30804a8433af06e32f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8185,99a40d9de27c39fca06e52ee58e26f4b3f568c90,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8186,99a40d9de27c39fca06e52ee58e26f4b3f568c90,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8187,99a40d9de27c39fca06e52ee58e26f4b3f568c90,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8188,99a40d9de27c39fca06e52ee58e26f4b3f568c90,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8189,99a40d9de27c39fca06e52ee58e26f4b3f568c90,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8190,5bdba260837cbf327c69e12c01987999892a5b3c,/debian/devel/Dockerfile,"# normal build deps
"
8191,5bdba260837cbf327c69e12c01987999892a5b3c,/debian/devel/Dockerfile,"# need an editor for ""dch -i""
"
8192,5bdba260837cbf327c69e12c01987999892a5b3c,/debian/devel/Dockerfile,"# a few extra little useful things
"
8193,5bdba260837cbf327c69e12c01987999892a5b3c,/debian/devel/Dockerfile,"# need deb-src for compiling packages
"
8194,5bdba260837cbf327c69e12c01987999892a5b3c,/debian/devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
8195,dbb9c6e65d9deb72f752b55be588f05a5ddf2670,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
8196,dbb9c6e65d9deb72f752b55be588f05a5ddf2670,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
8197,dbb9c6e65d9deb72f752b55be588f05a5ddf2670,/jenkins/Dockerfile,"# https://groups.google.com/d/msg/jenkins-infra/c7m_72vUTXE/37zw9GXhAQAJ
"
8198,dbb9c6e65d9deb72f752b55be588f05a5ddf2670,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
8199,8622c00b55a34a6eeb3335961426b75ed116f841,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8200,8622c00b55a34a6eeb3335961426b75ed116f841,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8201,8622c00b55a34a6eeb3335961426b75ed116f841,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8202,8622c00b55a34a6eeb3335961426b75ed116f841,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8203,8622c00b55a34a6eeb3335961426b75ed116f841,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8204,4c22416e1fd21a492a979e9f0481f55f3dc55542,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8205,4c22416e1fd21a492a979e9f0481f55f3dc55542,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8206,4c22416e1fd21a492a979e9f0481f55f3dc55542,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8207,4c22416e1fd21a492a979e9f0481f55f3dc55542,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8208,4c22416e1fd21a492a979e9f0481f55f3dc55542,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8209,031ab9c4d5121ebf91d32ff0700141435b61acfa,/jenkins/slave/Dockerfile,"# let's make /root a volume so ~/.ssh/authorized_keys is easier to save
"
8210,b634e6439b66bd639ca7605cf339d3ac60aa229d,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8211,b634e6439b66bd639ca7605cf339d3ac60aa229d,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8212,b634e6439b66bd639ca7605cf339d3ac60aa229d,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8213,b634e6439b66bd639ca7605cf339d3ac60aa229d,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8214,b634e6439b66bd639ca7605cf339d3ac60aa229d,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8215,4ba012d7a786aa2445075b7638ee5103d8ce6f8a,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8216,4ba012d7a786aa2445075b7638ee5103d8ce6f8a,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8217,4ba012d7a786aa2445075b7638ee5103d8ce6f8a,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8218,4ba012d7a786aa2445075b7638ee5103d8ce6f8a,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8219,4ba012d7a786aa2445075b7638ee5103d8ce6f8a,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8220,13276e7f7db6987293c50a577366c06ab8a31426,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8221,13276e7f7db6987293c50a577366c06ab8a31426,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8222,13276e7f7db6987293c50a577366c06ab8a31426,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8223,13276e7f7db6987293c50a577366c06ab8a31426,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8224,13276e7f7db6987293c50a577366c06ab8a31426,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8225,7f3591d1ea9726b9cc3e4c322302e01997bf1c20,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8226,7f3591d1ea9726b9cc3e4c322302e01997bf1c20,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8227,7f3591d1ea9726b9cc3e4c322302e01997bf1c20,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8228,7f3591d1ea9726b9cc3e4c322302e01997bf1c20,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8229,7f3591d1ea9726b9cc3e4c322302e01997bf1c20,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8230,a53b2acec16b12915fc134f0362dadf3977960af,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8231,a53b2acec16b12915fc134f0362dadf3977960af,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8232,a53b2acec16b12915fc134f0362dadf3977960af,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8233,a53b2acec16b12915fc134f0362dadf3977960af,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8234,a53b2acec16b12915fc134f0362dadf3977960af,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8235,382fc87134265f58231d55943c5906d7ae23bf84,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
8236,d75f3ec3b8aafd286b9e1626f823cc8d46e4df84,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
8237,d75f3ec3b8aafd286b9e1626f823cc8d46e4df84,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
8238,f080a8392b8bf780524e05c12dcd30bab7b23215,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
8239,f080a8392b8bf780524e05c12dcd30bab7b23215,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
8240,f080a8392b8bf780524e05c12dcd30bab7b23215,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
8241,75832a853002c33aa6f31271d791ee1387bcd82c,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
8242,75832a853002c33aa6f31271d791ee1387bcd82c,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
8243,75832a853002c33aa6f31271d791ee1387bcd82c,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
8244,75832a853002c33aa6f31271d791ee1387bcd82c,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
8245,75832a853002c33aa6f31271d791ee1387bcd82c,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
8246,63b221527cef069f599c0c26c2c8fd7dcf19ae2b,/mutt-gmail/Dockerfile,"# a browser is necessary!
"
8247,63b221527cef069f599c0c26c2c8fd7dcf19ae2b,/mutt-gmail/Dockerfile,"# my preferred editor :) (see also muttrc)
"
8248,406c8826b224c3ff85b680e5a633f645f4bd9d4e,/syncthing/Dockerfile,"# gpg: key 00654A3E: public key ""Syncthing Release Management <release@syncthing.net>"" imported
"
8249,ed97960022a26799538a922d7a676d4042f5dbe4,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8250,ed97960022a26799538a922d7a676d4042f5dbe4,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8251,ed97960022a26799538a922d7a676d4042f5dbe4,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8252,ed97960022a26799538a922d7a676d4042f5dbe4,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8253,ed97960022a26799538a922d7a676d4042f5dbe4,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8254,75fd81711b651841d5b92df878bc30aed4049d81,/snapcraft/Dockerfile,"# based initially on https://hub.docker.com/r/didrocks/snapcraft/
"
8255,75fd81711b651841d5b92df878bc30aed4049d81,/snapcraft/Dockerfile,"# enable multiverse as snapcraft cleanbuild does
#RUN sed -i 's/ universe$/ universe multiverse/' /etc/apt/sources.list

# pin specific version so we can update with a natural cache bust
"
8256,e2093ac1dea42bebfc7bae338ee2284b2dc65ec5,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
8257,e2093ac1dea42bebfc7bae338ee2284b2dc65ec5,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
8258,e2093ac1dea42bebfc7bae338ee2284b2dc65ec5,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
8259,0e2ed99ca10a264d30789a0ba90148f49cbb24a1,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
8260,cb0a3b27ecc5f6884abbb98e9e4556774d9822ac,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8261,cb0a3b27ecc5f6884abbb98e9e4556774d9822ac,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8262,cb0a3b27ecc5f6884abbb98e9e4556774d9822ac,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8263,cb0a3b27ecc5f6884abbb98e9e4556774d9822ac,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8264,cb0a3b27ecc5f6884abbb98e9e4556774d9822ac,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8265,b794552d352925b41fba3eb2afed2065a26fa5e2,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8266,b794552d352925b41fba3eb2afed2065a26fa5e2,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8267,b794552d352925b41fba3eb2afed2065a26fa5e2,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8268,b794552d352925b41fba3eb2afed2065a26fa5e2,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8269,b794552d352925b41fba3eb2afed2065a26fa5e2,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8270,8aedded45fa015f2c81a31b60c6311948a83286f,/phpmyadmin/Dockerfile,"# https://docs.phpmyadmin.net/en/latest/setup.html#verifying-phpmyadmin-releases
"
8271,8aedded45fa015f2c81a31b60c6311948a83286f,/phpmyadmin/Dockerfile,"# Since July 2015 all phpMyAdmin releases are cryptographically signed by the releasing developer, who through January 2016 was Marc Delisle.
"
8272,8aedded45fa015f2c81a31b60c6311948a83286f,/phpmyadmin/Dockerfile,"# Beginning in January 2016, the release manager is Isaac Bennetch.
"
8273,8aedded45fa015f2c81a31b60c6311948a83286f,/phpmyadmin/Dockerfile,"# Some additional downloads (for example themes) might be signed by Michal Čihař.
"
8274,2a0032361a235f054573d7f889bfdf8a50eddd1e,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8275,2a0032361a235f054573d7f889bfdf8a50eddd1e,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8276,2a0032361a235f054573d7f889bfdf8a50eddd1e,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8277,2a0032361a235f054573d7f889bfdf8a50eddd1e,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8278,2a0032361a235f054573d7f889bfdf8a50eddd1e,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8279,6e5d54c2abf3b2029040a21f6ef6dadc22729aaa,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8280,6e5d54c2abf3b2029040a21f6ef6dadc22729aaa,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8281,6e5d54c2abf3b2029040a21f6ef6dadc22729aaa,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8282,6e5d54c2abf3b2029040a21f6ef6dadc22729aaa,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8283,6e5d54c2abf3b2029040a21f6ef6dadc22729aaa,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8284,be504a501a56a71086b1a9b03e048408346f27b7,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8285,be504a501a56a71086b1a9b03e048408346f27b7,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8286,be504a501a56a71086b1a9b03e048408346f27b7,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8287,be504a501a56a71086b1a9b03e048408346f27b7,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8288,be504a501a56a71086b1a9b03e048408346f27b7,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8289,1fb47acae53dd87ca04b0625007e3f23998bd1a5,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8290,1fb47acae53dd87ca04b0625007e3f23998bd1a5,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8291,1fb47acae53dd87ca04b0625007e3f23998bd1a5,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8292,1fb47acae53dd87ca04b0625007e3f23998bd1a5,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8293,1fb47acae53dd87ca04b0625007e3f23998bd1a5,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8294,1807a8b8a0e66565df08b0f80a08c3ed7a16ef93,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
8295,7d1c1f1a31e8eee52f2d55c307b903fad63a6276,/diffoscope/Dockerfile,"# xxd (xxd not available in path. Falling back to Python hexlify.)
"
8296,7d1c1f1a31e8eee52f2d55c307b903fad63a6276,/diffoscope/Dockerfile,"# readelf ('readelf' not available in path. Falling back to binary comparison.)
"
8297,7d1c1f1a31e8eee52f2d55c307b903fad63a6276,/diffoscope/Dockerfile,"# for ""diffoscope --progress""
"
8298,c9a06451d60f2ff8a474a22503788473158830bb,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
8299,8958a3234a454a27c8782a1b809e3c697055eae5,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
8300,10ee6457fd191a7c089d8c2508f9c77b8193dfcc,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8301,10ee6457fd191a7c089d8c2508f9c77b8193dfcc,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8302,10ee6457fd191a7c089d8c2508f9c77b8193dfcc,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8303,10ee6457fd191a7c089d8c2508f9c77b8193dfcc,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8304,10ee6457fd191a7c089d8c2508f9c77b8193dfcc,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8305,6c16af2dbf1fdeb06380aa2c7db70202112281e5,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8306,6c16af2dbf1fdeb06380aa2c7db70202112281e5,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8307,6c16af2dbf1fdeb06380aa2c7db70202112281e5,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8308,6c16af2dbf1fdeb06380aa2c7db70202112281e5,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8309,6c16af2dbf1fdeb06380aa2c7db70202112281e5,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8310,712c61b2313e863262d7a553d3a98a3dbc788256,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
8311,712c61b2313e863262d7a553d3a98a3dbc788256,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
8312,712c61b2313e863262d7a553d3a98a3dbc788256,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
8313,e9b437ea5b5bc1d5a8b54fd35f45e951aa0004c4,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
8314,19a53357b83652c32b6d9e66383efaccca33dda1,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8315,19a53357b83652c32b6d9e66383efaccca33dda1,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8316,19a53357b83652c32b6d9e66383efaccca33dda1,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8317,19a53357b83652c32b6d9e66383efaccca33dda1,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8318,19a53357b83652c32b6d9e66383efaccca33dda1,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8319,abb5e963aa3282b6ead848b7dd8f8026946a3244,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8320,abb5e963aa3282b6ead848b7dd8f8026946a3244,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8321,abb5e963aa3282b6ead848b7dd8f8026946a3244,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8322,abb5e963aa3282b6ead848b7dd8f8026946a3244,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8323,abb5e963aa3282b6ead848b7dd8f8026946a3244,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8324,7a5effd185cfed1f692a406f72b3d7cb5bf3b990,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
8325,99bdc8b0f1c1fdb7b71e4554ac7fa8de6d79fc50,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8326,99bdc8b0f1c1fdb7b71e4554ac7fa8de6d79fc50,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8327,99bdc8b0f1c1fdb7b71e4554ac7fa8de6d79fc50,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8328,99bdc8b0f1c1fdb7b71e4554ac7fa8de6d79fc50,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8329,99bdc8b0f1c1fdb7b71e4554ac7fa8de6d79fc50,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8330,b9e9e51a2c613527c409da8b15c7caf944337a77,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
8331,c15499a2dfe982cb6b3f1d08a66b71a9c43acda1,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8332,c15499a2dfe982cb6b3f1d08a66b71a9c43acda1,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8333,c15499a2dfe982cb6b3f1d08a66b71a9c43acda1,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8334,c15499a2dfe982cb6b3f1d08a66b71a9c43acda1,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8335,c15499a2dfe982cb6b3f1d08a66b71a9c43acda1,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8336,339ee7340a05dbf5257051b76bd1d0139e38a408,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
8337,cf0761a37b5b172432e967ed9e8572652c6488a1,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
8338,919efab91947c7c50ce51e30aabe98c3105eb442,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8339,919efab91947c7c50ce51e30aabe98c3105eb442,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8340,919efab91947c7c50ce51e30aabe98c3105eb442,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8341,919efab91947c7c50ce51e30aabe98c3105eb442,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8342,919efab91947c7c50ce51e30aabe98c3105eb442,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8343,85d14ab3a4cc464b6d9610b91224cad02b97ac12,/lutris/Dockerfile,"# install Wine
#   https://github.com/lutris/docs/blob/f2bf5ca14f280e3c58d2306581294d57650c0cc2/WineDependencies.md
#   https://wiki.winehq.org/Ubuntu
"
8344,85d14ab3a4cc464b6d9610b91224cad02b97ac12,/lutris/Dockerfile,"# https://dl.winehq.org/wine-builds/ubuntu/dists/focal/main/binary-amd64/?C=N;O=D
# https://www.winehq.org/news/
"
8345,85d14ab3a4cc464b6d9610b91224cad02b97ac12,/lutris/Dockerfile,"# ""Add SDL2 Backports PPA (for Faudio package):""
"
8346,85d14ab3a4cc464b6d9610b91224cad02b97ac12,/lutris/Dockerfile,"# ""For compatibility reasons, install these additional libraries:""
"
8347,85d14ab3a4cc464b6d9610b91224cad02b97ac12,/lutris/Dockerfile,"# https://github.com/Winetricks/winetricks/releases
"
8348,85d14ab3a4cc464b6d9610b91224cad02b97ac12,/lutris/Dockerfile,"# https://launchpad.net/~lutris-team/+archive/ubuntu/lutris?field.series_filter=focal
"
8349,85d14ab3a4cc464b6d9610b91224cad02b97ac12,/lutris/Dockerfile,"# https://github.com/lutris/docs/blob/f2bf5ca14f280e3c58d2306581294d57650c0cc2/InstallingDrivers.md
"
8350,85d14ab3a4cc464b6d9610b91224cad02b97ac12,/lutris/Dockerfile,"# gi.repository.GLib.Error: g-exec-error-quark: Failed to execute child process “dbus-launch” (No such file or directory) (8)
"
8351,85d14ab3a4cc464b6d9610b91224cad02b97ac12,/lutris/Dockerfile,"# /lutris-home/games/battle.net/state-cache-merge/state-cache-update.sh: line 8: zenity: command not found
"
8352,ef9cf9438d12236072488bc6768c0504d53636ba,/github-pages/Dockerfile,"# https://pages.github.com/versions/
"
8353,0e026f49f9a897f2d64af7fb1d6decddbbce57a1,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8354,0e026f49f9a897f2d64af7fb1d6decddbbce57a1,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8355,0e026f49f9a897f2d64af7fb1d6decddbbce57a1,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8356,0e026f49f9a897f2d64af7fb1d6decddbbce57a1,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8357,0e026f49f9a897f2d64af7fb1d6decddbbce57a1,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8358,bb91faee2b3009d724b0ab6489cd793f0a8319cf,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8359,bb91faee2b3009d724b0ab6489cd793f0a8319cf,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8360,bb91faee2b3009d724b0ab6489cd793f0a8319cf,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8361,bb91faee2b3009d724b0ab6489cd793f0a8319cf,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8362,bb91faee2b3009d724b0ab6489cd793f0a8319cf,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8363,cb0546ca8d7e43c5555c7333a52ace92051a5d71,/makemkv/Dockerfile,"# This disc requires Java runtime (JRE), but none was found. Certain functions will fail, please install Java. See http://www.makemkv.com/bdjava/ for details.
"
8364,cb0546ca8d7e43c5555c7333a52ace92051a5d71,/makemkv/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
8365,cb0546ca8d7e43c5555c7333a52ace92051a5d71,/makemkv/Dockerfile,"# FPL_MainFeature detection only seemed to work with OpenJDK 9 (8 was insufficient)
"
8366,cb0546ca8d7e43c5555c7333a52ace92051a5d71,/makemkv/Dockerfile,"# Unable to execute external program 'ccextractor' as its path is not set in preferences
# Failed to execute external program 'ccextractor' from location '/usr/local/bin/mmccextr'
# (but it doesn't exist in the perferences dialog...)
"
8367,cb0546ca8d7e43c5555c7333a52ace92051a5d71,/makemkv/Dockerfile,"# http://www.makemkv.com/forum2/viewtopic.php?f=3&t=224
"
8368,cb0546ca8d7e43c5555c7333a52ace92051a5d71,/makemkv/Dockerfile,"# beta code: http://www.makemkv.com/forum2/viewtopic.php?f=5&t=1053
"
8369,cb0546ca8d7e43c5555c7333a52ace92051a5d71,/makemkv/Dockerfile,"# pub   dsa2048 2017-05-26 [SC]
#       2ECF 2330 5F1F C0B3 2001  6733 94E3 083A 1804 2697
# uid           [ unknown] MakeMKV (signature) <support@makemkv.com>
"
8370,800f9dedfdae89fa514be56c37adeb1376132c5d,/docker-tianon/Dockerfile,"# DOCKER_HOST=ssh://... -- https://github.com/docker/cli/pull/1014
"
8371,800f9dedfdae89fa514be56c37adeb1376132c5d,/docker-tianon/Dockerfile,"# https://github.com/debuerreotype/docker-debian-artifacts/issues/97#issuecomment-658469709
"
8372,800f9dedfdae89fa514be56c37adeb1376132c5d,/docker-tianon/Dockerfile,"# https://doi-janky.infosiftr.net/job/tianon/job/docker-deb/job/repo/lastSuccessfulBuild/artifact/pool/buster/main/amd64/
"
8373,800f9dedfdae89fa514be56c37adeb1376132c5d,/docker-tianon/Dockerfile,"# https://github.com/docker-library/docker/pull/166
#   dockerd-entrypoint.sh uses DOCKER_TLS_CERTDIR for auto-generating TLS certificates
#   docker-entrypoint.sh uses DOCKER_TLS_CERTDIR for auto-setting DOCKER_TLS_VERIFY and DOCKER_CERT_PATH
# (For this to work, at least the ""client"" subdirectory of this path needs to be shared between the client and server containers via a volume, ""docker cp"", or other means of data sharing.)
"
8374,800f9dedfdae89fa514be56c37adeb1376132c5d,/docker-tianon/Dockerfile,"# also, ensure the directory pre-exists and has wide enough permissions for ""dockerd-entrypoint.sh"" to create subdirectories, even when run in ""rootless"" mode
"
8375,800f9dedfdae89fa514be56c37adeb1376132c5d,/docker-tianon/Dockerfile,"# (doing both /certs and /certs/client so that if Docker does a ""copy-up"" into a volume defined on /certs/client, it will ""do the right thing"" by default in a way that still works for rootless users)

# dind

"
8376,800f9dedfdae89fa514be56c37adeb1376132c5d,/docker-tianon/Dockerfile,"# pigz: https://github.com/moby/moby/pull/35697 (faster gzip implementation)
"
8377,800f9dedfdae89fa514be56c37adeb1376132c5d,/docker-tianon/Dockerfile,"# set up subuid/subgid so that ""--userns-remap=default"" works out-of-the-box
"
8378,800f9dedfdae89fa514be56c37adeb1376132c5d,/docker-tianon/Dockerfile,"# https://github.com/docker/docker/tree/master/hack/dind
#ENV DIND_COMMIT 130b0bc6032cc675d064e1cc62626cacc9c07a57

#RUN set -eux; \
#	wget -O /usr/local/bin/dind ""https://raw.githubusercontent.com/docker/docker/${DIND_COMMIT}/hack/dind""; \
#	chmod +x /usr/local/bin/dind

"
8379,421cff097eb1a151fa4caa8fd6ee5a42dad9a720,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8380,421cff097eb1a151fa4caa8fd6ee5a42dad9a720,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8381,421cff097eb1a151fa4caa8fd6ee5a42dad9a720,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8382,421cff097eb1a151fa4caa8fd6ee5a42dad9a720,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8383,421cff097eb1a151fa4caa8fd6ee5a42dad9a720,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8384,4a3da018c2c2c05962594d9ce34788e43bc1dc50,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8385,4a3da018c2c2c05962594d9ce34788e43bc1dc50,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8386,4a3da018c2c2c05962594d9ce34788e43bc1dc50,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8387,4a3da018c2c2c05962594d9ce34788e43bc1dc50,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8388,4a3da018c2c2c05962594d9ce34788e43bc1dc50,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8389,928f9a00e3ee198f61b771951c09bb53ab487677,/debian/ubuntu-devel/Dockerfile,"# let's make apt list package versions, since those are handy during devel
"
8390,928f9a00e3ee198f61b771951c09bb53ab487677,/debian/ubuntu-devel/Dockerfile,"# normal build deps
"
8391,928f9a00e3ee198f61b771951c09bb53ab487677,/debian/ubuntu-devel/Dockerfile,"# get dh-make-golang from Git since it's so rapidly changing
"
8392,928f9a00e3ee198f61b771951c09bb53ab487677,/debian/ubuntu-devel/Dockerfile,"# need deb-src for compiling packages
"
8393,928f9a00e3ee198f61b771951c09bb53ab487677,/debian/ubuntu-devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
8394,928f9a00e3ee198f61b771951c09bb53ab487677,/debian/ubuntu-devel/Dockerfile,"# for ssh to debian hosts, let's make sure we know their fingerprints <3
"
8395,928f9a00e3ee198f61b771951c09bb53ab487677,/debian/ubuntu-devel/Dockerfile,"# make sure things are pretty
"
8396,928f9a00e3ee198f61b771951c09bb53ab487677,/debian/ubuntu-devel/Dockerfile,"#(force_color_prompt=yes)/\1/' ~/.bashrc

# quilt is much amaze: https://wiki.debian.org/UsingQuilt#Using_quilt_with_Debian_source_packages
"
8397,928f9a00e3ee198f61b771951c09bb53ab487677,/debian/ubuntu-devel/Dockerfile,"# make sure pbuilder-dist uses a sane default mirror
"
8398,d0c2b08b20563644f1c0c2714540dba0cb2d8163,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
8399,d0c2b08b20563644f1c0c2714540dba0cb2d8163,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
8400,d0c2b08b20563644f1c0c2714540dba0cb2d8163,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
8401,35a32cea1bda119e2a46d3ea88c5b412c6092d97,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
8402,e3872662187caddf9bf72536532a2e197df12b51,/exim4/Dockerfile,"# grab tini for signal processing and zombie killing
"
8403,e3872662187caddf9bf72536532a2e197df12b51,/exim4/Dockerfile,"# https://blog.dhampir.no/content/exim4-line-length-in-debian-stretch-mail-delivery-failed-returning-message-to-sender
# https://serverfault.com/a/881197
# https://bugs.debian.org/828801
"
8404,486f5821a1b56261390e3d4a74cbc526c8ceeae9,/debian/devel/Dockerfile,"# normal build deps
"
8405,486f5821a1b56261390e3d4a74cbc526c8ceeae9,/debian/devel/Dockerfile,"# need deb-src for compiling packages
"
8406,486f5821a1b56261390e3d4a74cbc526c8ceeae9,/debian/devel/Dockerfile,"# let's make apt list package versions, since those are handy during devel
"
8407,486f5821a1b56261390e3d4a74cbc526c8ceeae9,/debian/devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
8408,486f5821a1b56261390e3d4a74cbc526c8ceeae9,/debian/devel/Dockerfile,"# for ssh to debian hosts, let's make sure we know their fingerprints <3
"
8409,486f5821a1b56261390e3d4a74cbc526c8ceeae9,/debian/devel/Dockerfile,"# make sure things are pretty
"
8410,486f5821a1b56261390e3d4a74cbc526c8ceeae9,/debian/devel/Dockerfile,"#(force_color_prompt=yes)/\1/' ~/.bashrc

# quilt is much amaze: https://wiki.debian.org/UsingQuilt#Using_quilt_with_Debian_source_packages
"
8411,c2321200d9a882657356e9d248dcce8618de5c25,/plex/media-server/Dockerfile,"# /var/lib/dpkg/info/plexmediaserver.postinst: 39: /var/lib/dpkg/info/plexmediaserver.postinst: start: not found
"
8412,c2321200d9a882657356e9d248dcce8618de5c25,/plex/media-server/Dockerfile,"# https://www.plex.tv/downloads/#getdownload
# https://plex.tv/api/downloads/1.json
"
8413,c2321200d9a882657356e9d248dcce8618de5c25,/plex/media-server/Dockerfile,"# https://github.com/plexinc/pms-docker/blob/7529befa25c89a67731129f71ee73c22a3a647d6/root/etc/services.d/plex/run
# https://support.plex.tv/articles/200273978-linux-user-and-storage-configuration/
# https://github.com/plexinc/PlexMediaServer-Ubuntu/blob/1c48f4aa97a223143ec6a7bdbbb7942a15dc70cf/debian/start_pms
"
8414,6e63172259c09e77c93dfa339c7be07fae441956,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8415,6e63172259c09e77c93dfa339c7be07fae441956,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8416,6e63172259c09e77c93dfa339c7be07fae441956,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8417,6e63172259c09e77c93dfa339c7be07fae441956,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8418,6e63172259c09e77c93dfa339c7be07fae441956,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8419,1e494c773b444bc48b5c5b148ddabff5b072698f,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8420,1e494c773b444bc48b5c5b148ddabff5b072698f,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8421,1e494c773b444bc48b5c5b148ddabff5b072698f,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8422,1e494c773b444bc48b5c5b148ddabff5b072698f,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8423,1e494c773b444bc48b5c5b148ddabff5b072698f,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8424,1ed32018b4bef488317c9a899674548a8248d4ce,/dell-netextender/Dockerfile,"# https://aur.archlinux.org/cgit/aur.git/tree/PKGBUILD?h=netextender
"
8425,1ed32018b4bef488317c9a899674548a8248d4ce,/dell-netextender/Dockerfile,"# NetExtender connected successfully. Type ""Ctrl-c"" to disconnect...
"
8426,f7b855af158bc256be5609d8a7e047b9614052bb,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
8427,9af080ede03197415217824e3db5b8b457115065,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8428,9af080ede03197415217824e3db5b8b457115065,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8429,9af080ede03197415217824e3db5b8b457115065,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8430,9af080ede03197415217824e3db5b8b457115065,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8431,9af080ede03197415217824e3db5b8b457115065,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8432,74642215097e67acae76c62184829b014c9ea932,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8433,74642215097e67acae76c62184829b014c9ea932,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8434,74642215097e67acae76c62184829b014c9ea932,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8435,74642215097e67acae76c62184829b014c9ea932,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8436,74642215097e67acae76c62184829b014c9ea932,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8437,2a7a405d9f21c641d90c73d7caf56778e0d929b0,/debian/devel/Dockerfile,"# normal build deps
"
8438,2a7a405d9f21c641d90c73d7caf56778e0d929b0,/debian/devel/Dockerfile,"# need deb-src for compiling packages
"
8439,2a7a405d9f21c641d90c73d7caf56778e0d929b0,/debian/devel/Dockerfile,"# let's make apt list package versions, since those are handy during devel
"
8440,2a7a405d9f21c641d90c73d7caf56778e0d929b0,/debian/devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
8441,2a7a405d9f21c641d90c73d7caf56778e0d929b0,/debian/devel/Dockerfile,"# for ssh to debian hosts, let's make sure we know their fingerprints <3
"
8442,2a7a405d9f21c641d90c73d7caf56778e0d929b0,/debian/devel/Dockerfile,"# make sure things are pretty
"
8443,2a7a405d9f21c641d90c73d7caf56778e0d929b0,/debian/devel/Dockerfile,"#(force_color_prompt=yes)/\1/' ~/.bashrc

# quilt is much amaze: https://wiki.debian.org/UsingQuilt#Using_quilt_with_Debian_source_packages
"
8444,37b9b528a318c94cd8b1d8204a30a0b6b16d11dc,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
8445,37b9b528a318c94cd8b1d8204a30a0b6b16d11dc,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
8446,37b9b528a318c94cd8b1d8204a30a0b6b16d11dc,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
8447,37b9b528a318c94cd8b1d8204a30a0b6b16d11dc,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
8448,37b9b528a318c94cd8b1d8204a30a0b6b16d11dc,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
8449,51786eebfcd2ab174a3803a882cb8f1df855f179,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8450,51786eebfcd2ab174a3803a882cb8f1df855f179,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8451,51786eebfcd2ab174a3803a882cb8f1df855f179,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8452,51786eebfcd2ab174a3803a882cb8f1df855f179,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8453,51786eebfcd2ab174a3803a882cb8f1df855f179,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8454,a6eec9ab857ed44dc8733131ee916b2160a7fdf5,/phpmyadmin/Dockerfile,"# https://docs.phpmyadmin.net/en/latest/setup.html#verifying-phpmyadmin-releases
"
8455,a6eec9ab857ed44dc8733131ee916b2160a7fdf5,/phpmyadmin/Dockerfile,"# Since July 2015 all phpMyAdmin releases are cryptographically signed by the releasing developer, who through January 2016 was Marc Delisle.
"
8456,a6eec9ab857ed44dc8733131ee916b2160a7fdf5,/phpmyadmin/Dockerfile,"# Beginning in January 2016, the release manager is Isaac Bennetch.
"
8457,a6eec9ab857ed44dc8733131ee916b2160a7fdf5,/phpmyadmin/Dockerfile,"# Some additional downloads (for example themes) might be signed by Michal Čihař.
"
8458,6b41a4cbe8d7217dc0a9cf0d4f2632e5a010ac10,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
8459,d109360e7c96efe13ee70aea8ad78ccd8cf43921,/google-cloud-print-connector/Dockerfile,"# fetch dependencies
# format: import-path=strip-components=tarball-url
"
8460,d109360e7c96efe13ee70aea8ad78ccd8cf43921,/google-cloud-print-connector/Dockerfile,"# https://github.com/coreos/go-systemd/releases
"
8461,d109360e7c96efe13ee70aea8ad78ccd8cf43921,/google-cloud-print-connector/Dockerfile,"# https://github.com/satori/go.uuid/releases
# (https://github.com/satori/go.uuid/commit/0ef6afb2f6cdd6cdaeee3885a95099c63f18fc8c -- hopefully we'll get a newer release than v1.2.0 soonish)
"
8462,d109360e7c96efe13ee70aea8ad78ccd8cf43921,/google-cloud-print-connector/Dockerfile,"# https://github.com/urfave/cli/releases
"
8463,d109360e7c96efe13ee70aea8ad78ccd8cf43921,/google-cloud-print-connector/Dockerfile,"# https://github.com/golang/net/commits/master
"
8464,d109360e7c96efe13ee70aea8ad78ccd8cf43921,/google-cloud-print-connector/Dockerfile,"# https://github.com/golang/oauth2/commits/master
"
8465,d109360e7c96efe13ee70aea8ad78ccd8cf43921,/google-cloud-print-connector/Dockerfile,"# https://bazaar.launchpad.net/~chipaca/go-xdg/v0/files (""view revision"")
# https://bazaar.launchpad.net/~chipaca/go-xdg/v0/revision/10?start_revid=10 (""download tarball"")
"
8466,d109360e7c96efe13ee70aea8ad78ccd8cf43921,/google-cloud-print-connector/Dockerfile,"#*=}""; dep=""${dep%=$strip}""; \
"
8467,d109360e7c96efe13ee70aea8ad78ccd8cf43921,/google-cloud-print-connector/Dockerfile,"#*=}""; strip=""${strip%=$tarball}""; \
"
8468,d109360e7c96efe13ee70aea8ad78ccd8cf43921,/google-cloud-print-connector/Dockerfile,"# https://github.com/google/cloud-print-connector/releases
"
8469,445a62a972816c8e64679641f31000676afd7371,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8470,445a62a972816c8e64679641f31000676afd7371,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8471,445a62a972816c8e64679641f31000676afd7371,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8472,445a62a972816c8e64679641f31000676afd7371,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8473,445a62a972816c8e64679641f31000676afd7371,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8474,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/14.10/Dockerfile,"# much of this was gleaned from https://github.com/lxc/lxc/blob/lxc-0.8.0/templates/lxc-ubuntu.in
# and then heavily modified and hacked like crazy

# we're going to want this bad boy installed so we can connect :)
"
8475,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/14.10/Dockerfile,"# undo some leet hax of the base image
"
8476,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/14.10/Dockerfile,"# generate a nice UTF-8 locale for our use
"
8477,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/14.10/Dockerfile,"# remove some pointless services
"
8478,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/14.10/Dockerfile,"# /lib/init/fstab: cleared out for bare-bones Docker' > /lib/init/fstab

# small fix for SSH in 13.10 (that's harmless everywhere else)
"
8479,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/14.10/Dockerfile,"# let Upstart know it's in a container
"
8480,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/14.10/Dockerfile,"# set a cheap, simple password for great convenience
"
8481,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/14.10/Dockerfile,"# we can has SSH
"
8482,c78f832ae94573371d899944c706a08b92de4924,/sbin-init/ubuntu/upstart/14.10/Dockerfile,"# prepare for takeoff
"
8483,711d9dd0238536b4af67146b52067b94633db64f,/vultr-cli/Dockerfile,"# https://github.com/vultr/vultr-cli/releases
"
8484,3c1a5212c1bc75202a2b328153cca2e2c4029dff,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8485,3c1a5212c1bc75202a2b328153cca2e2c4029dff,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8486,3c1a5212c1bc75202a2b328153cca2e2c4029dff,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8487,3c1a5212c1bc75202a2b328153cca2e2c4029dff,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8488,3c1a5212c1bc75202a2b328153cca2e2c4029dff,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8489,8f53c52c8ae91a5cdd82f4914560218b40fc52ae,/debian/devel/Dockerfile,"# let's make apt list package versions, since those are handy during devel
"
8490,8f53c52c8ae91a5cdd82f4914560218b40fc52ae,/debian/devel/Dockerfile,"# normal build deps
"
8491,8f53c52c8ae91a5cdd82f4914560218b40fc52ae,/debian/devel/Dockerfile,"# get dh-make-golang from Git since it's so rapidly changing
"
8492,8f53c52c8ae91a5cdd82f4914560218b40fc52ae,/debian/devel/Dockerfile,"# need deb-src for compiling packages
"
8493,8f53c52c8ae91a5cdd82f4914560218b40fc52ae,/debian/devel/Dockerfile,"# tianon is _really_ lazy, and likes a preseeded bash history
"
8494,8f53c52c8ae91a5cdd82f4914560218b40fc52ae,/debian/devel/Dockerfile,"# for ssh to debian hosts, let's make sure we know their fingerprints <3
"
8495,8f53c52c8ae91a5cdd82f4914560218b40fc52ae,/debian/devel/Dockerfile,"# make sure things are pretty
"
8496,8f53c52c8ae91a5cdd82f4914560218b40fc52ae,/debian/devel/Dockerfile,"#(force_color_prompt=yes)/\1/' ~/.bashrc

# quilt is much amaze: https://wiki.debian.org/UsingQuilt#Using_quilt_with_Debian_source_packages
"
8497,8f53c52c8ae91a5cdd82f4914560218b40fc52ae,/debian/devel/Dockerfile,"# make sure pbuilder-dist uses a sane default mirror
"
8498,37015b4b0a27ce0e54f4bfd4fff2829cccf9791e,/golang/Dockerfile,"# (set an explicit GOARM of 5 for maximum ARM compatibility)
"
8499,37015b4b0a27ce0e54f4bfd4fff2829cccf9791e,/golang/Dockerfile,"##*/} \
"
8500,37015b4b0a27ce0e54f4bfd4fff2829cccf9791e,/golang/Dockerfile,"# these are useful for ""go get""
"
8501,37015b4b0a27ce0e54f4bfd4fff2829cccf9791e,/golang/Dockerfile,"/*} \
			GOARCH=${platform##*/"
8502,2f4efa5c6f4e6a2adef94c240988370b30513664,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8503,2f4efa5c6f4e6a2adef94c240988370b30513664,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8504,2f4efa5c6f4e6a2adef94c240988370b30513664,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8505,2f4efa5c6f4e6a2adef94c240988370b30513664,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8506,2f4efa5c6f4e6a2adef94c240988370b30513664,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8507,e03db50a504e4c2d9754273a2967f6ce8bdd2154,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
8508,248b8c2824eb7e06b0061d2e2e3128fa366e8f31,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8509,248b8c2824eb7e06b0061d2e2e3128fa366e8f31,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8510,248b8c2824eb7e06b0061d2e2e3128fa366e8f31,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8511,248b8c2824eb7e06b0061d2e2e3128fa366e8f31,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8512,248b8c2824eb7e06b0061d2e2e3128fa366e8f31,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8513,f9ea39bf92b32b3a66e204c089e5a014f89f6b30,/docker-master/Dockerfile,"# set up nsswitch.conf for Go's ""netgo"" implementation (which Docker explicitly uses)
# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
"
8514,753a97f8afca8094d6e74e3426c5935f73799fe3,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8515,753a97f8afca8094d6e74e3426c5935f73799fe3,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8516,753a97f8afca8094d6e74e3426c5935f73799fe3,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8517,753a97f8afca8094d6e74e3426c5935f73799fe3,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8518,753a97f8afca8094d6e74e3426c5935f73799fe3,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8519,073429016ac68a03fa2758a4a2d686e3adf0c01c,/golang/Dockerfile,"# (set an explicit GOARM of 5 for maximum ARM compatibility)
"
8520,073429016ac68a03fa2758a4a2d686e3adf0c01c,/golang/Dockerfile,"##*/} \
"
8521,073429016ac68a03fa2758a4a2d686e3adf0c01c,/golang/Dockerfile,"/*} \
			GOARCH=${platform##*/"
8522,c1610b96ffcea268495de6bc01aa9d72c59f9392,/network-toolbox/alpine/Dockerfile,"# TODO add ""nbtscan"" when we get to Alpine 3.12 (if it makes it out of edge)
# https://pkgs.alpinelinux.org/packages?name=nbtscan&branch=edge&arch=x86_64

"
8523,3dd6d4cf32579aa329cc7821206c4a82736c2843,/jenkins/Dockerfile,"# grab gosu for easy step-down from root
"
8524,3dd6d4cf32579aa329cc7821206c4a82736c2843,/jenkins/Dockerfile,"# grab tini for signal processing and zombie killing
"
8525,3dd6d4cf32579aa329cc7821206c4a82736c2843,/jenkins/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
8526,3dd6d4cf32579aa329cc7821206c4a82736c2843,/jenkins/Dockerfile,"# ""java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper""
# https://askubuntu.com/a/723503
# https://bugs.debian.org/798794
"
8527,3dd6d4cf32579aa329cc7821206c4a82736c2843,/jenkins/Dockerfile,"#&/' /etc/java-8-openjdk/accessibility.properties

"
8528,0b82d451ec17541cd73ad415c2a65ff33ca87b39,/jenkins/lts/Dockerfile,"# grab gosu for easy step-down from root
"
8529,0b82d451ec17541cd73ad415c2a65ff33ca87b39,/jenkins/lts/Dockerfile,"# grab tini for signal processing and zombie killing
"
8530,0b82d451ec17541cd73ad415c2a65ff33ca87b39,/jenkins/lts/Dockerfile,"# https://groups.google.com/d/msg/jenkins-infra/c7m_72vUTXE/37zw9GXhAQAJ
"
8531,0b82d451ec17541cd73ad415c2a65ff33ca87b39,/jenkins/lts/Dockerfile,"# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory
"
8532,73551160638ba0d8ca120fa8888489b4cefd12d0,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8533,73551160638ba0d8ca120fa8888489b4cefd12d0,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8534,73551160638ba0d8ca120fa8888489b4cefd12d0,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8535,73551160638ba0d8ca120fa8888489b4cefd12d0,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8536,73551160638ba0d8ca120fa8888489b4cefd12d0,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
8537,89fa61933bd1dfa5101b1523428e2b9a84b2edfb,/docker-master/Dockerfile.build,"# usage:
#   $ docker build -t some-name - < Dockerfile.build
#   $ docker run --rm some-name tar -cC /artifacts . | tar -xvC target-directory

"
8538,89fa61933bd1dfa5101b1523428e2b9a84b2edfb,/docker-master/Dockerfile.build,"# we cannot support devicemapper properly in a fully-static binary
"
8539,89fa61933bd1dfa5101b1523428e2b9a84b2edfb,/docker-master/Dockerfile.build,"# copy all our binaries to a simple fixed location
"
8540,89fa61933bd1dfa5101b1523428e2b9a84b2edfb,/docker-master/Dockerfile.build,"# verify that every binary can run ~standalone
"
8541,89fa61933bd1dfa5101b1523428e2b9a84b2edfb,/docker-master/Dockerfile.build,"# flag provided but not defined: -version
"
