,CommitID,Dockerfile,Comment
0,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
4,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5,2ac2312f6374ae864c3166466fb366967b97e47a,/7/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6,2ac2312f6374ae864c3166466fb366967b97e47a,/7/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
7,2ac2312f6374ae864c3166466fb366967b97e47a,/7/jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
8,2ac2312f6374ae864c3166466fb366967b97e47a,/7/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9,2ac2312f6374ae864c3166466fb366967b97e47a,/7/jdk/alpine/Dockerfile,#!/bin/sh'; \
10,2ac2312f6374ae864c3166466fb366967b97e47a,/7/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
15,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
17,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
18,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/slim-buster/Dockerfile,# backwards compatibility shim
19,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
20,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/slim-buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
21,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
22,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/slim-buster/Dockerfile,# arm64v8
23,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/slim-buster/Dockerfile,# amd64
24,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/slim-buster/Dockerfile,# fallback
25,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
26,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
27,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
28,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
29,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
30,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/slim-buster/Dockerfile,# basic smoke test
31,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
32,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
33,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
34,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
35,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
36,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
37,62077dac7745304d836f760c12f23e8986b83bc0,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
38,62077dac7745304d836f760c12f23e8986b83bc0,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
39,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
40,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
41,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
42,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-1709/Dockerfile,# https://jdk.java.net/
43,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
44,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
45,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
46,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
47,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
48,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
49,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
50,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
51,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
52,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
53,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
54,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
55,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
56,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
57,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
58,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
59,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
60,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
61,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/slim/Dockerfile,# backwards compatibility shim
62,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
63,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/slim/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
64,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
65,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
66,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
67,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
68,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
69,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
70,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
71,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
72,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/slim/Dockerfile,# basic smoke test
73,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
74,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
75,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
76,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
77,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
78,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
79,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
80,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/9-jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
81,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/9-jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
82,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/9-jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
83,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/9-jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
84,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
85,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
86,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
87,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
88,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
89,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
90,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
91,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
92,aed2d23dbcc88926f8aaab61b3ea4f68506702af,/13/jdk/alpine/Dockerfile,# https://jdk.java.net/
93,aed2d23dbcc88926f8aaab61b3ea4f68506702af,/13/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
94,aed2d23dbcc88926f8aaab61b3ea4f68506702af,/13/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
95,aed2d23dbcc88926f8aaab61b3ea4f68506702af,/13/jdk/alpine/Dockerfile,# basic smoke test
96,aed2d23dbcc88926f8aaab61b3ea4f68506702af,/13/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
97,5f603d0b657d0a87212ad16d304a1ce5e2533d82,/14/jdk/alpine/Dockerfile,# https://jdk.java.net/
98,5f603d0b657d0a87212ad16d304a1ce5e2533d82,/14/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
99,5f603d0b657d0a87212ad16d304a1ce5e2533d82,/14/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
100,5f603d0b657d0a87212ad16d304a1ce5e2533d82,/14/jdk/alpine/Dockerfile,# basic smoke test
101,5f603d0b657d0a87212ad16d304a1ce5e2533d82,/14/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
102,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
103,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
104,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-8-jre/Dockerfile,# Default to UTF-8 file.encoding
105,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
106,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
107,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
108,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
109,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
110,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
111,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
112,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
113,bd65529778e956612c0bd689aa6ff1ace391859e,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
114,bd65529778e956612c0bd689aa6ff1ace391859e,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
115,bd65529778e956612c0bd689aa6ff1ace391859e,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
116,bd65529778e956612c0bd689aa6ff1ace391859e,/8-jdk/alpine/Dockerfile,#!/bin/sh -e'; \
117,c394ed4d70c8c1d6962955aa23be0555671ce4c9,/8/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
118,c394ed4d70c8c1d6962955aa23be0555671ce4c9,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
119,c394ed4d70c8c1d6962955aa23be0555671ce4c9,/8/jdk/windows/windowsservercore-1803/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
120,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
121,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
122,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
123,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
124,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
125,4365c863956250d758341b86035862b111269ed9,/10-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
126,4365c863956250d758341b86035862b111269ed9,/10-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
127,4365c863956250d758341b86035862b111269ed9,/10-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
128,4365c863956250d758341b86035862b111269ed9,/10-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
129,4365c863956250d758341b86035862b111269ed9,/10-jre/slim/Dockerfile,#!/bin/sh'; \
130,4365c863956250d758341b86035862b111269ed9,/10-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
131,4365c863956250d758341b86035862b111269ed9,/10-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
132,4365c863956250d758341b86035862b111269ed9,/10-jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
133,4365c863956250d758341b86035862b111269ed9,/10-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
134,4365c863956250d758341b86035862b111269ed9,/10-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
135,4365c863956250d758341b86035862b111269ed9,/10-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
136,4365c863956250d758341b86035862b111269ed9,/10-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
137,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
138,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
139,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
140,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
141,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
142,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
143,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
144,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
145,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
146,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
147,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
148,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
149,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
150,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
151,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
152,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
153,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
154,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/oracle/Dockerfile,# basic smoke test
155,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
156,c34391ea981c804c097981bad8403ec4bd934285,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
157,c34391ea981c804c097981bad8403ec4bd934285,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
158,c34391ea981c804c097981bad8403ec4bd934285,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
159,c34391ea981c804c097981bad8403ec4bd934285,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
160,c34391ea981c804c097981bad8403ec4bd934285,/9-jdk/Dockerfile,#!/bin/sh'; \
161,c34391ea981c804c097981bad8403ec4bd934285,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
162,c34391ea981c804c097981bad8403ec4bd934285,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
163,c34391ea981c804c097981bad8403ec4bd934285,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
164,c34391ea981c804c097981bad8403ec4bd934285,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
165,c34391ea981c804c097981bad8403ec4bd934285,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
166,ea58310ec57fed8d5eedc7ed30eb7d0a26ebc574,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
167,ea58310ec57fed8d5eedc7ed30eb7d0a26ebc574,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
168,ea58310ec57fed8d5eedc7ed30eb7d0a26ebc574,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
169,ea58310ec57fed8d5eedc7ed30eb7d0a26ebc574,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
170,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
171,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
172,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
173,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
174,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
175,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/oracle/Dockerfile,# basic smoke test
176,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
177,754d834164985ed1852aad4bb6c86ae199683ff8,/16/jdk/oraclelinux8/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
178,754d834164985ed1852aad4bb6c86ae199683ff8,/16/jdk/oraclelinux8/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
179,754d834164985ed1852aad4bb6c86ae199683ff8,/16/jdk/oraclelinux8/Dockerfile,# Default to UTF-8 file.encoding
180,754d834164985ed1852aad4bb6c86ae199683ff8,/16/jdk/oraclelinux8/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
181,754d834164985ed1852aad4bb6c86ae199683ff8,/16/jdk/oraclelinux8/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
182,754d834164985ed1852aad4bb6c86ae199683ff8,/16/jdk/oraclelinux8/Dockerfile,# arm64v8
183,754d834164985ed1852aad4bb6c86ae199683ff8,/16/jdk/oraclelinux8/Dockerfile,# amd64
184,754d834164985ed1852aad4bb6c86ae199683ff8,/16/jdk/oraclelinux8/Dockerfile,# fallback
185,754d834164985ed1852aad4bb6c86ae199683ff8,/16/jdk/oraclelinux8/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
186,754d834164985ed1852aad4bb6c86ae199683ff8,/16/jdk/oraclelinux8/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
187,754d834164985ed1852aad4bb6c86ae199683ff8,/16/jdk/oraclelinux8/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
188,754d834164985ed1852aad4bb6c86ae199683ff8,/16/jdk/oraclelinux8/Dockerfile,# basic smoke test
189,754d834164985ed1852aad4bb6c86ae199683ff8,/16/jdk/oraclelinux8/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
190,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
191,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
192,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-7-jdk/Dockerfile,# Default to UTF-8 file.encoding
193,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
194,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-7-jdk/Dockerfile,#!/bin/bash'; \
195,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
196,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
197,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
198,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
199,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
200,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
201,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
202,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
203,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
204,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/slim/Dockerfile,#!/bin/sh'; \
205,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
206,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
207,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
208,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
209,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
210,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
211,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/alpine/Dockerfile,# https://jdk.java.net/
212,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
213,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
214,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/alpine/Dockerfile,# basic smoke test
215,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
216,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
217,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
218,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
219,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
220,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,# backwards compatibility shim
221,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
222,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
223,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
224,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,# arm64v8
225,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,# amd64
226,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,# fallback
227,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
228,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
229,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
230,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
231,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
232,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,# basic smoke test
233,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
234,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
235,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
236,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/slim/Dockerfile,# backwards compatibility shim
237,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
238,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/slim/Dockerfile,# https://jdk.java.net/
239,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
240,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
241,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
242,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
243,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
244,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/slim/Dockerfile,# basic smoke test
245,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
246,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
247,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
248,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
249,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
250,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
251,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/Dockerfile,#!/bin/sh'; \
252,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
253,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
254,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
255,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
256,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
257,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
258,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
259,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
260,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
261,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
262,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
263,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
264,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/Dockerfile,#!/bin/sh'; \
265,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
266,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
267,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
268,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
269,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
270,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
271,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
272,54c64cf47d2b705418feb68b811419a223c5a040,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
273,54c64cf47d2b705418feb68b811419a223c5a040,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
274,54c64cf47d2b705418feb68b811419a223c5a040,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
275,54c64cf47d2b705418feb68b811419a223c5a040,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
276,54c64cf47d2b705418feb68b811419a223c5a040,/8-jre/alpine/Dockerfile,#!/bin/sh'; \
277,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
278,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
279,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
280,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
281,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
282,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
283,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/Dockerfile,# Default to UTF-8 file.encoding
284,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
285,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/Dockerfile,#!/bin/sh'; \
286,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
287,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
288,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
289,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
290,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
291,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
292,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
293,c394ed4d70c8c1d6962955aa23be0555671ce4c9,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
294,c394ed4d70c8c1d6962955aa23be0555671ce4c9,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
295,c394ed4d70c8c1d6962955aa23be0555671ce4c9,/12/jdk/oracle/Dockerfile,# http://jdk.java.net/
296,c394ed4d70c8c1d6962955aa23be0555671ce4c9,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
297,c394ed4d70c8c1d6962955aa23be0555671ce4c9,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
298,c394ed4d70c8c1d6962955aa23be0555671ce4c9,/12/jdk/oracle/Dockerfile,# basic smoke test
299,c394ed4d70c8c1d6962955aa23be0555671ce4c9,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
300,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
301,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
302,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
303,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
304,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
305,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/oracle/Dockerfile,# basic smoke test
306,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
307,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
308,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
309,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
310,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
311,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/8-jre/alpine/Dockerfile,#!/bin/sh'; \
312,9850ebc9cb840b259aebcf4de1f19cc3b7621810,/8/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
313,9850ebc9cb840b259aebcf4de1f19cc3b7621810,/8/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
314,9850ebc9cb840b259aebcf4de1f19cc3b7621810,/8/jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
315,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
316,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
317,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
318,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
319,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/Dockerfile,# backwards compatibility shim
320,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
321,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
322,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
323,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
324,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
325,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
326,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
327,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/Dockerfile,# basic smoke test
328,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
329,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
330,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
331,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
332,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
333,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
334,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
335,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
336,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
337,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/Dockerfile,# Default to UTF-8 file.encoding
338,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/Dockerfile,# backwards compatibility shim
339,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
340,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
341,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
342,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/Dockerfile,#!/usr/bin/env bash'; \
343,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
344,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
345,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
346,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/Dockerfile,# basic smoke test
347,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
348,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
349,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
350,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
351,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
352,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
353,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
354,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
355,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
356,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
357,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
358,e2c8648d39ef1492df3482de3fda0ee3f8955fb1,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
359,e2c8648d39ef1492df3482de3fda0ee3f8955fb1,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
360,e2c8648d39ef1492df3482de3fda0ee3f8955fb1,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
361,e2c8648d39ef1492df3482de3fda0ee3f8955fb1,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
362,e2c8648d39ef1492df3482de3fda0ee3f8955fb1,/9-jdk/Dockerfile,#!/bin/sh'; \
363,e2c8648d39ef1492df3482de3fda0ee3f8955fb1,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
364,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
365,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
366,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
367,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
368,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
369,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
370,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
371,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
372,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
373,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
374,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
375,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
376,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
377,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
378,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
379,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/oracle/Dockerfile,# arm64v8
380,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/oracle/Dockerfile,# amd64
381,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/oracle/Dockerfile,# fallback
382,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
383,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
384,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
385,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/oracle/Dockerfile,# basic smoke test
386,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
387,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
388,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
389,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
390,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,# backwards compatibility shim
391,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
392,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
393,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
394,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
395,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,# arm64v8
396,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,# amd64
397,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,# fallback
398,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
399,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
400,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
401,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
402,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
403,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
404,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
405,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,# basic smoke test
406,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
407,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
408,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
409,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/slim/Dockerfile,# backwards compatibility shim
410,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
411,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
412,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
413,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/slim/Dockerfile,# amd64
414,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/slim/Dockerfile,# fallback
415,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
416,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
417,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
418,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
419,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
420,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/slim/Dockerfile,# basic smoke test
421,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
422,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
423,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
424,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
425,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
426,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
427,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
428,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
429,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
430,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
431,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
432,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
433,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
434,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
435,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
436,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
437,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/oracle/Dockerfile,# arm64v8
438,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/oracle/Dockerfile,# amd64
439,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/oracle/Dockerfile,# fallback
440,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
441,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
442,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/oracle/Dockerfile,# basic smoke test
443,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
444,0467df283134a79840c25808093c00f7c94b9a88,/6-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
445,0467df283134a79840c25808093c00f7c94b9a88,/6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
446,0467df283134a79840c25808093c00f7c94b9a88,/6-jdk/Dockerfile,# Default to UTF-8 file.encoding
447,0467df283134a79840c25808093c00f7c94b9a88,/6-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
448,0467df283134a79840c25808093c00f7c94b9a88,/6-jdk/Dockerfile,#!/bin/sh'; \
449,0467df283134a79840c25808093c00f7c94b9a88,/6-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
450,0467df283134a79840c25808093c00f7c94b9a88,/6-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
451,0467df283134a79840c25808093c00f7c94b9a88,/6-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
452,0467df283134a79840c25808093c00f7c94b9a88,/6-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
453,0467df283134a79840c25808093c00f7c94b9a88,/6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
454,bf06437449e8ae1782905f6c2df744805498874b,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
455,bf06437449e8ae1782905f6c2df744805498874b,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
456,bf06437449e8ae1782905f6c2df744805498874b,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
457,bf06437449e8ae1782905f6c2df744805498874b,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
458,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
459,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
460,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
461,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
462,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jre/Dockerfile,#!/bin/sh'; \
463,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
464,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
465,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
466,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
467,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
468,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
469,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
470,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
471,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
472,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
473,f45f3f269d4b515201f290360b345790663e657e,/10/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
474,f45f3f269d4b515201f290360b345790663e657e,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
475,f45f3f269d4b515201f290360b345790663e657e,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
476,f45f3f269d4b515201f290360b345790663e657e,/10/jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
477,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
478,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
479,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
480,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
481,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/slim/Dockerfile,#!/bin/sh'; \
482,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
483,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
484,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
485,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
486,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
487,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
488,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
489,193df6f21c76adb7bf23c0a6791fcbc28f6ec5fc,/openjdk-6-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
490,193df6f21c76adb7bf23c0a6791fcbc28f6ec5fc,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
491,193df6f21c76adb7bf23c0a6791fcbc28f6ec5fc,/openjdk-6-jdk/Dockerfile,# Default to UTF-8 file.encoding
492,193df6f21c76adb7bf23c0a6791fcbc28f6ec5fc,/openjdk-6-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
493,193df6f21c76adb7bf23c0a6791fcbc28f6ec5fc,/openjdk-6-jdk/Dockerfile,#!/bin/bash'; \
494,193df6f21c76adb7bf23c0a6791fcbc28f6ec5fc,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
495,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
496,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
497,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
498,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
499,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
500,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/oracle/Dockerfile,# arm64v8
501,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/oracle/Dockerfile,# amd64
502,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/oracle/Dockerfile,# fallback
503,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
504,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
505,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/oracle/Dockerfile,# basic smoke test
506,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
507,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
508,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
509,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
510,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
511,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
512,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/oracle/Dockerfile,# arm64v8
513,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/oracle/Dockerfile,# amd64
514,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/oracle/Dockerfile,# fallback
515,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
516,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
517,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/oracle/Dockerfile,# basic smoke test
518,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
519,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
520,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
521,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
522,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jre/alpine/Dockerfile,#!/bin/sh -e'; \
523,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
524,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
525,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# https://adoptopenjdk.net/upstream.html
526,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
527,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
528,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
529,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
530,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
531,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
532,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
533,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
534,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/oracle/Dockerfile,# basic smoke test
535,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
536,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
537,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
538,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
539,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
540,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/14/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
541,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/14/jdk/oracle/Dockerfile,# amd64
542,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/14/jdk/oracle/Dockerfile,# fallback
543,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
544,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
545,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/14/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
546,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/14/jdk/oracle/Dockerfile,# basic smoke test
547,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
548,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
549,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
550,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
551,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
552,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
553,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
554,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
555,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
556,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)"
557,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
558,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
559,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
560,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
561,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
562,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/windows/nanoserver/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
563,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/windows/nanoserver/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
564,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/windows/nanoserver/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
565,030bf19db79998e9f9861d1ce848bbf1f41ee050,/openjdk-8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
566,030bf19db79998e9f9861d1ce848bbf1f41ee050,/openjdk-8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
567,030bf19db79998e9f9861d1ce848bbf1f41ee050,/openjdk-8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
568,030bf19db79998e9f9861d1ce848bbf1f41ee050,/openjdk-8-jre/alpine/Dockerfile,#!/bin/sh -e'; \
569,8b20818d91705361ff42b597369620680d0af98c,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
570,8b20818d91705361ff42b597369620680d0af98c,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
571,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
572,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
573,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/Dockerfile,# Default to UTF-8 file.encoding
574,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
575,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/Dockerfile,#!/bin/sh'; \
576,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
577,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
578,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
579,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
580,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
581,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
582,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
583,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
584,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
585,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
586,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
587,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
588,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
589,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
590,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-9-jre/Dockerfile,# Default to UTF-8 file.encoding
591,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
592,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-9-jre/Dockerfile,#!/bin/bash'; \
593,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-9-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
594,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-9-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
595,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
596,2695acad7bb0cd43353dc6c7d5cfc6424ab12b54,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
597,2695acad7bb0cd43353dc6c7d5cfc6424ab12b54,/openjdk-8-jdk/Dockerfile,# Default to UTF-8 file.encoding
598,2695acad7bb0cd43353dc6c7d5cfc6424ab12b54,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
599,2695acad7bb0cd43353dc6c7d5cfc6424ab12b54,/openjdk-8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
600,2695acad7bb0cd43353dc6c7d5cfc6424ab12b54,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
601,754d834164985ed1852aad4bb6c86ae199683ff8,/14/jdk/oraclelinux8/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
602,754d834164985ed1852aad4bb6c86ae199683ff8,/14/jdk/oraclelinux8/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
603,754d834164985ed1852aad4bb6c86ae199683ff8,/14/jdk/oraclelinux8/Dockerfile,# Default to UTF-8 file.encoding
604,754d834164985ed1852aad4bb6c86ae199683ff8,/14/jdk/oraclelinux8/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
605,754d834164985ed1852aad4bb6c86ae199683ff8,/14/jdk/oraclelinux8/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
606,754d834164985ed1852aad4bb6c86ae199683ff8,/14/jdk/oraclelinux8/Dockerfile,# amd64
607,754d834164985ed1852aad4bb6c86ae199683ff8,/14/jdk/oraclelinux8/Dockerfile,# fallback
608,754d834164985ed1852aad4bb6c86ae199683ff8,/14/jdk/oraclelinux8/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
609,754d834164985ed1852aad4bb6c86ae199683ff8,/14/jdk/oraclelinux8/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
610,754d834164985ed1852aad4bb6c86ae199683ff8,/14/jdk/oraclelinux8/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
611,754d834164985ed1852aad4bb6c86ae199683ff8,/14/jdk/oraclelinux8/Dockerfile,# basic smoke test
612,754d834164985ed1852aad4bb6c86ae199683ff8,/14/jdk/oraclelinux8/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
613,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
614,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
615,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
616,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
617,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/Dockerfile,#!/bin/sh'; \
618,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
619,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
620,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
621,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
622,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
623,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
624,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
625,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
626,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
627,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
628,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
629,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
630,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
631,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
632,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
633,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
634,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
635,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
636,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/oracle/Dockerfile,# arm64v8
637,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/oracle/Dockerfile,# amd64
638,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/oracle/Dockerfile,# fallback
639,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
640,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
641,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
642,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/oracle/Dockerfile,# basic smoke test
643,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
644,0b124de91ebd32bcc8977fd2214d36b8fccb615c,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
645,0b124de91ebd32bcc8977fd2214d36b8fccb615c,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
646,2b59d89bfa05b13f397b7e30562d6ab6ca177da0,/openjdk-8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
647,2b59d89bfa05b13f397b7e30562d6ab6ca177da0,/openjdk-8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
648,2b59d89bfa05b13f397b7e30562d6ab6ca177da0,/openjdk-8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
649,2b59d89bfa05b13f397b7e30562d6ab6ca177da0,/openjdk-8-jdk/alpine/Dockerfile,#!/bin/sh -e'; \
650,c394ed4d70c8c1d6962955aa23be0555671ce4c9,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
651,c394ed4d70c8c1d6962955aa23be0555671ce4c9,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
652,c394ed4d70c8c1d6962955aa23be0555671ce4c9,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
653,c394ed4d70c8c1d6962955aa23be0555671ce4c9,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
654,d912163e5aa10f916be7ac40ac0de7e8a82c4547,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
655,d912163e5aa10f916be7ac40ac0de7e8a82c4547,/openjdk-8-jdk/Dockerfile,# Default to UTF-8 file.encoding
656,d912163e5aa10f916be7ac40ac0de7e8a82c4547,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
657,d912163e5aa10f916be7ac40ac0de7e8a82c4547,/openjdk-8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
658,d912163e5aa10f916be7ac40ac0de7e8a82c4547,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
659,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
660,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
661,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
662,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
663,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
664,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
665,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
666,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
667,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
668,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
669,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
670,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
671,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
672,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
673,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/slim/Dockerfile,#!/bin/sh'; \
674,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
675,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
676,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
677,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
678,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
679,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
680,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
681,4135ad55c2577bd722c575a41211c59669353d54,/8-jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
682,4135ad55c2577bd722c575a41211c59669353d54,/8-jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
683,4135ad55c2577bd722c575a41211c59669353d54,/8-jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
684,4135ad55c2577bd722c575a41211c59669353d54,/8-jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
685,58ba04f37a289057ac53b4376773b03227dceb77,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
686,58ba04f37a289057ac53b4376773b03227dceb77,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
687,58ba04f37a289057ac53b4376773b03227dceb77,/12/jdk/oracle/Dockerfile,# http://jdk.java.net/
688,58ba04f37a289057ac53b4376773b03227dceb77,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
689,58ba04f37a289057ac53b4376773b03227dceb77,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
690,58ba04f37a289057ac53b4376773b03227dceb77,/12/jdk/oracle/Dockerfile,# basic smoke test
691,58ba04f37a289057ac53b4376773b03227dceb77,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
692,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
693,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
694,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
695,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
696,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
697,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
698,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,# Default to UTF-8 file.encoding
699,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,# backwards compatibility shim
700,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
701,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
702,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
703,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
704,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,# amd64
705,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,# fallback
706,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
707,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
708,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
709,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
710,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,#!/usr/bin/env bash'; \
711,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
712,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
713,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,# basic smoke test
714,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
715,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
716,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/slim-buster/Dockerfile,# backwards compatibility shim
717,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
718,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/slim-buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
719,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
720,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/slim-buster/Dockerfile,# arm64v8
721,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/slim-buster/Dockerfile,# amd64
722,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/slim-buster/Dockerfile,# fallback
723,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
724,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
725,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
726,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
727,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
728,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/slim-buster/Dockerfile,# basic smoke test
729,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
730,8f86e66f070a110b2648004cc732683fb5224ed3,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
731,8f86e66f070a110b2648004cc732683fb5224ed3,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
732,8f86e66f070a110b2648004cc732683fb5224ed3,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
733,8f86e66f070a110b2648004cc732683fb5224ed3,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
734,8f86e66f070a110b2648004cc732683fb5224ed3,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
735,8f86e66f070a110b2648004cc732683fb5224ed3,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
736,8f86e66f070a110b2648004cc732683fb5224ed3,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
737,8f86e66f070a110b2648004cc732683fb5224ed3,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
738,8f86e66f070a110b2648004cc732683fb5224ed3,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
739,8f86e66f070a110b2648004cc732683fb5224ed3,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
740,8f86e66f070a110b2648004cc732683fb5224ed3,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
741,8f86e66f070a110b2648004cc732683fb5224ed3,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
742,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
743,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
744,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
745,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
746,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/slim/Dockerfile,#!/bin/sh'; \
747,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
748,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
749,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
750,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
751,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
752,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
753,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
754,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
755,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
756,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
757,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
758,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/buster/Dockerfile,# backwards compatibility shim
759,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
760,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
761,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
762,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/buster/Dockerfile,# amd64
763,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/buster/Dockerfile,# fallback
764,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
765,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
766,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
767,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
768,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
769,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/buster/Dockerfile,# basic smoke test
770,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
771,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
772,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
773,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
774,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
775,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
776,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
777,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
778,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
779,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
780,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
781,f25ed8b213142ebe4370cf7494ecccccecc55ecd,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
782,f25ed8b213142ebe4370cf7494ecccccecc55ecd,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
783,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
784,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
785,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
786,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
787,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
788,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
789,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/nanoserver-1803/Dockerfile,# https://jdk.java.net/
790,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
791,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
792,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
793,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
794,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
795,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/Dockerfile,#!/bin/sh'; \
796,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
797,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
798,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
799,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
800,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
801,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
802,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
803,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
804,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
805,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
806,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
807,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,# backwards compatibility shim
808,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
809,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
810,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
811,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,# arm64v8
812,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,# amd64
813,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,# fallback
814,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
815,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
816,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
817,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
818,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
819,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,# basic smoke test
820,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
821,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
822,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
823,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
824,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
825,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/8-jre/alpine/Dockerfile,#!/bin/sh'; \
826,b4a3c296023e590e410f645ab83d3c11a30cf535,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
827,b4a3c296023e590e410f645ab83d3c11a30cf535,/openjdk-8-jre/Dockerfile,# Default to UTF-8 file.encoding
828,b4a3c296023e590e410f645ab83d3c11a30cf535,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
829,b4a3c296023e590e410f645ab83d3c11a30cf535,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
830,b4a3c296023e590e410f645ab83d3c11a30cf535,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
831,fdf3bb8d168120655fe39e4098713e704db809df,/8/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
832,fdf3bb8d168120655fe39e4098713e704db809df,/8/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
833,fdf3bb8d168120655fe39e4098713e704db809df,/8/jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
834,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
835,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
836,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/slim/Dockerfile,# backwards compatibility shim
837,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
838,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
839,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
840,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/slim/Dockerfile,# amd64
841,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/slim/Dockerfile,# fallback
842,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
843,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
844,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
845,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
846,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
847,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/slim/Dockerfile,# basic smoke test
848,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
849,434085b54bbb735683242c232d8b0d79259ce3c0,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
850,434085b54bbb735683242c232d8b0d79259ce3c0,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
851,434085b54bbb735683242c232d8b0d79259ce3c0,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
852,434085b54bbb735683242c232d8b0d79259ce3c0,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
853,434085b54bbb735683242c232d8b0d79259ce3c0,/9-jdk/Dockerfile,#!/bin/sh'; \
854,434085b54bbb735683242c232d8b0d79259ce3c0,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
855,504b1cde5b2a8649731b3a0b73e1280cc790c61e,/7/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
856,504b1cde5b2a8649731b3a0b73e1280cc790c61e,/7/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
857,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
858,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
859,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
860,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
861,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
862,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
863,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
864,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
865,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
866,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
867,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
868,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
869,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
870,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
871,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
872,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
873,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
874,9089afd69bd69c34413b064bc36c15509b2ed4df,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
875,9089afd69bd69c34413b064bc36c15509b2ed4df,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
876,9089afd69bd69c34413b064bc36c15509b2ed4df,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
877,9089afd69bd69c34413b064bc36c15509b2ed4df,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
878,9089afd69bd69c34413b064bc36c15509b2ed4df,/8-jre/alpine/Dockerfile,#!/bin/sh'; \
879,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
880,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
881,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
882,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
883,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/Dockerfile,#!/bin/sh'; \
884,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
885,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
886,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
887,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
888,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
889,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
890,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
891,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
892,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
893,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-1809/Dockerfile,# http://jdk.java.net/
894,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
895,97ab55cab073e87658ec6f993538038bfc7a858d,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
896,97ab55cab073e87658ec6f993538038bfc7a858d,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
897,97ab55cab073e87658ec6f993538038bfc7a858d,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
898,97ab55cab073e87658ec6f993538038bfc7a858d,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
899,97ab55cab073e87658ec6f993538038bfc7a858d,/9-jdk/Dockerfile,#!/bin/sh'; \
900,97ab55cab073e87658ec6f993538038bfc7a858d,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
901,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
902,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
903,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
904,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
905,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/alpine/Dockerfile,#!/bin/sh'; \
906,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
907,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
908,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
909,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
910,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
911,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
912,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
913,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
914,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
915,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
916,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
917,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
918,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
919,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
920,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
921,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
922,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
923,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/Dockerfile,#!/bin/sh'; \
924,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
925,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
926,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
927,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
928,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
929,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
930,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
931,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
932,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
933,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/slim/Dockerfile,# backwards compatibility shim
934,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
935,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/slim/Dockerfile,# https://jdk.java.net/
936,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
937,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
938,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
939,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
940,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
941,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/slim/Dockerfile,# basic smoke test
942,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
943,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
944,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
945,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
946,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
947,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
948,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jre/Dockerfile,#!/bin/sh'; \
949,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
950,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
951,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
952,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
953,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
954,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
955,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
956,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
957,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
958,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
959,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
960,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
961,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
962,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
963,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
964,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
965,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
966,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
967,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
968,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
969,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
970,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
971,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
972,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
973,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/Dockerfile,#!/bin/sh'; \
974,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
975,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
976,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
977,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
978,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
979,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
980,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
981,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
982,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
983,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/Dockerfile,# backwards compatibility shim
984,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
985,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
986,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
987,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
988,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
989,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
990,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
991,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/Dockerfile,#!/usr/bin/env bash'; \
992,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
993,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
994,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/Dockerfile,# basic smoke test
995,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
996,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
997,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
998,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
999,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1000,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/Dockerfile,#!/bin/sh'; \
1001,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1002,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
1003,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
1004,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1005,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1006,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1007,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
1008,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1009,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1010,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
1011,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
1012,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1013,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/8-jre/Dockerfile,#!/bin/sh'; \
1014,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
1015,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
1016,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
1017,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1018,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
1019,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
1020,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1021,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/slim/Dockerfile,#!/bin/sh'; \
1022,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1023,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
1024,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1025,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1026,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1027,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1028,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1029,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1030,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1031,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1032,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
1033,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1034,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
1035,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
1036,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/slim/Dockerfile,# backwards compatibility shim
1037,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
1038,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/slim/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
1039,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
1040,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
1041,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
1042,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
1043,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
1044,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
1045,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
1046,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
1047,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/slim/Dockerfile,# basic smoke test
1048,754d834164985ed1852aad4bb6c86ae199683ff8,/15/jdk/oraclelinux8/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
1049,754d834164985ed1852aad4bb6c86ae199683ff8,/15/jdk/oraclelinux8/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
1050,754d834164985ed1852aad4bb6c86ae199683ff8,/15/jdk/oraclelinux8/Dockerfile,# Default to UTF-8 file.encoding
1051,754d834164985ed1852aad4bb6c86ae199683ff8,/15/jdk/oraclelinux8/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
1052,754d834164985ed1852aad4bb6c86ae199683ff8,/15/jdk/oraclelinux8/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
1053,754d834164985ed1852aad4bb6c86ae199683ff8,/15/jdk/oraclelinux8/Dockerfile,# arm64v8
1054,754d834164985ed1852aad4bb6c86ae199683ff8,/15/jdk/oraclelinux8/Dockerfile,# amd64
1055,754d834164985ed1852aad4bb6c86ae199683ff8,/15/jdk/oraclelinux8/Dockerfile,# fallback
1056,754d834164985ed1852aad4bb6c86ae199683ff8,/15/jdk/oraclelinux8/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
1057,754d834164985ed1852aad4bb6c86ae199683ff8,/15/jdk/oraclelinux8/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1058,754d834164985ed1852aad4bb6c86ae199683ff8,/15/jdk/oraclelinux8/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
1059,754d834164985ed1852aad4bb6c86ae199683ff8,/15/jdk/oraclelinux8/Dockerfile,# basic smoke test
1060,754d834164985ed1852aad4bb6c86ae199683ff8,/15/jdk/oraclelinux8/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
1061,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
1062,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
1063,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/slim/Dockerfile,# backwards compatibility shim
1064,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
1065,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
1066,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
1067,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
1068,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
1069,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
1070,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1071,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/slim/Dockerfile,# basic smoke test
1072,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
1073,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
1074,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1075,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
1076,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
1077,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1078,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/Dockerfile,#!/bin/sh'; \
1079,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1080,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
1081,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
1082,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)"
1083,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1084,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1085,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1086,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1087,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1088,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1089,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
1090,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
1091,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1092,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/slim/Dockerfile,#!/bin/sh'; \
1093,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1094,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
1095,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1096,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1097,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1098,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1099,d617d7e4b951735c512f3d5ac7672f7394115c91,/8/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1100,d617d7e4b951735c512f3d5ac7672f7394115c91,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1101,d617d7e4b951735c512f3d5ac7672f7394115c91,/8/jdk/windows/windowsservercore-1809/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
1102,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
1103,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
1104,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
1105,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/Dockerfile,# backwards compatibility shim
1106,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
1107,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
1108,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
1109,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
1110,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
1111,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
1112,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
1113,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/Dockerfile,#!/usr/bin/env bash'; \
1114,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
1115,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
1116,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/Dockerfile,# basic smoke test
1117,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1118,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
1119,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
1120,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1121,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/Dockerfile,#!/bin/sh'; \
1122,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1123,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
1124,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1125,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1126,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1127,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1128,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1129,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1130,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1131,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/nanoserver-sac2016/Dockerfile,# https://jdk.java.net/
1132,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1133,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1134,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
1135,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
1136,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1137,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/slim/Dockerfile,#!/bin/sh'; \
1138,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1139,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
1140,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1141,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1142,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1143,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1144,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1145,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1146,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1147,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
1148,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1149,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1150,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1151,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1152,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
1153,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1154,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1155,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1156,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1157,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
1158,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1159,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/8/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1160,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1161,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/8/jdk/windows/windowsservercore-1803/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
1162,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1163,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1164,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1165,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
1166,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1167,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
1168,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
1169,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/slim/Dockerfile,# backwards compatibility shim
1170,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
1171,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
1172,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
1173,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
1174,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
1175,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
1176,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1177,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/slim/Dockerfile,# basic smoke test
1178,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
1179,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
1180,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1181,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1182,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1183,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
1184,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1185,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
1186,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
1187,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
1188,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
1189,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,# backwards compatibility shim
1190,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
1191,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
1192,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
1193,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,# arm64v8
1194,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,# amd64
1195,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,# fallback
1196,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
1197,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
1198,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
1199,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
1200,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1201,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,# basic smoke test
1202,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
1203,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1204,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1205,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1206,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
1207,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1208,3110fbc370293c071cc995c4a89e4b1814553ad5,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1209,3110fbc370293c071cc995c4a89e4b1814553ad5,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
1210,3110fbc370293c071cc995c4a89e4b1814553ad5,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
1211,3110fbc370293c071cc995c4a89e4b1814553ad5,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1212,3110fbc370293c071cc995c4a89e4b1814553ad5,/9-jdk/Dockerfile,#!/bin/sh'; \
1213,3110fbc370293c071cc995c4a89e4b1814553ad5,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
1214,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/7-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1215,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/7-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
1216,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/7-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
1217,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/7-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1218,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/7-jre/alpine/Dockerfile,#!/bin/sh'; \
1219,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1220,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1221,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
1222,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
1223,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
1224,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
1225,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
1226,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/slim/Dockerfile,# backwards compatibility shim
1227,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
1228,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
1229,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
1230,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
1231,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
1232,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
1233,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1234,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/slim/Dockerfile,# basic smoke test
1235,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
1236,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
1237,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
1238,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
1239,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/oracle/Dockerfile,# http://jdk.java.net/
1240,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
1241,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
1242,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/oracle/Dockerfile,# basic smoke test
1243,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
1244,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1245,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
1246,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
1247,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1248,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/slim/Dockerfile,#!/bin/sh'; \
1249,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1250,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
1251,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1252,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1253,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1254,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1255,54c64cf47d2b705418feb68b811419a223c5a040,/7-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1256,54c64cf47d2b705418feb68b811419a223c5a040,/7-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
1257,54c64cf47d2b705418feb68b811419a223c5a040,/7-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
1258,54c64cf47d2b705418feb68b811419a223c5a040,/7-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1259,54c64cf47d2b705418feb68b811419a223c5a040,/7-jre/alpine/Dockerfile,#!/bin/sh'; \
1260,a2d46845f90bd841871419063cf12ebe4c2e2b72,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1261,a2d46845f90bd841871419063cf12ebe4c2e2b72,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
1262,a2d46845f90bd841871419063cf12ebe4c2e2b72,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
1263,a2d46845f90bd841871419063cf12ebe4c2e2b72,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1264,a2d46845f90bd841871419063cf12ebe4c2e2b72,/9-jre/Dockerfile,#!/bin/sh'; \
1265,a2d46845f90bd841871419063cf12ebe4c2e2b72,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
1266,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/11/jre/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
1267,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/11/jre/windows/nanoserver-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
1268,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/11/jre/windows/nanoserver-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
1269,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/11/jre/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
1270,42abb498353aae46a5766659faf3853edc441bde,/6/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
1271,42abb498353aae46a5766659faf3853edc441bde,/6/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
1272,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1273,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
1274,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
1275,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1276,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jre/Dockerfile,#!/bin/sh'; \
1277,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1278,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
1279,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1280,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1281,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1282,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
1283,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
1284,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1285,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1286,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1287,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
1288,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1289,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1290,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
1291,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
1292,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1293,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/Dockerfile,#!/bin/sh'; \
1294,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1295,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
1296,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
1297,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)"
1298,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1299,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1300,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1301,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1302,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1303,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1304,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/windows/windowsservercore-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
1305,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/windows/windowsservercore-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
1306,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
1307,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1308,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
1309,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
1310,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1311,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/Dockerfile,#!/bin/sh'; \
1312,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1313,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
1314,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
1315,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1316,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1317,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1318,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
1319,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1320,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1321,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1322,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1323,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
1324,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1325,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
1326,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
1327,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
1328,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
1329,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1330,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/oracle/Dockerfile,# basic smoke test
1331,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
1332,f6c1efc5fdf4358b633042522920a1624c95914b,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1333,f6c1efc5fdf4358b633042522920a1624c95914b,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
1334,f6c1efc5fdf4358b633042522920a1624c95914b,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
1335,f6c1efc5fdf4358b633042522920a1624c95914b,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1336,f6c1efc5fdf4358b633042522920a1624c95914b,/9-jre/Dockerfile,#!/bin/sh'; \
1337,f6c1efc5fdf4358b633042522920a1624c95914b,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
1338,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1339,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1340,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1341,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
1342,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1343,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
1344,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
1345,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
1346,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
1347,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/buster/Dockerfile,# backwards compatibility shim
1348,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
1349,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
1350,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
1351,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/buster/Dockerfile,# amd64
1352,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/buster/Dockerfile,# fallback
1353,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
1354,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
1355,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
1356,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
1357,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1358,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/buster/Dockerfile,# basic smoke test
1359,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
1360,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
1361,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
1362,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
1363,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
1364,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/Dockerfile,# backwards compatibility shim
1365,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
1366,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
1367,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
1368,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/Dockerfile,# amd64
1369,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/Dockerfile,# fallback
1370,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
1371,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
1372,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
1373,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
1374,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1375,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/Dockerfile,# basic smoke test
1376,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
1377,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1378,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
1379,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
1380,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1381,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/Dockerfile,#!/bin/sh'; \
1382,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1383,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
1384,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1385,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1386,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1387,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1388,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1389,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
1390,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
1391,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/slim/Dockerfile,# backwards compatibility shim
1392,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
1393,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/slim/Dockerfile,# https://jdk.java.net/
1394,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
1395,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
1396,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
1397,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
1398,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1399,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/slim/Dockerfile,# basic smoke test
1400,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
1401,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
1402,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1403,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1404,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1405,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
1406,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1407,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1408,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1409,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1410,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
1411,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1412,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1413,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1414,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://adoptopenjdk.net/upstream.html
1415,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
1416,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
1417,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1418,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1419,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1420,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
1421,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1422,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1423,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1424,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1425,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-1709/Dockerfile,# https://jdk.java.net/
1426,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1427,8502712f6e80904b766505805c894c2008afa700,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1428,8502712f6e80904b766505805c894c2008afa700,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1429,8502712f6e80904b766505805c894c2008afa700,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
1430,8502712f6e80904b766505805c894c2008afa700,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1431,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1432,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1433,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1434,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
1435,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
1436,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1437,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
1438,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
1439,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1440,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/slim/Dockerfile,#!/bin/sh'; \
1441,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1442,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
1443,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1444,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1445,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1446,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1447,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/alpine3.12/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
1448,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/alpine3.12/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
1449,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/alpine3.12/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
1450,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/alpine3.12/Dockerfile,# amd64
1451,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/alpine3.12/Dockerfile,# fallback
1452,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/alpine3.12/Dockerfile,"# see ""java-cacerts"" package installed above (which maintains ""/etc/ssl/certs/java/cacerts"" for us)"
1453,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/alpine3.12/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1454,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/alpine3.12/Dockerfile,# basic smoke test
1455,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/alpine3.12/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
1456,cee45bcb0f2d6db2e3e96c5465ebd5dbddcb2aea,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
1457,cee45bcb0f2d6db2e3e96c5465ebd5dbddcb2aea,/openjdk-7-jdk/Dockerfile,# Default to UTF-8 file.encoding
1458,cee45bcb0f2d6db2e3e96c5465ebd5dbddcb2aea,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
1459,70015f4ca4c484a5c78b71fad7243a022cb1e6c2,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1460,70015f4ca4c484a5c78b71fad7243a022cb1e6c2,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
1461,70015f4ca4c484a5c78b71fad7243a022cb1e6c2,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
1462,70015f4ca4c484a5c78b71fad7243a022cb1e6c2,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1463,70015f4ca4c484a5c78b71fad7243a022cb1e6c2,/9-jdk/Dockerfile,#!/bin/sh'; \
1464,70015f4ca4c484a5c78b71fad7243a022cb1e6c2,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
1465,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux8/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
1466,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux8/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
1467,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux8/Dockerfile,# Default to UTF-8 file.encoding
1468,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux8/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
1469,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux8/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
1470,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux8/Dockerfile,# arm64v8
1471,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux8/Dockerfile,# amd64
1472,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux8/Dockerfile,# fallback
1473,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux8/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
1474,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux8/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1475,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux8/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
1476,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux8/Dockerfile,# basic smoke test
1477,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux8/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
1478,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
1479,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
1480,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
1481,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
1482,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/Dockerfile,# backwards compatibility shim
1483,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
1484,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
1485,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
1486,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
1487,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
1488,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
1489,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1490,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/Dockerfile,# basic smoke test
1491,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
1492,25c0a52bf0c70eafc6341bdb621580f4f282e1a1,/12/jdk/alpine/Dockerfile,# http://jdk.java.net/
1493,25c0a52bf0c70eafc6341bdb621580f4f282e1a1,/12/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
1494,25c0a52bf0c70eafc6341bdb621580f4f282e1a1,/12/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
1495,25c0a52bf0c70eafc6341bdb621580f4f282e1a1,/12/jdk/alpine/Dockerfile,# basic smoke test
1496,25c0a52bf0c70eafc6341bdb621580f4f282e1a1,/12/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
1497,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-6-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1498,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
1499,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-6-jre/Dockerfile,# Default to UTF-8 file.encoding
1500,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-6-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1501,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-6-jre/Dockerfile,#!/bin/bash'; \
1502,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
1503,8b20818d91705361ff42b597369620680d0af98c,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
1504,8b20818d91705361ff42b597369620680d0af98c,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
1505,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1506,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1507,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/windows/windowsservercore-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
1508,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/windows/windowsservercore-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
1509,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
1510,45c21bc4b2492f962d726eb31b1535ca15c4a726,/13/jdk/alpine/Dockerfile,# https://jdk.java.net/
1511,45c21bc4b2492f962d726eb31b1535ca15c4a726,/13/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
1512,45c21bc4b2492f962d726eb31b1535ca15c4a726,/13/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1513,45c21bc4b2492f962d726eb31b1535ca15c4a726,/13/jdk/alpine/Dockerfile,# basic smoke test
1514,45c21bc4b2492f962d726eb31b1535ca15c4a726,/13/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
1515,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1516,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
1517,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/Dockerfile,# Default to UTF-8 file.encoding
1518,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1519,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/Dockerfile,#!/bin/sh'; \
1520,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1521,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
1522,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
1523,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1524,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1525,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1526,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1527,0b124de91ebd32bcc8977fd2214d36b8fccb615c,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
1528,0b124de91ebd32bcc8977fd2214d36b8fccb615c,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
1529,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
1530,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
1531,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
1532,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
1533,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
1534,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1535,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/oracle/Dockerfile,# basic smoke test
1536,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
1537,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1538,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
1539,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/Dockerfile,# Default to UTF-8 file.encoding
1540,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1541,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/Dockerfile,#!/bin/sh'; \
1542,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1543,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
1544,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1545,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1546,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1547,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1548,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1549,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
1550,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
1551,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/slim/Dockerfile,# backwards compatibility shim
1552,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
1553,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
1554,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
1555,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/slim/Dockerfile,# arm64v8
1556,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/slim/Dockerfile,# amd64
1557,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/slim/Dockerfile,# fallback
1558,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
1559,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
1560,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
1561,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
1562,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1563,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/slim/Dockerfile,# basic smoke test
1564,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
1565,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1566,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1567,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1568,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
1569,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1570,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
1571,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
1572,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
1573,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
1574,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1575,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/oracle/Dockerfile,# basic smoke test
1576,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
1577,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
1578,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
1579,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/slim/Dockerfile,# backwards compatibility shim
1580,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
1581,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
1582,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
1583,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
1584,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
1585,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
1586,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
1587,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
1588,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
1589,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
1590,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/slim/Dockerfile,# basic smoke test
1591,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1592,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1593,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1594,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
1595,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1596,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1597,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
1598,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/Dockerfile,# Default to UTF-8 file.encoding
1599,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1600,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/Dockerfile,#!/bin/sh'; \
1601,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1602,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
1603,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1604,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1605,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1606,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1607,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1608,906bdc14f53c6eff33c007511701ef0444705993,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1609,906bdc14f53c6eff33c007511701ef0444705993,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
1610,906bdc14f53c6eff33c007511701ef0444705993,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
1611,906bdc14f53c6eff33c007511701ef0444705993,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1612,906bdc14f53c6eff33c007511701ef0444705993,/9-jre/Dockerfile,#!/bin/sh'; \
1613,906bdc14f53c6eff33c007511701ef0444705993,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1614,906bdc14f53c6eff33c007511701ef0444705993,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1615,906bdc14f53c6eff33c007511701ef0444705993,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1616,906bdc14f53c6eff33c007511701ef0444705993,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1617,906bdc14f53c6eff33c007511701ef0444705993,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
1618,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1619,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1620,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1621,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
1622,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1623,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1624,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1625,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1626,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
1627,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1628,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
1629,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
1630,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
1631,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
1632,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/Dockerfile,# backwards compatibility shim
1633,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
1634,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
1635,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
1636,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
1637,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
1638,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
1639,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1640,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/Dockerfile,# basic smoke test
1641,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
1642,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1643,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1644,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1645,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
1646,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1647,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1648,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1649,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1650,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
1651,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1652,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
1653,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
1654,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
1655,c5febc686f445910ce2075d8b2434c7ec23ffc6c,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1656,c5febc686f445910ce2075d8b2434c7ec23ffc6c,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
1657,c5febc686f445910ce2075d8b2434c7ec23ffc6c,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
1658,c5febc686f445910ce2075d8b2434c7ec23ffc6c,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1659,c5febc686f445910ce2075d8b2434c7ec23ffc6c,/9-jdk/Dockerfile,#!/bin/sh'; \
1660,c5febc686f445910ce2075d8b2434c7ec23ffc6c,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
1661,f25ed8b213142ebe4370cf7494ecccccecc55ecd,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
1662,f25ed8b213142ebe4370cf7494ecccccecc55ecd,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
1663,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
1664,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
1665,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
1666,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/Dockerfile,# backwards compatibility shim
1667,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
1668,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
1669,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
1670,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
1671,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
1672,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
1673,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
1674,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/Dockerfile,#!/usr/bin/env bash'; \
1675,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
1676,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
1677,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/Dockerfile,# basic smoke test
1678,1778c73b834d04d5b5c61baee4cce8c127031f9c,/7/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1679,1778c73b834d04d5b5c61baee4cce8c127031f9c,/7/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
1680,1778c73b834d04d5b5c61baee4cce8c127031f9c,/7/jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
1681,1778c73b834d04d5b5c61baee4cce8c127031f9c,/7/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1682,1778c73b834d04d5b5c61baee4cce8c127031f9c,/7/jre/alpine/Dockerfile,#!/bin/sh'; \
1683,1778c73b834d04d5b5c61baee4cce8c127031f9c,/7/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1684,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
1685,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
1686,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
1687,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
1688,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,# backwards compatibility shim
1689,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
1690,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
1691,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
1692,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,# arm64v8
1693,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,# amd64
1694,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,# fallback
1695,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
1696,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
1697,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
1698,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
1699,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1700,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,# basic smoke test
1701,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
1702,9a0822673dffd3e5ba66f18a8547aa60faed6d08,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1703,9a0822673dffd3e5ba66f18a8547aa60faed6d08,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
1704,9a0822673dffd3e5ba66f18a8547aa60faed6d08,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
1705,9a0822673dffd3e5ba66f18a8547aa60faed6d08,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1706,9a0822673dffd3e5ba66f18a8547aa60faed6d08,/8-jre/alpine/Dockerfile,#!/bin/sh'; \
1707,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1708,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
1709,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
1710,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1711,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jdk/Dockerfile,#!/bin/sh'; \
1712,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1713,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
1714,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1715,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1716,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1717,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
1718,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
1719,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
1720,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
1721,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
1722,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
1723,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/Dockerfile,# backwards compatibility shim
1724,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
1725,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
1726,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
1727,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
1728,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
1729,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
1730,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1731,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/Dockerfile,# basic smoke test
1732,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
1733,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1734,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
1735,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
1736,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1737,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/slim/Dockerfile,#!/bin/sh'; \
1738,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1739,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
1740,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1741,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1742,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1743,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1744,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1745,b734af2a8ee4697604035d14064fb7f3b1d5f050,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1746,b734af2a8ee4697604035d14064fb7f3b1d5f050,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
1747,b734af2a8ee4697604035d14064fb7f3b1d5f050,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
1748,b734af2a8ee4697604035d14064fb7f3b1d5f050,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1749,b734af2a8ee4697604035d14064fb7f3b1d5f050,/8-jdk/alpine/Dockerfile,#!/bin/sh'; \
1750,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1751,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1752,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1753,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
1754,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1755,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
1756,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
1757,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
1758,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
1759,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1760,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/oracle/Dockerfile,# basic smoke test
1761,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
1762,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
1763,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
1764,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
1765,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
1766,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
1767,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1768,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/oracle/Dockerfile,# basic smoke test
1769,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
1770,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
1771,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
1772,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
1773,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
1774,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/Dockerfile,# backwards compatibility shim
1775,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
1776,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/Dockerfile,# https://jdk.java.net/
1777,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
1778,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
1779,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
1780,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
1781,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1782,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/Dockerfile,# basic smoke test
1783,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
1784,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1785,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
1786,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
1787,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1788,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/slim/Dockerfile,#!/bin/sh'; \
1789,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1790,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
1791,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-reccomends:
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
1792,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1793,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1794,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1795,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1796,17d0f9f3411d82622c762163d85cc4a6ba69af95,/7-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1797,17d0f9f3411d82622c762163d85cc4a6ba69af95,/7-jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
1798,17d0f9f3411d82622c762163d85cc4a6ba69af95,/7-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
1799,17d0f9f3411d82622c762163d85cc4a6ba69af95,/7-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1800,17d0f9f3411d82622c762163d85cc4a6ba69af95,/7-jre/alpine/Dockerfile,#!/bin/sh'; \
1801,17d0f9f3411d82622c762163d85cc4a6ba69af95,/7-jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1802,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1803,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
1804,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
1805,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1806,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/slim/Dockerfile,#!/bin/sh'; \
1807,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1808,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
1809,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
1810,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1811,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1812,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1813,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1814,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1815,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1816,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1817,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1818,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
1819,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1820,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1821,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1822,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
1823,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1824,c7846edc14a25304288c85e2e7bebe4609626512,/7/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1825,c7846edc14a25304288c85e2e7bebe4609626512,/7/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
1826,c7846edc14a25304288c85e2e7bebe4609626512,/7/jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
1827,c7846edc14a25304288c85e2e7bebe4609626512,/7/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1828,c7846edc14a25304288c85e2e7bebe4609626512,/7/jre/alpine/Dockerfile,#!/bin/sh'; \
1829,c7846edc14a25304288c85e2e7bebe4609626512,/7/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1830,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1831,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1832,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1833,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
1834,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1835,f11f75767926eb1e650b448690e15cbacc2d1b9f,/8/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
1836,f11f75767926eb1e650b448690e15cbacc2d1b9f,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
1837,f11f75767926eb1e650b448690e15cbacc2d1b9f,/8/jre/slim/Dockerfile,# backwards compatibility shim
1838,f11f75767926eb1e650b448690e15cbacc2d1b9f,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
1839,f11f75767926eb1e650b448690e15cbacc2d1b9f,/8/jre/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
1840,f11f75767926eb1e650b448690e15cbacc2d1b9f,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
1841,f11f75767926eb1e650b448690e15cbacc2d1b9f,/8/jre/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
1842,f11f75767926eb1e650b448690e15cbacc2d1b9f,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
1843,f11f75767926eb1e650b448690e15cbacc2d1b9f,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
1844,f11f75767926eb1e650b448690e15cbacc2d1b9f,/8/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
1845,f11f75767926eb1e650b448690e15cbacc2d1b9f,/8/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
1846,f11f75767926eb1e650b448690e15cbacc2d1b9f,/8/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
1847,f11f75767926eb1e650b448690e15cbacc2d1b9f,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
1848,f11f75767926eb1e650b448690e15cbacc2d1b9f,/8/jre/slim/Dockerfile,# basic smoke test
1849,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
1850,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
1851,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/oracle/Dockerfile,# http://jdk.java.net/
1852,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
1853,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
1854,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/oracle/Dockerfile,# basic smoke test
1855,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
1856,d22a4675dad30274c9ed6cfd9b98bfa0fec9d4a9,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1857,d22a4675dad30274c9ed6cfd9b98bfa0fec9d4a9,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
1858,d22a4675dad30274c9ed6cfd9b98bfa0fec9d4a9,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
1859,d22a4675dad30274c9ed6cfd9b98bfa0fec9d4a9,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1860,d22a4675dad30274c9ed6cfd9b98bfa0fec9d4a9,/9-jre/Dockerfile,#!/bin/sh'; \
1861,d22a4675dad30274c9ed6cfd9b98bfa0fec9d4a9,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
1862,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1863,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
1864,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
1865,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1866,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/slim/Dockerfile,#!/bin/sh'; \
1867,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1868,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
1869,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1870,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1871,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1872,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1873,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1874,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1875,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1876,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
1877,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1878,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1879,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1880,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1881,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
1882,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1883,0ec2a0d41bebbff50f9537b58d258b6e551b0dce,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1884,0ec2a0d41bebbff50f9537b58d258b6e551b0dce,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1885,0ec2a0d41bebbff50f9537b58d258b6e551b0dce,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
1886,0ec2a0d41bebbff50f9537b58d258b6e551b0dce,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1887,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1888,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
1889,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
1890,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1891,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/Dockerfile,#!/bin/sh'; \
1892,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1893,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
1894,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1895,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1896,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1897,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1898,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1899,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1900,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/windowsservercore-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
1901,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/windowsservercore-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
1902,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
1903,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1904,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1905,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1906,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
1907,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1908,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1909,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
1910,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
1911,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1912,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/Dockerfile,#!/bin/sh'; \
1913,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1914,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
1915,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
1916,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1917,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1918,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1919,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
1920,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1921,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1922,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
1923,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
1924,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1925,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/Dockerfile,#!/bin/sh'; \
1926,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1927,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
1928,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1929,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1930,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1931,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1932,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1933,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
1934,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
1935,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1936,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/alpine/Dockerfile,#!/bin/sh'; \
1937,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1938,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1939,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1940,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1941,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
1942,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1943,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
1944,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
1945,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/oracle/Dockerfile,# http://jdk.java.net/
1946,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
1947,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
1948,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/oracle/Dockerfile,# basic smoke test
1949,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
1950,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1951,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1952,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1953,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-1809/Dockerfile,# http://jdk.java.net/
1954,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1955,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1956,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1957,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1958,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
1959,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1960,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1961,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
1962,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/Dockerfile,# Default to UTF-8 file.encoding
1963,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1964,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/Dockerfile,#!/bin/sh'; \
1965,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1966,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
1967,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
1968,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1969,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1970,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1971,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1972,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1973,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1974,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1975,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1976,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
1977,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1978,5527e8e319a1451b9e302af846b9939da36d8992,/8/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1979,5527e8e319a1451b9e302af846b9939da36d8992,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1980,5527e8e319a1451b9e302af846b9939da36d8992,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1981,5527e8e319a1451b9e302af846b9939da36d8992,/8/jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
1982,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
1983,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
1984,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
1985,0467df283134a79840c25808093c00f7c94b9a88,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1986,0467df283134a79840c25808093c00f7c94b9a88,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
1987,0467df283134a79840c25808093c00f7c94b9a88,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
1988,0467df283134a79840c25808093c00f7c94b9a88,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1989,0467df283134a79840c25808093c00f7c94b9a88,/9-jdk/Dockerfile,#!/bin/sh'; \
1990,0467df283134a79840c25808093c00f7c94b9a88,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1991,0467df283134a79840c25808093c00f7c94b9a88,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1992,0467df283134a79840c25808093c00f7c94b9a88,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1993,0467df283134a79840c25808093c00f7c94b9a88,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1994,0467df283134a79840c25808093c00f7c94b9a88,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
1995,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
1996,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
1997,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
1998,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
1999,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
2000,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/oracle/Dockerfile,# basic smoke test
2001,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
2002,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2003,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2004,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2005,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
2006,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2007,50c491c7c2378182866d89e857eb1f0c77985507,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2008,50c491c7c2378182866d89e857eb1f0c77985507,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
2009,50c491c7c2378182866d89e857eb1f0c77985507,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
2010,50c491c7c2378182866d89e857eb1f0c77985507,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2011,50c491c7c2378182866d89e857eb1f0c77985507,/9-jdk/Dockerfile,#!/bin/sh'; \
2012,50c491c7c2378182866d89e857eb1f0c77985507,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
2013,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
2014,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
2015,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,# backwards compatibility shim
2016,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
2017,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
2018,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
2019,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
2020,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,# arm64v8
2021,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,# amd64
2022,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,# fallback
2023,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
2024,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
2025,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
2026,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
2027,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
2028,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
2029,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
2030,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,# basic smoke test
2031,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2032,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2033,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2034,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
2035,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2036,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2037,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2038,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2039,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
2040,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2041,dd54ae37bc44d19ecb5be702d36d664fed2c68e4,/8/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2042,dd54ae37bc44d19ecb5be702d36d664fed2c68e4,/8/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
2043,dd54ae37bc44d19ecb5be702d36d664fed2c68e4,/8/jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
2044,dd54ae37bc44d19ecb5be702d36d664fed2c68e4,/8/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2045,dd54ae37bc44d19ecb5be702d36d664fed2c68e4,/8/jdk/alpine/Dockerfile,#!/bin/sh'; \
2046,dd54ae37bc44d19ecb5be702d36d664fed2c68e4,/8/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
2047,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2048,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
2049,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
2050,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2051,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
2052,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
2053,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
2054,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
2055,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
2056,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
2057,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2058,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
2059,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
2060,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
2061,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2062,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
2063,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
2064,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
2065,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/Dockerfile,# backwards compatibility shim
2066,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
2067,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
2068,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
2069,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
2070,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
2071,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
2072,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
2073,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/Dockerfile,#!/usr/bin/env bash'; \
2074,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
2075,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/Dockerfile,# basic smoke test
2076,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
2077,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
2078,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
2079,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
2080,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
2081,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/oracle/Dockerfile,# basic smoke test
2082,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
2083,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
2084,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
2085,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2086,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2087,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2088,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2089,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
2090,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2091,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
2092,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
2093,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
2094,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
2095,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
2096,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/oracle/Dockerfile,# arm64v8
2097,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/oracle/Dockerfile,# amd64
2098,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/oracle/Dockerfile,# fallback
2099,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
2100,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
2101,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/oracle/Dockerfile,# basic smoke test
2102,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
2103,2ec4f3ac935c208117752da22d61d9bb0be319c5,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2104,2ec4f3ac935c208117752da22d61d9bb0be319c5,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
2105,2ec4f3ac935c208117752da22d61d9bb0be319c5,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
2106,2ec4f3ac935c208117752da22d61d9bb0be319c5,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2107,2ec4f3ac935c208117752da22d61d9bb0be319c5,/9-jdk/Dockerfile,#!/bin/sh'; \
2108,2ec4f3ac935c208117752da22d61d9bb0be319c5,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
2109,d93be18f4f2d5e8457169cac00e559d953b6028e,/7/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2110,d93be18f4f2d5e8457169cac00e559d953b6028e,/7/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
2111,d93be18f4f2d5e8457169cac00e559d953b6028e,/7/jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
2112,d93be18f4f2d5e8457169cac00e559d953b6028e,/7/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2113,d93be18f4f2d5e8457169cac00e559d953b6028e,/7/jre/alpine/Dockerfile,#!/bin/sh'; \
2114,d93be18f4f2d5e8457169cac00e559d953b6028e,/7/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
2115,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
2116,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/nanoserver-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
2117,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/nanoserver-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
2118,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2119,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2120,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2121,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
2122,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2123,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2124,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2125,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
2126,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
2127,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
2128,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2129,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2130,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2131,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
2132,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2133,ea58310ec57fed8d5eedc7ed30eb7d0a26ebc574,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2134,ea58310ec57fed8d5eedc7ed30eb7d0a26ebc574,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2135,ea58310ec57fed8d5eedc7ed30eb7d0a26ebc574,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
2136,ea58310ec57fed8d5eedc7ed30eb7d0a26ebc574,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2137,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
2138,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
2139,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/slim/Dockerfile,# backwards compatibility shim
2140,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
2141,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/slim/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
2142,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
2143,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
2144,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
2145,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
2146,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
2147,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
2148,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
2149,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
2150,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/slim/Dockerfile,# basic smoke test
2151,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2152,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
2153,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
2154,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2155,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2156,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2157,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2158,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
2159,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2160,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
2161,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
2162,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
2163,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,# backwards compatibility shim
2164,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
2165,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
2166,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
2167,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
2168,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,# arm64v8
2169,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,# amd64
2170,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,# fallback
2171,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
2172,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
2173,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
2174,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
2175,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
2176,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
2177,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
2178,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,# basic smoke test
2179,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2180,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/7-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2181,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/7-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
2182,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/7-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
2183,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/7-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2184,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/7-jre/alpine/Dockerfile,#!/bin/sh'; \
2185,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2186,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
2187,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-7-jre/Dockerfile,# Default to UTF-8 file.encoding
2188,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
2189,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2190,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
2191,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
2192,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2193,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/Dockerfile,#!/bin/sh'; \
2194,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
2195,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
2196,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
2197,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)"
2198,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
2199,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
2200,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
2201,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
2202,930076b47e3a318fa0428c39579fe00f36e3b8b0,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
2203,930076b47e3a318fa0428c39579fe00f36e3b8b0,/openjdk-7-jre/Dockerfile,# Default to UTF-8 file.encoding
2204,930076b47e3a318fa0428c39579fe00f36e3b8b0,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
2205,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
2206,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
2207,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/slim-buster/Dockerfile,# backwards compatibility shim
2208,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
2209,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/slim-buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
2210,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
2211,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/slim-buster/Dockerfile,# arm64v8
2212,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/slim-buster/Dockerfile,# amd64
2213,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/slim-buster/Dockerfile,# fallback
2214,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
2215,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
2216,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
2217,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
2218,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
2219,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/slim-buster/Dockerfile,# basic smoke test
2220,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2221,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
2222,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/nanoserver-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
2223,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/nanoserver-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
2224,9089afd69bd69c34413b064bc36c15509b2ed4df,/7-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2225,9089afd69bd69c34413b064bc36c15509b2ed4df,/7-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
2226,9089afd69bd69c34413b064bc36c15509b2ed4df,/7-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
2227,9089afd69bd69c34413b064bc36c15509b2ed4df,/7-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2228,9089afd69bd69c34413b064bc36c15509b2ed4df,/7-jre/alpine/Dockerfile,#!/bin/sh'; \
2229,fdf3bb8d168120655fe39e4098713e704db809df,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2230,fdf3bb8d168120655fe39e4098713e704db809df,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2231,fdf3bb8d168120655fe39e4098713e704db809df,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
2232,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2233,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
2234,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
2235,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2236,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/slim/Dockerfile,#!/bin/sh'; \
2237,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
2238,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
2239,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
2240,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
2241,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
2242,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
2243,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
2244,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
2245,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2246,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2247,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2248,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
2249,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2250,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2251,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
2252,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
2253,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2254,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/Dockerfile,#!/bin/sh'; \
2255,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
2256,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
2257,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
2258,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
2259,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
2260,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
2261,451e66427f3c53fada288aaff950617c5864745f,/11/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
2262,451e66427f3c53fada288aaff950617c5864745f,/11/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
2263,451e66427f3c53fada288aaff950617c5864745f,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
2264,451e66427f3c53fada288aaff950617c5864745f,/11/jre/Dockerfile,# backwards compatibility shim
2265,451e66427f3c53fada288aaff950617c5864745f,/11/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
2266,451e66427f3c53fada288aaff950617c5864745f,/11/jre/Dockerfile,# https://adoptopenjdk.net/upstream.html
2267,451e66427f3c53fada288aaff950617c5864745f,/11/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
2268,451e66427f3c53fada288aaff950617c5864745f,/11/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
2269,451e66427f3c53fada288aaff950617c5864745f,/11/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
2270,451e66427f3c53fada288aaff950617c5864745f,/11/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
2271,451e66427f3c53fada288aaff950617c5864745f,/11/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
2272,451e66427f3c53fada288aaff950617c5864745f,/11/jre/Dockerfile,#!/usr/bin/env bash'; \
2273,451e66427f3c53fada288aaff950617c5864745f,/11/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
2274,451e66427f3c53fada288aaff950617c5864745f,/11/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
2275,451e66427f3c53fada288aaff950617c5864745f,/11/jre/Dockerfile,# basic smoke test
2276,451e66427f3c53fada288aaff950617c5864745f,/11/jre/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2277,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2278,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2279,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
2280,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
2281,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
2282,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2283,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
2284,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-8-jdk/Dockerfile,# Default to UTF-8 file.encoding
2285,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2286,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-8-jdk/Dockerfile,#!/bin/bash'; \
2287,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
2288,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
2289,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
2290,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2291,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2292,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2293,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
2294,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2295,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
2296,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
2297,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
2298,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
2299,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/Dockerfile,# backwards compatibility shim
2300,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
2301,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/Dockerfile,# https://jdk.java.net/
2302,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
2303,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
2304,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
2305,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
2306,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
2307,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/Dockerfile,# basic smoke test
2308,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2309,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2310,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2311,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2312,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# https://jdk.java.net/
2313,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2314,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2315,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2316,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2317,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
2318,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2319,d368a4f37bed4dc5d0b61ec889c8e7bad438eacf,/13/jdk/alpine/Dockerfile,# https://jdk.java.net/
2320,d368a4f37bed4dc5d0b61ec889c8e7bad438eacf,/13/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
2321,d368a4f37bed4dc5d0b61ec889c8e7bad438eacf,/13/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
2322,d368a4f37bed4dc5d0b61ec889c8e7bad438eacf,/13/jdk/alpine/Dockerfile,# basic smoke test
2323,d368a4f37bed4dc5d0b61ec889c8e7bad438eacf,/13/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
2324,9745c87a15896ec558429a826e23926e721e4846,/8-jdk/windows/nanoserver/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2325,9745c87a15896ec558429a826e23926e721e4846,/8-jdk/windows/nanoserver/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2326,9745c87a15896ec558429a826e23926e721e4846,/8-jdk/windows/nanoserver/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
2327,d93be18f4f2d5e8457169cac00e559d953b6028e,/8/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2328,d93be18f4f2d5e8457169cac00e559d953b6028e,/8/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
2329,d93be18f4f2d5e8457169cac00e559d953b6028e,/8/jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
2330,d93be18f4f2d5e8457169cac00e559d953b6028e,/8/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2331,d93be18f4f2d5e8457169cac00e559d953b6028e,/8/jdk/alpine/Dockerfile,#!/bin/sh'; \
2332,d93be18f4f2d5e8457169cac00e559d953b6028e,/8/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
2333,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
2334,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
2335,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
2336,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/Dockerfile,# backwards compatibility shim
2337,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
2338,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
2339,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
2340,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
2341,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
2342,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
2343,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
2344,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/Dockerfile,#!/usr/bin/env bash'; \
2345,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
2346,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
2347,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/Dockerfile,# basic smoke test
2348,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
2349,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-6-jdk/Dockerfile,# Default to UTF-8 file.encoding
2350,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
2351,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2352,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
2353,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/Dockerfile,# Default to UTF-8 file.encoding
2354,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2355,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/Dockerfile,#!/bin/sh'; \
2356,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
2357,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
2358,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
2359,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
2360,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
2361,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
2362,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2363,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
2364,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2365,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
2366,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
2367,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2368,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/slim/Dockerfile,#!/bin/sh'; \
2369,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
2370,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
2371,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
2372,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
2373,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
2374,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
2375,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
2376,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
2377,37ac51ae06458726bfd2d5e2286232d9ca07a8a5,/12/jdk/alpine/Dockerfile,# http://jdk.java.net/
2378,37ac51ae06458726bfd2d5e2286232d9ca07a8a5,/12/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
2379,37ac51ae06458726bfd2d5e2286232d9ca07a8a5,/12/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
2380,37ac51ae06458726bfd2d5e2286232d9ca07a8a5,/12/jdk/alpine/Dockerfile,# basic smoke test
2381,37ac51ae06458726bfd2d5e2286232d9ca07a8a5,/12/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
2382,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2383,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2384,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
2385,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2386,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
2387,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
2388,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
2389,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/Dockerfile,# backwards compatibility shim
2390,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
2391,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/Dockerfile,# https://adoptopenjdk.net/upstream.html
2392,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
2393,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
2394,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
2395,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
2396,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
2397,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/Dockerfile,#!/usr/bin/env bash'; \
2398,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
2399,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
2400,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/Dockerfile,# basic smoke test
2401,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
2402,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/nanoserver-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
2403,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/nanoserver-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
2404,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2405,8502712f6e80904b766505805c894c2008afa700,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
2406,8502712f6e80904b766505805c894c2008afa700,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
2407,8502712f6e80904b766505805c894c2008afa700,/12/jdk/oracle/Dockerfile,# http://jdk.java.net/
2408,8502712f6e80904b766505805c894c2008afa700,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
2409,8502712f6e80904b766505805c894c2008afa700,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
2410,8502712f6e80904b766505805c894c2008afa700,/12/jdk/oracle/Dockerfile,# basic smoke test
2411,8502712f6e80904b766505805c894c2008afa700,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
2412,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2413,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
2414,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
2415,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2416,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jre/Dockerfile,#!/bin/sh'; \
2417,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
2418,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
2419,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
2420,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
2421,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
2422,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
2423,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2424,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
2425,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/Dockerfile,# Default to UTF-8 file.encoding
2426,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2427,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/Dockerfile,#!/bin/sh'; \
2428,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
2429,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
2430,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
2431,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
2432,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
2433,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
2434,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2435,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
2436,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
2437,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
2438,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
2439,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,# Default to UTF-8 file.encoding
2440,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,# backwards compatibility shim
2441,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
2442,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
2443,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
2444,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,# arm64v8
2445,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,# amd64
2446,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,# fallback
2447,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
2448,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,#!/usr/bin/env bash'; \
2449,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
2450,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
2451,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
2452,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,# basic smoke test
2453,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2454,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/8/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2455,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2456,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2457,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/8/jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
2458,d7094b23b9c6957d72d2af540f866ec4a751ae71,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
2459,d7094b23b9c6957d72d2af540f866ec4a751ae71,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
2460,d7094b23b9c6957d72d2af540f866ec4a751ae71,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
2461,d7094b23b9c6957d72d2af540f866ec4a751ae71,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
2462,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2463,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
2464,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
2465,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2466,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/slim/Dockerfile,#!/bin/sh'; \
2467,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
2468,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
2469,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
2470,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
2471,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
2472,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
2473,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2474,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2475,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2476,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
2477,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2478,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2479,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2480,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2481,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
2482,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2483,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2484,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
2485,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
2486,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2487,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/slim/Dockerfile,#!/bin/sh'; \
2488,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
2489,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
2490,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
2491,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
2492,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
2493,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
2494,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
2495,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2496,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2497,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2498,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
2499,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2500,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2501,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2502,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2503,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
2504,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2505,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2506,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2507,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
2508,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2509,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
2510,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
2511,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
2512,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
2513,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
2514,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/oracle/Dockerfile,# basic smoke test
2515,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
2516,47a6539cd18023dafb45db9013455136cc0bca07,/8/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2517,47a6539cd18023dafb45db9013455136cc0bca07,/8/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
2518,47a6539cd18023dafb45db9013455136cc0bca07,/8/jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
2519,47a6539cd18023dafb45db9013455136cc0bca07,/8/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2520,47a6539cd18023dafb45db9013455136cc0bca07,/8/jre/alpine/Dockerfile,#!/bin/sh'; \
2521,47a6539cd18023dafb45db9013455136cc0bca07,/8/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
2522,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
2523,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
2524,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/slim-buster/Dockerfile,# backwards compatibility shim
2525,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
2526,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/slim-buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
2527,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
2528,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/slim-buster/Dockerfile,# arm64v8
2529,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/slim-buster/Dockerfile,# amd64
2530,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/slim-buster/Dockerfile,# fallback
2531,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
2532,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
2533,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
2534,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
2535,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
2536,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/slim-buster/Dockerfile,# basic smoke test
2537,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2538,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2539,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2540,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2541,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
2542,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2543,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2544,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2545,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2546,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
2547,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2548,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2549,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
2550,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
2551,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2552,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/7-jre/Dockerfile,#!/bin/sh'; \
2553,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
2554,451e66427f3c53fada288aaff950617c5864745f,/8/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
2555,451e66427f3c53fada288aaff950617c5864745f,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
2556,451e66427f3c53fada288aaff950617c5864745f,/8/jre/slim/Dockerfile,# backwards compatibility shim
2557,451e66427f3c53fada288aaff950617c5864745f,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
2558,451e66427f3c53fada288aaff950617c5864745f,/8/jre/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
2559,451e66427f3c53fada288aaff950617c5864745f,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
2560,451e66427f3c53fada288aaff950617c5864745f,/8/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
2561,451e66427f3c53fada288aaff950617c5864745f,/8/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
2562,451e66427f3c53fada288aaff950617c5864745f,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
2563,451e66427f3c53fada288aaff950617c5864745f,/8/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
2564,451e66427f3c53fada288aaff950617c5864745f,/8/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
2565,451e66427f3c53fada288aaff950617c5864745f,/8/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
2566,451e66427f3c53fada288aaff950617c5864745f,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
2567,451e66427f3c53fada288aaff950617c5864745f,/8/jre/slim/Dockerfile,# basic smoke test
2568,2408508f3b000bf997febbdb90a861185a64a260,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
2569,2408508f3b000bf997febbdb90a861185a64a260,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
2570,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
2571,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
2572,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2573,89851f0abc3a83cfad5248102f379d6a0bd3951a,/6-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2574,89851f0abc3a83cfad5248102f379d6a0bd3951a,/6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
2575,89851f0abc3a83cfad5248102f379d6a0bd3951a,/6-jre/Dockerfile,# Default to UTF-8 file.encoding
2576,89851f0abc3a83cfad5248102f379d6a0bd3951a,/6-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2577,89851f0abc3a83cfad5248102f379d6a0bd3951a,/6-jre/Dockerfile,#!/bin/sh'; \
2578,89851f0abc3a83cfad5248102f379d6a0bd3951a,/6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
2579,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
2580,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/nanoserver-1809/Dockerfile,# https://jdk.java.net/
2581,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2582,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2583,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2584,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2585,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
2586,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2587,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2588,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2589,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2590,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
2591,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2592,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
2593,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
2594,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/slim-buster/Dockerfile,# backwards compatibility shim
2595,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
2596,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/slim-buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
2597,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
2598,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
2599,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/slim-buster/Dockerfile,# amd64
2600,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/slim-buster/Dockerfile,# fallback
2601,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/slim-buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
2602,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/slim-buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
2603,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/slim-buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
2604,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
2605,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
2606,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
2607,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
2608,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/slim-buster/Dockerfile,# basic smoke test
2609,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
2610,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
2611,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/slim-buster/Dockerfile,# backwards compatibility shim
2612,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
2613,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/slim-buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
2614,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
2615,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/slim-buster/Dockerfile,# amd64
2616,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/slim-buster/Dockerfile,# fallback
2617,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
2618,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
2619,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
2620,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
2621,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
2622,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/slim-buster/Dockerfile,# basic smoke test
2623,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2624,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/8/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
2625,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/8/jre/windows/nanoserver-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
2626,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/8/jre/windows/nanoserver-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
2627,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2628,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2629,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
2630,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
2631,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
2632,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
2633,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
2634,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/Dockerfile,# backwards compatibility shim
2635,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
2636,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
2637,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
2638,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/Dockerfile,# amd64
2639,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/Dockerfile,# fallback
2640,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
2641,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
2642,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
2643,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
2644,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
2645,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/Dockerfile,# basic smoke test
2646,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2647,2ff433f60dd918bd852442dbb4f7b24a148c2fb0,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2648,2ff433f60dd918bd852442dbb4f7b24a148c2fb0,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
2649,2ff433f60dd918bd852442dbb4f7b24a148c2fb0,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
2650,2ff433f60dd918bd852442dbb4f7b24a148c2fb0,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2651,2ff433f60dd918bd852442dbb4f7b24a148c2fb0,/9-jre/Dockerfile,#!/bin/sh'; \
2652,2ff433f60dd918bd852442dbb4f7b24a148c2fb0,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
2653,6cc25ee35281099423e521713f710d2549209600,/6/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
2654,6cc25ee35281099423e521713f710d2549209600,/6/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
2655,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
2656,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
2657,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/slim/Dockerfile,# backwards compatibility shim
2658,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
2659,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
2660,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
2661,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
2662,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
2663,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
2664,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
2665,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/slim/Dockerfile,# basic smoke test
2666,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2667,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
2668,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
2669,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
2670,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
2671,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
2672,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
2673,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
2674,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/oracle/Dockerfile,# basic smoke test
2675,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
2676,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/8/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2677,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/8/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2678,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/8/jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
2679,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2680,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
2681,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
2682,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2683,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/slim/Dockerfile,#!/bin/sh'; \
2684,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
2685,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
2686,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
2687,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
2688,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
2689,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
2690,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2691,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2692,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2693,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
2694,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2695,c394ed4d70c8c1d6962955aa23be0555671ce4c9,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2696,c394ed4d70c8c1d6962955aa23be0555671ce4c9,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2697,c394ed4d70c8c1d6962955aa23be0555671ce4c9,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
2698,c394ed4d70c8c1d6962955aa23be0555671ce4c9,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2699,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
2700,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
2701,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/slim/Dockerfile,# backwards compatibility shim
2702,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
2703,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
2704,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
2705,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
2706,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
2707,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
2708,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
2709,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/slim/Dockerfile,# basic smoke test
2710,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2711,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
2712,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2713,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
2714,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
2715,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2716,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jre/Dockerfile,#!/bin/sh'; \
2717,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
2718,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
2719,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
2720,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
2721,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
2722,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2723,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2724,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2725,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
2726,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2727,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2728,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
2729,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
2730,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2731,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/slim/Dockerfile,#!/bin/sh'; \
2732,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
2733,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
2734,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
2735,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
2736,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
2737,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
2738,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
2739,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
2740,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
2741,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
2742,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2743,fdf3bb8d168120655fe39e4098713e704db809df,/8/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2744,fdf3bb8d168120655fe39e4098713e704db809df,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2745,fdf3bb8d168120655fe39e4098713e704db809df,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2746,fdf3bb8d168120655fe39e4098713e704db809df,/8/jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
2747,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
2748,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
2749,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/slim/Dockerfile,# backwards compatibility shim
2750,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
2751,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/slim/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
2752,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
2753,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
2754,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
2755,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
2756,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
2757,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
2758,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
2759,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
2760,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/slim/Dockerfile,# basic smoke test
2761,6294b7d4b299639ec519dfd92782632f498eb1d2,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2762,6294b7d4b299639ec519dfd92782632f498eb1d2,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2763,6294b7d4b299639ec519dfd92782632f498eb1d2,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
2764,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2765,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
2766,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
2767,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2768,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/8-jre/Dockerfile,#!/bin/sh'; \
2769,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
2770,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
2771,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
2772,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2773,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
2774,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
2775,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2776,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/Dockerfile,#!/bin/sh'; \
2777,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
2778,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
2779,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
2780,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
2781,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
2782,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2783,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
2784,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
2785,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
2786,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
2787,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
2788,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/Dockerfile,# backwards compatibility shim
2789,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
2790,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
2791,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
2792,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
2793,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
2794,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
2795,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
2796,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/Dockerfile,# basic smoke test
2797,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2798,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/8-jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2799,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/8-jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2800,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/8-jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2801,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/8-jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
2802,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
2803,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
2804,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
2805,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
2806,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
2807,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/oracle/Dockerfile,# basic smoke test
2808,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
2809,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
2810,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
2811,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
2812,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
2813,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
2814,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/oracle/Dockerfile,# basic smoke test
2815,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
2816,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
2817,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/nanoserver-1803/Dockerfile,# https://jdk.java.net/
2818,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2819,bbb929b5877fd14377f8b1d40a1eb1a9ebf39e2f,/8/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2820,bbb929b5877fd14377f8b1d40a1eb1a9ebf39e2f,/8/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
2821,bbb929b5877fd14377f8b1d40a1eb1a9ebf39e2f,/8/jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
2822,bbb929b5877fd14377f8b1d40a1eb1a9ebf39e2f,/8/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2823,bbb929b5877fd14377f8b1d40a1eb1a9ebf39e2f,/8/jdk/alpine/Dockerfile,#!/bin/sh'; \
2824,bbb929b5877fd14377f8b1d40a1eb1a9ebf39e2f,/8/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
2825,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2826,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
2827,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/Dockerfile,# Default to UTF-8 file.encoding
2828,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2829,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/Dockerfile,#!/bin/sh'; \
2830,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
2831,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
2832,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
2833,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
2834,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
2835,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
2836,0235b70854cf9251ab4a1479696975412320a9bd,/openjdk-9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2837,0235b70854cf9251ab4a1479696975412320a9bd,/openjdk-9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
2838,0235b70854cf9251ab4a1479696975412320a9bd,/openjdk-9-jdk/Dockerfile,# Default to UTF-8 file.encoding
2839,0235b70854cf9251ab4a1479696975412320a9bd,/openjdk-9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2840,0235b70854cf9251ab4a1479696975412320a9bd,/openjdk-9-jdk/Dockerfile,#!/bin/bash'; \
2841,0235b70854cf9251ab4a1479696975412320a9bd,/openjdk-9-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
2842,0235b70854cf9251ab4a1479696975412320a9bd,/openjdk-9-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
2843,0235b70854cf9251ab4a1479696975412320a9bd,/openjdk-9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
2844,4c0594da82d2528637a9345938ee92396fd73d4b,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
2845,4c0594da82d2528637a9345938ee92396fd73d4b,/openjdk-8-jre/Dockerfile,# Default to UTF-8 file.encoding
2846,4c0594da82d2528637a9345938ee92396fd73d4b,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
2847,4c0594da82d2528637a9345938ee92396fd73d4b,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
2848,4c0594da82d2528637a9345938ee92396fd73d4b,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/793210
# and https://github.com/docker-library/java/issues/46#issuecomment-119026586"
2849,4c0594da82d2528637a9345938ee92396fd73d4b,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
2850,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2851,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2852,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2853,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
2854,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2855,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2856,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2857,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2858,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
2859,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2860,f47afa13905074605a616adf3b9c01c396ed74a8,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
2861,f47afa13905074605a616adf3b9c01c396ed74a8,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
2862,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2863,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2864,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2865,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
2866,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2867,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
2868,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
2869,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
2870,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/Dockerfile,# backwards compatibility shim
2871,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
2872,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/Dockerfile,# https://adoptopenjdk.net/upstream.html
2873,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
2874,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
2875,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
2876,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
2877,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
2878,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/Dockerfile,#!/usr/bin/env bash'; \
2879,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
2880,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
2881,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/Dockerfile,# basic smoke test
2882,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2883,2a8c028a7246cd03a96c7cc8f41c4087303c642d,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2884,2a8c028a7246cd03a96c7cc8f41c4087303c642d,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
2885,2a8c028a7246cd03a96c7cc8f41c4087303c642d,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
2886,2a8c028a7246cd03a96c7cc8f41c4087303c642d,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2887,2a8c028a7246cd03a96c7cc8f41c4087303c642d,/9-jdk/Dockerfile,#!/bin/sh'; \
2888,2a8c028a7246cd03a96c7cc8f41c4087303c642d,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
2889,15835397954c9ec123e42e685035ecd239e0a1db,/11/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
2890,15835397954c9ec123e42e685035ecd239e0a1db,/11/jdk/windows/nanoserver-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
2891,15835397954c9ec123e42e685035ecd239e0a1db,/11/jdk/windows/nanoserver-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
2892,15835397954c9ec123e42e685035ecd239e0a1db,/11/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2893,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2894,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
2895,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
2896,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2897,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/slim/Dockerfile,#!/bin/sh'; \
2898,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
2899,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
2900,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
2901,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
2902,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
2903,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
2904,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2905,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
2906,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
2907,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
2908,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/slim/Dockerfile,# backwards compatibility shim
2909,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
2910,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
2911,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
2912,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
2913,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
2914,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
2915,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
2916,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/slim/Dockerfile,# basic smoke test
2917,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2918,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
2919,11af1a181763751cce50f383f6b4b023fd5d2255,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2920,11af1a181763751cce50f383f6b4b023fd5d2255,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
2921,11af1a181763751cce50f383f6b4b023fd5d2255,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
2922,11af1a181763751cce50f383f6b4b023fd5d2255,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2923,11af1a181763751cce50f383f6b4b023fd5d2255,/9-jre/Dockerfile,#!/bin/sh'; \
2924,11af1a181763751cce50f383f6b4b023fd5d2255,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
2925,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2926,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2927,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
2928,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
2929,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
2930,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2931,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2932,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2933,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
2934,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2935,b118fdc1e9b1aebdc178537551101dffe1f612a3,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2936,b118fdc1e9b1aebdc178537551101dffe1f612a3,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
2937,b118fdc1e9b1aebdc178537551101dffe1f612a3,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
2938,b118fdc1e9b1aebdc178537551101dffe1f612a3,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2939,b118fdc1e9b1aebdc178537551101dffe1f612a3,/9-jdk/Dockerfile,#!/bin/sh'; \
2940,b118fdc1e9b1aebdc178537551101dffe1f612a3,/9-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
2941,b118fdc1e9b1aebdc178537551101dffe1f612a3,/9-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
2942,b118fdc1e9b1aebdc178537551101dffe1f612a3,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
2943,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
2944,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
2945,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/slim/Dockerfile,# backwards compatibility shim
2946,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
2947,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/slim/Dockerfile,# https://jdk.java.net/
2948,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
2949,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
2950,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
2951,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
2952,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
2953,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/slim/Dockerfile,# basic smoke test
2954,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2955,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
2956,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2957,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
2958,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
2959,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2960,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/Dockerfile,#!/bin/sh'; \
2961,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
2962,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
2963,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
2964,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
2965,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
2966,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2967,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
2968,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
2969,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
2970,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
2971,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
2972,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
2973,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
2974,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/oracle/Dockerfile,# basic smoke test
2975,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
2976,823517cdb97911ad335027244a6342e9129a91ad,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2977,823517cdb97911ad335027244a6342e9129a91ad,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2978,823517cdb97911ad335027244a6342e9129a91ad,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
2979,823517cdb97911ad335027244a6342e9129a91ad,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2980,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2981,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
2982,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
2983,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2984,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/Dockerfile,#!/bin/sh'; \
2985,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
2986,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
2987,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
2988,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
2989,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
2990,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
2991,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
2992,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
2993,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2994,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2995,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2996,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
2997,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2998,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
2999,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
3000,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3001,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3002,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3003,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3004,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-1809/Dockerfile,# http://jdk.java.net/
3005,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3006,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3007,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3008,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jdk/windows/windowsservercore-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
3009,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jdk/windows/windowsservercore-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
3010,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
3011,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3012,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
3013,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
3014,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3015,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
3016,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
3017,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
3018,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (a case of https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
3019,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
3020,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
3021,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
3022,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3023,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
3024,2057305e0474ebf6461daea607ff02874d690914,/7/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3025,2057305e0474ebf6461daea607ff02874d690914,/7/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
3026,2057305e0474ebf6461daea607ff02874d690914,/7/jre/Dockerfile,# Default to UTF-8 file.encoding
3027,2057305e0474ebf6461daea607ff02874d690914,/7/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3028,2057305e0474ebf6461daea607ff02874d690914,/7/jre/Dockerfile,#!/bin/sh'; \
3029,2057305e0474ebf6461daea607ff02874d690914,/7/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
3030,2057305e0474ebf6461daea607ff02874d690914,/7/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
3031,2057305e0474ebf6461daea607ff02874d690914,/7/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
3032,2057305e0474ebf6461daea607ff02874d690914,/7/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
3033,2057305e0474ebf6461daea607ff02874d690914,/7/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
3034,2057305e0474ebf6461daea607ff02874d690914,/7/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
3035,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3036,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3037,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3038,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
3039,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3040,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/8/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3041,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/8/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3042,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/8/jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
3043,41b92f2f30079cd364e9619d1fd4633ef138dca4,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
3044,41b92f2f30079cd364e9619d1fd4633ef138dca4,/openjdk-7-jre/Dockerfile,# Default to UTF-8 file.encoding
3045,41b92f2f30079cd364e9619d1fd4633ef138dca4,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
3046,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3047,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3048,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3049,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
3050,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3051,01ca700a105984964865430aee1251932956925e,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3052,01ca700a105984964865430aee1251932956925e,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
3053,01ca700a105984964865430aee1251932956925e,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
3054,01ca700a105984964865430aee1251932956925e,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3055,01ca700a105984964865430aee1251932956925e,/9-jdk/Dockerfile,#!/bin/sh'; \
3056,01ca700a105984964865430aee1251932956925e,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
3057,01ca700a105984964865430aee1251932956925e,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
3058,01ca700a105984964865430aee1251932956925e,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
3059,01ca700a105984964865430aee1251932956925e,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
3060,01ca700a105984964865430aee1251932956925e,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
3061,01ca700a105984964865430aee1251932956925e,/9-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3062,01ca700a105984964865430aee1251932956925e,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
3063,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3064,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3065,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3066,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
3067,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3068,1778c73b834d04d5b5c61baee4cce8c127031f9c,/8/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3069,1778c73b834d04d5b5c61baee4cce8c127031f9c,/8/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
3070,1778c73b834d04d5b5c61baee4cce8c127031f9c,/8/jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
3071,1778c73b834d04d5b5c61baee4cce8c127031f9c,/8/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3072,1778c73b834d04d5b5c61baee4cce8c127031f9c,/8/jdk/alpine/Dockerfile,#!/bin/sh'; \
3073,1778c73b834d04d5b5c61baee4cce8c127031f9c,/8/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
3074,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3075,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3076,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
3077,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
3078,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
3079,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
3080,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
3081,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
3082,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
3083,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
3084,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
3085,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/oracle/Dockerfile,# basic smoke test
3086,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
3087,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
3088,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
3089,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
3090,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
3091,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
3092,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
3093,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/oracle/Dockerfile,# basic smoke test
3094,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
3095,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3096,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3097,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3098,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
3099,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3100,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
3101,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
3102,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/slim/Dockerfile,# backwards compatibility shim
3103,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
3104,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
3105,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
3106,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/slim/Dockerfile,# arm64v8
3107,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/slim/Dockerfile,# amd64
3108,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/slim/Dockerfile,# fallback
3109,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
3110,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
3111,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
3112,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
3113,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
3114,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/slim/Dockerfile,# basic smoke test
3115,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3116,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3117,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3118,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3119,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
3120,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3121,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/8-jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3122,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/8-jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3123,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/8-jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
3124,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3125,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3126,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3127,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
3128,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
3129,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
3130,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
3131,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
3132,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
3133,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
3134,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/oracle/Dockerfile,# basic smoke test
3135,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
3136,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
3137,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
3138,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/slim/Dockerfile,# backwards compatibility shim
3139,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
3140,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
3141,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
3142,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
3143,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
3144,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
3145,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
3146,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/slim/Dockerfile,# basic smoke test
3147,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3148,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
3149,a7cc605aead56177b2c86fecd9e0875378f8ce3d,/7/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3150,a7cc605aead56177b2c86fecd9e0875378f8ce3d,/7/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
3151,a7cc605aead56177b2c86fecd9e0875378f8ce3d,/7/jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
3152,a7cc605aead56177b2c86fecd9e0875378f8ce3d,/7/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3153,a7cc605aead56177b2c86fecd9e0875378f8ce3d,/7/jdk/alpine/Dockerfile,#!/bin/sh'; \
3154,a7cc605aead56177b2c86fecd9e0875378f8ce3d,/7/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
3155,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3156,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3157,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
3158,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3159,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
3160,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
3161,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3162,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/9-jre/Dockerfile,#!/bin/sh'; \
3163,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
3164,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3165,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3166,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3167,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
3168,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3169,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3170,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3171,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3172,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
3173,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3174,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3175,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3176,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3177,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# https://jdk.java.net/
3178,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3179,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3180,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3181,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3182,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
3183,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3184,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3185,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3186,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3187,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
3188,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3189,efa60b19f5b9c4ccd676eb03ce955f1444a10d80,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3190,efa60b19f5b9c4ccd676eb03ce955f1444a10d80,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
3191,efa60b19f5b9c4ccd676eb03ce955f1444a10d80,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
3192,efa60b19f5b9c4ccd676eb03ce955f1444a10d80,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3193,efa60b19f5b9c4ccd676eb03ce955f1444a10d80,/9-jdk/Dockerfile,#!/bin/sh'; \
3194,efa60b19f5b9c4ccd676eb03ce955f1444a10d80,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
3195,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
3196,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
3197,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/slim/Dockerfile,# backwards compatibility shim
3198,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
3199,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/slim/Dockerfile,# https://jdk.java.net/
3200,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
3201,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
3202,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
3203,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
3204,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
3205,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/slim/Dockerfile,# basic smoke test
3206,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3207,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
3208,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3209,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3210,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3211,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
3212,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3213,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3214,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3215,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3216,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
3217,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3218,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3219,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3220,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jre/windows/windowsservercore-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
3221,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jre/windows/windowsservercore-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
3222,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
3223,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
3224,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
3225,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/slim/Dockerfile,# backwards compatibility shim
3226,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
3227,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
3228,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
3229,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
3230,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
3231,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
3232,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
3233,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
3234,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
3235,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
3236,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/slim/Dockerfile,# basic smoke test
3237,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
3238,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
3239,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
3240,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/Dockerfile,# Default to UTF-8 file.encoding
3241,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/Dockerfile,# backwards compatibility shim
3242,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
3243,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/Dockerfile,# https://jdk.java.net/
3244,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
3245,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/Dockerfile,#!/usr/bin/env bash'; \
3246,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
3247,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
3248,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
3249,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/Dockerfile,# basic smoke test
3250,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3251,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3252,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3253,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3254,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
3255,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3256,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3257,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3258,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3259,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
3260,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3261,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
3262,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
3263,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
3264,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/Dockerfile,# backwards compatibility shim
3265,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
3266,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
3267,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
3268,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
3269,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
3270,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
3271,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
3272,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/Dockerfile,#!/usr/bin/env bash'; \
3273,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
3274,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
3275,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/Dockerfile,# basic smoke test
3276,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3277,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3278,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
3279,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
3280,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3281,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/Dockerfile,#!/bin/sh'; \
3282,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
3283,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
3284,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
3285,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
3286,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
3287,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
3288,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3289,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3290,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
3291,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3292,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
3293,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-7-jdk/Dockerfile,# Default to UTF-8 file.encoding
3294,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
3295,882461ade8207de7647d083009200de85eb978bc,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3296,882461ade8207de7647d083009200de85eb978bc,/7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
3297,882461ade8207de7647d083009200de85eb978bc,/7-jdk/Dockerfile,# Default to UTF-8 file.encoding
3298,882461ade8207de7647d083009200de85eb978bc,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3299,882461ade8207de7647d083009200de85eb978bc,/7-jdk/Dockerfile,#!/bin/sh'; \
3300,882461ade8207de7647d083009200de85eb978bc,/7-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
3301,882461ade8207de7647d083009200de85eb978bc,/7-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
3302,882461ade8207de7647d083009200de85eb978bc,/7-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
3303,882461ade8207de7647d083009200de85eb978bc,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
3304,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3305,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
3306,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
3307,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3308,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/slim/Dockerfile,#!/bin/sh'; \
3309,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
3310,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
3311,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
3312,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
3313,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
3314,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
3315,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3316,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3317,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3318,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
3319,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3320,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/windows/nanoserver/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3321,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/windows/nanoserver/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3322,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/windows/nanoserver/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
3323,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/windows/nanoserver/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3324,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3325,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
3326,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
3327,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3328,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/Dockerfile,#!/bin/sh'; \
3329,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
3330,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
3331,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
3332,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
3333,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
3334,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
3335,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
3336,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
3337,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3338,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3339,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3340,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
3341,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3342,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3343,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3344,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3345,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
3346,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3347,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3348,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3349,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3350,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
3351,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3352,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3353,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3354,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3355,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
3356,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3357,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3358,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3359,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
3360,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
3361,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
3362,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3363,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3364,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3365,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3366,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
3367,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3368,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3369,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3370,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
3371,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3372,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3373,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3374,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
3375,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3376,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3377,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
3378,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
3379,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3380,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/slim/Dockerfile,#!/bin/sh'; \
3381,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
3382,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
3383,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
3384,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
3385,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
3386,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
3387,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3388,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
3389,e9243a2c830d88c2684cbe2949def5984c5033d6,/16/jdk/alpine/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
3390,e9243a2c830d88c2684cbe2949def5984c5033d6,/16/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
3391,e9243a2c830d88c2684cbe2949def5984c5033d6,/16/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
3392,e9243a2c830d88c2684cbe2949def5984c5033d6,/16/jdk/alpine/Dockerfile,"# see ""java-cacerts"" package installed above (which maintains ""/etc/ssl/certs/java/cacerts"" for us)"
3393,e9243a2c830d88c2684cbe2949def5984c5033d6,/16/jdk/alpine/Dockerfile,# basic smoke test
3394,e9243a2c830d88c2684cbe2949def5984c5033d6,/16/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
3395,eaf1c5575ab9763caf66d8d5debb7ec089411740,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3396,eaf1c5575ab9763caf66d8d5debb7ec089411740,/7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
3397,eaf1c5575ab9763caf66d8d5debb7ec089411740,/7-jdk/Dockerfile,# Default to UTF-8 file.encoding
3398,eaf1c5575ab9763caf66d8d5debb7ec089411740,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3399,eaf1c5575ab9763caf66d8d5debb7ec089411740,/7-jdk/Dockerfile,#!/bin/bash'; \
3400,eaf1c5575ab9763caf66d8d5debb7ec089411740,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
3401,4016bc190db90b9254f01ea808a91981f50500a2,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3402,4016bc190db90b9254f01ea808a91981f50500a2,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3403,4016bc190db90b9254f01ea808a91981f50500a2,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
3404,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3405,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3406,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3407,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-1809/Dockerfile,# http://jdk.java.net/
3408,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3409,ef8af39fafdaaf4eeb8137c194aa8a51f8c56334,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
3410,ef8af39fafdaaf4eeb8137c194aa8a51f8c56334,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
3411,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
3412,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
3413,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/oracle/Dockerfile,# http://jdk.java.net/
3414,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
3415,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
3416,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/oracle/Dockerfile,# basic smoke test
3417,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
3418,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
3419,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
3420,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,# Default to UTF-8 file.encoding
3421,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,# backwards compatibility shim
3422,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
3423,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
3424,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
3425,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
3426,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,# amd64
3427,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,# fallback
3428,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
3429,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
3430,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
3431,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
3432,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,#!/usr/bin/env bash'; \
3433,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
3434,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
3435,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,# basic smoke test
3436,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3437,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3438,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3439,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
3440,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3441,d93be18f4f2d5e8457169cac00e559d953b6028e,/12/jdk/alpine/Dockerfile,# https://jdk.java.net/
3442,d93be18f4f2d5e8457169cac00e559d953b6028e,/12/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
3443,d93be18f4f2d5e8457169cac00e559d953b6028e,/12/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
3444,d93be18f4f2d5e8457169cac00e559d953b6028e,/12/jdk/alpine/Dockerfile,# basic smoke test
3445,d93be18f4f2d5e8457169cac00e559d953b6028e,/12/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
3446,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
3447,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
3448,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/slim/Dockerfile,# backwards compatibility shim
3449,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
3450,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
3451,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
3452,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/slim/Dockerfile,# amd64
3453,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/slim/Dockerfile,# fallback
3454,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
3455,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
3456,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
3457,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
3458,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
3459,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/slim/Dockerfile,# basic smoke test
3460,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3461,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3462,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
3463,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
3464,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3465,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jdk/alpine/Dockerfile,#!/bin/sh'; \
3466,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
3467,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/nanoserver-1803/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
3468,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3469,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
3470,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
3471,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/Dockerfile,# backwards compatibility shim
3472,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
3473,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/Dockerfile,# https://adoptopenjdk.net/upstream.html
3474,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
3475,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
3476,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
3477,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
3478,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/Dockerfile,# basic smoke test
3479,a080def2a36003e85485d07b3f047bd3c91508c2,/8-jdk/windows/windowsservercore/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3480,a080def2a36003e85485d07b3f047bd3c91508c2,/8-jdk/windows/windowsservercore/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3481,a080def2a36003e85485d07b3f047bd3c91508c2,/8-jdk/windows/windowsservercore/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
3482,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3483,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
3484,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
3485,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3486,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jdk/Dockerfile,#!/bin/sh'; \
3487,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
3488,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
3489,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
3490,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
3491,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
3492,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3493,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
3494,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
3495,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
3496,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
3497,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
3498,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,# backwards compatibility shim
3499,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
3500,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
3501,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
3502,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,# arm64v8
3503,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,# amd64
3504,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,# fallback
3505,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
3506,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
3507,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
3508,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
3509,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
3510,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,# basic smoke test
3511,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3512,0ec2a0d41bebbff50f9537b58d258b6e551b0dce,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3513,0ec2a0d41bebbff50f9537b58d258b6e551b0dce,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3514,0ec2a0d41bebbff50f9537b58d258b6e551b0dce,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
3515,0ec2a0d41bebbff50f9537b58d258b6e551b0dce,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3516,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3517,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
3518,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/Dockerfile,# Default to UTF-8 file.encoding
3519,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3520,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/Dockerfile,#!/bin/sh'; \
3521,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
3522,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
3523,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
3524,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
3525,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
3526,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
3527,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
3528,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
3529,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/oracle/Dockerfile,# https://jdk.java.net/
3530,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
3531,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
3532,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/oracle/Dockerfile,# basic smoke test
3533,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
3534,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
3535,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-8-jdk/Dockerfile,# Default to UTF-8 file.encoding
3536,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
3537,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
3538,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
3539,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
3540,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
3541,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
3542,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
3543,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,# backwards compatibility shim
3544,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
3545,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
3546,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
3547,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,# arm64v8
3548,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,# amd64
3549,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,# fallback
3550,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
3551,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
3552,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
3553,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
3554,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
3555,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,# basic smoke test
3556,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3557,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3558,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
3559,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
3560,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3561,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/slim/Dockerfile,#!/bin/sh'; \
3562,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
3563,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
3564,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
3565,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)"
3566,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
3567,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
3568,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
3569,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
3570,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3571,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3572,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3573,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
3574,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3575,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3576,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
3577,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
3578,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3579,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jre/Dockerfile,#!/bin/sh'; \
3580,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
3581,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
3582,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
3583,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
3584,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
3585,a3f06bcbc86d16912a309cf4538a00caf9a6100c,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3586,a3f06bcbc86d16912a309cf4538a00caf9a6100c,/7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
3587,a3f06bcbc86d16912a309cf4538a00caf9a6100c,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
3588,a3f06bcbc86d16912a309cf4538a00caf9a6100c,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3589,a3f06bcbc86d16912a309cf4538a00caf9a6100c,/7-jre/Dockerfile,#!/bin/sh'; \
3590,a3f06bcbc86d16912a309cf4538a00caf9a6100c,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
3591,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3592,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3593,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3594,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
3595,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3596,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
3597,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
3598,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/slim/Dockerfile,# backwards compatibility shim
3599,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
3600,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
3601,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
3602,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
3603,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
3604,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
3605,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
3606,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
3607,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
3608,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/slim/Dockerfile,# basic smoke test
3609,fb0dd5fe5842959f774c60da6195e2d61b813fdd,/7-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3610,fb0dd5fe5842959f774c60da6195e2d61b813fdd,/7-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
3611,fb0dd5fe5842959f774c60da6195e2d61b813fdd,/7-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
3612,fb0dd5fe5842959f774c60da6195e2d61b813fdd,/7-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3613,fb0dd5fe5842959f774c60da6195e2d61b813fdd,/7-jdk/alpine/Dockerfile,#!/bin/sh'; \
3614,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3615,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3616,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3617,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
3618,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3619,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
3620,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
3621,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3622,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
3623,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
3624,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
3625,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
3626,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
3627,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/oracle/Dockerfile,# basic smoke test
3628,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
3629,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3630,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
3631,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/Dockerfile,# Default to UTF-8 file.encoding
3632,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3633,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/Dockerfile,#!/bin/sh'; \
3634,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
3635,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
3636,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
3637,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
3638,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
3639,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
3640,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3641,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
3642,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
3643,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
3644,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
3645,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/Dockerfile,# backwards compatibility shim
3646,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
3647,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
3648,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
3649,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
3650,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
3651,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
3652,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
3653,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/Dockerfile,#!/usr/bin/env bash'; \
3654,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
3655,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
3656,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/Dockerfile,# basic smoke test
3657,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3658,882461ade8207de7647d083009200de85eb978bc,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3659,882461ade8207de7647d083009200de85eb978bc,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
3660,882461ade8207de7647d083009200de85eb978bc,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
3661,882461ade8207de7647d083009200de85eb978bc,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3662,882461ade8207de7647d083009200de85eb978bc,/8-jdk/Dockerfile,#!/bin/sh'; \
3663,882461ade8207de7647d083009200de85eb978bc,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
3664,882461ade8207de7647d083009200de85eb978bc,/8-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
3665,882461ade8207de7647d083009200de85eb978bc,/8-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
3666,882461ade8207de7647d083009200de85eb978bc,/8-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
3667,882461ade8207de7647d083009200de85eb978bc,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
3668,882461ade8207de7647d083009200de85eb978bc,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
3669,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3670,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3671,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3672,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-1709/Dockerfile,# https://jdk.java.net/
3673,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3674,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3675,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3676,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3677,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
3678,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3679,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/alpine3.12/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
3680,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/alpine3.12/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
3681,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/alpine3.12/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
3682,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/alpine3.12/Dockerfile,# amd64
3683,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/alpine3.12/Dockerfile,# fallback
3684,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/alpine3.12/Dockerfile,"# see ""java-cacerts"" package installed above (which maintains ""/etc/ssl/certs/java/cacerts"" for us)"
3685,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/alpine3.12/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
3686,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/alpine3.12/Dockerfile,# basic smoke test
3687,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/alpine3.12/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3688,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3689,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
3690,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
3691,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3692,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/slim/Dockerfile,#!/bin/sh'; \
3693,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
3694,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
3695,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
3696,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
3697,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
3698,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
3699,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3700,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3701,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
3702,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
3703,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
3704,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3705,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
3706,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
3707,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3708,ef8af39fafdaaf4eeb8137c194aa8a51f8c56334,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
3709,ef8af39fafdaaf4eeb8137c194aa8a51f8c56334,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
3710,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
3711,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
3712,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/oraclelinux7/Dockerfile,# Default to UTF-8 file.encoding
3713,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
3714,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
3715,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/oraclelinux7/Dockerfile,# arm64v8
3716,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/oraclelinux7/Dockerfile,# amd64
3717,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/oraclelinux7/Dockerfile,# fallback
3718,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/oraclelinux7/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
3719,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
3720,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
3721,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/oraclelinux7/Dockerfile,# basic smoke test
3722,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3723,07f251a7891fb4624535379d58b50f585a32c279,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3724,07f251a7891fb4624535379d58b50f585a32c279,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3725,07f251a7891fb4624535379d58b50f585a32c279,/11/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
3726,07f251a7891fb4624535379d58b50f585a32c279,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3727,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3728,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
3729,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
3730,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3731,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jdk/Dockerfile,#!/bin/bash'; \
3732,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
3733,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
3734,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
3735,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
3736,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
3737,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
3738,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
3739,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,# backwards compatibility shim
3740,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
3741,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
3742,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
3743,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,# arm64v8
3744,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,# amd64
3745,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,# fallback
3746,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
3747,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
3748,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
3749,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
3750,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
3751,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,# basic smoke test
3752,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3753,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3754,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3755,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3756,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
3757,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3758,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3759,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
3760,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
3761,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3762,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/Dockerfile,#!/bin/sh'; \
3763,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
3764,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
3765,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
3766,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
3767,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
3768,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
3769,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
3770,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/nanoserver-1809/Dockerfile,# https://jdk.java.net/
3771,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3772,6882089f1c079469c3e2cadca1ed8371fb8495f2,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3773,6882089f1c079469c3e2cadca1ed8371fb8495f2,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
3774,6882089f1c079469c3e2cadca1ed8371fb8495f2,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
3775,6882089f1c079469c3e2cadca1ed8371fb8495f2,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3776,6882089f1c079469c3e2cadca1ed8371fb8495f2,/9-jre/Dockerfile,#!/bin/sh'; \
3777,6882089f1c079469c3e2cadca1ed8371fb8495f2,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
3778,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3779,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3780,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3781,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
3782,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3783,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3784,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3785,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# https://adoptopenjdk.net/upstream.html
3786,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
3787,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
3788,5257acb51a1230a2dc46b1c349d674a725562f9d,/7-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3789,5257acb51a1230a2dc46b1c349d674a725562f9d,/7-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
3790,5257acb51a1230a2dc46b1c349d674a725562f9d,/7-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
3791,5257acb51a1230a2dc46b1c349d674a725562f9d,/7-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3792,5257acb51a1230a2dc46b1c349d674a725562f9d,/7-jre/alpine/Dockerfile,#!/bin/sh'; \
3793,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3794,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
3795,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
3796,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3797,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/slim/Dockerfile,#!/bin/sh'; \
3798,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
3799,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
3800,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
3801,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
3802,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
3803,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3804,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
3805,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
3806,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
3807,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/oracle/Dockerfile,# http://jdk.java.net/
3808,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
3809,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
3810,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/oracle/Dockerfile,# basic smoke test
3811,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
3812,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3813,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3814,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3815,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
3816,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3817,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3818,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3819,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3820,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
3821,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3822,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3823,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3824,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/windowsservercore-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
3825,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/windowsservercore-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
3826,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
3827,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
3828,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-6-jre/Dockerfile,# Default to UTF-8 file.encoding
3829,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
3830,b118fdc1e9b1aebdc178537551101dffe1f612a3,/6-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3831,b118fdc1e9b1aebdc178537551101dffe1f612a3,/6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
3832,b118fdc1e9b1aebdc178537551101dffe1f612a3,/6-jdk/Dockerfile,# Default to UTF-8 file.encoding
3833,b118fdc1e9b1aebdc178537551101dffe1f612a3,/6-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3834,b118fdc1e9b1aebdc178537551101dffe1f612a3,/6-jdk/Dockerfile,#!/bin/sh'; \
3835,b118fdc1e9b1aebdc178537551101dffe1f612a3,/6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
3836,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
3837,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
3838,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
3839,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,# backwards compatibility shim
3840,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
3841,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
3842,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
3843,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
3844,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,# amd64
3845,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,# fallback
3846,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
3847,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
3848,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
3849,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
3850,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
3851,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
3852,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
3853,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,# basic smoke test
3854,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3855,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
3856,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
3857,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3858,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/Dockerfile,#!/bin/sh'; \
3859,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
3860,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
3861,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
3862,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
3863,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
3864,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
3865,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
3866,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
3867,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/slim/Dockerfile,# backwards compatibility shim
3868,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
3869,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
3870,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
3871,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
3872,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
3873,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
3874,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
3875,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/slim/Dockerfile,# basic smoke test
3876,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3877,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
3878,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3879,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
3880,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
3881,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3882,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/Dockerfile,#!/bin/sh'; \
3883,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
3884,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
3885,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
3886,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
3887,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
3888,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
3889,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3890,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3891,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3892,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
3893,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3894,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3895,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
3896,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
3897,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3898,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/Dockerfile,#!/bin/sh'; \
3899,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
3900,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
3901,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
3902,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
3903,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
3904,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
3905,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
3906,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
3907,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3908,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
3909,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
3910,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
3911,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
3912,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/Dockerfile,# backwards compatibility shim
3913,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
3914,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
3915,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
3916,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
3917,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
3918,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
3919,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
3920,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/Dockerfile,# basic smoke test
3921,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3922,e740b6fad61854adfbdf553638d33f1c80176d79,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
3923,e740b6fad61854adfbdf553638d33f1c80176d79,/openjdk-8-jdk/Dockerfile,# Default to UTF-8 file.encoding
3924,e740b6fad61854adfbdf553638d33f1c80176d79,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
3925,e740b6fad61854adfbdf553638d33f1c80176d79,/openjdk-8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
3926,e740b6fad61854adfbdf553638d33f1c80176d79,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
3927,43078a246d7620f518412f458cc689ac869389ac,/8/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
3928,43078a246d7620f518412f458cc689ac869389ac,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
3929,43078a246d7620f518412f458cc689ac869389ac,/8/jdk/slim/Dockerfile,# backwards compatibility shim
3930,43078a246d7620f518412f458cc689ac869389ac,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
3931,43078a246d7620f518412f458cc689ac869389ac,/8/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
3932,43078a246d7620f518412f458cc689ac869389ac,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
3933,43078a246d7620f518412f458cc689ac869389ac,/8/jdk/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
3934,43078a246d7620f518412f458cc689ac869389ac,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
3935,43078a246d7620f518412f458cc689ac869389ac,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
3936,43078a246d7620f518412f458cc689ac869389ac,/8/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
3937,43078a246d7620f518412f458cc689ac869389ac,/8/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
3938,43078a246d7620f518412f458cc689ac869389ac,/8/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
3939,43078a246d7620f518412f458cc689ac869389ac,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
3940,43078a246d7620f518412f458cc689ac869389ac,/8/jdk/slim/Dockerfile,# basic smoke test
3941,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
3942,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
3943,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/slim/Dockerfile,# backwards compatibility shim
3944,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
3945,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
3946,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
3947,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
3948,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
3949,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
3950,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
3951,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/slim/Dockerfile,# basic smoke test
3952,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3953,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
3954,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3955,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
3956,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/Dockerfile,# Default to UTF-8 file.encoding
3957,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3958,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/Dockerfile,#!/bin/sh'; \
3959,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
3960,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
3961,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
3962,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
3963,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
3964,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
3965,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3966,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3967,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3968,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
3969,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3970,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
3971,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
3972,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
3973,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
3974,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,# backwards compatibility shim
3975,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
3976,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
3977,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
3978,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,# arm64v8
3979,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,# amd64
3980,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,# fallback
3981,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
3982,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
3983,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
3984,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
3985,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
3986,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,# basic smoke test
3987,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3988,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
3989,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
3990,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
3991,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
3992,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/Dockerfile,# backwards compatibility shim
3993,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
3994,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
3995,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
3996,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
3997,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
3998,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
3999,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
4000,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/Dockerfile,# basic smoke test
4001,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4002,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/11/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
4003,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
4004,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/11/jdk/slim/Dockerfile,# backwards compatibility shim
4005,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
4006,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/11/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
4007,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
4008,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/11/jdk/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
4009,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
4010,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
4011,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/11/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
4012,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/11/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
4013,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/11/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
4014,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
4015,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/11/jdk/slim/Dockerfile,# basic smoke test
4016,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4017,15835397954c9ec123e42e685035ecd239e0a1db,/8/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
4018,15835397954c9ec123e42e685035ecd239e0a1db,/8/jdk/windows/nanoserver-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
4019,15835397954c9ec123e42e685035ecd239e0a1db,/8/jdk/windows/nanoserver-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
4020,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/9-jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4021,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/9-jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4022,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/9-jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4023,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/9-jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
4024,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/9-jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4025,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4026,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
4027,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
4028,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4029,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/Dockerfile,#!/bin/sh'; \
4030,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
4031,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
4032,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
4033,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
4034,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
4035,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4036,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
4037,5ed8eb2445b2ff267a9c88c9ddaaa7dd9e384134,/openjdk-9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4038,5ed8eb2445b2ff267a9c88c9ddaaa7dd9e384134,/openjdk-9-jdk/Dockerfile,# Default to UTF-8 file.encoding
4039,5ed8eb2445b2ff267a9c88c9ddaaa7dd9e384134,/openjdk-9-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
4040,5ed8eb2445b2ff267a9c88c9ddaaa7dd9e384134,/openjdk-9-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
4041,5ed8eb2445b2ff267a9c88c9ddaaa7dd9e384134,/openjdk-9-jdk/Dockerfile,"# see https://bugs.debian.org/793210
# and https://github.com/docker-library/java/issues/46#issuecomment-119026586"
4042,5ed8eb2445b2ff267a9c88c9ddaaa7dd9e384134,/openjdk-9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4043,e6e9cf8b21516ba764189916d35be57486203c95,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4044,e6e9cf8b21516ba764189916d35be57486203c95,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4045,e6e9cf8b21516ba764189916d35be57486203c95,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
4046,e6e9cf8b21516ba764189916d35be57486203c95,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4047,e6e9cf8b21516ba764189916d35be57486203c95,/8-jdk/Dockerfile,#!/bin/sh'; \
4048,e6e9cf8b21516ba764189916d35be57486203c95,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
4049,e6e9cf8b21516ba764189916d35be57486203c95,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
4050,e6e9cf8b21516ba764189916d35be57486203c95,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4051,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4052,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4053,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
4054,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4055,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jdk/Dockerfile,#!/bin/sh'; \
4056,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
4057,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
4058,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
4059,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
4060,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
4061,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
4062,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4063,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
4064,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
4065,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
4066,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
4067,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/Dockerfile,# backwards compatibility shim
4068,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
4069,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
4070,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
4071,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
4072,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
4073,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
4074,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
4075,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/Dockerfile,# basic smoke test
4076,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4077,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
4078,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
4079,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/oracle/Dockerfile,# http://jdk.java.net/
4080,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
4081,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
4082,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/oracle/Dockerfile,# basic smoke test
4083,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
4084,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4085,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
4086,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
4087,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4088,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/slim/Dockerfile,#!/bin/sh'; \
4089,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
4090,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
4091,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
4092,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
4093,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
4094,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
4095,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4096,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
4097,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
4098,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4099,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/slim/Dockerfile,#!/bin/sh'; \
4100,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
4101,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
4102,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
4103,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
4104,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
4105,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
4106,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
4107,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
4108,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/slim/Dockerfile,# backwards compatibility shim
4109,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
4110,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/slim/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
4111,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
4112,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
4113,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
4114,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
4115,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
4116,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
4117,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
4118,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
4119,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/slim/Dockerfile,# basic smoke test
4120,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4121,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
4122,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
4123,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4124,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
4125,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
4126,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
4127,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
4128,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
4129,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
4130,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4131,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
4132,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4133,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
4134,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/Dockerfile,# Default to UTF-8 file.encoding
4135,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4136,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/Dockerfile,#!/bin/sh'; \
4137,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
4138,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
4139,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
4140,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
4141,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
4142,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
4143,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4144,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
4145,31741b6c2bbe2625e783288664245136ffe9533c,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4146,31741b6c2bbe2625e783288664245136ffe9533c,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
4147,31741b6c2bbe2625e783288664245136ffe9533c,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
4148,31741b6c2bbe2625e783288664245136ffe9533c,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4149,31741b6c2bbe2625e783288664245136ffe9533c,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
4150,31741b6c2bbe2625e783288664245136ffe9533c,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
4151,31741b6c2bbe2625e783288664245136ffe9533c,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
4152,31741b6c2bbe2625e783288664245136ffe9533c,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
4153,31741b6c2bbe2625e783288664245136ffe9533c,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
4154,31741b6c2bbe2625e783288664245136ffe9533c,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
4155,31741b6c2bbe2625e783288664245136ffe9533c,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4156,31741b6c2bbe2625e783288664245136ffe9533c,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
4157,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4158,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4159,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4160,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
4161,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4162,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4163,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
4164,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
4165,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4166,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/slim/Dockerfile,#!/bin/sh'; \
4167,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
4168,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
4169,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
4170,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
4171,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
4172,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4173,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
4174,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4175,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4176,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
4177,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4178,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4179,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
4180,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
4181,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4182,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/Dockerfile,#!/bin/sh'; \
4183,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
4184,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
4185,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
4186,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
4187,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
4188,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
4189,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
4190,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
4191,318ba809c9f0e3c7095b363c5a31409ee6880208,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4192,318ba809c9f0e3c7095b363c5a31409ee6880208,/openjdk-6-jre/Dockerfile,# Default to UTF-8 file.encoding
4193,318ba809c9f0e3c7095b363c5a31409ee6880208,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4194,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4195,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4196,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4197,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
4198,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4199,9859b8586dd2511d005c84694736e2121ceb11d7,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4200,9859b8586dd2511d005c84694736e2121ceb11d7,/openjdk-6-jdk/Dockerfile,# Default to UTF-8 file.encoding
4201,9859b8586dd2511d005c84694736e2121ceb11d7,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4202,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
4203,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
4204,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
4205,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
4206,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
4207,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
4208,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/oracle/Dockerfile,# basic smoke test
4209,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
4210,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4211,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
4212,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
4213,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4214,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/slim/Dockerfile,#!/bin/sh'; \
4215,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
4216,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
4217,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
4218,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
4219,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
4220,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
4221,200ecf22e5a23cb48cbb3ce47aa08aa3b49a0d2d,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4222,200ecf22e5a23cb48cbb3ce47aa08aa3b49a0d2d,/openjdk-8-jdk/Dockerfile,# Default to UTF-8 file.encoding
4223,200ecf22e5a23cb48cbb3ce47aa08aa3b49a0d2d,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
4224,200ecf22e5a23cb48cbb3ce47aa08aa3b49a0d2d,/openjdk-8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
4225,200ecf22e5a23cb48cbb3ce47aa08aa3b49a0d2d,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4226,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
4227,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
4228,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
4229,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jre/Dockerfile,# backwards compatibility shim
4230,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
4231,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jre/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
4232,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
4233,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
4234,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
4235,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
4236,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
4237,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jre/Dockerfile,#!/usr/bin/env bash'; \
4238,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
4239,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
4240,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jre/Dockerfile,# basic smoke test
4241,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
4242,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
4243,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/slim-buster/Dockerfile,# backwards compatibility shim
4244,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
4245,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/slim-buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
4246,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
4247,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/slim-buster/Dockerfile,# arm64v8
4248,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/slim-buster/Dockerfile,# amd64
4249,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/slim-buster/Dockerfile,# fallback
4250,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
4251,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
4252,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
4253,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
4254,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
4255,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/slim-buster/Dockerfile,# basic smoke test
4256,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4257,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4258,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4259,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4260,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
4261,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4262,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4263,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4264,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4265,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
4266,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4267,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4268,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4269,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4270,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
4271,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4272,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4273,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4274,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4275,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
4276,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4277,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4278,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4279,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
4280,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4281,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/7-jre/Dockerfile,#!/bin/sh'; \
4282,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4283,c2a9c2169b3cb215e3200440bc1cc2d6a2284d8b,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4284,c2a9c2169b3cb215e3200440bc1cc2d6a2284d8b,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
4285,c2a9c2169b3cb215e3200440bc1cc2d6a2284d8b,/openjdk-8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
4286,c2a9c2169b3cb215e3200440bc1cc2d6a2284d8b,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4287,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
4288,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
4289,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4290,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4291,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4292,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4293,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
4294,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4295,873fb56728befef8ecaf8436c3a27fd239cba301,/8-jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4296,873fb56728befef8ecaf8436c3a27fd239cba301,/8-jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4297,873fb56728befef8ecaf8436c3a27fd239cba301,/8-jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
4298,45dce52df7deb6a4b6ae7ad9c4b9f3cb7dc8db91,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4299,45dce52df7deb6a4b6ae7ad9c4b9f3cb7dc8db91,/7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4300,45dce52df7deb6a4b6ae7ad9c4b9f3cb7dc8db91,/7-jdk/Dockerfile,# Default to UTF-8 file.encoding
4301,45dce52df7deb6a4b6ae7ad9c4b9f3cb7dc8db91,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4302,45dce52df7deb6a4b6ae7ad9c4b9f3cb7dc8db91,/7-jdk/Dockerfile,#!/bin/sh'; \
4303,45dce52df7deb6a4b6ae7ad9c4b9f3cb7dc8db91,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4304,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4305,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4306,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4307,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
4308,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4309,98726c6f8efe30e3a40a51a0c4de7fb7193d9f58,/7/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4310,98726c6f8efe30e3a40a51a0c4de7fb7193d9f58,/7/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4311,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4312,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4313,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/windowsservercore-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
4314,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/windowsservercore-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
4315,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
4316,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4317,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4318,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4319,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
4320,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4321,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/9-jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4322,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/9-jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4323,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/9-jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
4324,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/9-jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4325,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4326,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
4327,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
4328,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4329,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/Dockerfile,#!/bin/sh'; \
4330,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
4331,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
4332,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
4333,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
4334,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
4335,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
4336,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
4337,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/slim/Dockerfile,# backwards compatibility shim
4338,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
4339,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
4340,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
4341,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
4342,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
4343,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
4344,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/slim/Dockerfile,# basic smoke test
4345,68c66124d85712115f1aefa0c60e766ac8e7da66,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4346,68c66124d85712115f1aefa0c60e766ac8e7da66,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
4347,68c66124d85712115f1aefa0c60e766ac8e7da66,/openjdk-8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
4348,68c66124d85712115f1aefa0c60e766ac8e7da66,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4349,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
4350,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
4351,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
4352,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
4353,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
4354,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
4355,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
4356,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/14/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
4357,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/14/jdk/oracle/Dockerfile,# amd64
4358,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/14/jdk/oracle/Dockerfile,# fallback
4359,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
4360,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
4361,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/14/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
4362,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/14/jdk/oracle/Dockerfile,# basic smoke test
4363,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
4364,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4365,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4366,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
4367,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4368,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jdk/alpine/Dockerfile,#!/bin/sh'; \
4369,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
4370,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
4371,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
4372,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/Dockerfile,# backwards compatibility shim
4373,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
4374,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
4375,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
4376,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
4377,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
4378,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
4379,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
4380,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/Dockerfile,#!/usr/bin/env bash'; \
4381,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
4382,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
4383,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/Dockerfile,# basic smoke test
4384,b57ab1457d190f313c46ffbec2b994b041b4d08c,/14/jdk/alpine/Dockerfile,# https://jdk.java.net/
4385,b57ab1457d190f313c46ffbec2b994b041b4d08c,/14/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
4386,b57ab1457d190f313c46ffbec2b994b041b4d08c,/14/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
4387,b57ab1457d190f313c46ffbec2b994b041b4d08c,/14/jdk/alpine/Dockerfile,# basic smoke test
4388,b57ab1457d190f313c46ffbec2b994b041b4d08c,/14/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
4389,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4390,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4391,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4392,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-1809/Dockerfile,# http://jdk.java.net/
4393,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4394,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
4395,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
4396,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
4397,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
4398,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
4399,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/oracle/Dockerfile,# basic smoke test
4400,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
4401,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4402,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4403,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4404,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
4405,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
4406,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
4407,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4408,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4409,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
4410,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
4411,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4412,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/slim/Dockerfile,#!/bin/sh'; \
4413,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
4414,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
4415,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
4416,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
4417,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
4418,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
4419,f47afa13905074605a616adf3b9c01c396ed74a8,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4420,f47afa13905074605a616adf3b9c01c396ed74a8,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4421,2ac2312f6374ae864c3166466fb366967b97e47a,/8/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4422,2ac2312f6374ae864c3166466fb366967b97e47a,/8/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
4423,2ac2312f6374ae864c3166466fb366967b97e47a,/8/jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
4424,2ac2312f6374ae864c3166466fb366967b97e47a,/8/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4425,2ac2312f6374ae864c3166466fb366967b97e47a,/8/jre/alpine/Dockerfile,#!/bin/sh'; \
4426,2ac2312f6374ae864c3166466fb366967b97e47a,/8/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
4427,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
4428,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
4429,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux7/Dockerfile,# Default to UTF-8 file.encoding
4430,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
4431,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
4432,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux7/Dockerfile,# arm64v8
4433,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux7/Dockerfile,# amd64
4434,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux7/Dockerfile,# fallback
4435,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux7/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
4436,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
4437,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
4438,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux7/Dockerfile,# basic smoke test
4439,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4440,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4441,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4442,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4443,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
4444,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4445,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4446,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
4447,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
4448,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4449,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/slim/Dockerfile,#!/bin/sh'; \
4450,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
4451,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
4452,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
4453,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
4454,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
4455,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
4456,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4457,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
4458,2e2d5c3f7ca9303b53d9d8f8ce22c0232a152d5f,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4459,2e2d5c3f7ca9303b53d9d8f8ce22c0232a152d5f,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4460,2e2d5c3f7ca9303b53d9d8f8ce22c0232a152d5f,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
4461,2e2d5c3f7ca9303b53d9d8f8ce22c0232a152d5f,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4462,2e2d5c3f7ca9303b53d9d8f8ce22c0232a152d5f,/9-jdk/Dockerfile,#!/bin/sh'; \
4463,2e2d5c3f7ca9303b53d9d8f8ce22c0232a152d5f,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4464,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4465,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4466,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
4467,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4468,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
4469,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
4470,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
4471,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
4472,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/Dockerfile,# backwards compatibility shim
4473,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
4474,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
4475,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
4476,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
4477,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
4478,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
4479,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
4480,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/Dockerfile,# basic smoke test
4481,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4482,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
4483,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
4484,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
4485,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
4486,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/Dockerfile,# backwards compatibility shim
4487,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
4488,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/Dockerfile,# https://jdk.java.net/
4489,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
4490,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
4491,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
4492,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
4493,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
4494,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/Dockerfile,# basic smoke test
4495,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4496,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4497,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4498,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4499,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
4500,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4501,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4502,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4503,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4504,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
4505,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4506,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/alpine3.12/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
4507,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/alpine3.12/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
4508,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/alpine3.12/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
4509,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/alpine3.12/Dockerfile,# amd64
4510,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/alpine3.12/Dockerfile,# fallback
4511,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/alpine3.12/Dockerfile,"# see ""java-cacerts"" package installed above (which maintains ""/etc/ssl/certs/java/cacerts"" for us)"
4512,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/alpine3.12/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
4513,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/alpine3.12/Dockerfile,# basic smoke test
4514,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/alpine3.12/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4515,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
4516,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
4517,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4518,2598f7123fce9ea870e67f8f9df745b2b49866c0,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4519,2598f7123fce9ea870e67f8f9df745b2b49866c0,/8-jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
4520,2598f7123fce9ea870e67f8f9df745b2b49866c0,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
4521,2598f7123fce9ea870e67f8f9df745b2b49866c0,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4522,2598f7123fce9ea870e67f8f9df745b2b49866c0,/8-jdk/alpine/Dockerfile,#!/bin/sh'; \
4523,2598f7123fce9ea870e67f8f9df745b2b49866c0,/8-jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
4524,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4525,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4526,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
4527,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4528,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jre/Dockerfile,#!/bin/sh'; \
4529,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
4530,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
4531,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
4532,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4533,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
4534,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
4535,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/slim/Dockerfile,# backwards compatibility shim
4536,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
4537,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
4538,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
4539,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
4540,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
4541,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
4542,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
4543,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/slim/Dockerfile,# basic smoke test
4544,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4545,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
4546,4815a7dc43f0fb212c40f357624fb4ec943992bf,/8-jdk/windows/windowsservercore/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4547,4815a7dc43f0fb212c40f357624fb4ec943992bf,/8-jdk/windows/windowsservercore/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4548,4815a7dc43f0fb212c40f357624fb4ec943992bf,/8-jdk/windows/windowsservercore/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
4549,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4550,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
4551,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
4552,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4553,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/slim/Dockerfile,#!/bin/sh'; \
4554,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
4555,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
4556,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
4557,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
4558,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
4559,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
4560,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4561,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4562,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4563,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
4564,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4565,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/8-jdk/windows/windowsservercore/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4566,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/8-jdk/windows/windowsservercore/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4567,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/8-jdk/windows/windowsservercore/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
4568,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4569,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-9-jdk/Dockerfile,# Default to UTF-8 file.encoding
4570,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-9-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
4571,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-9-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
4572,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-9-jdk/Dockerfile,"# see https://bugs.debian.org/793210
# and https://github.com/docker-library/java/issues/46#issuecomment-119026586"
4573,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4574,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4575,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4576,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4577,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
4578,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4579,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4580,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4581,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4582,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
4583,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4584,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4585,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4586,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4587,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
4588,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4589,5fb0ba0b6f08e6647a1ba4fbdf8263895b1cf61f,/8-jdk/windows/nanoserver/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4590,5fb0ba0b6f08e6647a1ba4fbdf8263895b1cf61f,/8-jdk/windows/nanoserver/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4591,5fb0ba0b6f08e6647a1ba4fbdf8263895b1cf61f,/8-jdk/windows/nanoserver/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
4592,56a204b2096324ffc854725cb83eeaa22325d9d2,/openjdk-9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4593,56a204b2096324ffc854725cb83eeaa22325d9d2,/openjdk-9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4594,56a204b2096324ffc854725cb83eeaa22325d9d2,/openjdk-9-jre/Dockerfile,# Default to UTF-8 file.encoding
4595,56a204b2096324ffc854725cb83eeaa22325d9d2,/openjdk-9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4596,56a204b2096324ffc854725cb83eeaa22325d9d2,/openjdk-9-jre/Dockerfile,#!/bin/bash'; \
4597,56a204b2096324ffc854725cb83eeaa22325d9d2,/openjdk-9-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
4598,56a204b2096324ffc854725cb83eeaa22325d9d2,/openjdk-9-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
4599,56a204b2096324ffc854725cb83eeaa22325d9d2,/openjdk-9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4600,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4601,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
4602,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jre/Dockerfile,# Default to UTF-8 file.encoding
4603,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4604,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jre/Dockerfile,#!/bin/sh'; \
4605,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
4606,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
4607,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
4608,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
4609,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
4610,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
4611,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
4612,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4613,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4614,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4615,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
4616,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4617,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4618,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4619,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4620,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
4621,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4622,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
4623,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/Dockerfile,# backwards compatibility shim
4624,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
4625,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/Dockerfile,# https://adoptopenjdk.net/upstream.html
4626,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
4627,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
4628,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
4629,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/Dockerfile,# basic smoke test
4630,89851f0abc3a83cfad5248102f379d6a0bd3951a,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4631,89851f0abc3a83cfad5248102f379d6a0bd3951a,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4632,89851f0abc3a83cfad5248102f379d6a0bd3951a,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
4633,89851f0abc3a83cfad5248102f379d6a0bd3951a,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4634,89851f0abc3a83cfad5248102f379d6a0bd3951a,/9-jre/Dockerfile,#!/bin/sh'; \
4635,89851f0abc3a83cfad5248102f379d6a0bd3951a,/9-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
4636,89851f0abc3a83cfad5248102f379d6a0bd3951a,/9-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
4637,89851f0abc3a83cfad5248102f379d6a0bd3951a,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4638,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4639,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
4640,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
4641,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4642,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jdk/Dockerfile,#!/bin/sh'; \
4643,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
4644,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
4645,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
4646,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
4647,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
4648,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4649,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
4650,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4651,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4652,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
4653,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4654,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/8-jre/Dockerfile,#!/bin/sh'; \
4655,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
4656,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
4657,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4658,bbb7c0995d9ab0ffec987f02f515862925553d5e,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4659,bbb7c0995d9ab0ffec987f02f515862925553d5e,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4660,bbb7c0995d9ab0ffec987f02f515862925553d5e,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
4661,bbb7c0995d9ab0ffec987f02f515862925553d5e,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4662,bbb7c0995d9ab0ffec987f02f515862925553d5e,/8-jre/Dockerfile,#!/bin/sh'; \
4663,bbb7c0995d9ab0ffec987f02f515862925553d5e,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
4664,bbb7c0995d9ab0ffec987f02f515862925553d5e,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
4665,bbb7c0995d9ab0ffec987f02f515862925553d5e,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4666,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4667,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4668,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4669,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
4670,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4671,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4672,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4673,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
4674,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
4675,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
4676,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
4677,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
4678,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4679,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
4680,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
4681,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
4682,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
4683,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/Dockerfile,# backwards compatibility shim
4684,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
4685,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
4686,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
4687,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
4688,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
4689,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
4690,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
4691,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/Dockerfile,# basic smoke test
4692,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4693,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
4694,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
4695,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
4696,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
4697,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
4698,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/oracle/Dockerfile,# basic smoke test
4699,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
4700,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
4701,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
4702,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
4703,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
4704,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/Dockerfile,# backwards compatibility shim
4705,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
4706,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
4707,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
4708,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
4709,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
4710,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
4711,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
4712,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/Dockerfile,# basic smoke test
4713,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4714,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
4715,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
4716,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/slim/Dockerfile,# backwards compatibility shim
4717,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
4718,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
4719,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
4720,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
4721,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
4722,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
4723,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
4724,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
4725,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
4726,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
4727,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/slim/Dockerfile,# basic smoke test
4728,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4729,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4730,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4731,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4732,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
4733,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4734,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4735,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4736,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4737,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
4738,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4739,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4740,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4741,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4742,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
4743,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4744,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
4745,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
4746,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
4747,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
4748,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
4749,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
4750,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/oracle/Dockerfile,# basic smoke test
4751,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
4752,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4753,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4754,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4755,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-1809/Dockerfile,# http://jdk.java.net/
4756,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4757,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4758,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
4759,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
4760,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4761,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/slim/Dockerfile,#!/bin/sh'; \
4762,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
4763,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
4764,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
4765,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
4766,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
4767,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
4768,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4769,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4770,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4771,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
4772,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4773,1992f5ab6b5b6b4748c9628125dbea37df405d99,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4774,1992f5ab6b5b6b4748c9628125dbea37df405d99,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
4775,1992f5ab6b5b6b4748c9628125dbea37df405d99,/openjdk-8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
4776,1992f5ab6b5b6b4748c9628125dbea37df405d99,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4777,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
4778,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
4779,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/slim-buster/Dockerfile,# backwards compatibility shim
4780,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
4781,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/slim-buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
4782,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
4783,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/slim-buster/Dockerfile,# arm64v8
4784,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/slim-buster/Dockerfile,# amd64
4785,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/slim-buster/Dockerfile,# fallback
4786,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
4787,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
4788,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
4789,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
4790,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
4791,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/slim-buster/Dockerfile,# basic smoke test
4792,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4793,dcb22f5eecaaa99a29a3607b2c36a60632af23f9,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4794,dcb22f5eecaaa99a29a3607b2c36a60632af23f9,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4795,dcb22f5eecaaa99a29a3607b2c36a60632af23f9,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
4796,dcb22f5eecaaa99a29a3607b2c36a60632af23f9,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4797,dcb22f5eecaaa99a29a3607b2c36a60632af23f9,/9-jdk/Dockerfile,#!/bin/sh'; \
4798,dcb22f5eecaaa99a29a3607b2c36a60632af23f9,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4799,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4800,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4801,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4802,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
4803,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4804,f25ed8b213142ebe4370cf7494ecccccecc55ecd,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4805,f25ed8b213142ebe4370cf7494ecccccecc55ecd,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4806,4735dcec5fec2833635b8f6634d24d7e22c617b2,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4807,4735dcec5fec2833635b8f6634d24d7e22c617b2,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
4808,4735dcec5fec2833635b8f6634d24d7e22c617b2,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
4809,4735dcec5fec2833635b8f6634d24d7e22c617b2,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4810,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4811,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
4812,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
4813,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4814,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/slim/Dockerfile,#!/bin/sh'; \
4815,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
4816,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
4817,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
4818,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
4819,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
4820,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
4821,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4822,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
4823,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
4824,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4825,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/Dockerfile,#!/bin/sh'; \
4826,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
4827,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
4828,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
4829,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
4830,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
4831,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4832,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
4833,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4834,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4835,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4836,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
4837,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4838,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4839,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4840,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4841,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
4842,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4843,4365c863956250d758341b86035862b111269ed9,/10-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4844,4365c863956250d758341b86035862b111269ed9,/10-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
4845,4365c863956250d758341b86035862b111269ed9,/10-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
4846,4365c863956250d758341b86035862b111269ed9,/10-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4847,4365c863956250d758341b86035862b111269ed9,/10-jdk/slim/Dockerfile,#!/bin/sh'; \
4848,4365c863956250d758341b86035862b111269ed9,/10-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
4849,4365c863956250d758341b86035862b111269ed9,/10-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
4850,4365c863956250d758341b86035862b111269ed9,/10-jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
4851,4365c863956250d758341b86035862b111269ed9,/10-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
4852,4365c863956250d758341b86035862b111269ed9,/10-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
4853,4365c863956250d758341b86035862b111269ed9,/10-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
4854,4365c863956250d758341b86035862b111269ed9,/10-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4855,4365c863956250d758341b86035862b111269ed9,/10-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
4856,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
4857,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
4858,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux7/Dockerfile,# Default to UTF-8 file.encoding
4859,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
4860,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
4861,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux7/Dockerfile,# arm64v8
4862,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux7/Dockerfile,# amd64
4863,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux7/Dockerfile,# fallback
4864,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux7/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
4865,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
4866,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
4867,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux7/Dockerfile,# basic smoke test
4868,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4869,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4870,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4871,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
4872,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
4873,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
4874,6930db691f13efa925c1de3bbc8bc393783b7b2f,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4875,6930db691f13efa925c1de3bbc8bc393783b7b2f,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4876,6930db691f13efa925c1de3bbc8bc393783b7b2f,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
4877,6930db691f13efa925c1de3bbc8bc393783b7b2f,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4878,6930db691f13efa925c1de3bbc8bc393783b7b2f,/8-jre/alpine/Dockerfile,#!/bin/sh'; \
4879,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4880,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4881,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/windowsservercore-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
4882,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/windowsservercore-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
4883,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
4884,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
4885,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
4886,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
4887,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
4888,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
4889,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
4890,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/oracle/Dockerfile,# basic smoke test
4891,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
4892,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4893,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4894,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4895,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
4896,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4897,a7b5f34846cbad5712619ea11d686ad6be56e922,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4898,a7b5f34846cbad5712619ea11d686ad6be56e922,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4899,a7b5f34846cbad5712619ea11d686ad6be56e922,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
4900,a7b5f34846cbad5712619ea11d686ad6be56e922,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4901,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
4902,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
4903,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
4904,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/Dockerfile,# backwards compatibility shim
4905,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
4906,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
4907,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
4908,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
4909,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
4910,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
4911,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
4912,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/Dockerfile,#!/usr/bin/env bash'; \
4913,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
4914,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
4915,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/Dockerfile,# basic smoke test
4916,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
4917,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
4918,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
4919,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jre/Dockerfile,# backwards compatibility shim
4920,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
4921,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jre/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
4922,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
4923,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
4924,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
4925,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
4926,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
4927,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jre/Dockerfile,#!/usr/bin/env bash'; \
4928,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
4929,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
4930,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jre/Dockerfile,# basic smoke test
4931,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
4932,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
4933,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
4934,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
4935,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,# backwards compatibility shim
4936,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
4937,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
4938,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
4939,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,# arm64v8
4940,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,# amd64
4941,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,# fallback
4942,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
4943,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
4944,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
4945,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
4946,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
4947,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,# basic smoke test
4948,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4949,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
4950,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
4951,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
4952,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
4953,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
4954,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
4955,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/oracle/Dockerfile,# basic smoke test
4956,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
4957,73bb0adbae399094463dec65d1cdec506860c7e2,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4958,73bb0adbae399094463dec65d1cdec506860c7e2,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4959,73bb0adbae399094463dec65d1cdec506860c7e2,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4960,73bb0adbae399094463dec65d1cdec506860c7e2,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
4961,73bb0adbae399094463dec65d1cdec506860c7e2,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4962,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4963,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4964,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-7-jre/Dockerfile,# Default to UTF-8 file.encoding
4965,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4966,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-7-jre/Dockerfile,#!/bin/bash'; \
4967,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4968,43078a246d7620f518412f458cc689ac869389ac,/11/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
4969,43078a246d7620f518412f458cc689ac869389ac,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
4970,43078a246d7620f518412f458cc689ac869389ac,/11/jdk/slim/Dockerfile,# backwards compatibility shim
4971,43078a246d7620f518412f458cc689ac869389ac,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
4972,43078a246d7620f518412f458cc689ac869389ac,/11/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
4973,43078a246d7620f518412f458cc689ac869389ac,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
4974,43078a246d7620f518412f458cc689ac869389ac,/11/jdk/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
4975,43078a246d7620f518412f458cc689ac869389ac,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
4976,43078a246d7620f518412f458cc689ac869389ac,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
4977,43078a246d7620f518412f458cc689ac869389ac,/11/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
4978,43078a246d7620f518412f458cc689ac869389ac,/11/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
4979,43078a246d7620f518412f458cc689ac869389ac,/11/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
4980,43078a246d7620f518412f458cc689ac869389ac,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
4981,43078a246d7620f518412f458cc689ac869389ac,/11/jdk/slim/Dockerfile,# basic smoke test
4982,43078a246d7620f518412f458cc689ac869389ac,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4983,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4984,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4985,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4986,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
4987,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4988,11f3ec7d9cb5def04b7936cdf1eaa41da56341ab,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4989,11f3ec7d9cb5def04b7936cdf1eaa41da56341ab,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4990,11f3ec7d9cb5def04b7936cdf1eaa41da56341ab,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
4991,11f3ec7d9cb5def04b7936cdf1eaa41da56341ab,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4992,11f3ec7d9cb5def04b7936cdf1eaa41da56341ab,/9-jre/Dockerfile,#!/bin/sh'; \
4993,11f3ec7d9cb5def04b7936cdf1eaa41da56341ab,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4994,8b20818d91705361ff42b597369620680d0af98c,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4995,8b20818d91705361ff42b597369620680d0af98c,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4996,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4997,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4998,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4999,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
5000,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5001,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5002,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5003,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5004,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-1809/Dockerfile,# http://jdk.java.net/
5005,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5006,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
5007,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
5008,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/slim/Dockerfile,# backwards compatibility shim
5009,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
5010,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/slim/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
5011,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
5012,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
5013,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
5014,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
5015,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
5016,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
5017,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
5018,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
5019,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/slim/Dockerfile,# basic smoke test
5020,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
5021,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/nanoserver-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
5022,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/nanoserver-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
5023,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
5024,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
5025,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
5026,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
5027,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
5028,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/oracle/Dockerfile,# basic smoke test
5029,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
5030,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5031,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
5032,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
5033,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5034,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/Dockerfile,#!/bin/sh'; \
5035,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5036,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
5037,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5038,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5039,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5040,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5041,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5042,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5043,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5044,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
5045,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5046,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
5047,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
5048,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux7/Dockerfile,# Default to UTF-8 file.encoding
5049,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
5050,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
5051,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux7/Dockerfile,# amd64
5052,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux7/Dockerfile,# fallback
5053,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux7/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
5054,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
5055,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
5056,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux7/Dockerfile,# basic smoke test
5057,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5058,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5059,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
5060,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
5061,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5062,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/slim/Dockerfile,#!/bin/sh'; \
5063,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5064,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
5065,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5066,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5067,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5068,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5069,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5070,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
5071,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
5072,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5073,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/alpine/Dockerfile,#!/bin/sh'; \
5074,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5075,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
5076,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
5077,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
5078,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
5079,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
5080,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
5081,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/oracle/Dockerfile,# basic smoke test
5082,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
5083,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5084,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5085,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
5086,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5087,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5088,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
5089,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
5090,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5091,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/Dockerfile,#!/bin/sh'; \
5092,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5093,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
5094,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
5095,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5096,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5097,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5098,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
5099,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5100,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
5101,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
5102,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
5103,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
5104,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/Dockerfile,# backwards compatibility shim
5105,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
5106,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
5107,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
5108,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
5109,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
5110,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
5111,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
5112,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/Dockerfile,# basic smoke test
5113,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5114,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
5115,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
5116,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5117,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
5118,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
5119,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5120,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
5121,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/nanoserver-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
5122,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/nanoserver-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
5123,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
5124,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
5125,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/slim-buster/Dockerfile,# backwards compatibility shim
5126,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
5127,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/slim-buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
5128,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
5129,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/slim-buster/Dockerfile,# amd64
5130,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/slim-buster/Dockerfile,# fallback
5131,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
5132,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
5133,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
5134,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
5135,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
5136,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/slim-buster/Dockerfile,# basic smoke test
5137,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5138,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5139,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
5140,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
5141,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5142,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/Dockerfile,#!/bin/sh'; \
5143,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5144,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
5145,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
5146,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5147,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5148,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5149,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
5150,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5151,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5152,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5153,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5154,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-1809/Dockerfile,# http://jdk.java.net/
5155,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5156,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5157,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5158,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5159,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
5160,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5161,6cc25ee35281099423e521713f710d2549209600,/8/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
5162,6cc25ee35281099423e521713f710d2549209600,/8/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
5163,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5164,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5165,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
5166,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
5167,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
5168,3faf377815bd5409f91a007b092d38a36134baf5,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
5169,3faf377815bd5409f91a007b092d38a36134baf5,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
5170,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
5171,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
5172,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
5173,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/Dockerfile,# backwards compatibility shim
5174,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
5175,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/Dockerfile,# https://adoptopenjdk.net/upstream.html
5176,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
5177,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
5178,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
5179,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
5180,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
5181,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/Dockerfile,#!/usr/bin/env bash'; \
5182,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
5183,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
5184,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/Dockerfile,# basic smoke test
5185,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5186,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
5187,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
5188,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5189,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jre/Dockerfile,#!/bin/sh'; \
5190,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5191,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5192,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5193,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5194,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
5195,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5196,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5197,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5198,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
5199,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5200,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
5201,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
5202,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
5203,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
5204,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
5205,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
5206,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/oracle/Dockerfile,# basic smoke test
5207,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
5208,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
5209,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
5210,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
5211,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/Dockerfile,# Default to UTF-8 file.encoding
5212,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/Dockerfile,# backwards compatibility shim
5213,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
5214,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/Dockerfile,# https://jdk.java.net/
5215,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
5216,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/Dockerfile,#!/usr/bin/env bash'; \
5217,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
5218,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
5219,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
5220,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/Dockerfile,# basic smoke test
5221,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5222,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5223,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5224,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5225,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# https://jdk.java.net/
5226,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5227,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
5228,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
5229,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
5230,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
5231,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
5232,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/oracle/Dockerfile,# basic smoke test
5233,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
5234,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
5235,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
5236,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5237,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
5238,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
5239,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
5240,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5241,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5242,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5243,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
5244,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5245,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5246,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
5247,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/Dockerfile,# Default to UTF-8 file.encoding
5248,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5249,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/Dockerfile,#!/bin/sh'; \
5250,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5251,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
5252,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
5253,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5254,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5255,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5256,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5257,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5258,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5259,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5260,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# https://adoptopenjdk.net/upstream.html
5261,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
5262,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
5263,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5264,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5265,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
5266,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
5267,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
5268,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5269,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5270,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5271,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
5272,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5273,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5274,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5275,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5276,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
5277,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5278,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5279,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
5280,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
5281,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5282,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/8-jre/alpine/Dockerfile,#!/bin/sh'; \
5283,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
5284,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
5285,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
5286,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
5287,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/Dockerfile,# backwards compatibility shim
5288,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
5289,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/Dockerfile,# https://jdk.java.net/
5290,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
5291,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
5292,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
5293,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
5294,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
5295,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/Dockerfile,# basic smoke test
5296,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5297,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5298,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5299,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5300,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
5301,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5302,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5303,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-6"
5304,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/Dockerfile,# Default to UTF-8 file.encoding
5305,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5306,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/Dockerfile,#!/bin/sh'; \
5307,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5308,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
5309,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5310,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5311,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5312,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5313,9850ebc9cb840b259aebcf4de1f19cc3b7621810,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5314,9850ebc9cb840b259aebcf4de1f19cc3b7621810,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5315,9850ebc9cb840b259aebcf4de1f19cc3b7621810,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
5316,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5317,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
5318,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/Dockerfile,# Default to UTF-8 file.encoding
5319,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5320,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/Dockerfile,#!/bin/sh'; \
5321,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5322,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
5323,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
5324,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5325,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5326,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5327,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5328,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
5329,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
5330,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
5331,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
5332,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
5333,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
5334,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/oracle/Dockerfile,# basic smoke test
5335,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
5336,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5337,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
5338,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-9-jdk/Dockerfile,# Default to UTF-8 file.encoding
5339,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5340,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-9-jdk/Dockerfile,#!/bin/bash'; \
5341,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-9-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
5342,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-9-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
5343,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
5344,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
5345,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
5346,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/slim/Dockerfile,# backwards compatibility shim
5347,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
5348,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
5349,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
5350,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
5351,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
5352,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
5353,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
5354,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/slim/Dockerfile,# basic smoke test
5355,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5356,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
5357,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5358,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5359,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5360,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
5361,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5362,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
5363,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
5364,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/slim/Dockerfile,# backwards compatibility shim
5365,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
5366,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
5367,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
5368,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
5369,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
5370,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
5371,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
5372,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/slim/Dockerfile,# basic smoke test
5373,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5374,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
5375,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-6-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5376,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
5377,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-6-jre/Dockerfile,# Default to UTF-8 file.encoding
5378,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
5379,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/windows/windowsservercore/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5380,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/windows/windowsservercore/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5381,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/windows/windowsservercore/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
5382,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5383,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5384,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5385,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
5386,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5387,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5388,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
5389,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
5390,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5391,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/alpine/Dockerfile,#!/bin/sh'; \
5392,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5393,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
5394,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
5395,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/oracle/Dockerfile,# http://jdk.java.net/
5396,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
5397,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
5398,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/oracle/Dockerfile,# basic smoke test
5399,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
5400,e3386b5a2b4004da498e145cf840561d50acd7fb,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5401,e3386b5a2b4004da498e145cf840561d50acd7fb,/7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
5402,e3386b5a2b4004da498e145cf840561d50acd7fb,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
5403,e3386b5a2b4004da498e145cf840561d50acd7fb,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5404,e3386b5a2b4004da498e145cf840561d50acd7fb,/7-jre/Dockerfile,#!/bin/sh'; \
5405,e3386b5a2b4004da498e145cf840561d50acd7fb,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
5406,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5407,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5408,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5409,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
5410,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5411,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5412,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
5413,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
5414,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5415,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jre/slim/Dockerfile,#!/bin/sh'; \
5416,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5417,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
5418,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5419,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5420,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5421,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5422,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5423,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
5424,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/Dockerfile,# Default to UTF-8 file.encoding
5425,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5426,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/Dockerfile,#!/bin/sh'; \
5427,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5428,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
5429,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
5430,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5431,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5432,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5433,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5434,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5435,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5436,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5437,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
5438,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5439,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
5440,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
5441,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5442,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5443,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5444,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
5445,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
5446,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
5447,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
5448,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
5449,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,# backwards compatibility shim
5450,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
5451,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
5452,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
5453,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
5454,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,# arm64v8
5455,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,# amd64
5456,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,# fallback
5457,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
5458,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
5459,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
5460,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
5461,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
5462,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
5463,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
5464,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,# basic smoke test
5465,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5466,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5467,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
5468,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
5469,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5470,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/8-jre/alpine/Dockerfile,#!/bin/sh'; \
5471,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5472,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
5473,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
5474,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5475,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/slim/Dockerfile,#!/bin/sh'; \
5476,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5477,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
5478,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5479,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5480,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5481,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5482,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5483,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
5484,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
5485,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5486,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/Dockerfile,#!/bin/sh'; \
5487,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5488,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
5489,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5490,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5491,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5492,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5493,73bb0adbae399094463dec65d1cdec506860c7e2,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5494,73bb0adbae399094463dec65d1cdec506860c7e2,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5495,73bb0adbae399094463dec65d1cdec506860c7e2,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5496,73bb0adbae399094463dec65d1cdec506860c7e2,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
5497,73bb0adbae399094463dec65d1cdec506860c7e2,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5498,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5499,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
5500,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
5501,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5502,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/Dockerfile,#!/bin/sh'; \
5503,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5504,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
5505,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5506,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5507,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5508,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5509,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5510,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5511,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5512,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
5513,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5514,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5515,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
5516,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
5517,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5518,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/slim/Dockerfile,#!/bin/sh'; \
5519,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5520,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
5521,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
5522,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)"
5523,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5524,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5525,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5526,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5527,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5528,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5529,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5530,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://adoptopenjdk.net/upstream.html
5531,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
5532,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
5533,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5534,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/11/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
5535,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/11/jre/windows/nanoserver-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
5536,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/11/jre/windows/nanoserver-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
5537,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/11/jre/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5538,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
5539,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
5540,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
5541,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,# backwards compatibility shim
5542,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
5543,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
5544,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
5545,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
5546,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,# amd64
5547,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,# fallback
5548,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
5549,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
5550,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
5551,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
5552,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
5553,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
5554,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
5555,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,# basic smoke test
5556,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5557,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5558,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/windows/windowsservercore-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
5559,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/windows/windowsservercore-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
5560,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
5561,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5562,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5563,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5564,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
5565,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5566,62077dac7745304d836f760c12f23e8986b83bc0,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
5567,62077dac7745304d836f760c12f23e8986b83bc0,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
5568,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
5569,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
5570,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5571,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5572,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5573,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5574,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
5575,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5576,4135ad55c2577bd722c575a41211c59669353d54,/8-jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5577,4135ad55c2577bd722c575a41211c59669353d54,/8-jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5578,4135ad55c2577bd722c575a41211c59669353d54,/8-jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
5579,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5580,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5581,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5582,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
5583,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5584,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5585,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
5586,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
5587,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5588,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/Dockerfile,#!/bin/sh'; \
5589,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5590,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
5591,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5592,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5593,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5594,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5595,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5596,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5597,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5598,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5599,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
5600,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5601,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5602,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5603,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5604,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
5605,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5606,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5607,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
5608,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/Dockerfile,# Default to UTF-8 file.encoding
5609,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5610,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/Dockerfile,#!/bin/sh'; \
5611,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5612,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
5613,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5614,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5615,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5616,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5617,79a6e42e299701791f8730f801e0728f82c85ea4,/8/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5618,79a6e42e299701791f8730f801e0728f82c85ea4,/8/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
5619,79a6e42e299701791f8730f801e0728f82c85ea4,/8/jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
5620,79a6e42e299701791f8730f801e0728f82c85ea4,/8/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5621,79a6e42e299701791f8730f801e0728f82c85ea4,/8/jdk/alpine/Dockerfile,#!/bin/sh'; \
5622,79a6e42e299701791f8730f801e0728f82c85ea4,/8/jdk/alpine/Dockerfile,# https://bugs.alpinelinux.org/issues/10126
5623,79a6e42e299701791f8730f801e0728f82c85ea4,/8/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5624,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
5625,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
5626,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
5627,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/Dockerfile,# backwards compatibility shim
5628,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
5629,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
5630,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
5631,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
5632,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
5633,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
5634,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
5635,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/Dockerfile,#!/usr/bin/env bash'; \
5636,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
5637,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/Dockerfile,# basic smoke test
5638,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5639,908ea317c41a63cb4e2d000c362aa86c9bd4c876,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5640,908ea317c41a63cb4e2d000c362aa86c9bd4c876,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
5641,908ea317c41a63cb4e2d000c362aa86c9bd4c876,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
5642,908ea317c41a63cb4e2d000c362aa86c9bd4c876,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5643,908ea317c41a63cb4e2d000c362aa86c9bd4c876,/9-jdk/Dockerfile,#!/bin/sh'; \
5644,908ea317c41a63cb4e2d000c362aa86c9bd4c876,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
5645,1f4de8c3b677e8c74ac400ef8faa05d75df8d4de,/8/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
5646,1f4de8c3b677e8c74ac400ef8faa05d75df8d4de,/8/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
5647,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
5648,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
5649,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
5650,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
5651,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/Dockerfile,# backwards compatibility shim
5652,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
5653,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
5654,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
5655,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
5656,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
5657,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
5658,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
5659,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/Dockerfile,# basic smoke test
5660,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5661,0467df283134a79840c25808093c00f7c94b9a88,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5662,0467df283134a79840c25808093c00f7c94b9a88,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
5663,0467df283134a79840c25808093c00f7c94b9a88,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
5664,0467df283134a79840c25808093c00f7c94b9a88,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5665,0467df283134a79840c25808093c00f7c94b9a88,/8-jdk/Dockerfile,#!/bin/sh'; \
5666,0467df283134a79840c25808093c00f7c94b9a88,/8-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5667,0467df283134a79840c25808093c00f7c94b9a88,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
5668,0467df283134a79840c25808093c00f7c94b9a88,/8-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5669,0467df283134a79840c25808093c00f7c94b9a88,/8-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5670,0467df283134a79840c25808093c00f7c94b9a88,/8-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5671,0467df283134a79840c25808093c00f7c94b9a88,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
5672,0467df283134a79840c25808093c00f7c94b9a88,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
5673,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
5674,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
5675,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5676,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5677,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5678,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5679,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
5680,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5681,680a4e3cb3f9f3c69ad58958d35975ae083e91c1,/openjdk-9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
5682,680a4e3cb3f9f3c69ad58958d35975ae083e91c1,/openjdk-9-jdk/Dockerfile,# Default to UTF-8 file.encoding
5683,680a4e3cb3f9f3c69ad58958d35975ae083e91c1,/openjdk-9-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
5684,680a4e3cb3f9f3c69ad58958d35975ae083e91c1,/openjdk-9-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
5685,680a4e3cb3f9f3c69ad58958d35975ae083e91c1,/openjdk-9-jdk/Dockerfile,"# see https://bugs.debian.org/793210
# and https://github.com/docker-library/java/issues/46#issuecomment-119026586"
5686,680a4e3cb3f9f3c69ad58958d35975ae083e91c1,/openjdk-9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
5687,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
5688,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
5689,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5690,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
5691,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
5692,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
5693,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
5694,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
5695,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/oracle/Dockerfile,# basic smoke test
5696,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
5697,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/7-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5698,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/7-jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
5699,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/7-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
5700,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/7-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5701,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/7-jre/alpine/Dockerfile,#!/bin/sh'; \
5702,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/7-jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5703,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5704,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
5705,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
5706,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5707,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/slim/Dockerfile,#!/bin/sh'; \
5708,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5709,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
5710,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5711,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5712,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5713,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5714,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5715,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
5716,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
5717,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5718,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/Dockerfile,#!/bin/sh'; \
5719,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5720,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
5721,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
5722,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)"
5723,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5724,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5725,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5726,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5727,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5728,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5729,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
5730,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5731,6294b7d4b299639ec519dfd92782632f498eb1d2,/8-jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5732,6294b7d4b299639ec519dfd92782632f498eb1d2,/8-jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5733,6294b7d4b299639ec519dfd92782632f498eb1d2,/8-jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5734,6294b7d4b299639ec519dfd92782632f498eb1d2,/8-jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
5735,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/alpine3.12/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
5736,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/alpine3.12/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
5737,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/alpine3.12/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
5738,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/alpine3.12/Dockerfile,# amd64
5739,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/alpine3.12/Dockerfile,# fallback
5740,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/alpine3.12/Dockerfile,"# see ""java-cacerts"" package installed above (which maintains ""/etc/ssl/certs/java/cacerts"" for us)"
5741,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/alpine3.12/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
5742,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/alpine3.12/Dockerfile,# basic smoke test
5743,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/alpine3.12/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5744,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5745,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5746,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
5747,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5748,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5749,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/windows/windowsservercore-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
5750,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/windows/windowsservercore-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
5751,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
5752,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
5753,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
5754,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/oracle/Dockerfile,# http://jdk.java.net/
5755,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
5756,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
5757,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/oracle/Dockerfile,# basic smoke test
5758,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
5759,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5760,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5761,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5762,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
5763,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5764,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5765,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
5766,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
5767,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5768,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/slim/Dockerfile,#!/bin/sh'; \
5769,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5770,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
5771,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5772,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5773,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5774,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5775,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5776,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5777,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5778,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5779,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# https://jdk.java.net/
5780,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5781,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
5782,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
5783,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/slim/Dockerfile,# backwards compatibility shim
5784,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
5785,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/slim/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
5786,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
5787,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
5788,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
5789,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
5790,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
5791,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
5792,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
5793,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
5794,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/slim/Dockerfile,# basic smoke test
5795,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5796,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
5797,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
5798,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/slim-buster/Dockerfile,# backwards compatibility shim
5799,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
5800,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/slim-buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
5801,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
5802,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/slim-buster/Dockerfile,# arm64v8
5803,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/slim-buster/Dockerfile,# amd64
5804,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/slim-buster/Dockerfile,# fallback
5805,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
5806,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
5807,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
5808,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
5809,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
5810,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/slim-buster/Dockerfile,# basic smoke test
5811,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5812,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
5813,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
5814,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux7/Dockerfile,# Default to UTF-8 file.encoding
5815,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
5816,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
5817,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux7/Dockerfile,# arm64v8
5818,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux7/Dockerfile,# amd64
5819,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux7/Dockerfile,# fallback
5820,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux7/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
5821,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
5822,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
5823,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux7/Dockerfile,# basic smoke test
5824,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5825,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
5826,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/slim/Dockerfile,# backwards compatibility shim
5827,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
5828,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
5829,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
5830,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
5831,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
5832,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
5833,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/slim/Dockerfile,# basic smoke test
5834,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5835,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5836,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5837,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5838,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
5839,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5840,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5841,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
5842,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
5843,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5844,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/slim/Dockerfile,#!/bin/sh'; \
5845,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5846,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
5847,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5848,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5849,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5850,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5851,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5852,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5853,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5854,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
5855,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5856,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5857,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
5858,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
5859,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5860,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/Dockerfile,#!/bin/sh'; \
5861,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5862,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
5863,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5864,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5865,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5866,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5867,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5868,4427d56d00bbd05b6c7e0f5ce7a3a7a01b6d4177,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5869,4427d56d00bbd05b6c7e0f5ce7a3a7a01b6d4177,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
5870,4427d56d00bbd05b6c7e0f5ce7a3a7a01b6d4177,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
5871,4427d56d00bbd05b6c7e0f5ce7a3a7a01b6d4177,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5872,4427d56d00bbd05b6c7e0f5ce7a3a7a01b6d4177,/9-jre/Dockerfile,#!/bin/sh'; \
5873,4427d56d00bbd05b6c7e0f5ce7a3a7a01b6d4177,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
5874,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5875,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5876,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5877,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
5878,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5879,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
5880,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
5881,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
5882,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
5883,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/Dockerfile,# backwards compatibility shim
5884,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
5885,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
5886,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
5887,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
5888,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
5889,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
5890,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
5891,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/Dockerfile,# basic smoke test
5892,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5893,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5894,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
5895,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
5896,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5897,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/Dockerfile,#!/bin/sh'; \
5898,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5899,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
5900,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5901,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5902,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5903,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5904,d7f632dcc518cf71752e95387d05cbb7f9156e1d,/openjdk-9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5905,d7f632dcc518cf71752e95387d05cbb7f9156e1d,/openjdk-9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
5906,d7f632dcc518cf71752e95387d05cbb7f9156e1d,/openjdk-9-jdk/Dockerfile,# Default to UTF-8 file.encoding
5907,d7f632dcc518cf71752e95387d05cbb7f9156e1d,/openjdk-9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5908,d7f632dcc518cf71752e95387d05cbb7f9156e1d,/openjdk-9-jdk/Dockerfile,#!/bin/bash'; \
5909,d7f632dcc518cf71752e95387d05cbb7f9156e1d,/openjdk-9-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
5910,d7f632dcc518cf71752e95387d05cbb7f9156e1d,/openjdk-9-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
5911,d7f632dcc518cf71752e95387d05cbb7f9156e1d,/openjdk-9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
5912,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5913,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5914,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5915,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
5916,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5917,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5918,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
5919,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
5920,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5921,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/Dockerfile,#!/bin/sh'; \
5922,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5923,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
5924,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5925,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5926,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5927,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5928,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5929,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5930,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5931,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
5932,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5933,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5934,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5935,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5936,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
5937,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5938,238cc35696423794b1951fc63d4cc9ffb8ca9685,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5939,238cc35696423794b1951fc63d4cc9ffb8ca9685,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
5940,238cc35696423794b1951fc63d4cc9ffb8ca9685,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
5941,238cc35696423794b1951fc63d4cc9ffb8ca9685,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5942,238cc35696423794b1951fc63d4cc9ffb8ca9685,/8-jre/alpine/Dockerfile,#!/bin/sh'; \
5943,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5944,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
5945,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
5946,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5947,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/slim/Dockerfile,#!/bin/sh'; \
5948,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5949,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
5950,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5951,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5952,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5953,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5954,1ffa4d8285908a0524d4031315781c95025654b7,/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
5955,1ffa4d8285908a0524d4031315781c95025654b7,/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
5956,58ba04f37a289057ac53b4376773b03227dceb77,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5957,58ba04f37a289057ac53b4376773b03227dceb77,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5958,58ba04f37a289057ac53b4376773b03227dceb77,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
5959,58ba04f37a289057ac53b4376773b03227dceb77,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5960,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
5961,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/nanoserver-1809/Dockerfile,# https://jdk.java.net/
5962,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5963,4365c863956250d758341b86035862b111269ed9,/10-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5964,4365c863956250d758341b86035862b111269ed9,/10-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
5965,4365c863956250d758341b86035862b111269ed9,/10-jre/Dockerfile,# Default to UTF-8 file.encoding
5966,4365c863956250d758341b86035862b111269ed9,/10-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5967,4365c863956250d758341b86035862b111269ed9,/10-jre/Dockerfile,#!/bin/sh'; \
5968,4365c863956250d758341b86035862b111269ed9,/10-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5969,4365c863956250d758341b86035862b111269ed9,/10-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
5970,4365c863956250d758341b86035862b111269ed9,/10-jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
5971,4365c863956250d758341b86035862b111269ed9,/10-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5972,4365c863956250d758341b86035862b111269ed9,/10-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5973,4365c863956250d758341b86035862b111269ed9,/10-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5974,4365c863956250d758341b86035862b111269ed9,/10-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5975,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5976,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
5977,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
5978,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5979,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/slim/Dockerfile,#!/bin/sh'; \
5980,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5981,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
5982,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5983,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5984,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5985,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5986,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5987,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5988,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5989,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5990,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# https://jdk.java.net/
5991,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5992,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5993,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5994,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5995,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
5996,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5997,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
5998,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
5999,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
6000,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
6001,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
6002,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6003,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/oracle/Dockerfile,# basic smoke test
6004,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
6005,e2f1ab45666ee26160609c4b32517488d52d1428,/openjdk-9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
6006,e2f1ab45666ee26160609c4b32517488d52d1428,/openjdk-9-jre/Dockerfile,# Default to UTF-8 file.encoding
6007,e2f1ab45666ee26160609c4b32517488d52d1428,/openjdk-9-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
6008,e2f1ab45666ee26160609c4b32517488d52d1428,/openjdk-9-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
6009,e2f1ab45666ee26160609c4b32517488d52d1428,/openjdk-9-jre/Dockerfile,"# see https://bugs.debian.org/793210
# and https://github.com/docker-library/java/issues/46#issuecomment-119026586"
6010,e2f1ab45666ee26160609c4b32517488d52d1428,/openjdk-9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
6011,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6012,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6013,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6014,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
6015,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6016,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6017,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6018,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6019,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
6020,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6021,0467df283134a79840c25808093c00f7c94b9a88,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6022,0467df283134a79840c25808093c00f7c94b9a88,/7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
6023,0467df283134a79840c25808093c00f7c94b9a88,/7-jdk/Dockerfile,# Default to UTF-8 file.encoding
6024,0467df283134a79840c25808093c00f7c94b9a88,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6025,0467df283134a79840c25808093c00f7c94b9a88,/7-jdk/Dockerfile,#!/bin/sh'; \
6026,0467df283134a79840c25808093c00f7c94b9a88,/7-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
6027,0467df283134a79840c25808093c00f7c94b9a88,/7-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
6028,0467df283134a79840c25808093c00f7c94b9a88,/7-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
6029,0467df283134a79840c25808093c00f7c94b9a88,/7-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
6030,0467df283134a79840c25808093c00f7c94b9a88,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
6031,1c98a9032d1a19122074c4009326eade264903b7,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6032,1c98a9032d1a19122074c4009326eade264903b7,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
6033,1c98a9032d1a19122074c4009326eade264903b7,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
6034,1c98a9032d1a19122074c4009326eade264903b7,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6035,1c98a9032d1a19122074c4009326eade264903b7,/9-jdk/Dockerfile,#!/bin/sh'; \
6036,1c98a9032d1a19122074c4009326eade264903b7,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
6037,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6038,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6039,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6040,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
6041,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6042,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
6043,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
6044,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
6045,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
6046,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
6047,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6048,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/oracle/Dockerfile,# basic smoke test
6049,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
6050,f71d77ba3fe01cbfc625e38c1841531870f0538c,/openjdk-7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6051,f71d77ba3fe01cbfc625e38c1841531870f0538c,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
6052,f71d77ba3fe01cbfc625e38c1841531870f0538c,/openjdk-7-jdk/Dockerfile,# Default to UTF-8 file.encoding
6053,f71d77ba3fe01cbfc625e38c1841531870f0538c,/openjdk-7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6054,f71d77ba3fe01cbfc625e38c1841531870f0538c,/openjdk-7-jdk/Dockerfile,#!/bin/bash'; \
6055,f71d77ba3fe01cbfc625e38c1841531870f0538c,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
6056,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
6057,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
6058,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6059,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
6060,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
6061,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
6062,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,# Default to UTF-8 file.encoding
6063,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,# backwards compatibility shim
6064,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6065,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
6066,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
6067,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,# arm64v8
6068,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,# amd64
6069,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,# fallback
6070,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
6071,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,#!/usr/bin/env bash'; \
6072,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
6073,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
6074,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6075,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,# basic smoke test
6076,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6077,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
6078,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
6079,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
6080,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
6081,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,# backwards compatibility shim
6082,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6083,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
6084,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
6085,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,# arm64v8
6086,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,# amd64
6087,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,# fallback
6088,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
6089,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
6090,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
6091,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
6092,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6093,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,# basic smoke test
6094,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6095,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
6096,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
6097,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/slim/Dockerfile,# backwards compatibility shim
6098,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6099,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
6100,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
6101,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
6102,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
6103,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
6104,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6105,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/slim/Dockerfile,# basic smoke test
6106,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6107,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
6108,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6109,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6110,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6111,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
6112,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6113,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
6114,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
6115,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
6116,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6117,c0b708fc06d1b52d10eee7320067ccd0b5ad06d9,/15/jdk/alpine/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
6118,c0b708fc06d1b52d10eee7320067ccd0b5ad06d9,/15/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
6119,c0b708fc06d1b52d10eee7320067ccd0b5ad06d9,/15/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6120,c0b708fc06d1b52d10eee7320067ccd0b5ad06d9,/15/jdk/alpine/Dockerfile,"# see ""java-cacerts"" package installed above (which maintains ""/etc/ssl/certs/java/cacerts"" for us)"
6121,c0b708fc06d1b52d10eee7320067ccd0b5ad06d9,/15/jdk/alpine/Dockerfile,# basic smoke test
6122,c0b708fc06d1b52d10eee7320067ccd0b5ad06d9,/15/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
6123,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
6124,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
6125,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
6126,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
6127,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/Dockerfile,# backwards compatibility shim
6128,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6129,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
6130,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
6131,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
6132,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
6133,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
6134,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6135,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/Dockerfile,# basic smoke test
6136,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6137,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
6138,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
6139,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
6140,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6141,3f6ab87ebe4bdea4470d0ff1e26f61dadd646c64,/11/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
6142,3f6ab87ebe4bdea4470d0ff1e26f61dadd646c64,/11/jdk/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
6143,3f6ab87ebe4bdea4470d0ff1e26f61dadd646c64,/11/jdk/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
6144,3f6ab87ebe4bdea4470d0ff1e26f61dadd646c64,/11/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6145,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6146,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6147,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6148,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
6149,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6150,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
6151,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
6152,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/slim/Dockerfile,# backwards compatibility shim
6153,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6154,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/slim/Dockerfile,# https://jdk.java.net/
6155,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
6156,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
6157,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
6158,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
6159,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6160,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/slim/Dockerfile,# basic smoke test
6161,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6162,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
6163,faa860854c1ed83943047f669424c9c36aae4dd5,/8/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6164,faa860854c1ed83943047f669424c9c36aae4dd5,/8/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
6165,faa860854c1ed83943047f669424c9c36aae4dd5,/8/jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
6166,faa860854c1ed83943047f669424c9c36aae4dd5,/8/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6167,faa860854c1ed83943047f669424c9c36aae4dd5,/8/jre/alpine/Dockerfile,#!/bin/sh'; \
6168,faa860854c1ed83943047f669424c9c36aae4dd5,/8/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
6169,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6170,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6171,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6172,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# https://jdk.java.net/
6173,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6174,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6175,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6176,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6177,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# https://jdk.java.net/
6178,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6179,5527e8e319a1451b9e302af846b9939da36d8992,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6180,5527e8e319a1451b9e302af846b9939da36d8992,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6181,5527e8e319a1451b9e302af846b9939da36d8992,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
6182,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
6183,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
6184,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/slim/Dockerfile,# backwards compatibility shim
6185,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6186,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/slim/Dockerfile,# https://jdk.java.net/
6187,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
6188,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
6189,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
6190,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
6191,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6192,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/slim/Dockerfile,# basic smoke test
6193,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6194,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
6195,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
6196,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/nanoserver-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
6197,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/nanoserver-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
6198,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6199,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
6200,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
6201,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/Dockerfile,# backwards compatibility shim
6202,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6203,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
6204,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
6205,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
6206,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
6207,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
6208,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/Dockerfile,# basic smoke test
6209,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6210,a2b245fc1ab64df2de145b87e631b5e89ca67388,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6211,a2b245fc1ab64df2de145b87e631b5e89ca67388,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
6212,a2b245fc1ab64df2de145b87e631b5e89ca67388,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
6213,a2b245fc1ab64df2de145b87e631b5e89ca67388,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6214,a2b245fc1ab64df2de145b87e631b5e89ca67388,/8-jre/alpine/Dockerfile,#!/bin/sh'; \
6215,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
6216,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
6217,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/slim-buster/Dockerfile,# backwards compatibility shim
6218,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6219,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/slim-buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
6220,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
6221,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/slim-buster/Dockerfile,# arm64v8
6222,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/slim-buster/Dockerfile,# amd64
6223,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/slim-buster/Dockerfile,# fallback
6224,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
6225,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
6226,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
6227,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
6228,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6229,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/slim-buster/Dockerfile,# basic smoke test
6230,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6231,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6232,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6233,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6234,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
6235,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6236,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6237,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
6238,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
6239,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6240,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
6241,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
6242,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
6243,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
6244,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
6245,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
6246,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6247,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
6248,e1981fe71526d3c568cdad28fe7607a5d258fcd3,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6249,e1981fe71526d3c568cdad28fe7607a5d258fcd3,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
6250,e1981fe71526d3c568cdad28fe7607a5d258fcd3,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
6251,e1981fe71526d3c568cdad28fe7607a5d258fcd3,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6252,e1981fe71526d3c568cdad28fe7607a5d258fcd3,/9-jdk/Dockerfile,#!/bin/sh'; \
6253,e1981fe71526d3c568cdad28fe7607a5d258fcd3,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
6254,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
6255,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
6256,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,# Default to UTF-8 file.encoding
6257,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,# backwards compatibility shim
6258,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6259,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
6260,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
6261,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
6262,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,# arm64v8
6263,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,# amd64
6264,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,# fallback
6265,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
6266,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
6267,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
6268,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
6269,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,#!/usr/bin/env bash'; \
6270,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
6271,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
6272,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,# basic smoke test
6273,d617d7e4b951735c512f3d5ac7672f7394115c91,/8/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6274,d617d7e4b951735c512f3d5ac7672f7394115c91,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6275,d617d7e4b951735c512f3d5ac7672f7394115c91,/8/jdk/windows/windowsservercore-1803/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
6276,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6277,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6278,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6279,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
6280,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6281,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6282,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
6283,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
6284,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6285,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
6286,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
6287,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
6288,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-reccomends:
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
6289,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
6290,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
6291,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
6292,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6293,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
6294,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6295,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
6296,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
6297,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6298,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/slim/Dockerfile,#!/bin/sh'; \
6299,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
6300,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
6301,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
6302,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
6303,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
6304,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
6305,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
6306,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
6307,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
6308,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
6309,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,# Default to UTF-8 file.encoding
6310,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,# backwards compatibility shim
6311,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6312,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
6313,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
6314,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,# arm64v8
6315,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,# amd64
6316,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,# fallback
6317,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
6318,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,#!/usr/bin/env bash'; \
6319,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
6320,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
6321,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6322,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,# basic smoke test
6323,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6324,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-6-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6325,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
6326,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-6-jdk/Dockerfile,# Default to UTF-8 file.encoding
6327,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-6-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6328,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-6-jdk/Dockerfile,#!/bin/bash'; \
6329,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
6330,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
6331,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
6332,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6333,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6334,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6335,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
6336,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
6337,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
6338,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6339,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
6340,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
6341,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6342,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/Dockerfile,#!/bin/sh'; \
6343,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
6344,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
6345,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
6346,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
6347,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
6348,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
6349,f11f75767926eb1e650b448690e15cbacc2d1b9f,/8/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
6350,f11f75767926eb1e650b448690e15cbacc2d1b9f,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
6351,f11f75767926eb1e650b448690e15cbacc2d1b9f,/8/jdk/slim/Dockerfile,# backwards compatibility shim
6352,f11f75767926eb1e650b448690e15cbacc2d1b9f,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6353,f11f75767926eb1e650b448690e15cbacc2d1b9f,/8/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
6354,f11f75767926eb1e650b448690e15cbacc2d1b9f,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
6355,f11f75767926eb1e650b448690e15cbacc2d1b9f,/8/jdk/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
6356,f11f75767926eb1e650b448690e15cbacc2d1b9f,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
6357,f11f75767926eb1e650b448690e15cbacc2d1b9f,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
6358,f11f75767926eb1e650b448690e15cbacc2d1b9f,/8/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
6359,f11f75767926eb1e650b448690e15cbacc2d1b9f,/8/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
6360,f11f75767926eb1e650b448690e15cbacc2d1b9f,/8/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
6361,f11f75767926eb1e650b448690e15cbacc2d1b9f,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
6362,f11f75767926eb1e650b448690e15cbacc2d1b9f,/8/jdk/slim/Dockerfile,# basic smoke test
6363,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/8/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6364,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6365,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/8/jdk/windows/windowsservercore-1809/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
6366,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6367,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
6368,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
6369,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6370,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/slim/Dockerfile,#!/bin/sh'; \
6371,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
6372,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
6373,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
6374,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
6375,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
6376,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
6377,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6378,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
6379,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-9-jre/Dockerfile,# Default to UTF-8 file.encoding
6380,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-9-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
6381,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-9-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
6382,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
6383,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
6384,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
6385,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/oracle/Dockerfile,# https://jdk.java.net/
6386,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
6387,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6388,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/oracle/Dockerfile,# basic smoke test
6389,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
6390,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
6391,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
6392,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/slim/Dockerfile,# backwards compatibility shim
6393,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6394,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/slim/Dockerfile,# https://jdk.java.net/
6395,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
6396,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
6397,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
6398,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
6399,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6400,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/slim/Dockerfile,# basic smoke test
6401,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6402,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
6403,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6404,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6405,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6406,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
6407,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6408,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6409,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
6410,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/Dockerfile,# Default to UTF-8 file.encoding
6411,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6412,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/Dockerfile,#!/bin/sh'; \
6413,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
6414,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
6415,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
6416,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
6417,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
6418,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
6419,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6420,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
6421,8f86e66f070a110b2648004cc732683fb5224ed3,/10/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6422,8f86e66f070a110b2648004cc732683fb5224ed3,/10/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
6423,8f86e66f070a110b2648004cc732683fb5224ed3,/10/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
6424,8f86e66f070a110b2648004cc732683fb5224ed3,/10/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6425,8f86e66f070a110b2648004cc732683fb5224ed3,/10/jdk/slim/Dockerfile,#!/bin/sh'; \
6426,8f86e66f070a110b2648004cc732683fb5224ed3,/10/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
6427,8f86e66f070a110b2648004cc732683fb5224ed3,/10/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
6428,8f86e66f070a110b2648004cc732683fb5224ed3,/10/jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
6429,8f86e66f070a110b2648004cc732683fb5224ed3,/10/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
6430,8f86e66f070a110b2648004cc732683fb5224ed3,/10/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
6431,8f86e66f070a110b2648004cc732683fb5224ed3,/10/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
6432,8f86e66f070a110b2648004cc732683fb5224ed3,/10/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6433,8f86e66f070a110b2648004cc732683fb5224ed3,/10/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
6434,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
6435,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
6436,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
6437,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
6438,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/Dockerfile,# backwards compatibility shim
6439,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6440,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/Dockerfile,# https://jdk.java.net/
6441,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
6442,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
6443,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
6444,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
6445,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6446,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/Dockerfile,# basic smoke test
6447,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6448,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6449,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6450,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6451,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
6452,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6453,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6454,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
6455,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
6456,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6457,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/slim/Dockerfile,#!/bin/sh'; \
6458,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
6459,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
6460,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
6461,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
6462,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
6463,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
6464,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
6465,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
6466,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
6467,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
6468,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,# backwards compatibility shim
6469,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6470,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
6471,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
6472,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,# arm64v8
6473,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,# amd64
6474,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,# fallback
6475,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
6476,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
6477,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
6478,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
6479,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6480,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,# basic smoke test
6481,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6482,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6483,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6484,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6485,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
6486,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6487,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
6488,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
6489,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/slim/Dockerfile,# backwards compatibility shim
6490,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6491,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
6492,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
6493,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
6494,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
6495,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
6496,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
6497,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
6498,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
6499,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
6500,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/slim/Dockerfile,# basic smoke test
6501,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6502,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6503,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6504,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-1709/Dockerfile,# https://jdk.java.net/
6505,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6506,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6507,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6508,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6509,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
6510,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6511,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
6512,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
6513,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
6514,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
6515,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,# backwards compatibility shim
6516,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6517,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
6518,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
6519,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,# arm64v8
6520,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,# amd64
6521,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,# fallback
6522,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
6523,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
6524,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
6525,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
6526,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6527,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,# basic smoke test
6528,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6529,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
6530,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
6531,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jre/Dockerfile,# backwards compatibility shim
6532,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6533,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jre/Dockerfile,# https://adoptopenjdk.net/upstream.html
6534,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
6535,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jre/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
6536,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
6537,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jre/Dockerfile,# basic smoke test
6538,ac78a119a294925b60c8fe4e64c79abab1dd8dbf,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6539,ac78a119a294925b60c8fe4e64c79abab1dd8dbf,/7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
6540,ac78a119a294925b60c8fe4e64c79abab1dd8dbf,/7-jdk/Dockerfile,# Default to UTF-8 file.encoding
6541,ac78a119a294925b60c8fe4e64c79abab1dd8dbf,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6542,ac78a119a294925b60c8fe4e64c79abab1dd8dbf,/7-jdk/Dockerfile,#!/bin/sh'; \
6543,ac78a119a294925b60c8fe4e64c79abab1dd8dbf,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
6544,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
6545,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
6546,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
6547,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
6548,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/Dockerfile,# backwards compatibility shim
6549,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6550,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
6551,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
6552,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
6553,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
6554,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
6555,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6556,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/Dockerfile,# basic smoke test
6557,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6558,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6559,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6560,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6561,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
6562,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6563,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6564,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
6565,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
6566,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6567,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jdk/Dockerfile,#!/bin/sh'; \
6568,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
6569,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
6570,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
6571,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
6572,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
6573,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6574,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6575,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6576,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
6577,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6578,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6579,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6580,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6581,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-1809/Dockerfile,# http://jdk.java.net/
6582,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6583,fbf3a8f396844832bd11a89d6299066a4669383d,/8-jdk/windows/nanoserver/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6584,fbf3a8f396844832bd11a89d6299066a4669383d,/8-jdk/windows/nanoserver/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6585,fbf3a8f396844832bd11a89d6299066a4669383d,/8-jdk/windows/nanoserver/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
6586,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
6587,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
6588,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/Dockerfile,# backwards compatibility shim
6589,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6590,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
6591,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
6592,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
6593,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
6594,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
6595,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/Dockerfile,# basic smoke test
6596,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
6597,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
6598,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/slim/Dockerfile,# backwards compatibility shim
6599,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6600,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
6601,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
6602,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/slim/Dockerfile,# arm64v8
6603,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/slim/Dockerfile,# amd64
6604,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/slim/Dockerfile,# fallback
6605,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
6606,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
6607,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
6608,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
6609,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6610,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/slim/Dockerfile,# basic smoke test
6611,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6612,62077dac7745304d836f760c12f23e8986b83bc0,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
6613,62077dac7745304d836f760c12f23e8986b83bc0,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
6614,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6615,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
6616,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
6617,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6618,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/Dockerfile,#!/bin/sh'; \
6619,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
6620,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
6621,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
6622,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
6623,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
6624,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6625,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
6626,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6627,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
6628,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
6629,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6630,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/slim/Dockerfile,#!/bin/sh'; \
6631,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
6632,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
6633,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
6634,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
6635,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
6636,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
6637,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6638,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6639,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6640,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
6641,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6642,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
6643,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
6644,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/slim-buster/Dockerfile,# backwards compatibility shim
6645,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6646,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/slim-buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
6647,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
6648,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/slim-buster/Dockerfile,# arm64v8
6649,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/slim-buster/Dockerfile,# amd64
6650,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/slim-buster/Dockerfile,# fallback
6651,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
6652,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
6653,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
6654,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
6655,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6656,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/slim-buster/Dockerfile,# basic smoke test
6657,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6658,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
6659,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
6660,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jdk/Dockerfile,# backwards compatibility shim
6661,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6662,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
6663,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
6664,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jdk/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
6665,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
6666,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jdk/Dockerfile,# basic smoke test
6667,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6668,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6669,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6670,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
6671,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6672,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6673,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6674,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6675,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
6676,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6677,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
6678,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
6679,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
6680,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
6681,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
6682,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/oracle/Dockerfile,# http://jdk.java.net/
6683,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
6684,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
6685,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/oracle/Dockerfile,# basic smoke test
6686,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
6687,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
6688,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
6689,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/slim/Dockerfile,# backwards compatibility shim
6690,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6691,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
6692,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
6693,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/slim/Dockerfile,# arm64v8
6694,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/slim/Dockerfile,# amd64
6695,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/slim/Dockerfile,# fallback
6696,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
6697,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
6698,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
6699,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
6700,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6701,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/slim/Dockerfile,# basic smoke test
6702,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6703,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6704,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/8-jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
6705,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
6706,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6707,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/8-jre/alpine/Dockerfile,#!/bin/sh'; \
6708,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/8-jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
6709,4e8fbef2ba9c8280d8c5243736d8a20ee784acc0,/14/jdk/alpine/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
6710,4e8fbef2ba9c8280d8c5243736d8a20ee784acc0,/14/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
6711,4e8fbef2ba9c8280d8c5243736d8a20ee784acc0,/14/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6712,4e8fbef2ba9c8280d8c5243736d8a20ee784acc0,/14/jdk/alpine/Dockerfile,# basic smoke test
6713,4e8fbef2ba9c8280d8c5243736d8a20ee784acc0,/14/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
6714,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6715,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
6716,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/Dockerfile,# Default to UTF-8 file.encoding
6717,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6718,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/Dockerfile,#!/bin/sh'; \
6719,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
6720,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
6721,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
6722,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
6723,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
6724,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
6725,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/windows/windowsservercore/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6726,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/windows/windowsservercore/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6727,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/windows/windowsservercore/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
6728,8502712f6e80904b766505805c894c2008afa700,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6729,8502712f6e80904b766505805c894c2008afa700,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6730,8502712f6e80904b766505805c894c2008afa700,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
6731,8502712f6e80904b766505805c894c2008afa700,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6732,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
6733,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
6734,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
6735,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
6736,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,# backwards compatibility shim
6737,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6738,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
6739,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
6740,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,# arm64v8
6741,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,# amd64
6742,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,# fallback
6743,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
6744,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
6745,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
6746,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
6747,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6748,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,# basic smoke test
6749,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6750,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6751,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6752,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
6753,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6754,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6755,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
6756,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
6757,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6758,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/Dockerfile,#!/bin/sh'; \
6759,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
6760,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
6761,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-reccomends:
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
6762,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
6763,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
6764,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
6765,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6766,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
6767,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6768,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
6769,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jre/Dockerfile,# Default to UTF-8 file.encoding
6770,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6771,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jre/Dockerfile,#!/bin/sh'; \
6772,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
6773,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
6774,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
6775,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
6776,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
6777,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6778,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6779,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6780,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
6781,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6782,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6783,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6784,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6785,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
6786,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6787,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
6788,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
6789,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
6790,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/Dockerfile,# backwards compatibility shim
6791,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6792,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/Dockerfile,# https://adoptopenjdk.net/upstream.html
6793,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
6794,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
6795,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
6796,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
6797,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
6798,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/Dockerfile,#!/usr/bin/env bash'; \
6799,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
6800,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
6801,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/Dockerfile,# basic smoke test
6802,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6803,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6804,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6805,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
6806,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6807,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6808,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
6809,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
6810,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6811,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/9-jre/Dockerfile,#!/bin/sh'; \
6812,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
6813,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/windows/windowsservercore/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6814,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/windows/windowsservercore/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6815,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/windows/windowsservercore/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
6816,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/windows/windowsservercore/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6817,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6818,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6819,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6820,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
6821,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6822,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6823,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6824,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6825,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
6826,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6827,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6828,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
6829,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
6830,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6831,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/Dockerfile,#!/bin/sh'; \
6832,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
6833,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
6834,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (a case of https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
6835,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
6836,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
6837,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
6838,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
6839,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6840,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
6841,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
6842,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6843,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/Dockerfile,#!/bin/sh'; \
6844,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
6845,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
6846,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
6847,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
6848,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
6849,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6850,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
6851,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6852,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
6853,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
6854,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6855,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/Dockerfile,#!/bin/sh'; \
6856,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
6857,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
6858,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
6859,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
6860,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
6861,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
6862,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
6863,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
6864,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
6865,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
6866,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6867,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/oracle/Dockerfile,# basic smoke test
6868,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
6869,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
6870,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
6871,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/slim-buster/Dockerfile,# backwards compatibility shim
6872,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6873,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/slim-buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
6874,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
6875,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
6876,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/slim-buster/Dockerfile,# amd64
6877,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/slim-buster/Dockerfile,# fallback
6878,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/slim-buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
6879,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/slim-buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
6880,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/slim-buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
6881,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
6882,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
6883,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
6884,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
6885,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/slim-buster/Dockerfile,# basic smoke test
6886,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6887,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
6888,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/Dockerfile,# Default to UTF-8 file.encoding
6889,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6890,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/Dockerfile,#!/bin/sh'; \
6891,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
6892,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
6893,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
6894,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
6895,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
6896,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
6897,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6898,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
6899,02a49915095f254cbf321292ab7a021529686448,/11-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6900,02a49915095f254cbf321292ab7a021529686448,/11-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
6901,02a49915095f254cbf321292ab7a021529686448,/11-jdk/Dockerfile,# Default to UTF-8 file.encoding
6902,02a49915095f254cbf321292ab7a021529686448,/11-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6903,02a49915095f254cbf321292ab7a021529686448,/11-jdk/Dockerfile,#!/bin/sh'; \
6904,02a49915095f254cbf321292ab7a021529686448,/11-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
6905,02a49915095f254cbf321292ab7a021529686448,/11-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
6906,02a49915095f254cbf321292ab7a021529686448,/11-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
6907,02a49915095f254cbf321292ab7a021529686448,/11-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
6908,02a49915095f254cbf321292ab7a021529686448,/11-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
6909,02a49915095f254cbf321292ab7a021529686448,/11-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6910,02a49915095f254cbf321292ab7a021529686448,/11-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
6911,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6912,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6913,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6914,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
6915,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6916,554ff38a160f896ddd7f0fdca1cd34817e253a56,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
6917,554ff38a160f896ddd7f0fdca1cd34817e253a56,/12/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
6918,554ff38a160f896ddd7f0fdca1cd34817e253a56,/12/jdk/oracle/Dockerfile,# https://jdk.java.net/
6919,554ff38a160f896ddd7f0fdca1cd34817e253a56,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
6920,554ff38a160f896ddd7f0fdca1cd34817e253a56,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6921,554ff38a160f896ddd7f0fdca1cd34817e253a56,/12/jdk/oracle/Dockerfile,# basic smoke test
6922,554ff38a160f896ddd7f0fdca1cd34817e253a56,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
6923,4c5beb8bdb21c746bef683f18bdeddee157f61fd,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
6924,4c5beb8bdb21c746bef683f18bdeddee157f61fd,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
6925,9bf9b29f73334c172d151d9a615d7cd52b74defe,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6926,9bf9b29f73334c172d151d9a615d7cd52b74defe,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
6927,9bf9b29f73334c172d151d9a615d7cd52b74defe,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
6928,9bf9b29f73334c172d151d9a615d7cd52b74defe,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6929,9bf9b29f73334c172d151d9a615d7cd52b74defe,/9-jdk/Dockerfile,#!/bin/sh'; \
6930,9bf9b29f73334c172d151d9a615d7cd52b74defe,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
6931,65f4567ed9294e7404b3d2d0c806249946e06210,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
6932,65f4567ed9294e7404b3d2d0c806249946e06210,/openjdk-7-jdk/Dockerfile,# Default to UTF-8 file.encoding
6933,65f4567ed9294e7404b3d2d0c806249946e06210,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
6934,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6935,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6936,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6937,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
6938,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6939,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6940,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6941,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
6942,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6943,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6944,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6945,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
6946,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6947,86918ee28d383e7af63f535a2558040dce141099,/8/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6948,86918ee28d383e7af63f535a2558040dce141099,/8/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
6949,86918ee28d383e7af63f535a2558040dce141099,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
6950,86918ee28d383e7af63f535a2558040dce141099,/8/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6951,86918ee28d383e7af63f535a2558040dce141099,/8/jre/slim/Dockerfile,#!/bin/sh'; \
6952,86918ee28d383e7af63f535a2558040dce141099,/8/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
6953,86918ee28d383e7af63f535a2558040dce141099,/8/jre/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
6954,86918ee28d383e7af63f535a2558040dce141099,/8/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
6955,86918ee28d383e7af63f535a2558040dce141099,/8/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
6956,86918ee28d383e7af63f535a2558040dce141099,/8/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
6957,86918ee28d383e7af63f535a2558040dce141099,/8/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
6958,86918ee28d383e7af63f535a2558040dce141099,/8/jre/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
6959,86918ee28d383e7af63f535a2558040dce141099,/8/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
6960,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
6961,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
6962,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/slim-buster/Dockerfile,# backwards compatibility shim
6963,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6964,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/slim-buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
6965,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
6966,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
6967,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/slim-buster/Dockerfile,# amd64
6968,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/slim-buster/Dockerfile,# fallback
6969,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/slim-buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
6970,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/slim-buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
6971,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/slim-buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
6972,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
6973,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
6974,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
6975,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
6976,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/slim-buster/Dockerfile,# basic smoke test
6977,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6978,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6979,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6980,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
6981,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6982,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
6983,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
6984,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
6985,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
6986,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/Dockerfile,# backwards compatibility shim
6987,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6988,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/Dockerfile,# https://jdk.java.net/
6989,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
6990,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
6991,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
6992,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
6993,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6994,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/Dockerfile,# basic smoke test
6995,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6996,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6997,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6998,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
6999,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7000,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7001,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
7002,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
7003,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
7004,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
7005,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/oracle/Dockerfile,# basic smoke test
7006,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
7007,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/7-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7008,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/7-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7009,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/7-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
7010,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/7-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7011,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/7-jre/alpine/Dockerfile,#!/bin/sh'; \
7012,bf06437449e8ae1782905f6c2df744805498874b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7013,bf06437449e8ae1782905f6c2df744805498874b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7014,bf06437449e8ae1782905f6c2df744805498874b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
7015,bf06437449e8ae1782905f6c2df744805498874b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7016,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7017,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
7018,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/oracle/Dockerfile,# http://jdk.java.net/
7019,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
7020,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
7021,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/oracle/Dockerfile,# basic smoke test
7022,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
7023,fe489e584bd248f6ed6b379beed27eda755c5ba9,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7024,fe489e584bd248f6ed6b379beed27eda755c5ba9,/openjdk-8-jdk/Dockerfile,# Default to UTF-8 file.encoding
7025,fe489e584bd248f6ed6b379beed27eda755c5ba9,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
7026,fe489e584bd248f6ed6b379beed27eda755c5ba9,/openjdk-8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
7027,fe489e584bd248f6ed6b379beed27eda755c5ba9,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
7028,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7029,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7030,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7031,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
7032,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7033,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7034,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
7035,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/Dockerfile,# Default to UTF-8 file.encoding
7036,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7037,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/Dockerfile,#!/bin/sh'; \
7038,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
7039,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
7040,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
7041,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
7042,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
7043,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7044,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
7045,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
7046,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
7047,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
7048,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
7049,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7050,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux7/Dockerfile,# Default to UTF-8 file.encoding
7051,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
7052,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
7053,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux7/Dockerfile,# arm64v8
7054,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux7/Dockerfile,# amd64
7055,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux7/Dockerfile,# fallback
7056,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux7/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
7057,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
7058,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
7059,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux7/Dockerfile,# basic smoke test
7060,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
7061,643875b428551d5e2395e91933e9babc73044bc9,/13/jdk/alpine/Dockerfile,# https://jdk.java.net/
7062,643875b428551d5e2395e91933e9babc73044bc9,/13/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
7063,643875b428551d5e2395e91933e9babc73044bc9,/13/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
7064,643875b428551d5e2395e91933e9babc73044bc9,/13/jdk/alpine/Dockerfile,# basic smoke test
7065,643875b428551d5e2395e91933e9babc73044bc9,/13/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
7066,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
7067,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7068,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
7069,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
7070,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
7071,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
7072,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/oracle/Dockerfile,# basic smoke test
7073,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
7074,0584b2804ed12dca7c5e264b5fc55fc07a3ac148,/8-jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7075,0584b2804ed12dca7c5e264b5fc55fc07a3ac148,/8-jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7076,0584b2804ed12dca7c5e264b5fc55fc07a3ac148,/8-jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
7077,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7078,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7079,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7080,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
7081,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7082,823517cdb97911ad335027244a6342e9129a91ad,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7083,823517cdb97911ad335027244a6342e9129a91ad,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7084,823517cdb97911ad335027244a6342e9129a91ad,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
7085,823517cdb97911ad335027244a6342e9129a91ad,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7086,4e39684901490c13eaef7892c44e39043d7c4bed,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7087,4e39684901490c13eaef7892c44e39043d7c4bed,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7088,4e39684901490c13eaef7892c44e39043d7c4bed,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
7089,4e39684901490c13eaef7892c44e39043d7c4bed,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7090,4e39684901490c13eaef7892c44e39043d7c4bed,/8-jdk/alpine/Dockerfile,#!/bin/sh'; \
7091,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/7-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7092,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/7-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7093,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/7-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
7094,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/7-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7095,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/7-jre/alpine/Dockerfile,#!/bin/sh'; \
7096,c6c90f5e09a5dc1a1ccd662de8210342f94c673e,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7097,c6c90f5e09a5dc1a1ccd662de8210342f94c673e,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7098,c6c90f5e09a5dc1a1ccd662de8210342f94c673e,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
7099,c6c90f5e09a5dc1a1ccd662de8210342f94c673e,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7100,c6c90f5e09a5dc1a1ccd662de8210342f94c673e,/8-jdk/alpine/Dockerfile,#!/bin/sh'; \
7101,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7102,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7103,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
7104,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
7105,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
7106,ec1553cccfb87c5f53a38555771fa6d13cebfcba,/8/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7107,ec1553cccfb87c5f53a38555771fa6d13cebfcba,/8/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
7108,ec1553cccfb87c5f53a38555771fa6d13cebfcba,/8/jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
7109,ec1553cccfb87c5f53a38555771fa6d13cebfcba,/8/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7110,ec1553cccfb87c5f53a38555771fa6d13cebfcba,/8/jre/alpine/Dockerfile,#!/bin/sh'; \
7111,ec1553cccfb87c5f53a38555771fa6d13cebfcba,/8/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
7112,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7113,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7114,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7115,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
7116,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7117,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7118,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7119,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7120,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
7121,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7122,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
7123,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7124,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
7125,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
7126,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
7127,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/oracle/Dockerfile,# arm64v8
7128,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/oracle/Dockerfile,# amd64
7129,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/oracle/Dockerfile,# fallback
7130,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
7131,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
7132,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
7133,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/oracle/Dockerfile,# basic smoke test
7134,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
7135,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7136,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7137,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
7138,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7139,d183725a5acda253132f21011fe903f3924e7e12,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7140,d183725a5acda253132f21011fe903f3924e7e12,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7141,d183725a5acda253132f21011fe903f3924e7e12,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
7142,d183725a5acda253132f21011fe903f3924e7e12,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7143,d183725a5acda253132f21011fe903f3924e7e12,/9-jre/Dockerfile,#!/bin/sh'; \
7144,d183725a5acda253132f21011fe903f3924e7e12,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
7145,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7146,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
7147,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/oracle/Dockerfile,# http://jdk.java.net/
7148,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
7149,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
7150,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/oracle/Dockerfile,# basic smoke test
7151,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
7152,43b1402a2b3af1eb182c0c16fec01886c9db9c37,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7153,43b1402a2b3af1eb182c0c16fec01886c9db9c37,/openjdk-8-jre/Dockerfile,# Default to UTF-8 file.encoding
7154,43b1402a2b3af1eb182c0c16fec01886c9db9c37,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
7155,43b1402a2b3af1eb182c0c16fec01886c9db9c37,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
7156,43b1402a2b3af1eb182c0c16fec01886c9db9c37,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
7157,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
7158,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
7159,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/slim/Dockerfile,# backwards compatibility shim
7160,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
7161,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/slim/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
7162,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
7163,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
7164,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
7165,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
7166,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
7167,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
7168,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
7169,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
7170,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/slim/Dockerfile,# basic smoke test
7171,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7172,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7173,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7174,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
7175,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7176,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7177,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7178,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7179,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# https://jdk.java.net/
7180,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7181,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7182,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7183,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7184,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
7185,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7186,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7187,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
7188,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/Dockerfile,# Default to UTF-8 file.encoding
7189,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7190,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/Dockerfile,#!/bin/sh'; \
7191,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
7192,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
7193,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
7194,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
7195,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
7196,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
7197,8f8d04a5f77116be8ebfcaf84e4fcbd1190b95e8,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7198,8f8d04a5f77116be8ebfcaf84e4fcbd1190b95e8,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7199,8f8d04a5f77116be8ebfcaf84e4fcbd1190b95e8,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
7200,8f8d04a5f77116be8ebfcaf84e4fcbd1190b95e8,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7201,8f8d04a5f77116be8ebfcaf84e4fcbd1190b95e8,/8-jre/alpine/Dockerfile,#!/bin/sh'; \
7202,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7203,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7204,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-8-jre/Dockerfile,# Default to UTF-8 file.encoding
7205,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7206,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-8-jre/Dockerfile,#!/bin/bash'; \
7207,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
7208,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
7209,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
7210,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7211,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7212,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7213,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
7214,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
7215,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7216,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
7217,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/oracle/Dockerfile,# http://jdk.java.net/
7218,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
7219,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
7220,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/oracle/Dockerfile,# basic smoke test
7221,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
7222,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7223,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7224,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7225,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
7226,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7227,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7228,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7229,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7230,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
7231,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7232,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7233,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7234,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7235,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
7236,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7237,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7238,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7239,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7240,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
7241,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7242,0b124de91ebd32bcc8977fd2214d36b8fccb615c,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7243,0b124de91ebd32bcc8977fd2214d36b8fccb615c,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
7244,bf06437449e8ae1782905f6c2df744805498874b,/11/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7245,bf06437449e8ae1782905f6c2df744805498874b,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7246,bf06437449e8ae1782905f6c2df744805498874b,/11/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
7247,bf06437449e8ae1782905f6c2df744805498874b,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7248,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7249,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7250,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7251,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
7252,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7253,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
7254,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
7255,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7256,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
7257,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/buster/Dockerfile,# backwards compatibility shim
7258,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
7259,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
7260,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
7261,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/buster/Dockerfile,# amd64
7262,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/buster/Dockerfile,# fallback
7263,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
7264,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
7265,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
7266,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
7267,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
7268,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/buster/Dockerfile,# basic smoke test
7269,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
7270,873fb56728befef8ecaf8436c3a27fd239cba301,/9-jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7271,873fb56728befef8ecaf8436c3a27fd239cba301,/9-jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7272,873fb56728befef8ecaf8436c3a27fd239cba301,/9-jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
7273,873fb56728befef8ecaf8436c3a27fd239cba301,/9-jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7274,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
7275,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7276,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/oraclelinux7/Dockerfile,# Default to UTF-8 file.encoding
7277,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
7278,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
7279,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/oraclelinux7/Dockerfile,# arm64v8
7280,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/oraclelinux7/Dockerfile,# amd64
7281,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/oraclelinux7/Dockerfile,# fallback
7282,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/oraclelinux7/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
7283,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
7284,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
7285,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/oraclelinux7/Dockerfile,# basic smoke test
7286,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
7287,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
7288,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
7289,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/slim/Dockerfile,# backwards compatibility shim
7290,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
7291,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
7292,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
7293,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
7294,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
7295,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
7296,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
7297,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
7298,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
7299,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
7300,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/slim/Dockerfile,# basic smoke test
7301,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7302,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7303,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
7304,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
7305,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
7306,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7307,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7308,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7309,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
7310,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7311,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7312,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7313,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7314,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
7315,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
7316,58ba04f37a289057ac53b4376773b03227dceb77,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7317,58ba04f37a289057ac53b4376773b03227dceb77,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7318,58ba04f37a289057ac53b4376773b03227dceb77,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
7319,58ba04f37a289057ac53b4376773b03227dceb77,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7320,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux8/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
7321,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux8/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7322,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux8/Dockerfile,# Default to UTF-8 file.encoding
7323,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux8/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
7324,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux8/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
7325,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux8/Dockerfile,# arm64v8
7326,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux8/Dockerfile,# amd64
7327,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux8/Dockerfile,# fallback
7328,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux8/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
7329,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux8/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
7330,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux8/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
7331,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux8/Dockerfile,# basic smoke test
7332,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux8/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
7333,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
7334,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7335,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
7336,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
7337,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
7338,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/oracle/Dockerfile,# arm64v8
7339,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/oracle/Dockerfile,# amd64
7340,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/oracle/Dockerfile,# fallback
7341,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
7342,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
7343,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/oracle/Dockerfile,# basic smoke test
7344,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
7345,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
7346,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7347,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
7348,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/Dockerfile,# backwards compatibility shim
7349,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
7350,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
7351,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
7352,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
7353,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
7354,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
7355,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
7356,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/Dockerfile,#!/usr/bin/env bash'; \
7357,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
7358,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
7359,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/Dockerfile,# basic smoke test
7360,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7361,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7362,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7363,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
7364,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7365,566a953c64f0d40b247eea76872d04d4b84f5481,/15/jdk/oraclelinux8/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
7366,566a953c64f0d40b247eea76872d04d4b84f5481,/15/jdk/oraclelinux8/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7367,566a953c64f0d40b247eea76872d04d4b84f5481,/15/jdk/oraclelinux8/Dockerfile,# Default to UTF-8 file.encoding
7368,566a953c64f0d40b247eea76872d04d4b84f5481,/15/jdk/oraclelinux8/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
7369,566a953c64f0d40b247eea76872d04d4b84f5481,/15/jdk/oraclelinux8/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
7370,566a953c64f0d40b247eea76872d04d4b84f5481,/15/jdk/oraclelinux8/Dockerfile,# arm64v8
7371,566a953c64f0d40b247eea76872d04d4b84f5481,/15/jdk/oraclelinux8/Dockerfile,# amd64
7372,566a953c64f0d40b247eea76872d04d4b84f5481,/15/jdk/oraclelinux8/Dockerfile,# fallback
7373,566a953c64f0d40b247eea76872d04d4b84f5481,/15/jdk/oraclelinux8/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
7374,566a953c64f0d40b247eea76872d04d4b84f5481,/15/jdk/oraclelinux8/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
7375,566a953c64f0d40b247eea76872d04d4b84f5481,/15/jdk/oraclelinux8/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
7376,566a953c64f0d40b247eea76872d04d4b84f5481,/15/jdk/oraclelinux8/Dockerfile,# basic smoke test
7377,566a953c64f0d40b247eea76872d04d4b84f5481,/15/jdk/oraclelinux8/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
7378,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7379,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
7380,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
7381,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7382,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/slim/Dockerfile,#!/bin/sh'; \
7383,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
7384,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
7385,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
7386,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
7387,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
7388,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
7389,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7390,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
7391,5dba2054c6821e38a6d3fad32239369818289228,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7392,5dba2054c6821e38a6d3fad32239369818289228,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7393,5dba2054c6821e38a6d3fad32239369818289228,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
7394,5dba2054c6821e38a6d3fad32239369818289228,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7395,5dba2054c6821e38a6d3fad32239369818289228,/8-jdk/alpine/Dockerfile,#!/bin/sh'; \
7396,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7397,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7398,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7399,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
7400,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7401,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7402,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7403,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7404,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
7405,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
7406,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
7407,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
7408,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
7409,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7410,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
7411,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
7412,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
7413,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
7414,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/oracle/Dockerfile,# basic smoke test
7415,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
7416,4ab314dc41cb31313f630ce5e11398ef0f9e9ae9,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7417,4ab314dc41cb31313f630ce5e11398ef0f9e9ae9,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
7418,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7419,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7420,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
7421,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7422,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jdk/Dockerfile,#!/bin/sh'; \
7423,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
7424,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
7425,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
7426,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
7427,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
7428,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7429,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
7430,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
7431,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7432,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/slim/Dockerfile,#!/bin/sh'; \
7433,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
7434,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
7435,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
7436,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
7437,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
7438,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
7439,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
7440,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
7441,a0a4970a343a3c021dad760f2281d20f61931e3c,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7442,a0a4970a343a3c021dad760f2281d20f61931e3c,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7443,a0a4970a343a3c021dad760f2281d20f61931e3c,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
7444,a0a4970a343a3c021dad760f2281d20f61931e3c,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7445,a0a4970a343a3c021dad760f2281d20f61931e3c,/8-jdk/Dockerfile,#!/bin/sh'; \
7446,a0a4970a343a3c021dad760f2281d20f61931e3c,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
7447,a0a4970a343a3c021dad760f2281d20f61931e3c,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
7448,a0a4970a343a3c021dad760f2281d20f61931e3c,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
7449,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
7450,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
7451,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7452,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
7453,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/Dockerfile,# backwards compatibility shim
7454,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
7455,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
7456,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
7457,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/Dockerfile,# amd64
7458,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/Dockerfile,# fallback
7459,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
7460,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
7461,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
7462,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
7463,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
7464,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/Dockerfile,# basic smoke test
7465,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
7466,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7467,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7468,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7469,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-1809/Dockerfile,# http://jdk.java.net/
7470,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7471,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7472,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
7473,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
7474,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7475,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/slim/Dockerfile,#!/bin/sh'; \
7476,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
7477,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
7478,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
7479,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
7480,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
7481,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
7482,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7483,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7484,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jdk/Dockerfile,# Default to UTF-8 file.encoding
7485,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7486,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jdk/Dockerfile,#!/bin/sh'; \
7487,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
7488,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7489,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-7-jre/Dockerfile,# Default to UTF-8 file.encoding
7490,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
7491,06552bdff28039988fca96ec7f810456849d420f,/7-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7492,06552bdff28039988fca96ec7f810456849d420f,/7-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7493,06552bdff28039988fca96ec7f810456849d420f,/7-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
7494,06552bdff28039988fca96ec7f810456849d420f,/7-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7495,06552bdff28039988fca96ec7f810456849d420f,/7-jdk/alpine/Dockerfile,#!/bin/sh'; \
7496,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7497,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
7498,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
7499,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7500,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/alpine/Dockerfile,#!/bin/sh'; \
7501,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
7502,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7503,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7504,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7505,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
7506,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7507,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7508,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-6"
7509,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/Dockerfile,# Default to UTF-8 file.encoding
7510,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7511,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/Dockerfile,#!/bin/sh'; \
7512,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
7513,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
7514,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
7515,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
7516,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
7517,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
7518,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7519,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7520,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7521,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
7522,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7523,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/alpine/Dockerfile,# https://jdk.java.net/
7524,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
7525,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
7526,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/alpine/Dockerfile,# basic smoke test
7527,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
7528,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7529,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
7530,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
7531,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7532,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/Dockerfile,#!/bin/sh'; \
7533,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
7534,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
7535,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
7536,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
7537,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
7538,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7539,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
7540,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7541,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7542,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7543,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
7544,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7545,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
7546,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7547,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
7548,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jdk/Dockerfile,# backwards compatibility shim
7549,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
7550,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jdk/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
7551,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
7552,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
7553,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
7554,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
7555,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
7556,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jdk/Dockerfile,#!/usr/bin/env bash'; \
7557,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
7558,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
7559,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jdk/Dockerfile,# basic smoke test
7560,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
7561,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7562,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7563,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7564,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-1809/Dockerfile,# http://jdk.java.net/
7565,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7566,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7567,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
7568,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/Dockerfile,# Default to UTF-8 file.encoding
7569,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7570,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/Dockerfile,#!/bin/sh'; \
7571,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
7572,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
7573,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
7574,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
7575,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
7576,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
7577,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
7578,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7579,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7580,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7581,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
7582,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7583,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7584,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7585,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
7586,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7587,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jre/Dockerfile,#!/bin/sh'; \
7588,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
7589,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
7590,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
7591,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
7592,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
7593,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
7594,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
7595,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7596,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
7597,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
7598,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7599,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/slim/Dockerfile,#!/bin/sh'; \
7600,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
7601,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
7602,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
7603,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
7604,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
7605,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
7606,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
7607,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7608,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
7609,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
7610,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7611,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/Dockerfile,#!/bin/sh'; \
7612,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
7613,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
7614,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
7615,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
7616,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
7617,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7618,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
7619,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7620,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
7621,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/Dockerfile,# Default to UTF-8 file.encoding
7622,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7623,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/Dockerfile,#!/bin/sh'; \
7624,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
7625,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
7626,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
7627,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
7628,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
7629,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7630,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
7631,566a953c64f0d40b247eea76872d04d4b84f5481,/14/jdk/oraclelinux8/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
7632,566a953c64f0d40b247eea76872d04d4b84f5481,/14/jdk/oraclelinux8/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7633,566a953c64f0d40b247eea76872d04d4b84f5481,/14/jdk/oraclelinux8/Dockerfile,# Default to UTF-8 file.encoding
7634,566a953c64f0d40b247eea76872d04d4b84f5481,/14/jdk/oraclelinux8/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
7635,566a953c64f0d40b247eea76872d04d4b84f5481,/14/jdk/oraclelinux8/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
7636,566a953c64f0d40b247eea76872d04d4b84f5481,/14/jdk/oraclelinux8/Dockerfile,# amd64
7637,566a953c64f0d40b247eea76872d04d4b84f5481,/14/jdk/oraclelinux8/Dockerfile,# fallback
7638,566a953c64f0d40b247eea76872d04d4b84f5481,/14/jdk/oraclelinux8/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
7639,566a953c64f0d40b247eea76872d04d4b84f5481,/14/jdk/oraclelinux8/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
7640,566a953c64f0d40b247eea76872d04d4b84f5481,/14/jdk/oraclelinux8/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
7641,566a953c64f0d40b247eea76872d04d4b84f5481,/14/jdk/oraclelinux8/Dockerfile,# basic smoke test
7642,566a953c64f0d40b247eea76872d04d4b84f5481,/14/jdk/oraclelinux8/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
7643,bcf0fea5a62cb2a75015e2dc2ce05bbc89afcd7d,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7644,bcf0fea5a62cb2a75015e2dc2ce05bbc89afcd7d,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
7645,1b4378dc7b57c8534fe715cfcec356ee96c87e92,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7646,1b4378dc7b57c8534fe715cfcec356ee96c87e92,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
7647,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7648,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7649,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
7650,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7651,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7652,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
7653,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
7654,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7655,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/Dockerfile,#!/bin/sh'; \
7656,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
7657,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
7658,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
7659,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
7660,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
7661,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
7662,451e66427f3c53fada288aaff950617c5864745f,/8/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
7663,451e66427f3c53fada288aaff950617c5864745f,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7664,451e66427f3c53fada288aaff950617c5864745f,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
7665,451e66427f3c53fada288aaff950617c5864745f,/8/jre/Dockerfile,# backwards compatibility shim
7666,451e66427f3c53fada288aaff950617c5864745f,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
7667,451e66427f3c53fada288aaff950617c5864745f,/8/jre/Dockerfile,# https://adoptopenjdk.net/upstream.html
7668,451e66427f3c53fada288aaff950617c5864745f,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
7669,451e66427f3c53fada288aaff950617c5864745f,/8/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
7670,451e66427f3c53fada288aaff950617c5864745f,/8/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
7671,451e66427f3c53fada288aaff950617c5864745f,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
7672,451e66427f3c53fada288aaff950617c5864745f,/8/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
7673,451e66427f3c53fada288aaff950617c5864745f,/8/jre/Dockerfile,#!/usr/bin/env bash'; \
7674,451e66427f3c53fada288aaff950617c5864745f,/8/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
7675,451e66427f3c53fada288aaff950617c5864745f,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
7676,451e66427f3c53fada288aaff950617c5864745f,/8/jre/Dockerfile,# basic smoke test
7677,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
7678,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7679,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
7680,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/Dockerfile,# backwards compatibility shim
7681,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
7682,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
7683,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
7684,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
7685,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
7686,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
7687,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
7688,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/Dockerfile,#!/usr/bin/env bash'; \
7689,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
7690,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
7691,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/Dockerfile,# basic smoke test
7692,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
7693,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7694,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
7695,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/Dockerfile,# backwards compatibility shim
7696,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
7697,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
7698,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
7699,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
7700,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
7701,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
7702,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
7703,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/Dockerfile,#!/usr/bin/env bash'; \
7704,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
7705,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
7706,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/Dockerfile,# basic smoke test
7707,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
7708,ef8af39fafdaaf4eeb8137c194aa8a51f8c56334,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7709,ef8af39fafdaaf4eeb8137c194aa8a51f8c56334,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
7710,eaf1c5575ab9763caf66d8d5debb7ec089411740,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7711,eaf1c5575ab9763caf66d8d5debb7ec089411740,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7712,eaf1c5575ab9763caf66d8d5debb7ec089411740,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
7713,eaf1c5575ab9763caf66d8d5debb7ec089411740,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7714,eaf1c5575ab9763caf66d8d5debb7ec089411740,/9-jdk/Dockerfile,#!/bin/bash'; \
7715,eaf1c5575ab9763caf66d8d5debb7ec089411740,/9-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
7716,eaf1c5575ab9763caf66d8d5debb7ec089411740,/9-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
7717,eaf1c5575ab9763caf66d8d5debb7ec089411740,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
7718,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7719,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7720,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
7721,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
7722,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
7723,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
7724,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7725,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
7726,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/Dockerfile,# backwards compatibility shim
7727,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
7728,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
7729,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
7730,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
7731,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
7732,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
7733,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
7734,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/Dockerfile,#!/usr/bin/env bash'; \
7735,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
7736,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
7737,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/Dockerfile,# basic smoke test
7738,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
7739,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7740,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
7741,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/Dockerfile,# backwards compatibility shim
7742,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
7743,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/Dockerfile,# https://adoptopenjdk.net/upstream.html
7744,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
7745,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
7746,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
7747,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
7748,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
7749,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/Dockerfile,#!/usr/bin/env bash'; \
7750,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
7751,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
7752,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/Dockerfile,# basic smoke test
7753,baaaf7714f9c66e4c5decf2c108a2738b7186c7f,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7754,baaaf7714f9c66e4c5decf2c108a2738b7186c7f,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7755,baaaf7714f9c66e4c5decf2c108a2738b7186c7f,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
7756,baaaf7714f9c66e4c5decf2c108a2738b7186c7f,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7757,baaaf7714f9c66e4c5decf2c108a2738b7186c7f,/8-jre/Dockerfile,#!/bin/sh'; \
7758,baaaf7714f9c66e4c5decf2c108a2738b7186c7f,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
7759,baaaf7714f9c66e4c5decf2c108a2738b7186c7f,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
7760,baaaf7714f9c66e4c5decf2c108a2738b7186c7f,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
7761,2544422915ae09bf77b02f0afaadaad5ba204cef,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7762,2544422915ae09bf77b02f0afaadaad5ba204cef,/12/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
7763,2544422915ae09bf77b02f0afaadaad5ba204cef,/12/jdk/oracle/Dockerfile,# https://jdk.java.net/
7764,2544422915ae09bf77b02f0afaadaad5ba204cef,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
7765,2544422915ae09bf77b02f0afaadaad5ba204cef,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
7766,2544422915ae09bf77b02f0afaadaad5ba204cef,/12/jdk/oracle/Dockerfile,# basic smoke test
7767,2544422915ae09bf77b02f0afaadaad5ba204cef,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
7768,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
7769,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7770,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
7771,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
7772,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
7773,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
7774,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/oracle/Dockerfile,# basic smoke test
7775,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
7776,882461ade8207de7647d083009200de85eb978bc,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7777,882461ade8207de7647d083009200de85eb978bc,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7778,882461ade8207de7647d083009200de85eb978bc,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
7779,882461ade8207de7647d083009200de85eb978bc,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7780,882461ade8207de7647d083009200de85eb978bc,/9-jdk/Dockerfile,#!/bin/sh'; \
7781,882461ade8207de7647d083009200de85eb978bc,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
7782,882461ade8207de7647d083009200de85eb978bc,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
7783,882461ade8207de7647d083009200de85eb978bc,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
7784,882461ade8207de7647d083009200de85eb978bc,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
7785,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7786,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
7787,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
7788,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7789,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/slim/Dockerfile,#!/bin/sh'; \
7790,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
7791,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
7792,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
7793,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
7794,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
7795,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
7796,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7797,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7798,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7799,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
7800,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7801,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7802,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7803,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7804,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
7805,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7806,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
7807,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
7808,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/slim/Dockerfile,# backwards compatibility shim
7809,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
7810,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/slim/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
7811,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
7812,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
7813,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
7814,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
7815,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
7816,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
7817,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
7818,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
7819,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/slim/Dockerfile,# basic smoke test
7820,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7821,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
7822,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
7823,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7824,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/slim/Dockerfile,#!/bin/sh'; \
7825,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
7826,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
7827,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
7828,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
7829,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
7830,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
7831,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
7832,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
7833,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7834,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7835,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7836,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
7837,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7838,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7839,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7840,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
7841,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7842,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7843,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
7844,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
7845,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7846,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/Dockerfile,#!/bin/sh'; \
7847,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
7848,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
7849,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (a case of https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
7850,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
7851,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
7852,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
7853,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7854,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
7855,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
7856,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
7857,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7858,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/Dockerfile,# Default to UTF-8 file.encoding
7859,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/Dockerfile,# backwards compatibility shim
7860,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
7861,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
7862,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
7863,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/Dockerfile,#!/usr/bin/env bash'; \
7864,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
7865,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
7866,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
7867,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/Dockerfile,# basic smoke test
7868,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
7869,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/alpine/Dockerfile,# http://jdk.java.net/
7870,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
7871,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
7872,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/alpine/Dockerfile,# basic smoke test
7873,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
7874,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7875,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
7876,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
7877,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7878,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/Dockerfile,#!/bin/sh'; \
7879,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
7880,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
7881,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
7882,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
7883,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
7884,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
7885,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7886,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
7887,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
7888,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
7889,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
7890,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/oracle/Dockerfile,# basic smoke test
7891,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
7892,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7893,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7894,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
7895,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7896,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7897,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7898,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
7899,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7900,918514c9b313f8f60580b1e3638eb2ae60ef5e7f,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7901,918514c9b313f8f60580b1e3638eb2ae60ef5e7f,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7902,918514c9b313f8f60580b1e3638eb2ae60ef5e7f,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
7903,918514c9b313f8f60580b1e3638eb2ae60ef5e7f,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7904,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7905,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7906,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7907,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
7908,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7909,2408508f3b000bf997febbdb90a861185a64a260,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7910,2408508f3b000bf997febbdb90a861185a64a260,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
7911,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7912,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
7913,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/Dockerfile,# Default to UTF-8 file.encoding
7914,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7915,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/Dockerfile,#!/bin/sh'; \
7916,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
7917,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
7918,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
7919,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
7920,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
7921,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
7922,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
7923,89851f0abc3a83cfad5248102f379d6a0bd3951a,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7924,89851f0abc3a83cfad5248102f379d6a0bd3951a,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7925,89851f0abc3a83cfad5248102f379d6a0bd3951a,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
7926,89851f0abc3a83cfad5248102f379d6a0bd3951a,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7927,89851f0abc3a83cfad5248102f379d6a0bd3951a,/8-jre/Dockerfile,#!/bin/sh'; \
7928,89851f0abc3a83cfad5248102f379d6a0bd3951a,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
7929,89851f0abc3a83cfad5248102f379d6a0bd3951a,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
7930,89851f0abc3a83cfad5248102f379d6a0bd3951a,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
7931,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7932,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7933,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
7934,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7935,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7936,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7937,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
7938,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7939,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
7940,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7941,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
7942,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/Dockerfile,# backwards compatibility shim
7943,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
7944,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
7945,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
7946,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
7947,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
7948,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
7949,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
7950,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/Dockerfile,#!/usr/bin/env bash'; \
7951,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
7952,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
7953,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/Dockerfile,# basic smoke test
7954,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
7955,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
7956,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
7957,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/slim/Dockerfile,# backwards compatibility shim
7958,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
7959,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
7960,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
7961,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
7962,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
7963,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
7964,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
7965,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
7966,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
7967,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/slim/Dockerfile,# basic smoke test
7968,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
7969,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
7970,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
7971,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
7972,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7973,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
7974,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
7975,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7976,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/Dockerfile,#!/bin/sh'; \
7977,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
7978,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
7979,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
7980,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
7981,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
7982,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
7983,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
7984,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
7985,bbb7c0995d9ab0ffec987f02f515862925553d5e,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7986,bbb7c0995d9ab0ffec987f02f515862925553d5e,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7987,bbb7c0995d9ab0ffec987f02f515862925553d5e,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
7988,bbb7c0995d9ab0ffec987f02f515862925553d5e,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7989,bbb7c0995d9ab0ffec987f02f515862925553d5e,/9-jre/Dockerfile,#!/bin/sh'; \
7990,bbb7c0995d9ab0ffec987f02f515862925553d5e,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
7991,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7992,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7993,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
7994,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7995,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/9-jre/Dockerfile,#!/bin/sh'; \
7996,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/9-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
7997,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/9-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
7998,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
7999,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
8000,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
8001,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8002,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8003,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
8004,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8005,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
8006,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8007,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8008,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
8009,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8010,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
8011,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8012,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
8013,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/nanoserver-1803/Dockerfile,# https://jdk.java.net/
8014,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8015,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8016,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
8017,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
8018,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
8019,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8020,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/oracle/Dockerfile,# basic smoke test
8021,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
8022,6f340724d3bc1f9b4385975c5de6bfe15aac8c85,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
8023,6f340724d3bc1f9b4385975c5de6bfe15aac8c85,/openjdk-8-jre/Dockerfile,# Default to UTF-8 file.encoding
8024,6f340724d3bc1f9b4385975c5de6bfe15aac8c85,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
8025,6f340724d3bc1f9b4385975c5de6bfe15aac8c85,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
8026,6f340724d3bc1f9b4385975c5de6bfe15aac8c85,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
8027,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
8028,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
8029,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8030,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
8031,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
8032,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/slim/Dockerfile,# backwards compatibility shim
8033,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
8034,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
8035,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
8036,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
8037,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
8038,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
8039,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8040,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/slim/Dockerfile,# basic smoke test
8041,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8042,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
8043,a344905a72f381b3084c4c1cd0b3a24bcc9b4e23,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8044,a344905a72f381b3084c4c1cd0b3a24bcc9b4e23,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
8045,a344905a72f381b3084c4c1cd0b3a24bcc9b4e23,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
8046,a344905a72f381b3084c4c1cd0b3a24bcc9b4e23,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8047,a344905a72f381b3084c4c1cd0b3a24bcc9b4e23,/9-jdk/Dockerfile,#!/bin/sh'; \
8048,a344905a72f381b3084c4c1cd0b3a24bcc9b4e23,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
8049,36a0de603602114458516929dbc4a62d12c1d4c2,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
8050,36a0de603602114458516929dbc4a62d12c1d4c2,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
8051,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8052,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8053,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
8054,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8055,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8056,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
8057,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8058,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
8059,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8060,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8061,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
8062,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
8063,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8064,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/slim/Dockerfile,#!/bin/sh'; \
8065,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
8066,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
8067,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (a case of https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
8068,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
8069,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
8070,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
8071,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
8072,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8073,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
8074,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8075,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
8076,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8077,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8078,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
8079,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
8080,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8081,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/Dockerfile,#!/bin/sh'; \
8082,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
8083,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
8084,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
8085,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
8086,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
8087,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8088,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
8089,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8090,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
8091,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jre/Dockerfile,# Default to UTF-8 file.encoding
8092,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8093,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jre/Dockerfile,#!/bin/sh'; \
8094,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
8095,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
8096,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
8097,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
8098,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8099,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
8100,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
8101,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8102,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/Dockerfile,#!/bin/sh'; \
8103,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
8104,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
8105,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
8106,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
8107,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
8108,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
8109,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
8110,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-8-jdk/Dockerfile,# Default to UTF-8 file.encoding
8111,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
8112,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
8113,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
8114,6cc25ee35281099423e521713f710d2549209600,/7/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
8115,6cc25ee35281099423e521713f710d2549209600,/7/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
8116,4135ad55c2577bd722c575a41211c59669353d54,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8117,4135ad55c2577bd722c575a41211c59669353d54,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8118,4135ad55c2577bd722c575a41211c59669353d54,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
8119,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
8120,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8121,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
8122,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
8123,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
8124,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8125,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/oracle/Dockerfile,# basic smoke test
8126,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
8127,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8128,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
8129,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/Dockerfile,# Default to UTF-8 file.encoding
8130,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8131,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/Dockerfile,#!/bin/sh'; \
8132,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
8133,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
8134,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
8135,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
8136,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
8137,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
8138,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
8139,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
8140,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
8141,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8142,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
8143,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/Dockerfile,# backwards compatibility shim
8144,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
8145,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
8146,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
8147,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
8148,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
8149,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
8150,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8151,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/Dockerfile,# basic smoke test
8152,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8153,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
8154,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
8155,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8156,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
8157,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/Dockerfile,# backwards compatibility shim
8158,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
8159,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
8160,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
8161,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
8162,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
8163,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
8164,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8165,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/Dockerfile,# basic smoke test
8166,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8167,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8168,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
8169,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8170,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-1709/Dockerfile,# https://jdk.java.net/
8171,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8172,c4e82d61bdae87ac25656b1371441ccca8c059b9,/openjdk-9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
8173,c4e82d61bdae87ac25656b1371441ccca8c059b9,/openjdk-9-jdk/Dockerfile,# Default to UTF-8 file.encoding
8174,c4e82d61bdae87ac25656b1371441ccca8c059b9,/openjdk-9-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
8175,c4e82d61bdae87ac25656b1371441ccca8c059b9,/openjdk-9-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
8176,c4e82d61bdae87ac25656b1371441ccca8c059b9,/openjdk-9-jdk/Dockerfile,"# see https://bugs.debian.org/793210
# and https://github.com/docker-library/java/issues/46#issuecomment-119026586"
8177,c4e82d61bdae87ac25656b1371441ccca8c059b9,/openjdk-9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
8178,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8179,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
8180,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8181,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
8182,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8183,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8184,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
8185,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8186,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
8187,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8188,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8189,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
8190,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8191,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
8192,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8193,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8194,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8195,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
8196,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
8197,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
8198,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8199,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
8200,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
8201,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8202,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/Dockerfile,#!/bin/sh'; \
8203,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
8204,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
8205,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
8206,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
8207,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
8208,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
8209,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8210,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
8211,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8212,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
8213,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8214,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8215,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8216,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
8217,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8218,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
8219,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8220,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
8221,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
8222,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
8223,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8224,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/14/jdk/oracle/Dockerfile,# basic smoke test
8225,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
8226,31741b6c2bbe2625e783288664245136ffe9533c,/10/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8227,31741b6c2bbe2625e783288664245136ffe9533c,/10/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
8228,31741b6c2bbe2625e783288664245136ffe9533c,/10/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
8229,31741b6c2bbe2625e783288664245136ffe9533c,/10/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8230,31741b6c2bbe2625e783288664245136ffe9533c,/10/jdk/slim/Dockerfile,#!/bin/sh'; \
8231,31741b6c2bbe2625e783288664245136ffe9533c,/10/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
8232,31741b6c2bbe2625e783288664245136ffe9533c,/10/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
8233,31741b6c2bbe2625e783288664245136ffe9533c,/10/jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
8234,31741b6c2bbe2625e783288664245136ffe9533c,/10/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
8235,31741b6c2bbe2625e783288664245136ffe9533c,/10/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
8236,31741b6c2bbe2625e783288664245136ffe9533c,/10/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
8237,31741b6c2bbe2625e783288664245136ffe9533c,/10/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8238,31741b6c2bbe2625e783288664245136ffe9533c,/10/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
8239,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux8/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
8240,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux8/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8241,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux8/Dockerfile,# Default to UTF-8 file.encoding
8242,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux8/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
8243,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux8/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
8244,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux8/Dockerfile,# amd64
8245,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux8/Dockerfile,# fallback
8246,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux8/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
8247,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux8/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8248,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux8/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
8249,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux8/Dockerfile,# basic smoke test
8250,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux8/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8251,0476812eabd178c77534f3c03bd0a2673822d7b9,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8252,0476812eabd178c77534f3c03bd0a2673822d7b9,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
8253,0476812eabd178c77534f3c03bd0a2673822d7b9,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
8254,0476812eabd178c77534f3c03bd0a2673822d7b9,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8255,0476812eabd178c77534f3c03bd0a2673822d7b9,/8-jdk/alpine/Dockerfile,#!/bin/sh'; \
8256,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8257,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8258,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
8259,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
8260,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
8261,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8262,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
8263,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
8264,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/slim-buster/Dockerfile,# backwards compatibility shim
8265,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
8266,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/slim-buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
8267,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
8268,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/slim-buster/Dockerfile,# arm64v8
8269,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/slim-buster/Dockerfile,# amd64
8270,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/slim-buster/Dockerfile,# fallback
8271,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
8272,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
8273,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
8274,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
8275,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8276,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/slim-buster/Dockerfile,# basic smoke test
8277,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8278,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
8279,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8280,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
8281,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jdk/Dockerfile,# backwards compatibility shim
8282,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
8283,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jdk/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
8284,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
8285,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
8286,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
8287,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
8288,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
8289,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jdk/Dockerfile,#!/usr/bin/env bash'; \
8290,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
8291,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
8292,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jdk/Dockerfile,# basic smoke test
8293,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8294,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/alpine3.12/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
8295,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/alpine3.12/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
8296,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/alpine3.12/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
8297,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/alpine3.12/Dockerfile,# amd64
8298,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/alpine3.12/Dockerfile,# fallback
8299,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/alpine3.12/Dockerfile,"# see ""java-cacerts"" package installed above (which maintains ""/etc/ssl/certs/java/cacerts"" for us)"
8300,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/alpine3.12/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8301,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/alpine3.12/Dockerfile,# basic smoke test
8302,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/alpine3.12/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8303,5dba2054c6821e38a6d3fad32239369818289228,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8304,5dba2054c6821e38a6d3fad32239369818289228,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
8305,5dba2054c6821e38a6d3fad32239369818289228,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
8306,5dba2054c6821e38a6d3fad32239369818289228,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8307,5dba2054c6821e38a6d3fad32239369818289228,/9-jdk/Dockerfile,#!/bin/sh'; \
8308,5dba2054c6821e38a6d3fad32239369818289228,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
8309,d4ecf99e10d1f0e6239f54f1907df56e725ac4ac,/8/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8310,d4ecf99e10d1f0e6239f54f1907df56e725ac4ac,/8/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
8311,d4ecf99e10d1f0e6239f54f1907df56e725ac4ac,/8/jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
8312,d4ecf99e10d1f0e6239f54f1907df56e725ac4ac,/8/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8313,d4ecf99e10d1f0e6239f54f1907df56e725ac4ac,/8/jre/alpine/Dockerfile,#!/bin/sh'; \
8314,d4ecf99e10d1f0e6239f54f1907df56e725ac4ac,/8/jre/alpine/Dockerfile,# https://bugs.alpinelinux.org/issues/10126
8315,d4ecf99e10d1f0e6239f54f1907df56e725ac4ac,/8/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
8316,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8317,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
8318,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8319,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
8320,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8321,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8322,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
8323,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8324,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
8325,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8326,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
8327,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
8328,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
8329,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8330,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
8331,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/Dockerfile,# Default to UTF-8 file.encoding
8332,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8333,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/Dockerfile,#!/bin/sh'; \
8334,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
8335,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
8336,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
8337,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
8338,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
8339,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8340,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
8341,b5fc89ceebc210c08a2b82709dd2a92fcebbae38,/8/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
8342,b5fc89ceebc210c08a2b82709dd2a92fcebbae38,/8/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
8343,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
8344,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8345,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
8346,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
8347,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
8348,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8349,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/oracle/Dockerfile,# basic smoke test
8350,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
8351,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8352,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
8353,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
8354,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8355,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/slim/Dockerfile,#!/bin/sh'; \
8356,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
8357,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
8358,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
8359,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
8360,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
8361,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
8362,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
8363,2eedac4afe8e587cb02cb7739d70e2c33c2b1421,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8364,2eedac4afe8e587cb02cb7739d70e2c33c2b1421,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8365,2eedac4afe8e587cb02cb7739d70e2c33c2b1421,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
8366,2eedac4afe8e587cb02cb7739d70e2c33c2b1421,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8367,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
8368,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8369,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
8370,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
8371,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
8372,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8373,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/oracle/Dockerfile,# basic smoke test
8374,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
8375,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8376,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8377,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://adoptopenjdk.net/upstream.html
8378,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
8379,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
8380,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8381,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
8382,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
8383,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8384,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
8385,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/Dockerfile,# backwards compatibility shim
8386,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
8387,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
8388,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
8389,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
8390,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
8391,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
8392,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8393,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/Dockerfile,# basic smoke test
8394,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8395,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8396,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
8397,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
8398,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
8399,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8400,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/oracle/Dockerfile,# basic smoke test
8401,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
8402,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8403,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
8404,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8405,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
8406,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8407,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux8/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
8408,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux8/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8409,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux8/Dockerfile,# Default to UTF-8 file.encoding
8410,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux8/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
8411,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux8/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
8412,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux8/Dockerfile,# arm64v8
8413,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux8/Dockerfile,# amd64
8414,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux8/Dockerfile,# fallback
8415,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux8/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
8416,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux8/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8417,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux8/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
8418,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux8/Dockerfile,# basic smoke test
8419,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux8/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8420,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8421,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8422,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
8423,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
8424,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
8425,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8426,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
8427,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/oracle/Dockerfile,# http://jdk.java.net/
8428,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
8429,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
8430,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/oracle/Dockerfile,# basic smoke test
8431,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
8432,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8433,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
8434,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
8435,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8436,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/slim/Dockerfile,#!/bin/sh'; \
8437,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
8438,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
8439,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
8440,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
8441,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
8442,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8443,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
8444,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
8445,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
8446,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/slim/Dockerfile,# backwards compatibility shim
8447,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
8448,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
8449,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
8450,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
8451,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
8452,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
8453,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8454,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/slim/Dockerfile,# basic smoke test
8455,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8456,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
8457,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8458,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
8459,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8460,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
8461,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8462,faa860854c1ed83943047f669424c9c36aae4dd5,/7/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8463,faa860854c1ed83943047f669424c9c36aae4dd5,/7/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
8464,faa860854c1ed83943047f669424c9c36aae4dd5,/7/jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
8465,faa860854c1ed83943047f669424c9c36aae4dd5,/7/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8466,faa860854c1ed83943047f669424c9c36aae4dd5,/7/jdk/alpine/Dockerfile,#!/bin/sh'; \
8467,faa860854c1ed83943047f669424c9c36aae4dd5,/7/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
8468,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8469,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8470,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
8471,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
8472,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
8473,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8474,38cb0eb077acf2a429f32a879903cd305733d561,/8/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8475,38cb0eb077acf2a429f32a879903cd305733d561,/8/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
8476,38cb0eb077acf2a429f32a879903cd305733d561,/8/jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
8477,38cb0eb077acf2a429f32a879903cd305733d561,/8/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8478,38cb0eb077acf2a429f32a879903cd305733d561,/8/jre/alpine/Dockerfile,#!/bin/sh'; \
8479,38cb0eb077acf2a429f32a879903cd305733d561,/8/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
8480,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
8481,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
8482,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/slim-buster/Dockerfile,# backwards compatibility shim
8483,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
8484,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/slim-buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
8485,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
8486,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/slim-buster/Dockerfile,# arm64v8
8487,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/slim-buster/Dockerfile,# amd64
8488,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/slim-buster/Dockerfile,# fallback
8489,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
8490,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
8491,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
8492,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
8493,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8494,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/slim-buster/Dockerfile,# basic smoke test
8495,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8496,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8497,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
8498,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/oracle/Dockerfile,# http://jdk.java.net/
8499,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
8500,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
8501,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/oracle/Dockerfile,# basic smoke test
8502,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
8503,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
8504,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/slim/Dockerfile,# backwards compatibility shim
8505,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
8506,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
8507,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
8508,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
8509,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
8510,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/slim/Dockerfile,# basic smoke test
8511,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8512,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8513,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
8514,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
8515,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8516,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/Dockerfile,#!/bin/sh'; \
8517,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
8518,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
8519,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
8520,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
8521,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
8522,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
8523,318ba809c9f0e3c7095b363c5a31409ee6880208,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
8524,318ba809c9f0e3c7095b363c5a31409ee6880208,/openjdk-7-jre/Dockerfile,# Default to UTF-8 file.encoding
8525,318ba809c9f0e3c7095b363c5a31409ee6880208,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
8526,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
8527,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
8528,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8529,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
8530,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,# backwards compatibility shim
8531,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
8532,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
8533,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
8534,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,# arm64v8
8535,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,# amd64
8536,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,# fallback
8537,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
8538,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
8539,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
8540,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
8541,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8542,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,# basic smoke test
8543,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8544,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
8545,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
8546,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/slim/Dockerfile,# backwards compatibility shim
8547,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
8548,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
8549,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
8550,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
8551,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
8552,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
8553,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
8554,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
8555,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
8556,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
8557,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/slim/Dockerfile,# basic smoke test
8558,15835397954c9ec123e42e685035ecd239e0a1db,/8/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
8559,15835397954c9ec123e42e685035ecd239e0a1db,/8/jdk/windows/nanoserver-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
8560,15835397954c9ec123e42e685035ecd239e0a1db,/8/jdk/windows/nanoserver-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
8561,566a953c64f0d40b247eea76872d04d4b84f5481,/16/jdk/oraclelinux8/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
8562,566a953c64f0d40b247eea76872d04d4b84f5481,/16/jdk/oraclelinux8/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8563,566a953c64f0d40b247eea76872d04d4b84f5481,/16/jdk/oraclelinux8/Dockerfile,# Default to UTF-8 file.encoding
8564,566a953c64f0d40b247eea76872d04d4b84f5481,/16/jdk/oraclelinux8/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
8565,566a953c64f0d40b247eea76872d04d4b84f5481,/16/jdk/oraclelinux8/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
8566,566a953c64f0d40b247eea76872d04d4b84f5481,/16/jdk/oraclelinux8/Dockerfile,# arm64v8
8567,566a953c64f0d40b247eea76872d04d4b84f5481,/16/jdk/oraclelinux8/Dockerfile,# amd64
8568,566a953c64f0d40b247eea76872d04d4b84f5481,/16/jdk/oraclelinux8/Dockerfile,# fallback
8569,566a953c64f0d40b247eea76872d04d4b84f5481,/16/jdk/oraclelinux8/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
8570,566a953c64f0d40b247eea76872d04d4b84f5481,/16/jdk/oraclelinux8/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8571,566a953c64f0d40b247eea76872d04d4b84f5481,/16/jdk/oraclelinux8/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
8572,566a953c64f0d40b247eea76872d04d4b84f5481,/16/jdk/oraclelinux8/Dockerfile,# basic smoke test
8573,566a953c64f0d40b247eea76872d04d4b84f5481,/16/jdk/oraclelinux8/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8574,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8575,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
8576,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
8577,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8578,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jdk/Dockerfile,#!/bin/sh'; \
8579,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
8580,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
8581,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
8582,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
8583,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
8584,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/8-jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8585,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/8-jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8586,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/8-jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
8587,42abb498353aae46a5766659faf3853edc441bde,/8/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
8588,42abb498353aae46a5766659faf3853edc441bde,/8/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
8589,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
8590,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
8591,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
8592,bc2fcfad89194727ec8a9334730af6ff4d8c44a7,/7/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8593,bc2fcfad89194727ec8a9334730af6ff4d8c44a7,/7/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
8594,bc2fcfad89194727ec8a9334730af6ff4d8c44a7,/7/jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
8595,bc2fcfad89194727ec8a9334730af6ff4d8c44a7,/7/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8596,bc2fcfad89194727ec8a9334730af6ff4d8c44a7,/7/jdk/alpine/Dockerfile,#!/bin/sh'; \
8597,bc2fcfad89194727ec8a9334730af6ff4d8c44a7,/7/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
8598,873fb56728befef8ecaf8436c3a27fd239cba301,/8-jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8599,873fb56728befef8ecaf8436c3a27fd239cba301,/8-jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8600,873fb56728befef8ecaf8436c3a27fd239cba301,/8-jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
8601,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8602,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
8603,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
8604,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8605,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/slim/Dockerfile,#!/bin/sh'; \
8606,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
8607,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
8608,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
8609,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
8610,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
8611,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
8612,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8613,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
8614,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8615,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
8616,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8617,f47afa13905074605a616adf3b9c01c396ed74a8,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
8618,f47afa13905074605a616adf3b9c01c396ed74a8,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
8619,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
8620,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
8621,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/slim/Dockerfile,# backwards compatibility shim
8622,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
8623,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
8624,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
8625,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/slim/Dockerfile,# arm64v8
8626,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/slim/Dockerfile,# amd64
8627,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/slim/Dockerfile,# fallback
8628,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
8629,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
8630,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
8631,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
8632,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8633,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/slim/Dockerfile,# basic smoke test
8634,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8635,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8636,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
8637,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8638,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
8639,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8640,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
8641,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8642,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/oraclelinux7/Dockerfile,# Default to UTF-8 file.encoding
8643,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
8644,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
8645,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/oraclelinux7/Dockerfile,# arm64v8
8646,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/oraclelinux7/Dockerfile,# amd64
8647,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/oraclelinux7/Dockerfile,# fallback
8648,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/oraclelinux7/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
8649,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8650,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
8651,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/oraclelinux7/Dockerfile,# basic smoke test
8652,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8653,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8654,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
8655,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8656,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
8657,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8658,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
8659,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8660,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
8661,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
8662,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
8663,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8664,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/oracle/Dockerfile,# basic smoke test
8665,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
8666,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8667,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
8668,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/Dockerfile,# Default to UTF-8 file.encoding
8669,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8670,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/Dockerfile,#!/bin/sh'; \
8671,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
8672,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
8673,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
8674,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
8675,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
8676,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
8677,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
8678,823517cdb97911ad335027244a6342e9129a91ad,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8679,823517cdb97911ad335027244a6342e9129a91ad,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8680,823517cdb97911ad335027244a6342e9129a91ad,/11/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
8681,823517cdb97911ad335027244a6342e9129a91ad,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8682,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8683,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
8684,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8685,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
8686,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8687,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8688,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
8689,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8690,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
8691,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8692,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
8693,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
8694,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/slim-buster/Dockerfile,# backwards compatibility shim
8695,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
8696,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/slim-buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
8697,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
8698,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/slim-buster/Dockerfile,# amd64
8699,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/slim-buster/Dockerfile,# fallback
8700,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
8701,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
8702,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
8703,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
8704,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8705,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/slim-buster/Dockerfile,# basic smoke test
8706,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8707,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/alpine/Dockerfile,# http://jdk.java.net/
8708,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
8709,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
8710,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/alpine/Dockerfile,# basic smoke test
8711,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
8712,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
8713,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8714,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
8715,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
8716,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
8717,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/oracle/Dockerfile,# arm64v8
8718,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/oracle/Dockerfile,# amd64
8719,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/oracle/Dockerfile,# fallback
8720,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
8721,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8722,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
8723,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/oracle/Dockerfile,# basic smoke test
8724,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
8725,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8726,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8727,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
8728,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8729,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
8730,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
8731,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/slim/Dockerfile,# backwards compatibility shim
8732,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
8733,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
8734,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
8735,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
8736,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
8737,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
8738,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
8739,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
8740,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
8741,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/slim/Dockerfile,# basic smoke test
8742,6294b7d4b299639ec519dfd92782632f498eb1d2,/8-jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8743,6294b7d4b299639ec519dfd92782632f498eb1d2,/8-jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8744,6294b7d4b299639ec519dfd92782632f498eb1d2,/8-jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
8745,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8746,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
8747,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
8748,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8749,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/slim/Dockerfile,#!/bin/sh'; \
8750,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
8751,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
8752,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
8753,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
8754,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
8755,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
8756,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8757,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
8758,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
8759,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8760,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/9-jre/Dockerfile,#!/bin/sh'; \
8761,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
8762,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux8/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
8763,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux8/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8764,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux8/Dockerfile,# Default to UTF-8 file.encoding
8765,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux8/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
8766,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux8/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
8767,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux8/Dockerfile,# arm64v8
8768,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux8/Dockerfile,# amd64
8769,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux8/Dockerfile,# fallback
8770,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux8/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
8771,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux8/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8772,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux8/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
8773,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux8/Dockerfile,# basic smoke test
8774,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux8/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8775,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
8776,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8777,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/oraclelinux7/Dockerfile,# Default to UTF-8 file.encoding
8778,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
8779,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
8780,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/oraclelinux7/Dockerfile,# arm64v8
8781,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/oraclelinux7/Dockerfile,# amd64
8782,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/oraclelinux7/Dockerfile,# fallback
8783,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/oraclelinux7/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
8784,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8785,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
8786,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/oraclelinux7/Dockerfile,# basic smoke test
8787,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8788,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8789,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
8790,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8791,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
8792,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8793,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8794,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8795,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jdk/windows/windowsservercore-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
8796,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jdk/windows/windowsservercore-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
8797,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jdk/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
8798,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8799,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
8800,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8801,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
8802,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8803,86918ee28d383e7af63f535a2558040dce141099,/8/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8804,86918ee28d383e7af63f535a2558040dce141099,/8/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
8805,86918ee28d383e7af63f535a2558040dce141099,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
8806,86918ee28d383e7af63f535a2558040dce141099,/8/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8807,86918ee28d383e7af63f535a2558040dce141099,/8/jre/Dockerfile,#!/bin/sh'; \
8808,86918ee28d383e7af63f535a2558040dce141099,/8/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
8809,86918ee28d383e7af63f535a2558040dce141099,/8/jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
8810,86918ee28d383e7af63f535a2558040dce141099,/8/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
8811,86918ee28d383e7af63f535a2558040dce141099,/8/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
8812,86918ee28d383e7af63f535a2558040dce141099,/8/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
8813,86918ee28d383e7af63f535a2558040dce141099,/8/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
8814,86918ee28d383e7af63f535a2558040dce141099,/8/jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
8815,86918ee28d383e7af63f535a2558040dce141099,/8/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
8816,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8817,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
8818,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
8819,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8820,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
8821,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
8822,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
8823,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
8824,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)"
8825,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
8826,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
8827,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
8828,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8829,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
8830,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8831,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
8832,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/Dockerfile,# Default to UTF-8 file.encoding
8833,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8834,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/Dockerfile,#!/bin/sh'; \
8835,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
8836,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
8837,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
8838,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
8839,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
8840,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
8841,68fbc1eb8a389ffc5224b32074cca52b431eb097,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8842,68fbc1eb8a389ffc5224b32074cca52b431eb097,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
8843,68fbc1eb8a389ffc5224b32074cca52b431eb097,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
8844,68fbc1eb8a389ffc5224b32074cca52b431eb097,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8845,68fbc1eb8a389ffc5224b32074cca52b431eb097,/9-jre/Dockerfile,#!/bin/sh'; \
8846,68fbc1eb8a389ffc5224b32074cca52b431eb097,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
8847,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8848,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
8849,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8850,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# https://jdk.java.net/
8851,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8852,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
8853,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
8854,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/slim/Dockerfile,# backwards compatibility shim
8855,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
8856,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
8857,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
8858,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/slim/Dockerfile,# arm64v8
8859,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/slim/Dockerfile,# amd64
8860,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/slim/Dockerfile,# fallback
8861,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
8862,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
8863,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
8864,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
8865,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8866,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/slim/Dockerfile,# basic smoke test
8867,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8868,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
8869,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
8870,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/slim/Dockerfile,# backwards compatibility shim
8871,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
8872,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/slim/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
8873,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
8874,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
8875,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
8876,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
8877,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
8878,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
8879,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
8880,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
8881,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/slim/Dockerfile,# basic smoke test
8882,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/6-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8883,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
8884,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/6-jre/Dockerfile,# Default to UTF-8 file.encoding
8885,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/6-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8886,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/6-jre/Dockerfile,#!/bin/sh'; \
8887,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
8888,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
8889,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8890,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
8891,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,# backwards compatibility shim
8892,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
8893,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
8894,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
8895,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
8896,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,# arm64v8
8897,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,# amd64
8898,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,# fallback
8899,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
8900,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
8901,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
8902,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
8903,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
8904,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
8905,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
8906,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,# basic smoke test
8907,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8908,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
8909,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8910,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
8911,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/Dockerfile,# backwards compatibility shim
8912,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
8913,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/Dockerfile,# https://adoptopenjdk.net/upstream.html
8914,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
8915,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
8916,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
8917,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
8918,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
8919,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/Dockerfile,#!/usr/bin/env bash'; \
8920,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
8921,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
8922,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/Dockerfile,# basic smoke test
8923,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8924,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
8925,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8926,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
8927,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8928,89851f0abc3a83cfad5248102f379d6a0bd3951a,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8929,89851f0abc3a83cfad5248102f379d6a0bd3951a,/7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
8930,89851f0abc3a83cfad5248102f379d6a0bd3951a,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
8931,89851f0abc3a83cfad5248102f379d6a0bd3951a,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8932,89851f0abc3a83cfad5248102f379d6a0bd3951a,/7-jre/Dockerfile,#!/bin/sh'; \
8933,89851f0abc3a83cfad5248102f379d6a0bd3951a,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
8934,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8935,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8936,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
8937,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8938,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
8939,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8940,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
8941,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/Dockerfile,# backwards compatibility shim
8942,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
8943,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
8944,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
8945,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
8946,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
8947,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
8948,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
8949,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/Dockerfile,#!/usr/bin/env bash'; \
8950,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
8951,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
8952,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/Dockerfile,# basic smoke test
8953,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8954,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8955,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
8956,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
8957,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8958,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/slim/Dockerfile,#!/bin/sh'; \
8959,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
8960,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
8961,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
8962,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
8963,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
8964,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8965,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
8966,2408508f3b000bf997febbdb90a861185a64a260,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
8967,2408508f3b000bf997febbdb90a861185a64a260,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
8968,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8969,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8970,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
8971,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8972,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8973,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
8974,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8975,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
8976,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8977,d617d7e4b951735c512f3d5ac7672f7394115c91,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8978,d617d7e4b951735c512f3d5ac7672f7394115c91,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8979,d617d7e4b951735c512f3d5ac7672f7394115c91,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
8980,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
8981,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8982,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/oraclelinux7/Dockerfile,# Default to UTF-8 file.encoding
8983,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
8984,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
8985,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/oraclelinux7/Dockerfile,# amd64
8986,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/oraclelinux7/Dockerfile,# fallback
8987,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/oraclelinux7/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
8988,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8989,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
8990,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/oraclelinux7/Dockerfile,# basic smoke test
8991,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8992,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8993,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
8994,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
8995,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8996,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/slim/Dockerfile,#!/bin/sh'; \
8997,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
8998,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
8999,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
9000,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
9001,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
9002,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
9003,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9004,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
9005,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/Dockerfile,# Default to UTF-8 file.encoding
9006,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9007,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/Dockerfile,#!/bin/sh'; \
9008,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
9009,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
9010,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
9011,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
9012,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
9013,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
9014,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
9015,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9016,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
9017,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9018,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
9019,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9020,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/oracle/Dockerfile,# basic smoke test
9021,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
9022,3f6ab87ebe4bdea4470d0ff1e26f61dadd646c64,/8/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
9023,3f6ab87ebe4bdea4470d0ff1e26f61dadd646c64,/8/jre/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
9024,3f6ab87ebe4bdea4470d0ff1e26f61dadd646c64,/8/jre/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
9025,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
9026,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
9027,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9028,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
9029,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/Dockerfile,# backwards compatibility shim
9030,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
9031,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9032,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
9033,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
9034,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
9035,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
9036,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9037,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/Dockerfile,# basic smoke test
9038,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9039,07f251a7891fb4624535379d58b50f585a32c279,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9040,07f251a7891fb4624535379d58b50f585a32c279,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9041,07f251a7891fb4624535379d58b50f585a32c279,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
9042,07f251a7891fb4624535379d58b50f585a32c279,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9043,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
9044,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9045,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
9046,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9047,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
9048,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9049,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/oracle/Dockerfile,# basic smoke test
9050,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
9051,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9052,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
9053,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
9054,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9055,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
9056,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
9057,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
9058,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
9059,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
9060,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
9061,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9062,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
9063,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9064,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
9065,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
9066,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9067,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/alpine/Dockerfile,#!/bin/sh'; \
9068,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
9069,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
9070,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9071,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9072,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
9073,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9074,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9075,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9076,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9077,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9078,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
9079,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9080,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9081,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
9082,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/Dockerfile,# Default to UTF-8 file.encoding
9083,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9084,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/Dockerfile,#!/bin/sh'; \
9085,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
9086,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
9087,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
9088,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
9089,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
9090,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9091,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
9092,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
9093,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-7-jdk/Dockerfile,# Default to UTF-8 file.encoding
9094,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
9095,43078a246d7620f518412f458cc689ac869389ac,/8/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
9096,43078a246d7620f518412f458cc689ac869389ac,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
9097,43078a246d7620f518412f458cc689ac869389ac,/8/jre/slim/Dockerfile,# backwards compatibility shim
9098,43078a246d7620f518412f458cc689ac869389ac,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
9099,43078a246d7620f518412f458cc689ac869389ac,/8/jre/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
9100,43078a246d7620f518412f458cc689ac869389ac,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
9101,43078a246d7620f518412f458cc689ac869389ac,/8/jre/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
9102,43078a246d7620f518412f458cc689ac869389ac,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
9103,43078a246d7620f518412f458cc689ac869389ac,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
9104,43078a246d7620f518412f458cc689ac869389ac,/8/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
9105,43078a246d7620f518412f458cc689ac869389ac,/8/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
9106,43078a246d7620f518412f458cc689ac869389ac,/8/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
9107,43078a246d7620f518412f458cc689ac869389ac,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
9108,43078a246d7620f518412f458cc689ac869389ac,/8/jre/slim/Dockerfile,# basic smoke test
9109,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9110,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
9111,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
9112,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9113,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jre/Dockerfile,#!/bin/sh'; \
9114,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
9115,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
9116,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
9117,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
9118,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9119,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9120,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9121,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9122,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9123,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
9124,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9125,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9126,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9127,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9128,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9129,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
9130,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9131,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9132,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9133,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9134,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
9135,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9136,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9137,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9138,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9139,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
9140,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9141,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
9142,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
9143,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/slim/Dockerfile,# backwards compatibility shim
9144,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
9145,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9146,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
9147,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
9148,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
9149,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
9150,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9151,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/slim/Dockerfile,# basic smoke test
9152,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9153,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
9154,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jre/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9155,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jre/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9156,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jre/windows/windowsservercore-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
9157,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jre/windows/windowsservercore-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
9158,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jre/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
9159,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9160,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
9161,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
9162,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
9163,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9164,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/oracle/Dockerfile,# basic smoke test
9165,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
9166,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
9167,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
9168,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/slim/Dockerfile,# backwards compatibility shim
9169,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
9170,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9171,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
9172,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/slim/Dockerfile,# arm64v8
9173,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/slim/Dockerfile,# amd64
9174,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/slim/Dockerfile,# fallback
9175,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
9176,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
9177,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
9178,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
9179,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9180,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/slim/Dockerfile,# basic smoke test
9181,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9182,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9183,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9184,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9185,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
9186,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9187,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
9188,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9189,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
9190,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9191,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
9192,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/oracle/Dockerfile,# arm64v8
9193,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/oracle/Dockerfile,# amd64
9194,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/oracle/Dockerfile,# fallback
9195,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
9196,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9197,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/oracle/Dockerfile,# basic smoke test
9198,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
9199,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
9200,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9201,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9202,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/windows/windowsservercore/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9203,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/windows/windowsservercore/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9204,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/windows/windowsservercore/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
9205,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/windows/windowsservercore/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9206,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9207,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
9208,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/Dockerfile,# Default to UTF-8 file.encoding
9209,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9210,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/Dockerfile,#!/bin/sh'; \
9211,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
9212,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
9213,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
9214,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
9215,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
9216,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
9217,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
9218,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
9219,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9220,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
9221,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/Dockerfile,# backwards compatibility shim
9222,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
9223,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9224,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
9225,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
9226,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
9227,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
9228,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9229,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/Dockerfile,# basic smoke test
9230,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9231,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9232,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9233,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9234,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
9235,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9236,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9237,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9238,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9239,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
9240,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9241,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9242,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
9243,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
9244,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9245,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/alpine/Dockerfile,#!/bin/sh'; \
9246,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
9247,06552bdff28039988fca96ec7f810456849d420f,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9248,06552bdff28039988fca96ec7f810456849d420f,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
9249,06552bdff28039988fca96ec7f810456849d420f,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
9250,06552bdff28039988fca96ec7f810456849d420f,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9251,06552bdff28039988fca96ec7f810456849d420f,/8-jdk/alpine/Dockerfile,#!/bin/sh'; \
9252,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9253,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9254,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9255,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
9256,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9257,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9258,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
9259,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
9260,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
9261,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9262,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/oracle/Dockerfile,# basic smoke test
9263,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
9264,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9265,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9266,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9267,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
9268,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9269,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/8/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9270,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9271,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9272,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/8/jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
9273,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9274,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9275,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
9276,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9277,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9278,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
9279,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
9280,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9281,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/alpine/Dockerfile,#!/bin/sh'; \
9282,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
9283,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9284,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
9285,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
9286,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9287,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/Dockerfile,#!/bin/sh'; \
9288,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
9289,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
9290,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
9291,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)"
9292,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
9293,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
9294,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
9295,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
9296,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/8/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9297,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9298,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9299,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/8/jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
9300,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
9301,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
9302,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9303,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
9304,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/Dockerfile,# backwards compatibility shim
9305,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
9306,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9307,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
9308,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/Dockerfile,# amd64
9309,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/Dockerfile,# fallback
9310,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
9311,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
9312,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
9313,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
9314,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9315,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/Dockerfile,# basic smoke test
9316,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9317,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9318,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9319,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9320,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
9321,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9322,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9323,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
9324,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/Dockerfile,# Default to UTF-8 file.encoding
9325,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9326,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/Dockerfile,#!/bin/sh'; \
9327,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
9328,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
9329,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
9330,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
9331,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
9332,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
9333,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9334,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
9335,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
9336,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9337,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/slim/Dockerfile,#!/bin/sh'; \
9338,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
9339,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
9340,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
9341,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
9342,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
9343,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
9344,eaf1c5575ab9763caf66d8d5debb7ec089411740,/6-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9345,eaf1c5575ab9763caf66d8d5debb7ec089411740,/6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
9346,eaf1c5575ab9763caf66d8d5debb7ec089411740,/6-jdk/Dockerfile,# Default to UTF-8 file.encoding
9347,eaf1c5575ab9763caf66d8d5debb7ec089411740,/6-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9348,eaf1c5575ab9763caf66d8d5debb7ec089411740,/6-jdk/Dockerfile,#!/bin/bash'; \
9349,eaf1c5575ab9763caf66d8d5debb7ec089411740,/6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
9350,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
9351,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9352,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
9353,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
9354,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
9355,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9356,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/14/jdk/oracle/Dockerfile,# basic smoke test
9357,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
9358,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9359,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9360,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9361,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9362,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9363,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9364,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
9365,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
9366,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9367,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/Dockerfile,#!/bin/sh'; \
9368,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
9369,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
9370,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
9371,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
9372,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
9373,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9374,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
9375,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
9376,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/nanoserver-1803/Dockerfile,# https://jdk.java.net/
9377,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9378,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
9379,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9380,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
9381,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/Dockerfile,# backwards compatibility shim
9382,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
9383,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
9384,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
9385,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
9386,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
9387,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
9388,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
9389,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/Dockerfile,#!/usr/bin/env bash'; \
9390,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
9391,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/Dockerfile,# basic smoke test
9392,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
9393,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/slim/Dockerfile,# backwards compatibility shim
9394,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
9395,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
9396,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
9397,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
9398,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
9399,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
9400,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/slim/Dockerfile,# basic smoke test
9401,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
9402,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
9403,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9404,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
9405,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/Dockerfile,# backwards compatibility shim
9406,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
9407,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9408,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
9409,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
9410,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
9411,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
9412,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9413,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/Dockerfile,# basic smoke test
9414,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9415,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9416,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9417,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
9418,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9419,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
9420,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
9421,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9422,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
9423,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,# backwards compatibility shim
9424,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
9425,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9426,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
9427,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,# arm64v8
9428,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,# amd64
9429,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,# fallback
9430,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
9431,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
9432,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
9433,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
9434,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9435,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,# basic smoke test
9436,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9437,882461ade8207de7647d083009200de85eb978bc,/6-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9438,882461ade8207de7647d083009200de85eb978bc,/6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
9439,882461ade8207de7647d083009200de85eb978bc,/6-jdk/Dockerfile,# Default to UTF-8 file.encoding
9440,882461ade8207de7647d083009200de85eb978bc,/6-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9441,882461ade8207de7647d083009200de85eb978bc,/6-jdk/Dockerfile,#!/bin/sh'; \
9442,882461ade8207de7647d083009200de85eb978bc,/6-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
9443,882461ade8207de7647d083009200de85eb978bc,/6-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
9444,882461ade8207de7647d083009200de85eb978bc,/6-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
9445,882461ade8207de7647d083009200de85eb978bc,/6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
9446,d1890fa5206eee489ab6285afa2a52f409dcfdc4,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9447,d1890fa5206eee489ab6285afa2a52f409dcfdc4,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
9448,d1890fa5206eee489ab6285afa2a52f409dcfdc4,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
9449,d1890fa5206eee489ab6285afa2a52f409dcfdc4,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9450,d1890fa5206eee489ab6285afa2a52f409dcfdc4,/9-jre/Dockerfile,#!/bin/sh'; \
9451,d1890fa5206eee489ab6285afa2a52f409dcfdc4,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
9452,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
9453,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
9454,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9455,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
9456,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,# backwards compatibility shim
9457,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
9458,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
9459,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
9460,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,# arm64v8
9461,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,# amd64
9462,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,# fallback
9463,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
9464,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
9465,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
9466,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
9467,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9468,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,# basic smoke test
9469,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9470,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9471,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9472,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9473,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
9474,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9475,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/alpine/Dockerfile,# https://jdk.java.net/
9476,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
9477,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9478,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/alpine/Dockerfile,# basic smoke test
9479,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
9480,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
9481,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9482,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9483,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9484,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9485,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9486,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
9487,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9488,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9489,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9490,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9491,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9492,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9493,3057ebcdbe57f042e13274a0a87c79a81f8f2dfc,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9494,3057ebcdbe57f042e13274a0a87c79a81f8f2dfc,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9495,3057ebcdbe57f042e13274a0a87c79a81f8f2dfc,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9496,3057ebcdbe57f042e13274a0a87c79a81f8f2dfc,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
9497,3057ebcdbe57f042e13274a0a87c79a81f8f2dfc,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9498,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9499,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
9500,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/oracle/Dockerfile,# https://jdk.java.net/
9501,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
9502,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9503,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/oracle/Dockerfile,# basic smoke test
9504,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
9505,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9506,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
9507,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/oracle/Dockerfile,# http://jdk.java.net/
9508,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
9509,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
9510,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/oracle/Dockerfile,# basic smoke test
9511,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
9512,30b27d0b3b16ae395859ba47610b858076324508,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9513,30b27d0b3b16ae395859ba47610b858076324508,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
9514,30b27d0b3b16ae395859ba47610b858076324508,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
9515,30b27d0b3b16ae395859ba47610b858076324508,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9516,30b27d0b3b16ae395859ba47610b858076324508,/9-jdk/Dockerfile,#!/bin/sh'; \
9517,30b27d0b3b16ae395859ba47610b858076324508,/9-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
9518,30b27d0b3b16ae395859ba47610b858076324508,/9-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
9519,30b27d0b3b16ae395859ba47610b858076324508,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
9520,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
9521,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
9522,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9523,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/Dockerfile,# Default to UTF-8 file.encoding
9524,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/Dockerfile,# backwards compatibility shim
9525,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
9526,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9527,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
9528,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/Dockerfile,#!/usr/bin/env bash'; \
9529,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
9530,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
9531,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9532,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/Dockerfile,# basic smoke test
9533,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9534,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9535,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9536,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9537,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9538,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9539,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9540,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
9541,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/oracle/Dockerfile,# http://jdk.java.net/
9542,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
9543,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
9544,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/oracle/Dockerfile,# basic smoke test
9545,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
9546,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9547,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
9548,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
9549,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9550,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/Dockerfile,#!/bin/sh'; \
9551,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
9552,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
9553,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
9554,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
9555,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
9556,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
9557,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9558,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9559,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
9560,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9561,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
9562,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
9563,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
9564,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9565,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9566,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9567,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9568,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
9569,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9570,0cdf33bad33f7297e125b5ae8625299654eb34ae,/8/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9571,0cdf33bad33f7297e125b5ae8625299654eb34ae,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9572,0cdf33bad33f7297e125b5ae8625299654eb34ae,/8/jdk/windows/windowsservercore-1803/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
9573,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9574,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
9575,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
9576,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9577,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/slim/Dockerfile,#!/bin/sh'; \
9578,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
9579,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
9580,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
9581,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
9582,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
9583,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
9584,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9585,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
9586,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
9587,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9588,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
9589,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
9590,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
9591,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
9592,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
9593,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
9594,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9595,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
9596,054cea7585e6c0e4e98d133378ea38061a2ae3ac,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9597,054cea7585e6c0e4e98d133378ea38061a2ae3ac,/7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
9598,054cea7585e6c0e4e98d133378ea38061a2ae3ac,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
9599,054cea7585e6c0e4e98d133378ea38061a2ae3ac,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9600,054cea7585e6c0e4e98d133378ea38061a2ae3ac,/7-jre/Dockerfile,#!/bin/sh'; \
9601,054cea7585e6c0e4e98d133378ea38061a2ae3ac,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
9602,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
9603,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-6-jdk/Dockerfile,# Default to UTF-8 file.encoding
9604,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
9605,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9606,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
9607,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
9608,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9609,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/Dockerfile,#!/bin/sh'; \
9610,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
9611,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
9612,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
9613,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
9614,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
9615,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
9616,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
9617,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
9618,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
9619,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9620,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9621,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9622,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
9623,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
9624,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
9625,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9626,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/oracle/Dockerfile,# basic smoke test
9627,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
9628,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
9629,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9630,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
9631,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9632,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
9633,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9634,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/oracle/Dockerfile,# basic smoke test
9635,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
9636,a7b5f34846cbad5712619ea11d686ad6be56e922,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9637,a7b5f34846cbad5712619ea11d686ad6be56e922,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9638,a7b5f34846cbad5712619ea11d686ad6be56e922,/11/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
9639,a7b5f34846cbad5712619ea11d686ad6be56e922,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9640,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9641,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
9642,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
9643,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9644,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/8-jre/Dockerfile,#!/bin/sh'; \
9645,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
9646,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
9647,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
9648,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
9649,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/nanoserver-1809/Dockerfile,# https://jdk.java.net/
9650,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9651,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9652,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
9653,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/Dockerfile,# Default to UTF-8 file.encoding
9654,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9655,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/Dockerfile,#!/bin/sh'; \
9656,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
9657,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
9658,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
9659,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
9660,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
9661,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
9662,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9663,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
9664,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/oracle/Dockerfile,# http://jdk.java.net/
9665,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
9666,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
9667,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/oracle/Dockerfile,# basic smoke test
9668,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
9669,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
9670,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
9671,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9672,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
9673,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/Dockerfile,# backwards compatibility shim
9674,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
9675,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9676,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
9677,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
9678,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
9679,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
9680,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9681,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/Dockerfile,# basic smoke test
9682,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9683,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9684,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9685,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9686,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9687,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9688,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
9689,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
9690,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9691,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
9692,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/Dockerfile,# backwards compatibility shim
9693,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
9694,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9695,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
9696,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
9697,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
9698,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
9699,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9700,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/Dockerfile,# basic smoke test
9701,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9702,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9703,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9704,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9705,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9706,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9707,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
9708,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
9709,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/slim/Dockerfile,# backwards compatibility shim
9710,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
9711,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9712,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
9713,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/slim/Dockerfile,# arm64v8
9714,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/slim/Dockerfile,# amd64
9715,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/slim/Dockerfile,# fallback
9716,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
9717,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
9718,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
9719,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
9720,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9721,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/slim/Dockerfile,# basic smoke test
9722,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9723,c9b01ac2d89222ede86d8ce47becfa8ec869dd3b,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9724,c9b01ac2d89222ede86d8ce47becfa8ec869dd3b,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
9725,c9b01ac2d89222ede86d8ce47becfa8ec869dd3b,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
9726,c9b01ac2d89222ede86d8ce47becfa8ec869dd3b,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9727,c9b01ac2d89222ede86d8ce47becfa8ec869dd3b,/9-jdk/Dockerfile,#!/bin/sh'; \
9728,c9b01ac2d89222ede86d8ce47becfa8ec869dd3b,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
9729,15835397954c9ec123e42e685035ecd239e0a1db,/11/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
9730,15835397954c9ec123e42e685035ecd239e0a1db,/11/jdk/windows/nanoserver-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
9731,15835397954c9ec123e42e685035ecd239e0a1db,/11/jdk/windows/nanoserver-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
9732,15835397954c9ec123e42e685035ecd239e0a1db,/11/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9733,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9734,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9735,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9736,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9737,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9738,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/8/jre/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
9739,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/8/jre/windows/nanoserver-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
9740,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/8/jre/windows/nanoserver-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
9741,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9742,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
9743,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
9744,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9745,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
9746,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
9747,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
9748,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
9749,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
9750,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
9751,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9752,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
9753,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9754,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9755,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9756,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
9757,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9758,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9759,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9760,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9761,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
9762,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9763,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9764,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
9765,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
9766,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9767,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/slim/Dockerfile,#!/bin/sh'; \
9768,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
9769,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
9770,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
9771,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
9772,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
9773,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
9774,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
9775,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9776,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9777,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
9778,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
9779,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
9780,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9781,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
9782,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
9783,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9784,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jdk/Dockerfile,#!/bin/sh'; \
9785,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
9786,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
9787,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
9788,0476812eabd178c77534f3c03bd0a2673822d7b9,/7-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9789,0476812eabd178c77534f3c03bd0a2673822d7b9,/7-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
9790,0476812eabd178c77534f3c03bd0a2673822d7b9,/7-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
9791,0476812eabd178c77534f3c03bd0a2673822d7b9,/7-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9792,0476812eabd178c77534f3c03bd0a2673822d7b9,/7-jdk/alpine/Dockerfile,#!/bin/sh'; \
9793,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
9794,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-8-jre/Dockerfile,# Default to UTF-8 file.encoding
9795,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
9796,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
9797,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
9798,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9799,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
9800,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/oracle/Dockerfile,# http://jdk.java.net/
9801,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
9802,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
9803,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/oracle/Dockerfile,# basic smoke test
9804,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
9805,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9806,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9807,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9808,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
9809,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9810,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
9811,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9812,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/oraclelinux7/Dockerfile,# Default to UTF-8 file.encoding
9813,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
9814,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
9815,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/oraclelinux7/Dockerfile,# arm64v8
9816,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/oraclelinux7/Dockerfile,# amd64
9817,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/oraclelinux7/Dockerfile,# fallback
9818,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/oraclelinux7/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
9819,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9820,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
9821,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/oraclelinux7/Dockerfile,# basic smoke test
9822,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9823,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
9824,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
9825,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9826,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
9827,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/Dockerfile,# backwards compatibility shim
9828,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
9829,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9830,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
9831,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
9832,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
9833,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
9834,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9835,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/Dockerfile,# basic smoke test
9836,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9837,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9838,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
9839,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
9840,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9841,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/Dockerfile,#!/bin/sh'; \
9842,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
9843,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
9844,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
9845,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
9846,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
9847,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
9848,2dd0496901a9c01c78895d0e6618b36c08f78bde,/openjdk-8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9849,2dd0496901a9c01c78895d0e6618b36c08f78bde,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
9850,2dd0496901a9c01c78895d0e6618b36c08f78bde,/openjdk-8-jre/Dockerfile,# Default to UTF-8 file.encoding
9851,2dd0496901a9c01c78895d0e6618b36c08f78bde,/openjdk-8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9852,2dd0496901a9c01c78895d0e6618b36c08f78bde,/openjdk-8-jre/Dockerfile,#!/bin/bash'; \
9853,2dd0496901a9c01c78895d0e6618b36c08f78bde,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
9854,2dd0496901a9c01c78895d0e6618b36c08f78bde,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
9855,2dd0496901a9c01c78895d0e6618b36c08f78bde,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
9856,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
9857,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9858,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9859,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
9860,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
9861,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/slim-buster/Dockerfile,# backwards compatibility shim
9862,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
9863,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/slim-buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
9864,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
9865,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/slim-buster/Dockerfile,# arm64v8
9866,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/slim-buster/Dockerfile,# amd64
9867,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/slim-buster/Dockerfile,# fallback
9868,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
9869,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
9870,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
9871,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
9872,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9873,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/slim-buster/Dockerfile,# basic smoke test
9874,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9875,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9876,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
9877,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
9878,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9879,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/Dockerfile,#!/bin/sh'; \
9880,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
9881,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
9882,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
9883,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
9884,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
9885,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9886,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
9887,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9888,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
9889,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/7-jdk/Dockerfile,# Default to UTF-8 file.encoding
9890,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9891,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/7-jdk/Dockerfile,#!/bin/sh'; \
9892,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
9893,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/alpine/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9894,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
9895,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9896,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/alpine/Dockerfile,# basic smoke test
9897,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
9898,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9899,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-6"
9900,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
9901,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9902,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/slim/Dockerfile,#!/bin/sh'; \
9903,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
9904,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
9905,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
9906,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
9907,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
9908,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
9909,c2a9c2169b3cb215e3200440bc1cc2d6a2284d8b,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
9910,c2a9c2169b3cb215e3200440bc1cc2d6a2284d8b,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
9911,c2a9c2169b3cb215e3200440bc1cc2d6a2284d8b,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
9912,c2a9c2169b3cb215e3200440bc1cc2d6a2284d8b,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
9913,fb0dd5fe5842959f774c60da6195e2d61b813fdd,/7-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9914,fb0dd5fe5842959f774c60da6195e2d61b813fdd,/7-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
9915,fb0dd5fe5842959f774c60da6195e2d61b813fdd,/7-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
9916,fb0dd5fe5842959f774c60da6195e2d61b813fdd,/7-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9917,fb0dd5fe5842959f774c60da6195e2d61b813fdd,/7-jre/alpine/Dockerfile,#!/bin/sh'; \
9918,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
9919,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9920,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
9921,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jdk/Dockerfile,# backwards compatibility shim
9922,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
9923,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jdk/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
9924,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
9925,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
9926,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
9927,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
9928,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
9929,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jdk/Dockerfile,#!/usr/bin/env bash'; \
9930,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
9931,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
9932,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jdk/Dockerfile,# basic smoke test
9933,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9934,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9935,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9936,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
9937,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9938,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9939,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9940,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9941,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9942,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9943,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
9944,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/nanoserver-1803/Dockerfile,# https://jdk.java.net/
9945,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9946,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
9947,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
9948,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/slim/Dockerfile,# backwards compatibility shim
9949,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
9950,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
9951,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
9952,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
9953,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
9954,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
9955,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
9956,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
9957,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
9958,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
9959,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/slim/Dockerfile,# basic smoke test
9960,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
9961,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9962,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
9963,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/Dockerfile,# backwards compatibility shim
9964,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
9965,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
9966,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
9967,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
9968,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
9969,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
9970,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
9971,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/Dockerfile,#!/usr/bin/env bash'; \
9972,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
9973,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/Dockerfile,# basic smoke test
9974,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9975,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9976,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9977,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9978,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# https://jdk.java.net/
9979,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9980,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9981,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
9982,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/oracle/Dockerfile,# http://jdk.java.net/
9983,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
9984,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
9985,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/oracle/Dockerfile,# basic smoke test
9986,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
9987,200ecf22e5a23cb48cbb3ce47aa08aa3b49a0d2d,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
9988,200ecf22e5a23cb48cbb3ce47aa08aa3b49a0d2d,/openjdk-8-jre/Dockerfile,# Default to UTF-8 file.encoding
9989,200ecf22e5a23cb48cbb3ce47aa08aa3b49a0d2d,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
9990,200ecf22e5a23cb48cbb3ce47aa08aa3b49a0d2d,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
9991,200ecf22e5a23cb48cbb3ce47aa08aa3b49a0d2d,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/793210
# and https://github.com/docker-library/java/issues/46#issuecomment-119026586"
9992,200ecf22e5a23cb48cbb3ce47aa08aa3b49a0d2d,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
9993,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9994,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9995,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
9996,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
9997,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
9998,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9999,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
10000,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/nanoserver-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
10001,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/nanoserver-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
10002,9859b8586dd2511d005c84694736e2121ceb11d7,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
10003,9859b8586dd2511d005c84694736e2121ceb11d7,/openjdk-6-jre/Dockerfile,# Default to UTF-8 file.encoding
10004,9859b8586dd2511d005c84694736e2121ceb11d7,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
10005,318ba809c9f0e3c7095b363c5a31409ee6880208,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
10006,318ba809c9f0e3c7095b363c5a31409ee6880208,/openjdk-6-jdk/Dockerfile,# Default to UTF-8 file.encoding
10007,318ba809c9f0e3c7095b363c5a31409ee6880208,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
10008,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10009,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
10010,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
10011,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10012,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/Dockerfile,#!/bin/sh'; \
10013,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10014,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
10015,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10016,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10017,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10018,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10019,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
10020,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10021,5257acb51a1230a2dc46b1c349d674a725562f9d,/7-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10022,5257acb51a1230a2dc46b1c349d674a725562f9d,/7-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
10023,5257acb51a1230a2dc46b1c349d674a725562f9d,/7-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
10024,5257acb51a1230a2dc46b1c349d674a725562f9d,/7-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10025,5257acb51a1230a2dc46b1c349d674a725562f9d,/7-jdk/alpine/Dockerfile,#!/bin/sh'; \
10026,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
10027,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
10028,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/oracle/Dockerfile,# http://jdk.java.net/
10029,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
10030,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
10031,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/oracle/Dockerfile,# basic smoke test
10032,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
10033,032278c8c0f77b2d5ba6c63a6cfb2b9ea54aa75d,/13/jdk/alpine/Dockerfile,# https://jdk.java.net/
10034,032278c8c0f77b2d5ba6c63a6cfb2b9ea54aa75d,/13/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
10035,032278c8c0f77b2d5ba6c63a6cfb2b9ea54aa75d,/13/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
10036,032278c8c0f77b2d5ba6c63a6cfb2b9ea54aa75d,/13/jdk/alpine/Dockerfile,# basic smoke test
10037,032278c8c0f77b2d5ba6c63a6cfb2b9ea54aa75d,/13/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
10038,f47afa13905074605a616adf3b9c01c396ed74a8,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
10039,f47afa13905074605a616adf3b9c01c396ed74a8,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
10040,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10041,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10042,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10043,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
10044,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
10045,c394ed4d70c8c1d6962955aa23be0555671ce4c9,/12/jdk/alpine/Dockerfile,# http://jdk.java.net/
10046,c394ed4d70c8c1d6962955aa23be0555671ce4c9,/12/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
10047,c394ed4d70c8c1d6962955aa23be0555671ce4c9,/12/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
10048,c394ed4d70c8c1d6962955aa23be0555671ce4c9,/12/jdk/alpine/Dockerfile,# basic smoke test
10049,c394ed4d70c8c1d6962955aa23be0555671ce4c9,/12/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
10050,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/8/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10051,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/8/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10052,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/8/jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
10053,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
10054,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
10055,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
10056,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/Dockerfile,# backwards compatibility shim
10057,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
10058,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
10059,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
10060,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
10061,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
10062,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
10063,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
10064,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/Dockerfile,#!/usr/bin/env bash'; \
10065,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
10066,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
10067,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/Dockerfile,# basic smoke test
10068,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
10069,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
10070,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
10071,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
10072,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/Dockerfile,# backwards compatibility shim
10073,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
10074,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
10075,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
10076,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
10077,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
10078,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
10079,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
10080,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/Dockerfile,# basic smoke test
10081,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
10082,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
10083,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
10084,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
10085,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10086,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10087,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10088,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
10089,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10090,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10091,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10092,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10093,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
10094,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10095,4016bc190db90b9254f01ea808a91981f50500a2,/10/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10096,4016bc190db90b9254f01ea808a91981f50500a2,/10/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10097,4016bc190db90b9254f01ea808a91981f50500a2,/10/jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
10098,c394ed4d70c8c1d6962955aa23be0555671ce4c9,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10099,c394ed4d70c8c1d6962955aa23be0555671ce4c9,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10100,c394ed4d70c8c1d6962955aa23be0555671ce4c9,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
10101,c394ed4d70c8c1d6962955aa23be0555671ce4c9,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10102,68c66124d85712115f1aefa0c60e766ac8e7da66,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
10103,68c66124d85712115f1aefa0c60e766ac8e7da66,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
10104,68c66124d85712115f1aefa0c60e766ac8e7da66,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
10105,68c66124d85712115f1aefa0c60e766ac8e7da66,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
10106,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10107,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10108,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10109,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
10110,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10111,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
10112,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
10113,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
10114,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
10115,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
10116,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
10117,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/oracle/Dockerfile,# basic smoke test
10118,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
10119,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
10120,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
10121,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
10122,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
10123,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
10124,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/oracle/Dockerfile,# arm64v8
10125,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/oracle/Dockerfile,# amd64
10126,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/oracle/Dockerfile,# fallback
10127,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
10128,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
10129,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/oracle/Dockerfile,# basic smoke test
10130,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
10131,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10132,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10133,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
10134,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10135,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10136,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
10137,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
10138,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10139,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/Dockerfile,#!/bin/sh'; \
10140,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10141,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10142,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10143,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10144,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10145,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10146,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10147,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10148,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-6"
10149,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
10150,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10151,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/slim/Dockerfile,#!/bin/sh'; \
10152,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10153,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10154,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10155,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10156,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10157,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10158,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10159,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
10160,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
10161,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10162,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
10163,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10164,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10165,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
10166,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)"
10167,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10168,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10169,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10170,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10171,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10172,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10173,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10174,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10175,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
10176,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10177,ddfe4a29dd66d34375d6ebc4455c550524672e3e,/15/jdk/alpine/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
10178,ddfe4a29dd66d34375d6ebc4455c550524672e3e,/15/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
10179,ddfe4a29dd66d34375d6ebc4455c550524672e3e,/15/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
10180,ddfe4a29dd66d34375d6ebc4455c550524672e3e,/15/jdk/alpine/Dockerfile,# basic smoke test
10181,ddfe4a29dd66d34375d6ebc4455c550524672e3e,/15/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
10182,45dce52df7deb6a4b6ae7ad9c4b9f3cb7dc8db91,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10183,45dce52df7deb6a4b6ae7ad9c4b9f3cb7dc8db91,/7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
10184,45dce52df7deb6a4b6ae7ad9c4b9f3cb7dc8db91,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
10185,45dce52df7deb6a4b6ae7ad9c4b9f3cb7dc8db91,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10186,45dce52df7deb6a4b6ae7ad9c4b9f3cb7dc8db91,/7-jre/Dockerfile,#!/bin/sh'; \
10187,45dce52df7deb6a4b6ae7ad9c4b9f3cb7dc8db91,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
10188,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10189,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
10190,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jdk/Dockerfile,# Default to UTF-8 file.encoding
10191,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10192,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jdk/Dockerfile,#!/bin/sh'; \
10193,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10194,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10195,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10196,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
10197,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
10198,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-9-jre/Dockerfile,# Default to UTF-8 file.encoding
10199,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-9-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
10200,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-9-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
10201,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-9-jre/Dockerfile,"# see https://bugs.debian.org/793210
# and https://github.com/docker-library/java/issues/46#issuecomment-119026586"
10202,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
10203,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
10204,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
10205,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/oracle/Dockerfile,# https://jdk.java.net/
10206,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
10207,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
10208,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/oracle/Dockerfile,# basic smoke test
10209,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
10210,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
10211,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
10212,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/slim/Dockerfile,# backwards compatibility shim
10213,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
10214,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
10215,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
10216,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
10217,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
10218,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
10219,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
10220,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/slim/Dockerfile,# basic smoke test
10221,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
10222,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
10223,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10224,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10225,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10226,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
10227,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10228,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
10229,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
10230,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/slim-buster/Dockerfile,# backwards compatibility shim
10231,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
10232,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/slim-buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
10233,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
10234,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
10235,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/slim-buster/Dockerfile,# amd64
10236,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/slim-buster/Dockerfile,# fallback
10237,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/slim-buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
10238,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/slim-buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
10239,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/slim-buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
10240,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
10241,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
10242,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
10243,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
10244,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/slim-buster/Dockerfile,# basic smoke test
10245,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10246,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10247,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10248,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
10249,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
10250,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10251,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10252,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10253,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
10254,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10255,554ff38a160f896ddd7f0fdca1cd34817e253a56,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
10256,554ff38a160f896ddd7f0fdca1cd34817e253a56,/13/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
10257,554ff38a160f896ddd7f0fdca1cd34817e253a56,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
10258,554ff38a160f896ddd7f0fdca1cd34817e253a56,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
10259,554ff38a160f896ddd7f0fdca1cd34817e253a56,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
10260,554ff38a160f896ddd7f0fdca1cd34817e253a56,/13/jdk/oracle/Dockerfile,# basic smoke test
10261,554ff38a160f896ddd7f0fdca1cd34817e253a56,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
10262,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/8/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10263,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/8/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10264,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/8/jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
10265,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
10266,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
10267,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/oracle/Dockerfile,# http://jdk.java.net/
10268,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
10269,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
10270,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/oracle/Dockerfile,# basic smoke test
10271,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
10272,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10273,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10274,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10275,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
10276,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10277,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
10278,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
10279,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/slim/Dockerfile,# backwards compatibility shim
10280,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
10281,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
10282,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
10283,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
10284,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
10285,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
10286,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
10287,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/slim/Dockerfile,# basic smoke test
10288,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
10289,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
10290,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10291,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
10292,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
10293,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10294,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/slim/Dockerfile,#!/bin/sh'; \
10295,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10296,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10297,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
10298,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10299,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10300,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10301,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10302,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
10303,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
10304,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
10305,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
10306,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
10307,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
10308,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/oracle/Dockerfile,# basic smoke test
10309,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
10310,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10311,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
10312,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
10313,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10314,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/Dockerfile,#!/bin/sh'; \
10315,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10316,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10317,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10318,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10319,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10320,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10321,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10322,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10323,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10324,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10325,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
10326,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10327,2e2d5c3f7ca9303b53d9d8f8ce22c0232a152d5f,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10328,2e2d5c3f7ca9303b53d9d8f8ce22c0232a152d5f,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
10329,2e2d5c3f7ca9303b53d9d8f8ce22c0232a152d5f,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
10330,2e2d5c3f7ca9303b53d9d8f8ce22c0232a152d5f,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10331,2e2d5c3f7ca9303b53d9d8f8ce22c0232a152d5f,/9-jre/Dockerfile,#!/bin/sh'; \
10332,2e2d5c3f7ca9303b53d9d8f8ce22c0232a152d5f,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
10333,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
10334,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
10335,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,# Default to UTF-8 file.encoding
10336,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,# backwards compatibility shim
10337,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
10338,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
10339,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
10340,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
10341,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,# amd64
10342,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,# fallback
10343,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
10344,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
10345,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
10346,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
10347,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,#!/usr/bin/env bash'; \
10348,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
10349,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
10350,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,# basic smoke test
10351,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
10352,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
10353,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/oracle/Dockerfile,# https://jdk.java.net/
10354,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
10355,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
10356,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/oracle/Dockerfile,# basic smoke test
10357,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
10358,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10359,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
10360,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
10361,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10362,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/slim/Dockerfile,#!/bin/sh'; \
10363,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10364,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10365,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10366,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10367,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10368,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10369,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10370,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10371,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
10372,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
10373,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
10374,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
10375,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
10376,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
10377,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
10378,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/nanoserver-1803/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
10379,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
10380,906bdc14f53c6eff33c007511701ef0444705993,/9-jdk/windows/windowsservercore/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10381,906bdc14f53c6eff33c007511701ef0444705993,/9-jdk/windows/windowsservercore/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10382,906bdc14f53c6eff33c007511701ef0444705993,/9-jdk/windows/windowsservercore/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
10383,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10384,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10385,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10386,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
10387,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10388,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10389,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
10390,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
10391,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10392,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jre/Dockerfile,#!/bin/sh'; \
10393,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10394,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10395,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10396,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10397,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10398,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10399,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10400,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
10401,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
10402,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10403,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/slim/Dockerfile,#!/bin/sh'; \
10404,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10405,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10406,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10407,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10408,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10409,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10410,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10411,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/16/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
10412,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/16/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
10413,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/16/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
10414,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/16/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
10415,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/16/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
10416,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/16/jdk/oracle/Dockerfile,# arm64v8
10417,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/16/jdk/oracle/Dockerfile,# amd64
10418,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/16/jdk/oracle/Dockerfile,# fallback
10419,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/16/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
10420,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/16/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
10421,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/16/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
10422,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/16/jdk/oracle/Dockerfile,# basic smoke test
10423,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/16/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
10424,89851f0abc3a83cfad5248102f379d6a0bd3951a,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10425,89851f0abc3a83cfad5248102f379d6a0bd3951a,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
10426,89851f0abc3a83cfad5248102f379d6a0bd3951a,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
10427,89851f0abc3a83cfad5248102f379d6a0bd3951a,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10428,89851f0abc3a83cfad5248102f379d6a0bd3951a,/9-jdk/Dockerfile,#!/bin/sh'; \
10429,89851f0abc3a83cfad5248102f379d6a0bd3951a,/9-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
10430,89851f0abc3a83cfad5248102f379d6a0bd3951a,/9-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
10431,89851f0abc3a83cfad5248102f379d6a0bd3951a,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
10432,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
10433,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
10434,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
10435,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
10436,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
10437,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
10438,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/oracle/Dockerfile,# basic smoke test
10439,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
10440,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10441,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10442,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10443,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
10444,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10445,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
10446,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
10447,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/oracle/Dockerfile,# https://jdk.java.net/
10448,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
10449,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
10450,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/oracle/Dockerfile,# basic smoke test
10451,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
10452,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10453,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
10454,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
10455,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10456,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/8-jdk/Dockerfile,#!/bin/sh'; \
10457,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
10458,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
10459,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
10460,bbb7c0995d9ab0ffec987f02f515862925553d5e,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10461,bbb7c0995d9ab0ffec987f02f515862925553d5e,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
10462,bbb7c0995d9ab0ffec987f02f515862925553d5e,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
10463,bbb7c0995d9ab0ffec987f02f515862925553d5e,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10464,bbb7c0995d9ab0ffec987f02f515862925553d5e,/8-jdk/Dockerfile,#!/bin/sh'; \
10465,bbb7c0995d9ab0ffec987f02f515862925553d5e,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
10466,bbb7c0995d9ab0ffec987f02f515862925553d5e,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
10467,bbb7c0995d9ab0ffec987f02f515862925553d5e,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
10468,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
10469,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/Dockerfile,# backwards compatibility shim
10470,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
10471,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
10472,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
10473,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
10474,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
10475,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/Dockerfile,# basic smoke test
10476,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
10477,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
10478,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jdk/slim/Dockerfile,# backwards compatibility shim
10479,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
10480,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
10481,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
10482,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jdk/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
10483,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
10484,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
10485,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
10486,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
10487,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
10488,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
10489,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jdk/slim/Dockerfile,# basic smoke test
10490,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10491,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
10492,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
10493,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10494,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/slim/Dockerfile,#!/bin/sh'; \
10495,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10496,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
10497,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10498,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10499,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10500,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10501,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
10502,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10503,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10504,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10505,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10506,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
10507,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10508,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
10509,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
10510,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/slim/Dockerfile,# backwards compatibility shim
10511,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
10512,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
10513,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
10514,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
10515,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
10516,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
10517,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
10518,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
10519,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
10520,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
10521,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/slim/Dockerfile,# basic smoke test
10522,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
10523,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10524,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10525,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10526,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
10527,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10528,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10529,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10530,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10531,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
10532,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10533,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10534,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10535,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10536,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
10537,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10538,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10539,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10540,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10541,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
10542,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10543,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10544,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
10545,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jdk/Dockerfile,# Default to UTF-8 file.encoding
10546,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10547,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jdk/Dockerfile,#!/bin/sh'; \
10548,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10549,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10550,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
10551,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10552,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10553,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10554,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10555,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10556,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux8/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
10557,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux8/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
10558,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux8/Dockerfile,# Default to UTF-8 file.encoding
10559,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux8/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
10560,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux8/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
10561,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux8/Dockerfile,# arm64v8
10562,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux8/Dockerfile,# amd64
10563,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux8/Dockerfile,# fallback
10564,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux8/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
10565,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux8/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
10566,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux8/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
10567,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux8/Dockerfile,# basic smoke test
10568,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux8/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
10569,56a204b2096324ffc854725cb83eeaa22325d9d2,/openjdk-9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10570,56a204b2096324ffc854725cb83eeaa22325d9d2,/openjdk-9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
10571,56a204b2096324ffc854725cb83eeaa22325d9d2,/openjdk-9-jdk/Dockerfile,# Default to UTF-8 file.encoding
10572,56a204b2096324ffc854725cb83eeaa22325d9d2,/openjdk-9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10573,56a204b2096324ffc854725cb83eeaa22325d9d2,/openjdk-9-jdk/Dockerfile,#!/bin/bash'; \
10574,56a204b2096324ffc854725cb83eeaa22325d9d2,/openjdk-9-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
10575,56a204b2096324ffc854725cb83eeaa22325d9d2,/openjdk-9-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
10576,56a204b2096324ffc854725cb83eeaa22325d9d2,/openjdk-9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
10577,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10578,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
10579,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
10580,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10581,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/slim/Dockerfile,#!/bin/sh'; \
10582,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10583,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10584,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
10585,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10586,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10587,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10588,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10589,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10590,68069caddc7bd0edf9b2e4458ade3ace64668ac6,/15/jdk/alpine/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
10591,68069caddc7bd0edf9b2e4458ade3ace64668ac6,/15/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
10592,68069caddc7bd0edf9b2e4458ade3ace64668ac6,/15/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
10593,68069caddc7bd0edf9b2e4458ade3ace64668ac6,/15/jdk/alpine/Dockerfile,"# see ""java-cacerts"" package installed above (which maintains ""/etc/ssl/certs/java/cacerts"" for us)"
10594,68069caddc7bd0edf9b2e4458ade3ace64668ac6,/15/jdk/alpine/Dockerfile,# basic smoke test
10595,68069caddc7bd0edf9b2e4458ade3ace64668ac6,/15/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
10596,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/8-jdk/windows/nanoserver/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10597,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/8-jdk/windows/nanoserver/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10598,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/8-jdk/windows/nanoserver/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
10599,a3f06bcbc86d16912a309cf4538a00caf9a6100c,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10600,a3f06bcbc86d16912a309cf4538a00caf9a6100c,/7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
10601,a3f06bcbc86d16912a309cf4538a00caf9a6100c,/7-jdk/Dockerfile,# Default to UTF-8 file.encoding
10602,a3f06bcbc86d16912a309cf4538a00caf9a6100c,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10603,a3f06bcbc86d16912a309cf4538a00caf9a6100c,/7-jdk/Dockerfile,#!/bin/sh'; \
10604,a3f06bcbc86d16912a309cf4538a00caf9a6100c,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
10605,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10606,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
10607,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jdk/Dockerfile,# Default to UTF-8 file.encoding
10608,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10609,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jdk/Dockerfile,#!/bin/sh'; \
10610,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10611,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10612,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10613,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10614,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
10615,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
10616,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
10617,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
10618,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
10619,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,# backwards compatibility shim
10620,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
10621,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
10622,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
10623,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,# arm64v8
10624,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,# amd64
10625,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,# fallback
10626,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
10627,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
10628,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
10629,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
10630,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
10631,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,# basic smoke test
10632,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
10633,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
10634,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
10635,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
10636,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/Dockerfile,# backwards compatibility shim
10637,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
10638,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
10639,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
10640,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
10641,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
10642,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
10643,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
10644,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/Dockerfile,#!/usr/bin/env bash'; \
10645,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
10646,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
10647,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/Dockerfile,# basic smoke test
10648,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10649,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
10650,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/Dockerfile,# Default to UTF-8 file.encoding
10651,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10652,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/Dockerfile,#!/bin/sh'; \
10653,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10654,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10655,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
10656,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10657,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10658,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10659,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10660,882461ade8207de7647d083009200de85eb978bc,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10661,882461ade8207de7647d083009200de85eb978bc,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
10662,882461ade8207de7647d083009200de85eb978bc,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
10663,882461ade8207de7647d083009200de85eb978bc,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10664,882461ade8207de7647d083009200de85eb978bc,/8-jre/Dockerfile,#!/bin/sh'; \
10665,882461ade8207de7647d083009200de85eb978bc,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
10666,882461ade8207de7647d083009200de85eb978bc,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10667,882461ade8207de7647d083009200de85eb978bc,/8-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10668,882461ade8207de7647d083009200de85eb978bc,/8-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10669,882461ade8207de7647d083009200de85eb978bc,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
10670,882461ade8207de7647d083009200de85eb978bc,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
10671,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10672,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10673,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10674,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
10675,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10676,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
10677,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-8-jre/Dockerfile,# Default to UTF-8 file.encoding
10678,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
10679,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
10680,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
10681,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux8/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
10682,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux8/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
10683,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux8/Dockerfile,# Default to UTF-8 file.encoding
10684,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux8/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
10685,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux8/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
10686,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux8/Dockerfile,# arm64v8
10687,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux8/Dockerfile,# amd64
10688,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux8/Dockerfile,# fallback
10689,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux8/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
10690,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux8/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
10691,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux8/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
10692,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux8/Dockerfile,# basic smoke test
10693,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux8/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
10694,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10695,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10696,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10697,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
10698,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10699,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
10700,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
10701,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
10702,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10703,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10704,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
10705,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
10706,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
10707,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
10708,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10709,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
10710,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
10711,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10712,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/slim/Dockerfile,#!/bin/sh'; \
10713,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10714,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10715,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
10716,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10717,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10718,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10719,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10720,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
10721,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
10722,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/slim/Dockerfile,# backwards compatibility shim
10723,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
10724,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
10725,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
10726,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
10727,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
10728,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
10729,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
10730,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
10731,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
10732,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
10733,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/slim/Dockerfile,# basic smoke test
10734,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10735,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
10736,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/Dockerfile,# Default to UTF-8 file.encoding
10737,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10738,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/Dockerfile,#!/bin/sh'; \
10739,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10740,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10741,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10742,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10743,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10744,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10745,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10746,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10747,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
10748,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
10749,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
10750,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
10751,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/6-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10752,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/6-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-6"
10753,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/6-jre/Dockerfile,# Default to UTF-8 file.encoding
10754,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/6-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10755,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/6-jre/Dockerfile,#!/bin/sh'; \
10756,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/6-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10757,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/6-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10758,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/6-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10759,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/6-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10760,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/6-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10761,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10762,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/8-jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10763,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/8-jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10764,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/8-jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
10765,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10766,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
10767,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
10768,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10769,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jre/alpine/Dockerfile,#!/bin/sh'; \
10770,6882089f1c079469c3e2cadca1ed8371fb8495f2,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10771,6882089f1c079469c3e2cadca1ed8371fb8495f2,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
10772,6882089f1c079469c3e2cadca1ed8371fb8495f2,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
10773,6882089f1c079469c3e2cadca1ed8371fb8495f2,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10774,6882089f1c079469c3e2cadca1ed8371fb8495f2,/9-jdk/Dockerfile,#!/bin/sh'; \
10775,6882089f1c079469c3e2cadca1ed8371fb8495f2,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
10776,d63214d23aad827190c599e23351bd0bdd7dcadc,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
10777,d63214d23aad827190c599e23351bd0bdd7dcadc,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
10778,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
10779,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
10780,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/oracle/Dockerfile,# http://jdk.java.net/
10781,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
10782,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
10783,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/oracle/Dockerfile,# basic smoke test
10784,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
10785,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
10786,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
10787,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
10788,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
10789,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/Dockerfile,# backwards compatibility shim
10790,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
10791,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
10792,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
10793,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
10794,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
10795,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
10796,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
10797,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/Dockerfile,# basic smoke test
10798,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
10799,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10800,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
10801,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
10802,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10803,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/slim/Dockerfile,#!/bin/sh'; \
10804,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10805,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10806,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10807,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10808,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10809,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10810,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10811,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
10812,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
10813,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10814,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/slim/Dockerfile,#!/bin/sh'; \
10815,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10816,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10817,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
10818,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10819,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10820,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10821,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10822,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10823,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
10824,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
10825,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10826,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/slim/Dockerfile,#!/bin/sh'; \
10827,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10828,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10829,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (a case of https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
10830,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10831,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10832,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10833,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10834,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10835,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10836,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10837,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
10838,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10839,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
10840,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
10841,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/slim/Dockerfile,# backwards compatibility shim
10842,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
10843,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/slim/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
10844,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
10845,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
10846,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
10847,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
10848,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
10849,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
10850,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
10851,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
10852,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/slim/Dockerfile,# basic smoke test
10853,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10854,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10855,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10856,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# https://jdk.java.net/
10857,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10858,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10859,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
10860,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
10861,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10862,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/Dockerfile,#!/bin/sh'; \
10863,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10864,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10865,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10866,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10867,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10868,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10869,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10870,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10871,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10872,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
10873,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10874,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10875,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10876,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10877,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
10878,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10879,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10880,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
10881,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
10882,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10883,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jre/Dockerfile,#!/bin/bash'; \
10884,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
10885,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
10886,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
10887,1de3476e9d15e63768d7afeb672ad8a0ccb3f56f,/6/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
10888,1de3476e9d15e63768d7afeb672ad8a0ccb3f56f,/6/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
10889,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux8/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
10890,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux8/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
10891,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux8/Dockerfile,# Default to UTF-8 file.encoding
10892,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux8/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
10893,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux8/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
10894,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux8/Dockerfile,# amd64
10895,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux8/Dockerfile,# fallback
10896,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux8/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
10897,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux8/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
10898,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux8/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
10899,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux8/Dockerfile,# basic smoke test
10900,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux8/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
10901,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10902,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10903,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10904,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
10905,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10906,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
10907,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
10908,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
10909,2598f7123fce9ea870e67f8f9df745b2b49866c0,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10910,2598f7123fce9ea870e67f8f9df745b2b49866c0,/8-jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
10911,2598f7123fce9ea870e67f8f9df745b2b49866c0,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
10912,2598f7123fce9ea870e67f8f9df745b2b49866c0,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10913,2598f7123fce9ea870e67f8f9df745b2b49866c0,/8-jre/alpine/Dockerfile,#!/bin/sh'; \
10914,2598f7123fce9ea870e67f8f9df745b2b49866c0,/8-jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10915,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10916,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
10917,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
10918,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10919,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/Dockerfile,#!/bin/sh'; \
10920,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10921,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10922,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10923,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10924,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10925,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10926,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10927,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10928,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10929,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
10930,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10931,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10932,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
10933,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/Dockerfile,# Default to UTF-8 file.encoding
10934,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10935,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/Dockerfile,#!/bin/sh'; \
10936,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10937,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10938,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10939,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10940,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10941,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10942,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
10943,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
10944,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/slim/Dockerfile,# backwards compatibility shim
10945,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
10946,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
10947,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
10948,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
10949,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
10950,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
10951,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
10952,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/slim/Dockerfile,# basic smoke test
10953,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
10954,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
10955,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10956,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
10957,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
10958,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10959,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/slim/Dockerfile,#!/bin/sh'; \
10960,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10961,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10962,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
10963,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10964,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10965,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10966,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10967,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
10968,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
10969,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
10970,3f6ab87ebe4bdea4470d0ff1e26f61dadd646c64,/11/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
10971,3f6ab87ebe4bdea4470d0ff1e26f61dadd646c64,/11/jre/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
10972,3f6ab87ebe4bdea4470d0ff1e26f61dadd646c64,/11/jre/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
10973,e740b6fad61854adfbdf553638d33f1c80176d79,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
10974,e740b6fad61854adfbdf553638d33f1c80176d79,/openjdk-8-jre/Dockerfile,# Default to UTF-8 file.encoding
10975,e740b6fad61854adfbdf553638d33f1c80176d79,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
10976,e740b6fad61854adfbdf553638d33f1c80176d79,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
10977,e740b6fad61854adfbdf553638d33f1c80176d79,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
10978,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10979,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10980,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10981,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
10982,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10983,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10984,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
10985,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
10986,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10987,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/Dockerfile,#!/bin/sh'; \
10988,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10989,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10990,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10991,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10992,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10993,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10994,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10995,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
10996,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/slim/Dockerfile,# backwards compatibility shim
10997,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
10998,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
10999,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
11000,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/slim/Dockerfile,# TODO filter out arm64 for openjdk:8 (https://github.com/AdoptOpenJDK/openjdk8-upstream-binaries/releases/tag/jdk8u212-b04 vs https://github.com/AdoptOpenJDK/openjdk11-upstream-binaries/releases/tag/jdk-11.0.3%2B7)
11001,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
11002,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
11003,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/slim/Dockerfile,# basic smoke test
11004,bf06437449e8ae1782905f6c2df744805498874b,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11005,bf06437449e8ae1782905f6c2df744805498874b,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11006,bf06437449e8ae1782905f6c2df744805498874b,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
11007,bf06437449e8ae1782905f6c2df744805498874b,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11008,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11009,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
11010,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
11011,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11012,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/slim/Dockerfile,#!/bin/sh'; \
11013,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11014,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11015,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11016,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11017,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11018,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11019,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
11020,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
11021,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/oracle/Dockerfile,# http://jdk.java.net/
11022,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
11023,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
11024,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/oracle/Dockerfile,# basic smoke test
11025,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
11026,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11027,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
11028,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/Dockerfile,# Default to UTF-8 file.encoding
11029,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11030,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/Dockerfile,#!/bin/sh'; \
11031,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11032,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11033,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11034,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11035,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11036,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11037,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
11038,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
11039,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11040,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
11041,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
11042,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/slim/Dockerfile,# backwards compatibility shim
11043,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
11044,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
11045,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
11046,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
11047,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
11048,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
11049,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
11050,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/slim/Dockerfile,# basic smoke test
11051,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11052,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
11053,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11054,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
11055,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11056,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
11057,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11058,b118fdc1e9b1aebdc178537551101dffe1f612a3,/6-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11059,b118fdc1e9b1aebdc178537551101dffe1f612a3,/6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
11060,b118fdc1e9b1aebdc178537551101dffe1f612a3,/6-jre/Dockerfile,# Default to UTF-8 file.encoding
11061,b118fdc1e9b1aebdc178537551101dffe1f612a3,/6-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11062,b118fdc1e9b1aebdc178537551101dffe1f612a3,/6-jre/Dockerfile,#!/bin/sh'; \
11063,b118fdc1e9b1aebdc178537551101dffe1f612a3,/6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
11064,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
11065,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-6-jdk/Dockerfile,# Default to UTF-8 file.encoding
11066,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
11067,2ac2312f6374ae864c3166466fb366967b97e47a,/8/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11068,2ac2312f6374ae864c3166466fb366967b97e47a,/8/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
11069,2ac2312f6374ae864c3166466fb366967b97e47a,/8/jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
11070,2ac2312f6374ae864c3166466fb366967b97e47a,/8/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11071,2ac2312f6374ae864c3166466fb366967b97e47a,/8/jdk/alpine/Dockerfile,#!/bin/sh'; \
11072,2ac2312f6374ae864c3166466fb366967b97e47a,/8/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11073,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11074,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
11075,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
11076,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11077,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/slim/Dockerfile,#!/bin/sh'; \
11078,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11079,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
11080,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11081,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11082,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11083,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11084,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
11085,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11086,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
11087,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
11088,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
11089,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/Dockerfile,# backwards compatibility shim
11090,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
11091,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
11092,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
11093,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
11094,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
11095,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
11096,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
11097,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/Dockerfile,#!/usr/bin/env bash'; \
11098,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
11099,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
11100,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/Dockerfile,# basic smoke test
11101,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11102,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
11103,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/nanoserver-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
11104,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/nanoserver-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
11105,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
11106,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
11107,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/Dockerfile,# backwards compatibility shim
11108,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
11109,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
11110,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
11111,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
11112,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
11113,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
11114,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/Dockerfile,# basic smoke test
11115,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11116,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
11117,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
11118,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/slim/Dockerfile,# backwards compatibility shim
11119,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
11120,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/slim/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
11121,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
11122,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
11123,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
11124,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
11125,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
11126,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
11127,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
11128,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
11129,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/slim/Dockerfile,# basic smoke test
11130,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11131,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11132,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
11133,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
11134,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11135,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/slim/Dockerfile,#!/bin/sh'; \
11136,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11137,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11138,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
11139,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11140,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11141,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11142,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11143,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11144,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
11145,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
11146,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11147,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jdk/slim/Dockerfile,#!/bin/sh'; \
11148,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11149,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11150,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
11151,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11152,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11153,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11154,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11155,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11156,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11157,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
11158,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/Dockerfile,# Default to UTF-8 file.encoding
11159,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11160,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/Dockerfile,#!/bin/sh'; \
11161,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11162,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11163,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
11164,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11165,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11166,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11167,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11168,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11169,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
11170,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
11171,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11172,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
11173,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11174,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11175,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11176,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11177,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11178,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11179,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11180,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11181,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11182,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# https://adoptopenjdk.net/upstream.html
11183,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
11184,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
11185,f45f3f269d4b515201f290360b345790663e657e,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11186,f45f3f269d4b515201f290360b345790663e657e,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11187,f45f3f269d4b515201f290360b345790663e657e,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
11188,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
11189,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
11190,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/slim/Dockerfile,# backwards compatibility shim
11191,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
11192,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
11193,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
11194,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
11195,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
11196,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
11197,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
11198,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/slim/Dockerfile,# basic smoke test
11199,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11200,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
11201,fbf3a8f396844832bd11a89d6299066a4669383d,/8-jdk/windows/windowsservercore/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11202,fbf3a8f396844832bd11a89d6299066a4669383d,/8-jdk/windows/windowsservercore/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11203,fbf3a8f396844832bd11a89d6299066a4669383d,/8-jdk/windows/windowsservercore/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
11204,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11205,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
11206,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11207,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-1709/Dockerfile,# https://jdk.java.net/
11208,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11209,9850ebc9cb840b259aebcf4de1f19cc3b7621810,/8/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11210,9850ebc9cb840b259aebcf4de1f19cc3b7621810,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11211,9850ebc9cb840b259aebcf4de1f19cc3b7621810,/8/jdk/windows/windowsservercore-1803/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
11212,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11213,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
11214,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11215,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
11216,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11217,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11218,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
11219,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
11220,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11221,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/slim/Dockerfile,#!/bin/sh'; \
11222,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11223,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11224,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11225,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11226,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11227,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11228,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11229,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11230,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
11231,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11232,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# https://jdk.java.net/
11233,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11234,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11235,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11236,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
11237,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11238,5ed8eb2445b2ff267a9c88c9ddaaa7dd9e384134,/openjdk-9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
11239,5ed8eb2445b2ff267a9c88c9ddaaa7dd9e384134,/openjdk-9-jre/Dockerfile,# Default to UTF-8 file.encoding
11240,5ed8eb2445b2ff267a9c88c9ddaaa7dd9e384134,/openjdk-9-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
11241,5ed8eb2445b2ff267a9c88c9ddaaa7dd9e384134,/openjdk-9-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
11242,5ed8eb2445b2ff267a9c88c9ddaaa7dd9e384134,/openjdk-9-jre/Dockerfile,"# see https://bugs.debian.org/793210
# and https://github.com/docker-library/java/issues/46#issuecomment-119026586"
11243,5ed8eb2445b2ff267a9c88c9ddaaa7dd9e384134,/openjdk-9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
11244,e6e9cf8b21516ba764189916d35be57486203c95,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11245,e6e9cf8b21516ba764189916d35be57486203c95,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
11246,e6e9cf8b21516ba764189916d35be57486203c95,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
11247,e6e9cf8b21516ba764189916d35be57486203c95,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11248,e6e9cf8b21516ba764189916d35be57486203c95,/8-jre/Dockerfile,#!/bin/sh'; \
11249,e6e9cf8b21516ba764189916d35be57486203c95,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
11250,e6e9cf8b21516ba764189916d35be57486203c95,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
11251,e6e9cf8b21516ba764189916d35be57486203c95,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
11252,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11253,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
11254,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11255,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
11256,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11257,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11258,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11259,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
11260,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
11261,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
11262,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11263,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11264,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
11265,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11266,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
11267,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11268,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11269,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
11270,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
11271,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11272,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jre/Dockerfile,#!/bin/sh'; \
11273,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11274,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
11275,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11276,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11277,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11278,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
11279,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
11280,41b92f2f30079cd364e9619d1fd4633ef138dca4,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
11281,41b92f2f30079cd364e9619d1fd4633ef138dca4,/openjdk-7-jdk/Dockerfile,# Default to UTF-8 file.encoding
11282,41b92f2f30079cd364e9619d1fd4633ef138dca4,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
11283,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11284,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
11285,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11286,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
11287,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11288,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
11289,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
11290,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/slim/Dockerfile,# backwards compatibility shim
11291,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
11292,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
11293,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
11294,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
11295,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
11296,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
11297,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
11298,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/slim/Dockerfile,# basic smoke test
11299,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11300,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
11301,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
11302,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
11303,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
11304,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
11305,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
11306,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/oracle/Dockerfile,# basic smoke test
11307,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
11308,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11309,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
11310,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
11311,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11312,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/slim/Dockerfile,#!/bin/sh'; \
11313,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11314,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11315,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11316,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11317,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11318,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11319,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11320,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
11321,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
11322,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
11323,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
11324,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,# backwards compatibility shim
11325,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
11326,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
11327,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
11328,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,# arm64v8
11329,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,# amd64
11330,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,# fallback
11331,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
11332,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
11333,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
11334,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
11335,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
11336,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,# basic smoke test
11337,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11338,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11339,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
11340,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/Dockerfile,# Default to UTF-8 file.encoding
11341,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11342,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/Dockerfile,#!/bin/sh'; \
11343,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11344,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11345,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11346,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11347,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11348,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11349,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11350,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
11351,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
11352,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11353,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/Dockerfile,#!/bin/sh'; \
11354,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11355,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11356,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11357,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11358,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11359,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11360,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
11361,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/nanoserver-1809/Dockerfile,# https://jdk.java.net/
11362,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11363,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11364,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
11365,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
11366,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11367,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
11368,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11369,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11370,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11371,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11372,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11373,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11374,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11375,d2acc0356b5a68a4d168462a3f5f0e29444982b9,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
11376,d2acc0356b5a68a4d168462a3f5f0e29444982b9,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
11377,d93be18f4f2d5e8457169cac00e559d953b6028e,/8/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11378,d93be18f4f2d5e8457169cac00e559d953b6028e,/8/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
11379,d93be18f4f2d5e8457169cac00e559d953b6028e,/8/jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
11380,d93be18f4f2d5e8457169cac00e559d953b6028e,/8/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11381,d93be18f4f2d5e8457169cac00e559d953b6028e,/8/jre/alpine/Dockerfile,#!/bin/sh'; \
11382,d93be18f4f2d5e8457169cac00e559d953b6028e,/8/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11383,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11384,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
11385,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
11386,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11387,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/Dockerfile,#!/bin/sh'; \
11388,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11389,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
11390,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11391,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11392,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11393,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11394,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
11395,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11396,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
11397,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
11398,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
11399,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
11400,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
11401,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
11402,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/oracle/Dockerfile,# basic smoke test
11403,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
11404,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11405,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
11406,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11407,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
11408,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11409,11af1a181763751cce50f383f6b4b023fd5d2255,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11410,11af1a181763751cce50f383f6b4b023fd5d2255,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
11411,11af1a181763751cce50f383f6b4b023fd5d2255,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
11412,11af1a181763751cce50f383f6b4b023fd5d2255,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11413,11af1a181763751cce50f383f6b4b023fd5d2255,/9-jdk/Dockerfile,#!/bin/sh'; \
11414,11af1a181763751cce50f383f6b4b023fd5d2255,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
11415,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11416,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
11417,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
11418,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11419,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/slim/Dockerfile,#!/bin/sh'; \
11420,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11421,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11422,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11423,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11424,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11425,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11426,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11427,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
11428,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11429,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
11430,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11431,b118fdc1e9b1aebdc178537551101dffe1f612a3,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11432,b118fdc1e9b1aebdc178537551101dffe1f612a3,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
11433,b118fdc1e9b1aebdc178537551101dffe1f612a3,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
11434,b118fdc1e9b1aebdc178537551101dffe1f612a3,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11435,b118fdc1e9b1aebdc178537551101dffe1f612a3,/9-jre/Dockerfile,#!/bin/sh'; \
11436,b118fdc1e9b1aebdc178537551101dffe1f612a3,/9-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
11437,b118fdc1e9b1aebdc178537551101dffe1f612a3,/9-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
11438,b118fdc1e9b1aebdc178537551101dffe1f612a3,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
11439,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11440,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11441,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
11442,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11443,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
11444,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
11445,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11446,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/9-jdk/Dockerfile,#!/bin/sh'; \
11447,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
11448,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11449,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
11450,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11451,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
11452,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11453,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11454,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
11455,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
11456,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11457,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/slim/Dockerfile,#!/bin/sh'; \
11458,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11459,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11460,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11461,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11462,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11463,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11464,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11465,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
11466,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11467,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
11468,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11469,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
11470,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
11471,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,# backwards compatibility shim
11472,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
11473,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
11474,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
11475,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
11476,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,# arm64v8
11477,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,# amd64
11478,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,# fallback
11479,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
11480,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
11481,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
11482,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
11483,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
11484,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
11485,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
11486,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,# basic smoke test
11487,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11488,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11489,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
11490,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11491,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
11492,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11493,9efa5c2bd28c10d07e70ceac416187a011dd6184,/15/jdk/alpine/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
11494,9efa5c2bd28c10d07e70ceac416187a011dd6184,/15/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
11495,9efa5c2bd28c10d07e70ceac416187a011dd6184,/15/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
11496,9efa5c2bd28c10d07e70ceac416187a011dd6184,/15/jdk/alpine/Dockerfile,"# see ""java-cacerts"" package installed above (which maintains ""/etc/ssl/certs/java/cacerts"" for us)"
11497,9efa5c2bd28c10d07e70ceac416187a011dd6184,/15/jdk/alpine/Dockerfile,# basic smoke test
11498,9efa5c2bd28c10d07e70ceac416187a011dd6184,/15/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
11499,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11500,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
11501,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11502,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
11503,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11504,47a6539cd18023dafb45db9013455136cc0bca07,/8/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11505,47a6539cd18023dafb45db9013455136cc0bca07,/8/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
11506,47a6539cd18023dafb45db9013455136cc0bca07,/8/jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
11507,47a6539cd18023dafb45db9013455136cc0bca07,/8/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11508,47a6539cd18023dafb45db9013455136cc0bca07,/8/jdk/alpine/Dockerfile,#!/bin/sh'; \
11509,47a6539cd18023dafb45db9013455136cc0bca07,/8/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11510,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11511,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
11512,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
11513,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11514,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/slim/Dockerfile,#!/bin/sh'; \
11515,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11516,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
11517,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11518,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11519,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11520,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11521,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
11522,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11523,01ca700a105984964865430aee1251932956925e,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11524,01ca700a105984964865430aee1251932956925e,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
11525,01ca700a105984964865430aee1251932956925e,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
11526,01ca700a105984964865430aee1251932956925e,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11527,01ca700a105984964865430aee1251932956925e,/9-jre/Dockerfile,#!/bin/sh'; \
11528,01ca700a105984964865430aee1251932956925e,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11529,01ca700a105984964865430aee1251932956925e,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11530,01ca700a105984964865430aee1251932956925e,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11531,01ca700a105984964865430aee1251932956925e,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11532,01ca700a105984964865430aee1251932956925e,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11533,01ca700a105984964865430aee1251932956925e,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11534,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11535,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
11536,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
11537,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11538,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
11539,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11540,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11541,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11542,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11543,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11544,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11545,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11546,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
11547,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
11548,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
11549,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
11550,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
11551,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
11552,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/oracle/Dockerfile,# basic smoke test
11553,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
11554,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11555,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
11556,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
11557,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11558,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/slim/Dockerfile,#!/bin/sh'; \
11559,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11560,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11561,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11562,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11563,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11564,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11565,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
11566,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
11567,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/slim/Dockerfile,# backwards compatibility shim
11568,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
11569,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/slim/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
11570,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
11571,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
11572,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
11573,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
11574,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
11575,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
11576,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
11577,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
11578,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/slim/Dockerfile,# basic smoke test
11579,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11580,0ec2a0d41bebbff50f9537b58d258b6e551b0dce,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11581,0ec2a0d41bebbff50f9537b58d258b6e551b0dce,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11582,0ec2a0d41bebbff50f9537b58d258b6e551b0dce,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
11583,0ec2a0d41bebbff50f9537b58d258b6e551b0dce,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11584,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11585,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
11586,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
11587,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11588,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/slim/Dockerfile,#!/bin/sh'; \
11589,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11590,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11591,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
11592,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11593,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11594,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11595,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11596,0259a649c03ace8b035432ef3ee7274ca30d3776,/6/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
11597,0259a649c03ace8b035432ef3ee7274ca30d3776,/6/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
11598,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11599,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
11600,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11601,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
11602,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11603,882461ade8207de7647d083009200de85eb978bc,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11604,882461ade8207de7647d083009200de85eb978bc,/7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
11605,882461ade8207de7647d083009200de85eb978bc,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
11606,882461ade8207de7647d083009200de85eb978bc,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11607,882461ade8207de7647d083009200de85eb978bc,/7-jre/Dockerfile,#!/bin/sh'; \
11608,882461ade8207de7647d083009200de85eb978bc,/7-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11609,882461ade8207de7647d083009200de85eb978bc,/7-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11610,882461ade8207de7647d083009200de85eb978bc,/7-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11611,882461ade8207de7647d083009200de85eb978bc,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
11612,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11613,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
11614,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
11615,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11616,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/Dockerfile,#!/bin/sh'; \
11617,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11618,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
11619,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11620,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11621,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11622,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11623,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
11624,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11625,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
11626,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-7-jre/Dockerfile,# Default to UTF-8 file.encoding
11627,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
11628,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
11629,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
11630,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
11631,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
11632,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
11633,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
11634,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/oracle/Dockerfile,# basic smoke test
11635,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
11636,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
11637,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
11638,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
11639,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/Dockerfile,# backwards compatibility shim
11640,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
11641,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
11642,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
11643,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
11644,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
11645,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
11646,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
11647,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/Dockerfile,#!/usr/bin/env bash'; \
11648,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
11649,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
11650,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/Dockerfile,# basic smoke test
11651,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11652,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11653,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
11654,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11655,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
11656,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11657,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
11658,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
11659,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
11660,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,# Default to UTF-8 file.encoding
11661,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,# backwards compatibility shim
11662,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
11663,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
11664,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
11665,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,# arm64v8
11666,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,# amd64
11667,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,# fallback
11668,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
11669,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,#!/usr/bin/env bash'; \
11670,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
11671,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
11672,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
11673,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,# basic smoke test
11674,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11675,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11676,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
11677,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
11678,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11679,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/Dockerfile,#!/bin/sh'; \
11680,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11681,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11682,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11683,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11684,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11685,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11686,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11687,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
11688,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/nanoserver-1809/Dockerfile,# https://jdk.java.net/
11689,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11690,efa60b19f5b9c4ccd676eb03ce955f1444a10d80,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11691,efa60b19f5b9c4ccd676eb03ce955f1444a10d80,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
11692,efa60b19f5b9c4ccd676eb03ce955f1444a10d80,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
11693,efa60b19f5b9c4ccd676eb03ce955f1444a10d80,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11694,efa60b19f5b9c4ccd676eb03ce955f1444a10d80,/9-jre/Dockerfile,#!/bin/sh'; \
11695,efa60b19f5b9c4ccd676eb03ce955f1444a10d80,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
11696,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/11/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
11697,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/11/jdk/windows/nanoserver-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
11698,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/11/jdk/windows/nanoserver-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
11699,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/11/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11700,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11701,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
11702,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
11703,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11704,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/slim/Dockerfile,#!/bin/sh'; \
11705,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11706,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11707,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11708,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11709,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11710,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11711,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
11712,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
11713,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/Dockerfile,# backwards compatibility shim
11714,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
11715,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
11716,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
11717,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
11718,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
11719,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
11720,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/Dockerfile,# basic smoke test
11721,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
11722,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/nanoserver-1803/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
11723,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11724,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11725,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
11726,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
11727,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11728,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jre/Dockerfile,#!/bin/sh'; \
11729,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11730,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11731,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11732,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11733,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11734,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11735,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
11736,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
11737,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux7/Dockerfile,# Default to UTF-8 file.encoding
11738,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
11739,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
11740,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux7/Dockerfile,# arm64v8
11741,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux7/Dockerfile,# amd64
11742,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux7/Dockerfile,# fallback
11743,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux7/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
11744,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
11745,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
11746,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux7/Dockerfile,# basic smoke test
11747,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11748,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
11749,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
11750,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11751,ea58310ec57fed8d5eedc7ed30eb7d0a26ebc574,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11752,ea58310ec57fed8d5eedc7ed30eb7d0a26ebc574,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11753,ea58310ec57fed8d5eedc7ed30eb7d0a26ebc574,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
11754,ea58310ec57fed8d5eedc7ed30eb7d0a26ebc574,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11755,4fc0f299672be87a236d1af61a31c14f67dfcdcc,/6/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
11756,4fc0f299672be87a236d1af61a31c14f67dfcdcc,/6/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
11757,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11758,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11759,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
11760,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11761,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
11762,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
11763,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
11764,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
11765,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,# backwards compatibility shim
11766,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
11767,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
11768,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
11769,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,# arm64v8
11770,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,# amd64
11771,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,# fallback
11772,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
11773,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
11774,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
11775,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
11776,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
11777,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,# basic smoke test
11778,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11779,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11780,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
11781,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11782,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
11783,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11784,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
11785,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
11786,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
11787,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
11788,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
11789,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
11790,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/oracle/Dockerfile,# basic smoke test
11791,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
11792,d8d56dbcf7a66ac266a0f229c598f42a94faf804,/7/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
11793,d8d56dbcf7a66ac266a0f229c598f42a94faf804,/7/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
11794,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11795,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11796,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
11797,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
11798,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
11799,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
11800,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
11801,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/oracle/Dockerfile,# http://jdk.java.net/
11802,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
11803,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
11804,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/oracle/Dockerfile,# basic smoke test
11805,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
11806,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
11807,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
11808,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/slim-buster/Dockerfile,# backwards compatibility shim
11809,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
11810,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/slim-buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
11811,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
11812,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/slim-buster/Dockerfile,# arm64v8
11813,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/slim-buster/Dockerfile,# amd64
11814,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/slim-buster/Dockerfile,# fallback
11815,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
11816,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
11817,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
11818,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
11819,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
11820,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/slim-buster/Dockerfile,# basic smoke test
11821,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11822,bbb929b5877fd14377f8b1d40a1eb1a9ebf39e2f,/8/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11823,bbb929b5877fd14377f8b1d40a1eb1a9ebf39e2f,/8/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
11824,bbb929b5877fd14377f8b1d40a1eb1a9ebf39e2f,/8/jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
11825,bbb929b5877fd14377f8b1d40a1eb1a9ebf39e2f,/8/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11826,bbb929b5877fd14377f8b1d40a1eb1a9ebf39e2f,/8/jre/alpine/Dockerfile,#!/bin/sh'; \
11827,bbb929b5877fd14377f8b1d40a1eb1a9ebf39e2f,/8/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11828,eaf1c5575ab9763caf66d8d5debb7ec089411740,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11829,eaf1c5575ab9763caf66d8d5debb7ec089411740,/7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
11830,eaf1c5575ab9763caf66d8d5debb7ec089411740,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
11831,eaf1c5575ab9763caf66d8d5debb7ec089411740,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11832,eaf1c5575ab9763caf66d8d5debb7ec089411740,/7-jre/Dockerfile,#!/bin/bash'; \
11833,eaf1c5575ab9763caf66d8d5debb7ec089411740,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
11834,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
11835,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
11836,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/oraclelinux7/Dockerfile,# Default to UTF-8 file.encoding
11837,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
11838,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
11839,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/oraclelinux7/Dockerfile,# arm64v8
11840,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/oraclelinux7/Dockerfile,# amd64
11841,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/oraclelinux7/Dockerfile,# fallback
11842,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/oraclelinux7/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
11843,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
11844,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
11845,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/oraclelinux7/Dockerfile,# basic smoke test
11846,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11847,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
11848,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
11849,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
11850,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
11851,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,# backwards compatibility shim
11852,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
11853,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
11854,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
11855,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,# arm64v8
11856,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,# amd64
11857,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,# fallback
11858,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
11859,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
11860,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
11861,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
11862,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
11863,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,# basic smoke test
11864,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11865,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11866,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
11867,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11868,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
11869,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11870,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11871,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
11872,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
11873,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11874,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/slim/Dockerfile,#!/bin/sh'; \
11875,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11876,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11877,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11878,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11879,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11880,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11881,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
11882,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
11883,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
11884,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
11885,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
11886,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/oracle/Dockerfile,# arm64v8
11887,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/oracle/Dockerfile,# amd64
11888,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/oracle/Dockerfile,# fallback
11889,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
11890,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
11891,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
11892,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/oracle/Dockerfile,# basic smoke test
11893,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
11894,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11895,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
11896,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/Dockerfile,# Default to UTF-8 file.encoding
11897,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11898,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/Dockerfile,#!/bin/sh'; \
11899,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11900,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11901,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
11902,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11903,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11904,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11905,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11906,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11907,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11908,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
11909,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
11910,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
11911,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11912,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11913,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
11914,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
11915,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11916,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/slim/Dockerfile,#!/bin/sh'; \
11917,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11918,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
11919,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11920,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11921,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11922,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11923,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
11924,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11925,d7094b23b9c6957d72d2af540f866ec4a751ae71,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
11926,d7094b23b9c6957d72d2af540f866ec4a751ae71,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
11927,d7094b23b9c6957d72d2af540f866ec4a751ae71,/openjdk-8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
11928,d7094b23b9c6957d72d2af540f866ec4a751ae71,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
11929,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11930,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
11931,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11932,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
11933,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11934,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11935,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
11936,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/Dockerfile,# Default to UTF-8 file.encoding
11937,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11938,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/Dockerfile,#!/bin/sh'; \
11939,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11940,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11941,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
11942,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11943,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11944,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11945,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11946,02a49915095f254cbf321292ab7a021529686448,/11-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11947,02a49915095f254cbf321292ab7a021529686448,/11-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
11948,02a49915095f254cbf321292ab7a021529686448,/11-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
11949,02a49915095f254cbf321292ab7a021529686448,/11-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11950,02a49915095f254cbf321292ab7a021529686448,/11-jdk/slim/Dockerfile,#!/bin/sh'; \
11951,02a49915095f254cbf321292ab7a021529686448,/11-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11952,02a49915095f254cbf321292ab7a021529686448,/11-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11953,02a49915095f254cbf321292ab7a021529686448,/11-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11954,02a49915095f254cbf321292ab7a021529686448,/11-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11955,02a49915095f254cbf321292ab7a021529686448,/11-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11956,02a49915095f254cbf321292ab7a021529686448,/11-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11957,02a49915095f254cbf321292ab7a021529686448,/11-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11958,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11959,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
11960,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11961,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
11962,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11963,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
11964,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
11965,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
11966,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/Dockerfile,# backwards compatibility shim
11967,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
11968,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
11969,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
11970,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
11971,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
11972,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
11973,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
11974,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/Dockerfile,#!/usr/bin/env bash'; \
11975,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
11976,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
11977,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/Dockerfile,# basic smoke test
11978,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
11979,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-6-jre/Dockerfile,# Default to UTF-8 file.encoding
11980,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
11981,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11982,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
11983,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
11984,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11985,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jdk/Dockerfile,#!/bin/sh'; \
11986,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
11987,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11988,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11989,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11990,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
11991,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
11992,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11993,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
11994,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11995,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
11996,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11997,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11998,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11999,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
12000,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
12001,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
12002,f11f75767926eb1e650b448690e15cbacc2d1b9f,/13/jdk/alpine/Dockerfile,# https://jdk.java.net/
12003,f11f75767926eb1e650b448690e15cbacc2d1b9f,/13/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
12004,f11f75767926eb1e650b448690e15cbacc2d1b9f,/13/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
12005,f11f75767926eb1e650b448690e15cbacc2d1b9f,/13/jdk/alpine/Dockerfile,# basic smoke test
12006,f11f75767926eb1e650b448690e15cbacc2d1b9f,/13/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
12007,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12008,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
12009,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12010,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
12011,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12012,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12013,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12014,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
12015,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
12016,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
12017,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12018,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12019,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
12020,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
12021,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12022,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/slim/Dockerfile,#!/bin/sh'; \
12023,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
12024,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
12025,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
12026,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12027,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12028,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12029,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
12030,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12031,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
12032,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
12033,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
12034,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
12035,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
12036,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
12037,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
12038,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
12039,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/oracle/Dockerfile,# arm64v8
12040,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/oracle/Dockerfile,# amd64
12041,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/oracle/Dockerfile,# fallback
12042,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
12043,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
12044,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
12045,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/oracle/Dockerfile,# basic smoke test
12046,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
12047,57de518e280c26fa8a9f602e76c3f3ea95f8296c,/12/jdk/alpine/Dockerfile,# http://jdk.java.net/
12048,57de518e280c26fa8a9f602e76c3f3ea95f8296c,/12/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
12049,57de518e280c26fa8a9f602e76c3f3ea95f8296c,/12/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
12050,57de518e280c26fa8a9f602e76c3f3ea95f8296c,/12/jdk/alpine/Dockerfile,# basic smoke test
12051,57de518e280c26fa8a9f602e76c3f3ea95f8296c,/12/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
12052,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12053,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12054,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/windowsservercore-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
12055,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/windowsservercore-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
12056,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
12057,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12058,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
12059,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12060,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-1709/Dockerfile,# https://jdk.java.net/
12061,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12062,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12063,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
12064,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
12065,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12066,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/slim/Dockerfile,#!/bin/sh'; \
12067,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
12068,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
12069,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
12070,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12071,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12072,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12073,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
12074,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12075,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12076,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
12077,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12078,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
12079,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12080,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12081,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
12082,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
12083,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12084,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/slim/Dockerfile,#!/bin/sh'; \
12085,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
12086,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
12087,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12088,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12089,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12090,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12091,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
12092,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
12093,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/slim/Dockerfile,# backwards compatibility shim
12094,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12095,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/slim/Dockerfile,# https://jdk.java.net/
12096,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
12097,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
12098,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
12099,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
12100,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
12101,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/slim/Dockerfile,# basic smoke test
12102,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12103,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
12104,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12105,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
12106,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/7-jdk/Dockerfile,# Default to UTF-8 file.encoding
12107,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12108,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/7-jdk/Dockerfile,#!/bin/sh'; \
12109,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
12110,a080def2a36003e85485d07b3f047bd3c91508c2,/8-jdk/windows/nanoserver/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12111,a080def2a36003e85485d07b3f047bd3c91508c2,/8-jdk/windows/nanoserver/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12112,a080def2a36003e85485d07b3f047bd3c91508c2,/8-jdk/windows/nanoserver/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
12113,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12114,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12115,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
12116,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
12117,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
12118,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12119,89851f0abc3a83cfad5248102f379d6a0bd3951a,/6-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12120,89851f0abc3a83cfad5248102f379d6a0bd3951a,/6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
12121,89851f0abc3a83cfad5248102f379d6a0bd3951a,/6-jdk/Dockerfile,# Default to UTF-8 file.encoding
12122,89851f0abc3a83cfad5248102f379d6a0bd3951a,/6-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12123,89851f0abc3a83cfad5248102f379d6a0bd3951a,/6-jdk/Dockerfile,#!/bin/sh'; \
12124,89851f0abc3a83cfad5248102f379d6a0bd3951a,/6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
12125,a7cc605aead56177b2c86fecd9e0875378f8ce3d,/7/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12126,a7cc605aead56177b2c86fecd9e0875378f8ce3d,/7/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
12127,a7cc605aead56177b2c86fecd9e0875378f8ce3d,/7/jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
12128,a7cc605aead56177b2c86fecd9e0875378f8ce3d,/7/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12129,a7cc605aead56177b2c86fecd9e0875378f8ce3d,/7/jre/alpine/Dockerfile,#!/bin/sh'; \
12130,a7cc605aead56177b2c86fecd9e0875378f8ce3d,/7/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12131,2408508f3b000bf997febbdb90a861185a64a260,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
12132,2408508f3b000bf997febbdb90a861185a64a260,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
12133,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/6-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12134,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/6-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-6"
12135,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/6-jre/Dockerfile,# Default to UTF-8 file.encoding
12136,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/6-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12137,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/6-jre/Dockerfile,#!/bin/sh'; \
12138,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/6-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
12139,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/6-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
12140,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/6-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12141,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/6-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12142,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/6-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12143,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12144,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12145,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
12146,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12147,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
12148,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12149,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12150,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
12151,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
12152,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12153,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/slim/Dockerfile,#!/bin/sh'; \
12154,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
12155,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
12156,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
12157,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)"
12158,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12159,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12160,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12161,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12162,01ca700a105984964865430aee1251932956925e,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12163,01ca700a105984964865430aee1251932956925e,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
12164,01ca700a105984964865430aee1251932956925e,/9-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
12165,01ca700a105984964865430aee1251932956925e,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12166,01ca700a105984964865430aee1251932956925e,/9-jdk/slim/Dockerfile,#!/bin/sh'; \
12167,01ca700a105984964865430aee1251932956925e,/9-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
12168,01ca700a105984964865430aee1251932956925e,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
12169,01ca700a105984964865430aee1251932956925e,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12170,01ca700a105984964865430aee1251932956925e,/9-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12171,01ca700a105984964865430aee1251932956925e,/9-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12172,01ca700a105984964865430aee1251932956925e,/9-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12173,01ca700a105984964865430aee1251932956925e,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12174,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
12175,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
12176,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/slim/Dockerfile,# backwards compatibility shim
12177,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12178,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
12179,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
12180,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/slim/Dockerfile,# arm64v8
12181,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/slim/Dockerfile,# amd64
12182,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/slim/Dockerfile,# fallback
12183,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
12184,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
12185,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
12186,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
12187,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
12188,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/slim/Dockerfile,# basic smoke test
12189,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12190,1778c73b834d04d5b5c61baee4cce8c127031f9c,/8/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12191,1778c73b834d04d5b5c61baee4cce8c127031f9c,/8/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
12192,1778c73b834d04d5b5c61baee4cce8c127031f9c,/8/jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
12193,1778c73b834d04d5b5c61baee4cce8c127031f9c,/8/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12194,1778c73b834d04d5b5c61baee4cce8c127031f9c,/8/jre/alpine/Dockerfile,#!/bin/sh'; \
12195,1778c73b834d04d5b5c61baee4cce8c127031f9c,/8/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12196,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12197,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
12198,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
12199,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12200,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jdk/Dockerfile,#!/bin/sh'; \
12201,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
12202,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12203,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12204,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12205,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
12206,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
12207,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
12208,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/slim-buster/Dockerfile,# backwards compatibility shim
12209,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12210,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/slim-buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
12211,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
12212,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
12213,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/slim-buster/Dockerfile,# amd64
12214,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/slim-buster/Dockerfile,# fallback
12215,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/slim-buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
12216,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/slim-buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
12217,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/slim-buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
12218,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
12219,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
12220,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
12221,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
12222,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/slim-buster/Dockerfile,# basic smoke test
12223,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12224,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
12225,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
12226,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12227,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/8-jdk/Dockerfile,#!/bin/sh'; \
12228,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
12229,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
12230,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
12231,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
12232,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
12233,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
12234,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
12235,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
12236,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/oracle/Dockerfile,# basic smoke test
12237,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
12238,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12239,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
12240,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12241,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
12242,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12243,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
12244,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
12245,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12246,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
12247,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
12248,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
12249,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,# Default to UTF-8 file.encoding
12250,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,# backwards compatibility shim
12251,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12252,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
12253,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
12254,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,# arm64v8
12255,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,# amd64
12256,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,# fallback
12257,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
12258,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,#!/usr/bin/env bash'; \
12259,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
12260,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
12261,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
12262,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,# basic smoke test
12263,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12264,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
12265,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/slim/Dockerfile,# backwards compatibility shim
12266,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12267,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
12268,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
12269,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/slim/Dockerfile,# TODO filter out arm64 for openjdk:8 (https://github.com/AdoptOpenJDK/openjdk8-upstream-binaries/releases/tag/jdk8u212-b04 vs https://github.com/AdoptOpenJDK/openjdk11-upstream-binaries/releases/tag/jdk-11.0.3%2B7)
12270,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
12271,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
12272,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/slim/Dockerfile,# basic smoke test
12273,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12274,2ff433f60dd918bd852442dbb4f7b24a148c2fb0,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12275,2ff433f60dd918bd852442dbb4f7b24a148c2fb0,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
12276,2ff433f60dd918bd852442dbb4f7b24a148c2fb0,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
12277,2ff433f60dd918bd852442dbb4f7b24a148c2fb0,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12278,2ff433f60dd918bd852442dbb4f7b24a148c2fb0,/9-jdk/Dockerfile,#!/bin/sh'; \
12279,2ff433f60dd918bd852442dbb4f7b24a148c2fb0,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
12280,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
12281,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/nanoserver-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
12282,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/nanoserver-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
12283,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
12284,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
12285,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
12286,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
12287,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/Dockerfile,# backwards compatibility shim
12288,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12289,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
12290,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
12291,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
12292,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
12293,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
12294,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
12295,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/Dockerfile,# basic smoke test
12296,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12297,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
12298,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
12299,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/slim/Dockerfile,# backwards compatibility shim
12300,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12301,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
12302,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
12303,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/slim/Dockerfile,# amd64
12304,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/slim/Dockerfile,# fallback
12305,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
12306,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
12307,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
12308,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
12309,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
12310,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/slim/Dockerfile,# basic smoke test
12311,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12312,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12313,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12314,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
12315,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12316,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
12317,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
12318,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12319,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/slim/Dockerfile,#!/bin/sh'; \
12320,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
12321,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
12322,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
12323,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12324,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12325,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12326,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12327,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
12328,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
12329,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
12330,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/Dockerfile,# backwards compatibility shim
12331,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12332,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
12333,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
12334,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
12335,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
12336,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
12337,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
12338,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/Dockerfile,#!/usr/bin/env bash'; \
12339,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
12340,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
12341,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/Dockerfile,# basic smoke test
12342,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12343,2a8c028a7246cd03a96c7cc8f41c4087303c642d,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12344,2a8c028a7246cd03a96c7cc8f41c4087303c642d,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
12345,2a8c028a7246cd03a96c7cc8f41c4087303c642d,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
12346,2a8c028a7246cd03a96c7cc8f41c4087303c642d,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12347,2a8c028a7246cd03a96c7cc8f41c4087303c642d,/9-jre/Dockerfile,#!/bin/sh'; \
12348,2a8c028a7246cd03a96c7cc8f41c4087303c642d,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
12349,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12350,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
12351,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
12352,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12353,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jre/alpine/Dockerfile,#!/bin/sh'; \
12354,f47afa13905074605a616adf3b9c01c396ed74a8,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
12355,f47afa13905074605a616adf3b9c01c396ed74a8,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
12356,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12357,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
12358,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12359,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-1709/Dockerfile,# https://jdk.java.net/
12360,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12361,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12362,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
12363,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12364,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
12365,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12366,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
12367,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
12368,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
12369,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
12370,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/Dockerfile,# backwards compatibility shim
12371,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12372,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/Dockerfile,# https://jdk.java.net/
12373,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
12374,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
12375,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
12376,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
12377,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
12378,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/Dockerfile,# basic smoke test
12379,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12380,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
12381,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
12382,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/slim/Dockerfile,# backwards compatibility shim
12383,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12384,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
12385,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
12386,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
12387,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
12388,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
12389,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
12390,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/slim/Dockerfile,# basic smoke test
12391,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12392,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
12393,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/windows/nanoserver/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12394,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/windows/nanoserver/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12395,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/windows/nanoserver/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
12396,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
12397,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
12398,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/slim/Dockerfile,# backwards compatibility shim
12399,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12400,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
12401,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
12402,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
12403,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
12404,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
12405,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
12406,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
12407,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
12408,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/slim/Dockerfile,# basic smoke test
12409,0235b70854cf9251ab4a1479696975412320a9bd,/openjdk-9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12410,0235b70854cf9251ab4a1479696975412320a9bd,/openjdk-9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
12411,0235b70854cf9251ab4a1479696975412320a9bd,/openjdk-9-jre/Dockerfile,# Default to UTF-8 file.encoding
12412,0235b70854cf9251ab4a1479696975412320a9bd,/openjdk-9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12413,0235b70854cf9251ab4a1479696975412320a9bd,/openjdk-9-jre/Dockerfile,#!/bin/bash'; \
12414,0235b70854cf9251ab4a1479696975412320a9bd,/openjdk-9-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
12415,0235b70854cf9251ab4a1479696975412320a9bd,/openjdk-9-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
12416,0235b70854cf9251ab4a1479696975412320a9bd,/openjdk-9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
12417,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12418,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
12419,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
12420,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12421,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/slim/Dockerfile,#!/bin/sh'; \
12422,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
12423,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
12424,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12425,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12426,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12427,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12428,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12429,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
12430,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/Dockerfile,# Default to UTF-8 file.encoding
12431,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12432,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/Dockerfile,#!/bin/sh'; \
12433,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
12434,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
12435,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12436,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12437,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12438,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12439,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12440,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
12441,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
12442,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
12443,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,# backwards compatibility shim
12444,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12445,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
12446,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
12447,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
12448,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,# amd64
12449,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,# fallback
12450,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
12451,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
12452,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
12453,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
12454,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
12455,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
12456,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
12457,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,# basic smoke test
12458,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12459,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
12460,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
12461,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12462,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/slim/Dockerfile,#!/bin/sh'; \
12463,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
12464,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
12465,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12466,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12467,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12468,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12469,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12470,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
12471,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
12472,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12473,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/Dockerfile,#!/bin/sh'; \
12474,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
12475,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
12476,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12477,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12478,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12479,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12480,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12481,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12482,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
12483,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
12484,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
12485,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12486,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
12487,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12488,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
12489,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12490,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
12491,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
12492,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/slim-buster/Dockerfile,# backwards compatibility shim
12493,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12494,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/slim-buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
12495,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
12496,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/slim-buster/Dockerfile,# arm64v8
12497,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/slim-buster/Dockerfile,# amd64
12498,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/slim-buster/Dockerfile,# fallback
12499,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
12500,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
12501,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
12502,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
12503,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
12504,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/slim-buster/Dockerfile,# basic smoke test
12505,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12506,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
12507,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
12508,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
12509,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
12510,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/Dockerfile,# backwards compatibility shim
12511,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12512,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/Dockerfile,# https://jdk.java.net/
12513,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
12514,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
12515,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
12516,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
12517,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
12518,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/Dockerfile,# basic smoke test
12519,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12520,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/8/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
12521,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/8/jdk/windows/nanoserver-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
12522,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/8/jdk/windows/nanoserver-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
12523,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12524,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
12525,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/Dockerfile,# Default to UTF-8 file.encoding
12526,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12527,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/Dockerfile,#!/bin/sh'; \
12528,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
12529,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
12530,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
12531,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12532,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12533,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12534,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12535,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12536,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
12537,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
12538,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12539,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/Dockerfile,#!/bin/sh'; \
12540,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
12541,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
12542,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
12543,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12544,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12545,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12546,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
12547,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12548,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12549,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
12550,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12551,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
12552,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12553,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
12554,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
12555,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/slim/Dockerfile,# backwards compatibility shim
12556,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12557,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
12558,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
12559,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
12560,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
12561,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
12562,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
12563,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
12564,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
12565,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
12566,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/slim/Dockerfile,# basic smoke test
12567,54c64cf47d2b705418feb68b811419a223c5a040,/7-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12568,54c64cf47d2b705418feb68b811419a223c5a040,/7-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
12569,54c64cf47d2b705418feb68b811419a223c5a040,/7-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
12570,54c64cf47d2b705418feb68b811419a223c5a040,/7-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12571,54c64cf47d2b705418feb68b811419a223c5a040,/7-jdk/alpine/Dockerfile,#!/bin/sh'; \
12572,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12573,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
12574,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/Dockerfile,# Default to UTF-8 file.encoding
12575,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12576,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/Dockerfile,#!/bin/sh'; \
12577,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
12578,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
12579,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12580,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12581,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12582,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12583,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12584,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
12585,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
12586,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12587,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/Dockerfile,#!/bin/sh'; \
12588,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
12589,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
12590,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12591,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12592,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12593,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12594,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
12595,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
12596,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/slim/Dockerfile,# backwards compatibility shim
12597,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12598,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/slim/Dockerfile,# https://jdk.java.net/
12599,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
12600,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
12601,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
12602,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
12603,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
12604,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/slim/Dockerfile,# basic smoke test
12605,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12606,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
12607,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/7-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12608,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/7-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
12609,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/7-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
12610,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/7-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12611,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/7-jdk/alpine/Dockerfile,#!/bin/sh'; \
12612,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12613,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
12614,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12615,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
12616,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12617,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
12618,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
12619,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/slim/Dockerfile,# backwards compatibility shim
12620,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12621,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
12622,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
12623,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
12624,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
12625,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
12626,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
12627,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/slim/Dockerfile,# basic smoke test
12628,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12629,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
12630,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12631,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
12632,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12633,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://adoptopenjdk.net/upstream.html
12634,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
12635,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
12636,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
12637,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
12638,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/slim/Dockerfile,# backwards compatibility shim
12639,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12640,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
12641,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
12642,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
12643,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
12644,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
12645,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
12646,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
12647,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
12648,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/slim/Dockerfile,# basic smoke test
12649,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12650,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12651,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
12652,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12653,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
12654,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12655,45a43909f241296d22849489dcc58c06059660c6,/8/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
12656,45a43909f241296d22849489dcc58c06059660c6,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
12657,45a43909f241296d22849489dcc58c06059660c6,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
12658,45a43909f241296d22849489dcc58c06059660c6,/8/jre/Dockerfile,# backwards compatibility shim
12659,45a43909f241296d22849489dcc58c06059660c6,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12660,45a43909f241296d22849489dcc58c06059660c6,/8/jre/Dockerfile,# https://adoptopenjdk.net/upstream.html
12661,45a43909f241296d22849489dcc58c06059660c6,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
12662,45a43909f241296d22849489dcc58c06059660c6,/8/jre/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
12663,45a43909f241296d22849489dcc58c06059660c6,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
12664,45a43909f241296d22849489dcc58c06059660c6,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
12665,45a43909f241296d22849489dcc58c06059660c6,/8/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
12666,45a43909f241296d22849489dcc58c06059660c6,/8/jre/Dockerfile,#!/usr/bin/env bash'; \
12667,45a43909f241296d22849489dcc58c06059660c6,/8/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
12668,45a43909f241296d22849489dcc58c06059660c6,/8/jre/Dockerfile,# basic smoke test
12669,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12670,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12671,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
12672,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
12673,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
12674,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12675,823517cdb97911ad335027244a6342e9129a91ad,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12676,823517cdb97911ad335027244a6342e9129a91ad,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12677,823517cdb97911ad335027244a6342e9129a91ad,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
12678,823517cdb97911ad335027244a6342e9129a91ad,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12679,00a9c5c080f2a5fd1510bc0716db7afe06cbd017,/8/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
12680,00a9c5c080f2a5fd1510bc0716db7afe06cbd017,/8/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
12681,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
12682,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
12683,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
12684,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
12685,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
12686,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
12687,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/oracle/Dockerfile,# basic smoke test
12688,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
12689,15835397954c9ec123e42e685035ecd239e0a1db,/11/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
12690,15835397954c9ec123e42e685035ecd239e0a1db,/11/jre/windows/nanoserver-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
12691,15835397954c9ec123e42e685035ecd239e0a1db,/11/jre/windows/nanoserver-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
12692,15835397954c9ec123e42e685035ecd239e0a1db,/11/jre/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12693,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12694,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12695,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
12696,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
12697,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
12698,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12699,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12700,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
12701,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
12702,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12703,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/slim/Dockerfile,#!/bin/sh'; \
12704,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
12705,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
12706,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12707,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12708,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12709,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12710,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
12711,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
12712,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux7/Dockerfile,# Default to UTF-8 file.encoding
12713,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
12714,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
12715,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux7/Dockerfile,# amd64
12716,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux7/Dockerfile,# fallback
12717,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux7/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
12718,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
12719,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
12720,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux7/Dockerfile,# basic smoke test
12721,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12722,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12723,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
12724,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
12725,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12726,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/slim/Dockerfile,#!/bin/sh'; \
12727,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
12728,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
12729,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
12730,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12731,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12732,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12733,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
12734,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12735,50c491c7c2378182866d89e857eb1f0c77985507,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12736,50c491c7c2378182866d89e857eb1f0c77985507,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
12737,50c491c7c2378182866d89e857eb1f0c77985507,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
12738,50c491c7c2378182866d89e857eb1f0c77985507,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12739,50c491c7c2378182866d89e857eb1f0c77985507,/9-jre/Dockerfile,#!/bin/sh'; \
12740,50c491c7c2378182866d89e857eb1f0c77985507,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
12741,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
12742,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
12743,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12744,0467df283134a79840c25808093c00f7c94b9a88,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12745,0467df283134a79840c25808093c00f7c94b9a88,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
12746,0467df283134a79840c25808093c00f7c94b9a88,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
12747,0467df283134a79840c25808093c00f7c94b9a88,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12748,0467df283134a79840c25808093c00f7c94b9a88,/9-jre/Dockerfile,#!/bin/sh'; \
12749,0467df283134a79840c25808093c00f7c94b9a88,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
12750,0467df283134a79840c25808093c00f7c94b9a88,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12751,0467df283134a79840c25808093c00f7c94b9a88,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12752,0467df283134a79840c25808093c00f7c94b9a88,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12753,0467df283134a79840c25808093c00f7c94b9a88,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
12754,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
12755,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
12756,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/slim/Dockerfile,# backwards compatibility shim
12757,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12758,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
12759,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
12760,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
12761,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
12762,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
12763,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
12764,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
12765,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
12766,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
12767,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/slim/Dockerfile,# basic smoke test
12768,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12769,9b3b7ed1bdd754fa61b5dd86c0bcd3e3400c6a33,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
12770,9b3b7ed1bdd754fa61b5dd86c0bcd3e3400c6a33,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
12771,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12772,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
12773,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12774,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
12775,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12776,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/alpine/Dockerfile,# https://jdk.java.net/
12777,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
12778,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
12779,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/alpine/Dockerfile,# basic smoke test
12780,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
12781,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
12782,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
12783,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
12784,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
12785,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,# backwards compatibility shim
12786,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12787,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
12788,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
12789,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,# arm64v8
12790,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,# amd64
12791,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,# fallback
12792,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
12793,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
12794,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
12795,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
12796,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
12797,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,# basic smoke test
12798,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12799,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
12800,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
12801,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
12802,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
12803,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
12804,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/oracle/Dockerfile,# arm64v8
12805,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/oracle/Dockerfile,# amd64
12806,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/oracle/Dockerfile,# fallback
12807,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
12808,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
12809,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
12810,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/oracle/Dockerfile,# basic smoke test
12811,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
12812,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
12813,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
12814,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/slim/Dockerfile,# backwards compatibility shim
12815,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12816,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
12817,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
12818,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
12819,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
12820,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
12821,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
12822,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/slim/Dockerfile,# basic smoke test
12823,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12824,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
12825,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12826,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12827,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
12828,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12829,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
12830,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
12831,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
12832,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
12833,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
12834,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
12835,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/oracle/Dockerfile,# basic smoke test
12836,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
12837,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12838,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
12839,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12840,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
12841,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12842,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12843,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
12844,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12845,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
12846,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12847,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12848,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
12849,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12850,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
12851,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12852,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
12853,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
12854,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
12855,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
12856,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/Dockerfile,# backwards compatibility shim
12857,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12858,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
12859,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
12860,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
12861,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
12862,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
12863,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
12864,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/Dockerfile,# basic smoke test
12865,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12866,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
12867,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
12868,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/slim/Dockerfile,# backwards compatibility shim
12869,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12870,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
12871,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
12872,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
12873,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
12874,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
12875,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
12876,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/slim/Dockerfile,# basic smoke test
12877,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12878,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
12879,2ec4f3ac935c208117752da22d61d9bb0be319c5,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12880,2ec4f3ac935c208117752da22d61d9bb0be319c5,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
12881,2ec4f3ac935c208117752da22d61d9bb0be319c5,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
12882,2ec4f3ac935c208117752da22d61d9bb0be319c5,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12883,2ec4f3ac935c208117752da22d61d9bb0be319c5,/9-jre/Dockerfile,#!/bin/sh'; \
12884,2ec4f3ac935c208117752da22d61d9bb0be319c5,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
12885,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
12886,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
12887,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,# backwards compatibility shim
12888,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12889,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
12890,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
12891,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
12892,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,# arm64v8
12893,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,# amd64
12894,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,# fallback
12895,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
12896,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
12897,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
12898,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
12899,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
12900,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
12901,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
12902,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,# basic smoke test
12903,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12904,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12905,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12906,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
12907,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
12908,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
12909,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12910,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
12911,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
12912,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
12913,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12914,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12915,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
12916,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12917,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
12918,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12919,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12920,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
12921,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12922,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
12923,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12924,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
12925,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
12926,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
12927,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/Dockerfile,# backwards compatibility shim
12928,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12929,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
12930,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
12931,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
12932,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
12933,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
12934,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
12935,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/Dockerfile,#!/usr/bin/env bash'; \
12936,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
12937,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
12938,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/Dockerfile,# basic smoke test
12939,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12940,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12941,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
12942,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/Dockerfile,# Default to UTF-8 file.encoding
12943,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12944,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/Dockerfile,#!/bin/sh'; \
12945,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
12946,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
12947,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12948,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12949,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12950,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12951,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12952,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
12953,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
12954,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12955,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/slim/Dockerfile,#!/bin/sh'; \
12956,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
12957,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
12958,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
12959,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12960,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12961,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12962,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
12963,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12964,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/windows/nanoserver/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12965,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/windows/nanoserver/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12966,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/windows/nanoserver/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
12967,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/windows/nanoserver/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12968,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12969,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
12970,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-8-jre/Dockerfile,# Default to UTF-8 file.encoding
12971,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12972,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-8-jre/Dockerfile,#!/bin/bash'; \
12973,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
12974,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
12975,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
12976,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12977,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12978,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
12979,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
12980,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
12981,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12982,17d0f9f3411d82622c762163d85cc4a6ba69af95,/7-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12983,17d0f9f3411d82622c762163d85cc4a6ba69af95,/7-jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
12984,17d0f9f3411d82622c762163d85cc4a6ba69af95,/7-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
12985,17d0f9f3411d82622c762163d85cc4a6ba69af95,/7-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12986,17d0f9f3411d82622c762163d85cc4a6ba69af95,/7-jdk/alpine/Dockerfile,#!/bin/sh'; \
12987,17d0f9f3411d82622c762163d85cc4a6ba69af95,/7-jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12988,58866569ecc3d516467baf83375f3bd4cb0b8229,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
12989,58866569ecc3d516467baf83375f3bd4cb0b8229,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
12990,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12991,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12992,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# https://adoptopenjdk.net/upstream.html
12993,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
12994,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
12995,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12996,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
12997,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
12998,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12999,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/slim/Dockerfile,#!/bin/sh'; \
13000,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13001,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
13002,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
13003,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13004,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13005,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13006,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13007,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13008,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
13009,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
13010,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux7/Dockerfile,# Default to UTF-8 file.encoding
13011,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
13012,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
13013,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux7/Dockerfile,# arm64v8
13014,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux7/Dockerfile,# amd64
13015,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux7/Dockerfile,# fallback
13016,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux7/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
13017,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
13018,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
13019,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux7/Dockerfile,# basic smoke test
13020,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
13021,c7846edc14a25304288c85e2e7bebe4609626512,/7/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13022,c7846edc14a25304288c85e2e7bebe4609626512,/7/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
13023,c7846edc14a25304288c85e2e7bebe4609626512,/7/jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
13024,c7846edc14a25304288c85e2e7bebe4609626512,/7/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13025,c7846edc14a25304288c85e2e7bebe4609626512,/7/jdk/alpine/Dockerfile,#!/bin/sh'; \
13026,c7846edc14a25304288c85e2e7bebe4609626512,/7/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13027,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13028,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13029,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13030,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
13031,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13032,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
13033,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
13034,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
13035,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
13036,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
13037,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
13038,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/oracle/Dockerfile,# basic smoke test
13039,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
13040,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13041,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13042,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
13043,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13044,b734af2a8ee4697604035d14064fb7f3b1d5f050,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13045,b734af2a8ee4697604035d14064fb7f3b1d5f050,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13046,b734af2a8ee4697604035d14064fb7f3b1d5f050,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
13047,b734af2a8ee4697604035d14064fb7f3b1d5f050,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13048,b734af2a8ee4697604035d14064fb7f3b1d5f050,/8-jre/alpine/Dockerfile,#!/bin/sh'; \
13049,930076b47e3a318fa0428c39579fe00f36e3b8b0,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13050,930076b47e3a318fa0428c39579fe00f36e3b8b0,/openjdk-7-jdk/Dockerfile,# Default to UTF-8 file.encoding
13051,930076b47e3a318fa0428c39579fe00f36e3b8b0,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
13052,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13053,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
13054,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
13055,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13056,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/Dockerfile,#!/bin/sh'; \
13057,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13058,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
13059,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
13060,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)"
13061,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13062,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13063,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13064,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13065,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13066,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13067,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13068,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13069,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-1709/Dockerfile,# https://jdk.java.net/
13070,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13071,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13072,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13073,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
13074,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
13075,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
13076,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13077,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13078,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13079,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-1709/Dockerfile,# https://jdk.java.net/
13080,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13081,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13082,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13083,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-7-jdk/Dockerfile,# Default to UTF-8 file.encoding
13084,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
13085,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13086,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
13087,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
13088,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13089,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
13090,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13091,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
13092,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13093,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13094,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13095,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13096,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13097,9a0822673dffd3e5ba66f18a8547aa60faed6d08,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13098,9a0822673dffd3e5ba66f18a8547aa60faed6d08,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13099,9a0822673dffd3e5ba66f18a8547aa60faed6d08,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
13100,9a0822673dffd3e5ba66f18a8547aa60faed6d08,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13101,9a0822673dffd3e5ba66f18a8547aa60faed6d08,/8-jdk/alpine/Dockerfile,#!/bin/sh'; \
13102,1778c73b834d04d5b5c61baee4cce8c127031f9c,/7/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13103,1778c73b834d04d5b5c61baee4cce8c127031f9c,/7/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
13104,1778c73b834d04d5b5c61baee4cce8c127031f9c,/7/jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
13105,1778c73b834d04d5b5c61baee4cce8c127031f9c,/7/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13106,1778c73b834d04d5b5c61baee4cce8c127031f9c,/7/jdk/alpine/Dockerfile,#!/bin/sh'; \
13107,1778c73b834d04d5b5c61baee4cce8c127031f9c,/7/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13108,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13109,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13110,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13111,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-1709/Dockerfile,# https://jdk.java.net/
13112,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13113,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13114,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13115,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13116,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
13117,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13118,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13119,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
13120,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
13121,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13122,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/Dockerfile,#!/bin/sh'; \
13123,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13124,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
13125,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
13126,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)"
13127,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13128,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13129,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13130,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13131,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13132,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13133,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13134,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13135,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
13136,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13137,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
13138,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
13139,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux7/Dockerfile,# Default to UTF-8 file.encoding
13140,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
13141,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
13142,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux7/Dockerfile,# arm64v8
13143,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux7/Dockerfile,# amd64
13144,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux7/Dockerfile,# fallback
13145,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux7/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
13146,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
13147,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
13148,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux7/Dockerfile,# basic smoke test
13149,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
13150,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13151,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
13152,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
13153,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13154,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/slim/Dockerfile,#!/bin/sh'; \
13155,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13156,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
13157,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13158,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13159,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13160,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13161,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13162,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
13163,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
13164,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13165,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/Dockerfile,#!/bin/sh'; \
13166,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13167,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
13168,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
13169,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13170,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13171,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13172,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
13173,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13174,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13175,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13176,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
13177,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
13178,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
13179,a2d46845f90bd841871419063cf12ebe4c2e2b72,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13180,a2d46845f90bd841871419063cf12ebe4c2e2b72,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13181,a2d46845f90bd841871419063cf12ebe4c2e2b72,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
13182,a2d46845f90bd841871419063cf12ebe4c2e2b72,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13183,a2d46845f90bd841871419063cf12ebe4c2e2b72,/9-jdk/Dockerfile,#!/bin/sh'; \
13184,a2d46845f90bd841871419063cf12ebe4c2e2b72,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
13185,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/alpine/Dockerfile,# http://jdk.java.net/
13186,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
13187,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
13188,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/alpine/Dockerfile,# basic smoke test
13189,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
13190,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
13191,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/slim/Dockerfile,# backwards compatibility shim
13192,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
13193,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
13194,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
13195,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
13196,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
13197,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
13198,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/slim/Dockerfile,# basic smoke test
13199,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
13200,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
13201,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
13202,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13203,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13204,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
13205,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13206,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jdk/Dockerfile,#!/bin/sh'; \
13207,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13208,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
13209,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13210,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13211,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13212,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
13213,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
13214,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13215,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13216,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
13217,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
13218,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
13219,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
13220,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
13221,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
13222,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
13223,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
13224,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
13225,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/oracle/Dockerfile,# basic smoke test
13226,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
13227,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
13228,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
13229,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/slim/Dockerfile,# backwards compatibility shim
13230,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
13231,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
13232,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
13233,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
13234,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
13235,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
13236,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
13237,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/slim/Dockerfile,# basic smoke test
13238,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
13239,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
13240,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13241,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
13242,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
13243,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13244,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/alpine/Dockerfile,#!/bin/sh'; \
13245,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13246,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13247,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13248,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13249,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
13250,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13251,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
13252,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
13253,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
13254,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
13255,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
13256,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/oracle/Dockerfile,# amd64
13257,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/oracle/Dockerfile,# fallback
13258,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
13259,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
13260,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
13261,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/oracle/Dockerfile,# basic smoke test
13262,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
13263,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13264,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13265,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13266,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-1709/Dockerfile,# https://jdk.java.net/
13267,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13268,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13269,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13270,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13271,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
13272,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13273,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13274,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
13275,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
13276,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13277,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/slim/Dockerfile,#!/bin/sh'; \
13278,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13279,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
13280,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
13281,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13282,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13283,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13284,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
13285,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13286,70015f4ca4c484a5c78b71fad7243a022cb1e6c2,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13287,70015f4ca4c484a5c78b71fad7243a022cb1e6c2,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13288,70015f4ca4c484a5c78b71fad7243a022cb1e6c2,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
13289,70015f4ca4c484a5c78b71fad7243a022cb1e6c2,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13290,70015f4ca4c484a5c78b71fad7243a022cb1e6c2,/9-jre/Dockerfile,#!/bin/sh'; \
13291,70015f4ca4c484a5c78b71fad7243a022cb1e6c2,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
13292,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13293,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13294,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
13295,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
13296,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
13297,cee45bcb0f2d6db2e3e96c5465ebd5dbddcb2aea,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13298,cee45bcb0f2d6db2e3e96c5465ebd5dbddcb2aea,/openjdk-7-jre/Dockerfile,# Default to UTF-8 file.encoding
13299,cee45bcb0f2d6db2e3e96c5465ebd5dbddcb2aea,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
13300,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
13301,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
13302,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/slim-buster/Dockerfile,# backwards compatibility shim
13303,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
13304,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/slim-buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
13305,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
13306,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/slim-buster/Dockerfile,# amd64
13307,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/slim-buster/Dockerfile,# fallback
13308,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
13309,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
13310,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
13311,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
13312,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
13313,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/slim-buster/Dockerfile,# basic smoke test
13314,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
13315,dd54ae37bc44d19ecb5be702d36d664fed2c68e4,/8/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13316,dd54ae37bc44d19ecb5be702d36d664fed2c68e4,/8/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
13317,dd54ae37bc44d19ecb5be702d36d664fed2c68e4,/8/jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
13318,dd54ae37bc44d19ecb5be702d36d664fed2c68e4,/8/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13319,dd54ae37bc44d19ecb5be702d36d664fed2c68e4,/8/jre/alpine/Dockerfile,#!/bin/sh'; \
13320,dd54ae37bc44d19ecb5be702d36d664fed2c68e4,/8/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13321,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13322,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13323,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
13324,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13325,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13326,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
13327,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
13328,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13329,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/slim/Dockerfile,#!/bin/sh'; \
13330,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13331,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
13332,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
13333,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13334,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13335,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13336,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
13337,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13338,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
13339,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
13340,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/Dockerfile,# backwards compatibility shim
13341,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
13342,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
13343,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
13344,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
13345,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
13346,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/Dockerfile,# basic smoke test
13347,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
13348,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
13349,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
13350,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
13351,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
13352,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
13353,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/oracle/Dockerfile,# arm64v8
13354,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/oracle/Dockerfile,# amd64
13355,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/oracle/Dockerfile,# fallback
13356,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
13357,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
13358,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/oracle/Dockerfile,# basic smoke test
13359,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
13360,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13361,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13362,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13363,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
13364,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13365,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
13366,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
13367,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
13368,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13369,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13370,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13371,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
13372,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
13373,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
13374,3f6ab87ebe4bdea4470d0ff1e26f61dadd646c64,/8/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
13375,3f6ab87ebe4bdea4470d0ff1e26f61dadd646c64,/8/jdk/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
13376,3f6ab87ebe4bdea4470d0ff1e26f61dadd646c64,/8/jdk/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
13377,f6c1efc5fdf4358b633042522920a1624c95914b,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13378,f6c1efc5fdf4358b633042522920a1624c95914b,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13379,f6c1efc5fdf4358b633042522920a1624c95914b,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
13380,f6c1efc5fdf4358b633042522920a1624c95914b,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13381,f6c1efc5fdf4358b633042522920a1624c95914b,/9-jdk/Dockerfile,#!/bin/sh'; \
13382,f6c1efc5fdf4358b633042522920a1624c95914b,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
13383,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13384,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
13385,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
13386,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13387,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/Dockerfile,#!/bin/sh'; \
13388,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13389,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
13390,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13391,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13392,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13393,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13394,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
13395,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
13396,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
13397,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13398,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
13399,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
13400,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13401,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/slim/Dockerfile,#!/bin/sh'; \
13402,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13403,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
13404,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13405,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13406,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13407,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13408,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13409,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
13410,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
13411,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13412,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/slim/Dockerfile,#!/bin/sh'; \
13413,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13414,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
13415,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13416,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13417,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13418,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13419,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
13420,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/nanoserver-1803/Dockerfile,# https://jdk.java.net/
13421,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
13422,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13423,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13424,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
13425,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
13426,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
13427,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
13428,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
13429,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
13430,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/slim/Dockerfile,# backwards compatibility shim
13431,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
13432,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
13433,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
13434,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/slim/Dockerfile,# arm64v8
13435,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/slim/Dockerfile,# amd64
13436,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/slim/Dockerfile,# fallback
13437,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
13438,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
13439,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
13440,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
13441,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
13442,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/slim/Dockerfile,# basic smoke test
13443,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
13444,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13445,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13446,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13447,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
13448,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13449,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
13450,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
13451,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
13452,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
13453,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
13454,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
13455,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/oracle/Dockerfile,# basic smoke test
13456,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
13457,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13458,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
13459,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/Dockerfile,# Default to UTF-8 file.encoding
13460,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13461,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/Dockerfile,#!/bin/sh'; \
13462,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13463,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
13464,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13465,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13466,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13467,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13468,906bdc14f53c6eff33c007511701ef0444705993,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13469,906bdc14f53c6eff33c007511701ef0444705993,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13470,906bdc14f53c6eff33c007511701ef0444705993,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
13471,906bdc14f53c6eff33c007511701ef0444705993,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13472,906bdc14f53c6eff33c007511701ef0444705993,/9-jdk/Dockerfile,#!/bin/sh'; \
13473,906bdc14f53c6eff33c007511701ef0444705993,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13474,906bdc14f53c6eff33c007511701ef0444705993,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13475,906bdc14f53c6eff33c007511701ef0444705993,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13476,906bdc14f53c6eff33c007511701ef0444705993,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13477,906bdc14f53c6eff33c007511701ef0444705993,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
13478,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13479,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13480,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13481,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
13482,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13483,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13484,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13485,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
13486,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
13487,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
13488,0b124de91ebd32bcc8977fd2214d36b8fccb615c,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13489,0b124de91ebd32bcc8977fd2214d36b8fccb615c,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
13490,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13491,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
13492,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/Dockerfile,# Default to UTF-8 file.encoding
13493,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13494,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/Dockerfile,#!/bin/sh'; \
13495,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13496,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
13497,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
13498,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13499,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13500,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13501,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13502,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13503,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13504,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13505,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13506,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/nanoserver-sac2016/Dockerfile,# https://jdk.java.net/
13507,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13508,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13509,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13510,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13511,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
13512,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13513,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13514,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
13515,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/Dockerfile,# Default to UTF-8 file.encoding
13516,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13517,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/Dockerfile,#!/bin/sh'; \
13518,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13519,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
13520,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13521,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13522,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13523,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13524,d93be18f4f2d5e8457169cac00e559d953b6028e,/7/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13525,d93be18f4f2d5e8457169cac00e559d953b6028e,/7/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
13526,d93be18f4f2d5e8457169cac00e559d953b6028e,/7/jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
13527,d93be18f4f2d5e8457169cac00e559d953b6028e,/7/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13528,d93be18f4f2d5e8457169cac00e559d953b6028e,/7/jdk/alpine/Dockerfile,#!/bin/sh'; \
13529,d93be18f4f2d5e8457169cac00e559d953b6028e,/7/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13530,1398299a268f339254a94b606113d1627dec342e,/13/jdk/alpine/Dockerfile,# https://jdk.java.net/
13531,1398299a268f339254a94b606113d1627dec342e,/13/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
13532,1398299a268f339254a94b606113d1627dec342e,/13/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
13533,1398299a268f339254a94b606113d1627dec342e,/13/jdk/alpine/Dockerfile,# basic smoke test
13534,1398299a268f339254a94b606113d1627dec342e,/13/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
13535,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-6-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13536,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13537,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-6-jdk/Dockerfile,# Default to UTF-8 file.encoding
13538,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-6-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13539,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-6-jdk/Dockerfile,#!/bin/bash'; \
13540,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
13541,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13542,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13543,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
13544,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
13545,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
13546,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
13547,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
13548,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
13549,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/Dockerfile,# backwards compatibility shim
13550,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
13551,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/Dockerfile,# https://adoptopenjdk.net/upstream.html
13552,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
13553,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
13554,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
13555,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
13556,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
13557,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/Dockerfile,#!/usr/bin/env bash'; \
13558,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
13559,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
13560,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/Dockerfile,# basic smoke test
13561,8b20818d91705361ff42b597369620680d0af98c,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13562,8b20818d91705361ff42b597369620680d0af98c,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
13563,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13564,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
13565,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
13566,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13567,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/slim/Dockerfile,#!/bin/sh'; \
13568,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13569,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
13570,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
13571,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13572,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13573,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13574,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13575,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13576,d22a4675dad30274c9ed6cfd9b98bfa0fec9d4a9,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13577,d22a4675dad30274c9ed6cfd9b98bfa0fec9d4a9,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13578,d22a4675dad30274c9ed6cfd9b98bfa0fec9d4a9,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
13579,d22a4675dad30274c9ed6cfd9b98bfa0fec9d4a9,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13580,d22a4675dad30274c9ed6cfd9b98bfa0fec9d4a9,/9-jdk/Dockerfile,#!/bin/sh'; \
13581,d22a4675dad30274c9ed6cfd9b98bfa0fec9d4a9,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
13582,41532fd149c05cb3bbc0c143bfcfa4589f1c3a61,/9-jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13583,41532fd149c05cb3bbc0c143bfcfa4589f1c3a61,/9-jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13584,41532fd149c05cb3bbc0c143bfcfa4589f1c3a61,/9-jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
13585,41532fd149c05cb3bbc0c143bfcfa4589f1c3a61,/9-jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13586,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13587,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13588,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
13589,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
13590,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
13591,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
13592,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
13593,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
13594,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
13595,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13596,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13597,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
13598,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
13599,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
13600,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13601,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13602,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13603,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
13604,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
13605,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
13606,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13607,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
13608,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
13609,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13610,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/slim/Dockerfile,#!/bin/sh'; \
13611,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13612,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
13613,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
13614,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)"
13615,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13616,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13617,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13618,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13619,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
13620,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
13621,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
13622,9089afd69bd69c34413b064bc36c15509b2ed4df,/7-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13623,9089afd69bd69c34413b064bc36c15509b2ed4df,/7-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13624,9089afd69bd69c34413b064bc36c15509b2ed4df,/7-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
13625,9089afd69bd69c34413b064bc36c15509b2ed4df,/7-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13626,9089afd69bd69c34413b064bc36c15509b2ed4df,/7-jdk/alpine/Dockerfile,#!/bin/sh'; \
13627,ee26e3735002dfb83551faf0f3b73822addc4799,/15/jdk/alpine/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
13628,ee26e3735002dfb83551faf0f3b73822addc4799,/15/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
13629,ee26e3735002dfb83551faf0f3b73822addc4799,/15/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
13630,ee26e3735002dfb83551faf0f3b73822addc4799,/15/jdk/alpine/Dockerfile,# basic smoke test
13631,ee26e3735002dfb83551faf0f3b73822addc4799,/15/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
13632,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/8/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13633,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13634,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/8/jdk/windows/windowsservercore-1803/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
13635,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
13636,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
13637,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,# backwards compatibility shim
13638,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
13639,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
13640,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
13641,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
13642,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,# arm64v8
13643,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,# amd64
13644,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,# fallback
13645,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
13646,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
13647,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
13648,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
13649,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
13650,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
13651,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
13652,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,# basic smoke test
13653,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
13654,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
13655,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
13656,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/Dockerfile,# backwards compatibility shim
13657,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
13658,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/Dockerfile,# https://adoptopenjdk.net/upstream.html
13659,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
13660,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
13661,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
13662,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
13663,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
13664,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/Dockerfile,#!/usr/bin/env bash'; \
13665,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
13666,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
13667,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/Dockerfile,# basic smoke test
13668,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
13669,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
13670,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,# Default to UTF-8 file.encoding
13671,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,# backwards compatibility shim
13672,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
13673,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
13674,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
13675,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
13676,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,# arm64v8
13677,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,# amd64
13678,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,# fallback
13679,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
13680,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
13681,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
13682,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
13683,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,#!/usr/bin/env bash'; \
13684,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
13685,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
13686,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,# basic smoke test
13687,f25ed8b213142ebe4370cf7494ecccccecc55ecd,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13688,f25ed8b213142ebe4370cf7494ecccccecc55ecd,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
13689,c5febc686f445910ce2075d8b2434c7ec23ffc6c,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13690,c5febc686f445910ce2075d8b2434c7ec23ffc6c,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13691,c5febc686f445910ce2075d8b2434c7ec23ffc6c,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
13692,c5febc686f445910ce2075d8b2434c7ec23ffc6c,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13693,c5febc686f445910ce2075d8b2434c7ec23ffc6c,/9-jre/Dockerfile,#!/bin/sh'; \
13694,c5febc686f445910ce2075d8b2434c7ec23ffc6c,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
13695,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
13696,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
13697,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
13698,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
13699,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,# backwards compatibility shim
13700,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
13701,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
13702,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
13703,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,# arm64v8
13704,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,# amd64
13705,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,# fallback
13706,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
13707,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
13708,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
13709,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
13710,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
13711,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,# basic smoke test
13712,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
13713,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13714,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13715,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13716,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
13717,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13718,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13719,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13720,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
13721,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13722,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jre/Dockerfile,#!/bin/sh'; \
13723,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13724,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
13725,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13726,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13727,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13728,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
13729,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
13730,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13731,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13732,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
13733,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
13734,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
13735,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/7-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13736,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/7-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13737,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/7-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
13738,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/7-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13739,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/7-jdk/alpine/Dockerfile,#!/bin/sh'; \
13740,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13741,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13742,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13743,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
13744,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
13745,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13746,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13747,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
13748,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13749,502f18c2a34cb4a6f50ca6943a82e9a0b18f4254,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13750,502f18c2a34cb4a6f50ca6943a82e9a0b18f4254,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13751,502f18c2a34cb4a6f50ca6943a82e9a0b18f4254,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
13752,502f18c2a34cb4a6f50ca6943a82e9a0b18f4254,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13753,502f18c2a34cb4a6f50ca6943a82e9a0b18f4254,/8-jdk/Dockerfile,#!/bin/sh'; \
13754,502f18c2a34cb4a6f50ca6943a82e9a0b18f4254,/8-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13755,502f18c2a34cb4a6f50ca6943a82e9a0b18f4254,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
13756,502f18c2a34cb4a6f50ca6943a82e9a0b18f4254,/8-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13757,502f18c2a34cb4a6f50ca6943a82e9a0b18f4254,/8-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13758,502f18c2a34cb4a6f50ca6943a82e9a0b18f4254,/8-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13759,502f18c2a34cb4a6f50ca6943a82e9a0b18f4254,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
13760,502f18c2a34cb4a6f50ca6943a82e9a0b18f4254,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
13761,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
13762,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
13763,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/slim/Dockerfile,# backwards compatibility shim
13764,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
13765,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/slim/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
13766,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
13767,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
13768,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
13769,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
13770,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
13771,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
13772,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
13773,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
13774,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/slim/Dockerfile,# basic smoke test
13775,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
13776,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
13777,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/slim/Dockerfile,# backwards compatibility shim
13778,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
13779,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
13780,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
13781,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
13782,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
13783,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
13784,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
13785,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
13786,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
13787,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
13788,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/slim/Dockerfile,# basic smoke test
13789,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
13790,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13791,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13792,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13793,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
13794,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13795,4815a7dc43f0fb212c40f357624fb4ec943992bf,/8-jdk/windows/nanoserver/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13796,4815a7dc43f0fb212c40f357624fb4ec943992bf,/8-jdk/windows/nanoserver/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13797,4815a7dc43f0fb212c40f357624fb4ec943992bf,/8-jdk/windows/nanoserver/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
13798,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13799,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13800,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13801,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-1809/Dockerfile,# http://jdk.java.net/
13802,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13803,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
13804,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
13805,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/slim/Dockerfile,# backwards compatibility shim
13806,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
13807,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
13808,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
13809,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
13810,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
13811,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
13812,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
13813,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
13814,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
13815,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
13816,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/slim/Dockerfile,# basic smoke test
13817,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
13818,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13819,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13820,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13821,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
13822,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13823,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13824,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
13825,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
13826,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13827,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/Dockerfile,#!/bin/sh'; \
13828,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13829,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
13830,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
13831,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13832,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13833,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13834,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
13835,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13836,d912163e5aa10f916be7ac40ac0de7e8a82c4547,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13837,d912163e5aa10f916be7ac40ac0de7e8a82c4547,/openjdk-8-jre/Dockerfile,# Default to UTF-8 file.encoding
13838,d912163e5aa10f916be7ac40ac0de7e8a82c4547,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
13839,d912163e5aa10f916be7ac40ac0de7e8a82c4547,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
13840,d912163e5aa10f916be7ac40ac0de7e8a82c4547,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
13841,0b124de91ebd32bcc8977fd2214d36b8fccb615c,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13842,0b124de91ebd32bcc8977fd2214d36b8fccb615c,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
13843,873fb56728befef8ecaf8436c3a27fd239cba301,/9-jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13844,873fb56728befef8ecaf8436c3a27fd239cba301,/9-jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13845,873fb56728befef8ecaf8436c3a27fd239cba301,/9-jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
13846,873fb56728befef8ecaf8436c3a27fd239cba301,/9-jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13847,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
13848,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
13849,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/oracle/Dockerfile,# https://jdk.java.net/
13850,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
13851,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
13852,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/oracle/Dockerfile,# basic smoke test
13853,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
13854,15835397954c9ec123e42e685035ecd239e0a1db,/8/jre/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
13855,15835397954c9ec123e42e685035ecd239e0a1db,/8/jre/windows/nanoserver-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
13856,15835397954c9ec123e42e685035ecd239e0a1db,/8/jre/windows/nanoserver-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
13857,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13858,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
13859,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/Dockerfile,# Default to UTF-8 file.encoding
13860,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13861,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/Dockerfile,#!/bin/sh'; \
13862,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13863,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
13864,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13865,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13866,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13867,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13868,8b20818d91705361ff42b597369620680d0af98c,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13869,8b20818d91705361ff42b597369620680d0af98c,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
13870,2ac2312f6374ae864c3166466fb366967b97e47a,/7/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13871,2ac2312f6374ae864c3166466fb366967b97e47a,/7/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
13872,2ac2312f6374ae864c3166466fb366967b97e47a,/7/jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
13873,2ac2312f6374ae864c3166466fb366967b97e47a,/7/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13874,2ac2312f6374ae864c3166466fb366967b97e47a,/7/jre/alpine/Dockerfile,#!/bin/sh'; \
13875,2ac2312f6374ae864c3166466fb366967b97e47a,/7/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13876,2695acad7bb0cd43353dc6c7d5cfc6424ab12b54,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13877,2695acad7bb0cd43353dc6c7d5cfc6424ab12b54,/openjdk-8-jre/Dockerfile,# Default to UTF-8 file.encoding
13878,2695acad7bb0cd43353dc6c7d5cfc6424ab12b54,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
13879,2695acad7bb0cd43353dc6c7d5cfc6424ab12b54,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
13880,2695acad7bb0cd43353dc6c7d5cfc6424ab12b54,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
13881,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13882,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13883,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-9-jdk/Dockerfile,# Default to UTF-8 file.encoding
13884,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13885,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-9-jdk/Dockerfile,#!/bin/bash'; \
13886,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-9-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
13887,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-9-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
13888,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
13889,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13890,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13891,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/windows/windowsservercore-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
13892,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/windows/windowsservercore-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
13893,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
13894,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13895,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13896,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/windows/windowsservercore-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
13897,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/windows/windowsservercore-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
13898,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
13899,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13900,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
13901,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
13902,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13903,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/slim/Dockerfile,#!/bin/sh'; \
13904,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13905,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
13906,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
13907,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13908,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13909,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13910,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13911,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13912,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
13913,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
13914,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
13915,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13916,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
13917,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
13918,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13919,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/slim/Dockerfile,#!/bin/sh'; \
13920,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13921,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
13922,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13923,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13924,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13925,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13926,434085b54bbb735683242c232d8b0d79259ce3c0,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13927,434085b54bbb735683242c232d8b0d79259ce3c0,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13928,434085b54bbb735683242c232d8b0d79259ce3c0,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
13929,434085b54bbb735683242c232d8b0d79259ce3c0,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13930,434085b54bbb735683242c232d8b0d79259ce3c0,/9-jre/Dockerfile,#!/bin/sh'; \
13931,434085b54bbb735683242c232d8b0d79259ce3c0,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
13932,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13933,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13934,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13935,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
13936,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13937,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13938,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13939,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13940,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-1709/Dockerfile,# https://jdk.java.net/
13941,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13942,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13943,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
13944,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
13945,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13946,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/slim/Dockerfile,#!/bin/sh'; \
13947,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13948,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
13949,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13950,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13951,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13952,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13953,b4a3c296023e590e410f645ab83d3c11a30cf535,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13954,b4a3c296023e590e410f645ab83d3c11a30cf535,/openjdk-8-jdk/Dockerfile,# Default to UTF-8 file.encoding
13955,b4a3c296023e590e410f645ab83d3c11a30cf535,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
13956,b4a3c296023e590e410f645ab83d3c11a30cf535,/openjdk-8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
13957,b4a3c296023e590e410f645ab83d3c11a30cf535,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
13958,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13959,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
13960,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
13961,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13962,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/Dockerfile,#!/bin/sh'; \
13963,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13964,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
13965,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13966,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13967,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13968,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13969,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13970,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13971,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13972,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
13973,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13974,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13975,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13976,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13977,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
13978,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13979,40a23ac72e90b05469c881a6fa9139476d3fa2a4,/10/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13980,40a23ac72e90b05469c881a6fa9139476d3fa2a4,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13981,40a23ac72e90b05469c881a6fa9139476d3fa2a4,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13982,40a23ac72e90b05469c881a6fa9139476d3fa2a4,/10/jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
13983,40a23ac72e90b05469c881a6fa9139476d3fa2a4,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13984,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13985,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13986,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
13987,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13988,bd65529778e956612c0bd689aa6ff1ace391859e,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13989,bd65529778e956612c0bd689aa6ff1ace391859e,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
13990,bd65529778e956612c0bd689aa6ff1ace391859e,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13991,bd65529778e956612c0bd689aa6ff1ace391859e,/8-jre/alpine/Dockerfile,#!/bin/sh -e'; \
13992,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
13993,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jre/slim/Dockerfile,# backwards compatibility shim
13994,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
13995,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jre/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
13996,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
13997,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jre/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
13998,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
13999,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jre/slim/Dockerfile,# basic smoke test
14000,f25ed8b213142ebe4370cf7494ecccccecc55ecd,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14001,f25ed8b213142ebe4370cf7494ecccccecc55ecd,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
14002,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
14003,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
14004,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
14005,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
14006,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
14007,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/oracle/Dockerfile,# basic smoke test
14008,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
14009,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
14010,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/Dockerfile,# backwards compatibility shim
14011,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
14012,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
14013,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
14014,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
14015,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
14016,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/Dockerfile,# basic smoke test
14017,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
14018,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14019,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14020,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
14021,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14022,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/8-jdk/Dockerfile,#!/bin/sh'; \
14023,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
14024,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
14025,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
14026,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14027,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14028,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
14029,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14030,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14031,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
14032,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
14033,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14034,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/Dockerfile,#!/bin/sh'; \
14035,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14036,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14037,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
14038,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)"
14039,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14040,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14041,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14042,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14043,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14044,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
14045,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
14046,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14047,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/Dockerfile,#!/bin/sh'; \
14048,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14049,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14050,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14051,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14052,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14053,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14054,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14055,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14056,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14057,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jdk/Dockerfile,# Default to UTF-8 file.encoding
14058,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14059,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jdk/Dockerfile,#!/bin/sh'; \
14060,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14061,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14062,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14063,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14064,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
14065,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
14066,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
14067,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
14068,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/Dockerfile,# backwards compatibility shim
14069,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
14070,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
14071,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
14072,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
14073,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
14074,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
14075,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
14076,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/Dockerfile,#!/usr/bin/env bash'; \
14077,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
14078,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
14079,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/Dockerfile,# basic smoke test
14080,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14081,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
14082,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
14083,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14084,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/Dockerfile,#!/bin/sh'; \
14085,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14086,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
14087,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14088,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14089,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14090,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14091,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
14092,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14093,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14094,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
14095,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
14096,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14097,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/Dockerfile,#!/bin/sh'; \
14098,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14099,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14100,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14101,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14102,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14103,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14104,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14105,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14106,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
14107,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14108,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/8-jdk/alpine/Dockerfile,#!/bin/sh'; \
14109,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14110,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
14111,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
14112,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14113,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/slim/Dockerfile,#!/bin/sh'; \
14114,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14115,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14116,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
14117,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14118,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14119,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14120,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14121,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14122,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14123,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
14124,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
14125,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14126,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/Dockerfile,#!/bin/sh'; \
14127,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14128,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14129,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14130,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14131,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14132,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14133,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14134,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14135,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14136,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14137,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
14138,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14139,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14140,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14141,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14142,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
14143,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14144,54c64cf47d2b705418feb68b811419a223c5a040,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14145,54c64cf47d2b705418feb68b811419a223c5a040,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14146,54c64cf47d2b705418feb68b811419a223c5a040,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
14147,54c64cf47d2b705418feb68b811419a223c5a040,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14148,54c64cf47d2b705418feb68b811419a223c5a040,/8-jdk/alpine/Dockerfile,#!/bin/sh'; \
14149,97ab55cab073e87658ec6f993538038bfc7a858d,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14150,97ab55cab073e87658ec6f993538038bfc7a858d,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14151,97ab55cab073e87658ec6f993538038bfc7a858d,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
14152,97ab55cab073e87658ec6f993538038bfc7a858d,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14153,97ab55cab073e87658ec6f993538038bfc7a858d,/9-jre/Dockerfile,#!/bin/sh'; \
14154,97ab55cab073e87658ec6f993538038bfc7a858d,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
14155,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
14156,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
14157,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
14158,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,# Default to UTF-8 file.encoding
14159,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,# backwards compatibility shim
14160,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
14161,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
14162,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
14163,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,# arm64v8
14164,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,# amd64
14165,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,# fallback
14166,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
14167,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,#!/usr/bin/env bash'; \
14168,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
14169,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
14170,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
14171,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,# basic smoke test
14172,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
14173,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14174,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14175,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14176,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
14177,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14178,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14179,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
14180,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14181,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jdk/alpine/Dockerfile,#!/bin/sh -e'; \
14182,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/alpine/Dockerfile,# https://jdk.java.net/
14183,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
14184,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
14185,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/alpine/Dockerfile,# basic smoke test
14186,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
14187,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14188,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14189,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14190,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
14191,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14192,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14193,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
14194,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
14195,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14196,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/slim/Dockerfile,#!/bin/sh'; \
14197,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14198,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14199,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14200,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14201,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14202,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14203,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14204,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14205,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14206,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
14207,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14208,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
14209,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
14210,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
14211,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
14212,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
14213,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
14214,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/oracle/Dockerfile,# basic smoke test
14215,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
14216,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
14217,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
14218,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
14219,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
14220,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/Dockerfile,# backwards compatibility shim
14221,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
14222,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
14223,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
14224,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
14225,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
14226,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
14227,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
14228,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/Dockerfile,# basic smoke test
14229,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
14230,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14231,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
14232,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
14233,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14234,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/slim/Dockerfile,#!/bin/sh'; \
14235,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14236,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14237,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14238,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14239,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14240,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14241,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
14242,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
14243,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
14244,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
14245,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
14246,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/oracle/Dockerfile,# basic smoke test
14247,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
14248,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
14249,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
14250,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
14251,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
14252,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,# backwards compatibility shim
14253,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
14254,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
14255,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
14256,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,# arm64v8
14257,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,# amd64
14258,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,# fallback
14259,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
14260,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
14261,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
14262,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
14263,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
14264,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,# basic smoke test
14265,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
14266,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
14267,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
14268,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
14269,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
14270,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
14271,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
14272,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/oracle/Dockerfile,# basic smoke test
14273,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
14274,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
14275,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
14276,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
14277,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/Dockerfile,# backwards compatibility shim
14278,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
14279,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
14280,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
14281,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
14282,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
14283,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
14284,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
14285,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/Dockerfile,#!/usr/bin/env bash'; \
14286,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
14287,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
14288,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/Dockerfile,# basic smoke test
14289,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14290,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14291,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/windows/windowsservercore-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
14292,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/windows/windowsservercore-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
14293,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
14294,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14295,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14296,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/windows/windowsservercore-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
14297,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/windows/windowsservercore-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
14298,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
14299,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14300,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
14301,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
14302,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14303,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/Dockerfile,#!/bin/sh'; \
14304,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14305,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14306,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14307,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14308,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14309,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14310,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14311,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
14312,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
14313,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
14314,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14315,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14316,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
14317,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14318,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14319,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14320,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
14321,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
14322,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
14323,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
14324,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14325,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
14326,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
14327,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14328,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/slim/Dockerfile,#!/bin/sh'; \
14329,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14330,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14331,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14332,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14333,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14334,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14335,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jdk/windows/nanoserver/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14336,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jdk/windows/nanoserver/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14337,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jdk/windows/nanoserver/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
14338,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14339,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14340,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14341,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
14342,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14343,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14344,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14345,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# https://adoptopenjdk.net/upstream.html
14346,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
14347,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
14348,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
14349,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/nanoserver-1809/Dockerfile,# https://jdk.java.net/
14350,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
14351,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
14352,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
14353,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/oracle/Dockerfile,# http://jdk.java.net/
14354,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
14355,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
14356,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/oracle/Dockerfile,# basic smoke test
14357,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
14358,9b3b7ed1bdd754fa61b5dd86c0bcd3e3400c6a33,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14359,9b3b7ed1bdd754fa61b5dd86c0bcd3e3400c6a33,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
14360,62077dac7745304d836f760c12f23e8986b83bc0,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14361,62077dac7745304d836f760c12f23e8986b83bc0,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
14362,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
14363,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
14364,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/slim/Dockerfile,# backwards compatibility shim
14365,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
14366,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/slim/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
14367,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
14368,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
14369,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
14370,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
14371,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
14372,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
14373,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
14374,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
14375,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/slim/Dockerfile,# basic smoke test
14376,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14377,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
14378,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
14379,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14380,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/slim/Dockerfile,#!/bin/sh'; \
14381,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14382,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14383,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14384,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14385,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14386,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14387,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14388,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
14389,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
14390,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
14391,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
14392,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
14393,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/oracle/Dockerfile,# basic smoke test
14394,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
14395,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14396,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14397,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14398,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
14399,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14400,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14401,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14402,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14403,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
14404,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14405,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
14406,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
14407,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
14408,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
14409,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/Dockerfile,# backwards compatibility shim
14410,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
14411,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
14412,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
14413,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
14414,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
14415,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
14416,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
14417,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/Dockerfile,# basic smoke test
14418,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
14419,030bf19db79998e9f9861d1ce848bbf1f41ee050,/openjdk-8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14420,030bf19db79998e9f9861d1ce848bbf1f41ee050,/openjdk-8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
14421,030bf19db79998e9f9861d1ce848bbf1f41ee050,/openjdk-8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14422,030bf19db79998e9f9861d1ce848bbf1f41ee050,/openjdk-8-jdk/alpine/Dockerfile,#!/bin/sh -e'; \
14423,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14424,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14425,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14426,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
14427,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14428,07f251a7891fb4624535379d58b50f585a32c279,/11/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14429,07f251a7891fb4624535379d58b50f585a32c279,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14430,07f251a7891fb4624535379d58b50f585a32c279,/11/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
14431,07f251a7891fb4624535379d58b50f585a32c279,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14432,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux8/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
14433,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux8/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
14434,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux8/Dockerfile,# Default to UTF-8 file.encoding
14435,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux8/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
14436,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux8/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
14437,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux8/Dockerfile,# arm64v8
14438,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux8/Dockerfile,# amd64
14439,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux8/Dockerfile,# fallback
14440,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux8/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
14441,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux8/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
14442,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux8/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
14443,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux8/Dockerfile,# basic smoke test
14444,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux8/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
14445,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14446,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14447,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14448,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
14449,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14450,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
14451,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
14452,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
14453,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
14454,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
14455,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
14456,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/oracle/Dockerfile,# basic smoke test
14457,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
14458,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14459,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
14460,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
14461,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14462,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/slim/Dockerfile,#!/bin/sh'; \
14463,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14464,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14465,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14466,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14467,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14468,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14469,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14470,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14471,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-7-jre/Dockerfile,# Default to UTF-8 file.encoding
14472,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14473,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-7-jre/Dockerfile,#!/bin/bash'; \
14474,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
14475,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/16/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
14476,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/16/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
14477,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/16/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
14478,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/16/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
14479,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/16/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
14480,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/16/jdk/oracle/Dockerfile,# arm64v8
14481,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/16/jdk/oracle/Dockerfile,# amd64
14482,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/16/jdk/oracle/Dockerfile,# fallback
14483,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/16/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
14484,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/16/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
14485,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/16/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
14486,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/16/jdk/oracle/Dockerfile,# basic smoke test
14487,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/16/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
14488,9089afd69bd69c34413b064bc36c15509b2ed4df,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14489,9089afd69bd69c34413b064bc36c15509b2ed4df,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14490,9089afd69bd69c34413b064bc36c15509b2ed4df,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
14491,9089afd69bd69c34413b064bc36c15509b2ed4df,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14492,9089afd69bd69c34413b064bc36c15509b2ed4df,/8-jdk/alpine/Dockerfile,#!/bin/sh'; \
14493,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14494,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
14495,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
14496,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14497,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/Dockerfile,#!/bin/sh'; \
14498,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14499,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
14500,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14501,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14502,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14503,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14504,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
14505,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14506,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14507,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14508,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14509,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
14510,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14511,c34391ea981c804c097981bad8403ec4bd934285,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14512,c34391ea981c804c097981bad8403ec4bd934285,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14513,c34391ea981c804c097981bad8403ec4bd934285,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
14514,c34391ea981c804c097981bad8403ec4bd934285,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14515,c34391ea981c804c097981bad8403ec4bd934285,/9-jre/Dockerfile,#!/bin/sh'; \
14516,c34391ea981c804c097981bad8403ec4bd934285,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14517,c34391ea981c804c097981bad8403ec4bd934285,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14518,c34391ea981c804c097981bad8403ec4bd934285,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14519,c34391ea981c804c097981bad8403ec4bd934285,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14520,c34391ea981c804c097981bad8403ec4bd934285,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
14521,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14522,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14523,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14524,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
14525,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14526,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14527,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14528,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14529,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
14530,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14531,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14532,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14533,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14534,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
14535,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14536,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14537,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
14538,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
14539,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14540,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
14541,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14542,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14543,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14544,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14545,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14546,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14547,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14548,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14549,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14550,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14551,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
14552,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14553,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14554,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14555,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14556,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
14557,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
14558,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14559,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14560,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14561,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
14562,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14563,2544422915ae09bf77b02f0afaadaad5ba204cef,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
14564,2544422915ae09bf77b02f0afaadaad5ba204cef,/13/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
14565,2544422915ae09bf77b02f0afaadaad5ba204cef,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
14566,2544422915ae09bf77b02f0afaadaad5ba204cef,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
14567,2544422915ae09bf77b02f0afaadaad5ba204cef,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
14568,2544422915ae09bf77b02f0afaadaad5ba204cef,/13/jdk/oracle/Dockerfile,# basic smoke test
14569,2544422915ae09bf77b02f0afaadaad5ba204cef,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
14570,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14571,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14572,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
14573,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14574,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/8-jdk/alpine/Dockerfile,#!/bin/sh'; \
14575,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14576,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14577,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14578,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
14579,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14580,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14581,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
14582,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
14583,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14584,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/slim/Dockerfile,#!/bin/sh'; \
14585,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14586,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14587,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14588,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14589,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14590,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14591,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14592,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14593,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-8-jdk/Dockerfile,# Default to UTF-8 file.encoding
14594,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
14595,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
14596,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
14597,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14598,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
14599,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
14600,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14601,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/slim/Dockerfile,#!/bin/sh'; \
14602,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14603,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14604,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14605,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14606,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14607,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14608,873fb56728befef8ecaf8436c3a27fd239cba301,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14609,873fb56728befef8ecaf8436c3a27fd239cba301,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14610,873fb56728befef8ecaf8436c3a27fd239cba301,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
14611,873fb56728befef8ecaf8436c3a27fd239cba301,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14612,46dbd23011cd18e86a7ce4a326de1c0f8fdf7463,/7/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14613,46dbd23011cd18e86a7ce4a326de1c0f8fdf7463,/7/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
14614,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14615,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14616,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14617,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
14618,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14619,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/windows/nanoserver/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14620,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/windows/nanoserver/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14621,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/windows/nanoserver/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
14622,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/windows/nanoserver/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14623,e2c8648d39ef1492df3482de3fda0ee3f8955fb1,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14624,e2c8648d39ef1492df3482de3fda0ee3f8955fb1,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14625,e2c8648d39ef1492df3482de3fda0ee3f8955fb1,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
14626,e2c8648d39ef1492df3482de3fda0ee3f8955fb1,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14627,e2c8648d39ef1492df3482de3fda0ee3f8955fb1,/9-jre/Dockerfile,#!/bin/sh'; \
14628,e2c8648d39ef1492df3482de3fda0ee3f8955fb1,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
14629,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
14630,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
14631,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/slim/Dockerfile,# backwards compatibility shim
14632,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
14633,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
14634,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
14635,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
14636,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
14637,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
14638,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
14639,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
14640,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
14641,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
14642,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/slim/Dockerfile,# basic smoke test
14643,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14644,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14645,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14646,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
14647,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14648,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14649,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14650,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://adoptopenjdk.net/upstream.html
14651,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
14652,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
14653,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
14654,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
14655,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/nanoserver-1803/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
14656,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
14657,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
14658,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
14659,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/slim/Dockerfile,# backwards compatibility shim
14660,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
14661,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
14662,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
14663,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
14664,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
14665,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
14666,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
14667,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
14668,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
14669,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
14670,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/slim/Dockerfile,# basic smoke test
14671,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
14672,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14673,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
14674,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
14675,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14676,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/slim/Dockerfile,#!/bin/sh'; \
14677,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14678,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14679,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14680,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14681,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14682,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14683,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14684,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14685,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14686,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
14687,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14688,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14689,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
14690,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
14691,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14692,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/slim/Dockerfile,#!/bin/sh'; \
14693,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14694,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14695,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14696,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14697,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14698,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14699,8d80a82bb2a2bb895beffebe28ef221e36449446,/openjdk-8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14700,8d80a82bb2a2bb895beffebe28ef221e36449446,/openjdk-8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
14701,8d80a82bb2a2bb895beffebe28ef221e36449446,/openjdk-8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14702,8d80a82bb2a2bb895beffebe28ef221e36449446,/openjdk-8-jre/alpine/Dockerfile,#!/bin/sh -e'; \
14703,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14704,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
14705,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/Dockerfile,# Default to UTF-8 file.encoding
14706,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14707,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/Dockerfile,#!/bin/sh'; \
14708,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14709,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14710,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
14711,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14712,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14713,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14714,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14715,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14716,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
14717,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
14718,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
14719,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14720,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14721,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14722,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
14723,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14724,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/alpine/Dockerfile,# https://jdk.java.net/
14725,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
14726,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
14727,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/alpine/Dockerfile,# basic smoke test
14728,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
14729,bde1e9a0f36e12e3df58b81acddd695fd140cf6a,/14/jdk/alpine/Dockerfile,# https://jdk.java.net/
14730,bde1e9a0f36e12e3df58b81acddd695fd140cf6a,/14/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
14731,bde1e9a0f36e12e3df58b81acddd695fd140cf6a,/14/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
14732,bde1e9a0f36e12e3df58b81acddd695fd140cf6a,/14/jdk/alpine/Dockerfile,# basic smoke test
14733,bde1e9a0f36e12e3df58b81acddd695fd140cf6a,/14/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
14734,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14735,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14736,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14737,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
14738,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14739,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14740,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
14741,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
14742,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14743,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/slim/Dockerfile,#!/bin/sh'; \
14744,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14745,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14746,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14747,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14748,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14749,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14750,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
14751,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
14752,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/slim/Dockerfile,# backwards compatibility shim
14753,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
14754,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
14755,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
14756,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
14757,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
14758,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
14759,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
14760,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/slim/Dockerfile,# basic smoke test
14761,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
14762,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
14763,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14764,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
14765,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
14766,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14767,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/Dockerfile,#!/bin/sh'; \
14768,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14769,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14770,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14771,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14772,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14773,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14774,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14775,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
14776,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
14777,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14778,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/alpine/Dockerfile,#!/bin/sh'; \
14779,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14780,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
14781,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
14782,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
14783,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14784,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14785,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14786,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
14787,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14788,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
14789,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
14790,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
14791,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
14792,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
14793,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/oracle/Dockerfile,# amd64
14794,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/oracle/Dockerfile,# fallback
14795,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
14796,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
14797,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/oracle/Dockerfile,# basic smoke test
14798,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
14799,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
14800,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
14801,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/slim/Dockerfile,# backwards compatibility shim
14802,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
14803,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
14804,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
14805,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/slim/Dockerfile,# arm64v8
14806,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/slim/Dockerfile,# amd64
14807,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/slim/Dockerfile,# fallback
14808,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
14809,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
14810,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
14811,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
14812,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
14813,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/slim/Dockerfile,# basic smoke test
14814,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
14815,193df6f21c76adb7bf23c0a6791fcbc28f6ec5fc,/openjdk-6-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14816,193df6f21c76adb7bf23c0a6791fcbc28f6ec5fc,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14817,193df6f21c76adb7bf23c0a6791fcbc28f6ec5fc,/openjdk-6-jre/Dockerfile,# Default to UTF-8 file.encoding
14818,193df6f21c76adb7bf23c0a6791fcbc28f6ec5fc,/openjdk-6-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14819,193df6f21c76adb7bf23c0a6791fcbc28f6ec5fc,/openjdk-6-jre/Dockerfile,#!/bin/bash'; \
14820,193df6f21c76adb7bf23c0a6791fcbc28f6ec5fc,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
14821,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
14822,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
14823,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
14824,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
14825,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,# backwards compatibility shim
14826,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
14827,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
14828,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
14829,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,# arm64v8
14830,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,# amd64
14831,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,# fallback
14832,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
14833,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
14834,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
14835,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
14836,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
14837,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,# basic smoke test
14838,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
14839,5fb0ba0b6f08e6647a1ba4fbdf8263895b1cf61f,/8-jdk/windows/windowsservercore/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14840,5fb0ba0b6f08e6647a1ba4fbdf8263895b1cf61f,/8-jdk/windows/windowsservercore/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14841,5fb0ba0b6f08e6647a1ba4fbdf8263895b1cf61f,/8-jdk/windows/windowsservercore/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
14842,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14843,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14844,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14845,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
14846,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14847,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14848,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14849,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14850,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
14851,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14852,311e8bb2d3d322cf0e00366408dd5e1c3210bfce,/13/jdk/alpine/Dockerfile,# https://jdk.java.net/
14853,311e8bb2d3d322cf0e00366408dd5e1c3210bfce,/13/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
14854,311e8bb2d3d322cf0e00366408dd5e1c3210bfce,/13/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
14855,311e8bb2d3d322cf0e00366408dd5e1c3210bfce,/13/jdk/alpine/Dockerfile,# basic smoke test
14856,311e8bb2d3d322cf0e00366408dd5e1c3210bfce,/13/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
14857,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14858,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14859,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
14860,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14861,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jdk/Dockerfile,#!/bin/sh'; \
14862,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14863,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14864,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14865,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14866,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
14867,a8d6952a882f3e56041be8d80df6276dab111f82,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14868,a8d6952a882f3e56041be8d80df6276dab111f82,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
14869,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
14870,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
14871,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/slim/Dockerfile,# backwards compatibility shim
14872,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
14873,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
14874,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
14875,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
14876,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
14877,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
14878,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
14879,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/slim/Dockerfile,# basic smoke test
14880,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
14881,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
14882,0467df283134a79840c25808093c00f7c94b9a88,/6-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14883,0467df283134a79840c25808093c00f7c94b9a88,/6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14884,0467df283134a79840c25808093c00f7c94b9a88,/6-jre/Dockerfile,# Default to UTF-8 file.encoding
14885,0467df283134a79840c25808093c00f7c94b9a88,/6-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14886,0467df283134a79840c25808093c00f7c94b9a88,/6-jre/Dockerfile,#!/bin/sh'; \
14887,0467df283134a79840c25808093c00f7c94b9a88,/6-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14888,0467df283134a79840c25808093c00f7c94b9a88,/6-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14889,0467df283134a79840c25808093c00f7c94b9a88,/6-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14890,0467df283134a79840c25808093c00f7c94b9a88,/6-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14891,0467df283134a79840c25808093c00f7c94b9a88,/6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
14892,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
14893,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
14894,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
14895,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/Dockerfile,# backwards compatibility shim
14896,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
14897,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/Dockerfile,# https://adoptopenjdk.net/upstream.html
14898,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
14899,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
14900,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
14901,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
14902,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
14903,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/Dockerfile,#!/usr/bin/env bash'; \
14904,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
14905,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/Dockerfile,# basic smoke test
14906,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14907,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14908,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14909,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-1709/Dockerfile,# https://jdk.java.net/
14910,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14911,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14912,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14913,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14914,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
14915,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
14916,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14917,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14918,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
14919,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14920,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14921,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/windowsservercore-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
14922,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/windowsservercore-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
14923,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
14924,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14925,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-6"
14926,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
14927,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14928,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/slim/Dockerfile,#!/bin/sh'; \
14929,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14930,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14931,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14932,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14933,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14934,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14935,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14936,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14937,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14938,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
14939,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14940,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/alpine/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
14941,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
14942,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
14943,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/alpine/Dockerfile,# basic smoke test
14944,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
14945,eaf1c5575ab9763caf66d8d5debb7ec089411740,/6-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14946,eaf1c5575ab9763caf66d8d5debb7ec089411740,/6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14947,eaf1c5575ab9763caf66d8d5debb7ec089411740,/6-jre/Dockerfile,# Default to UTF-8 file.encoding
14948,eaf1c5575ab9763caf66d8d5debb7ec089411740,/6-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14949,eaf1c5575ab9763caf66d8d5debb7ec089411740,/6-jre/Dockerfile,#!/bin/bash'; \
14950,eaf1c5575ab9763caf66d8d5debb7ec089411740,/6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
14951,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14952,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14953,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
14954,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14955,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14956,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
14957,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
14958,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14959,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jre/Dockerfile,#!/bin/sh'; \
14960,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14961,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14962,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14963,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14964,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14965,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14966,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14967,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
14968,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
14969,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14970,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/slim/Dockerfile,#!/bin/sh'; \
14971,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14972,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14973,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
14974,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)"
14975,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14976,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14977,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14978,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14979,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14980,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
14981,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
14982,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14983,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/Dockerfile,#!/bin/sh'; \
14984,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14985,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14986,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14987,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14988,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14989,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14990,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14991,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/8-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
14992,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
14993,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14994,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/8-jre/Dockerfile,#!/bin/sh'; \
14995,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/8-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14996,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
14997,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/8-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14998,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14999,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/8-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15000,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/8-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15001,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
15002,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15003,bc2fcfad89194727ec8a9334730af6ff4d8c44a7,/7/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15004,bc2fcfad89194727ec8a9334730af6ff4d8c44a7,/7/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
15005,bc2fcfad89194727ec8a9334730af6ff4d8c44a7,/7/jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
15006,bc2fcfad89194727ec8a9334730af6ff4d8c44a7,/7/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15007,bc2fcfad89194727ec8a9334730af6ff4d8c44a7,/7/jre/alpine/Dockerfile,#!/bin/sh'; \
15008,bc2fcfad89194727ec8a9334730af6ff4d8c44a7,/7/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15009,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15010,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
15011,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
15012,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15013,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/Dockerfile,#!/bin/sh'; \
15014,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15015,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15016,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
15017,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)"
15018,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15019,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15020,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15021,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15022,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15023,d63214d23aad827190c599e23351bd0bdd7dcadc,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
15024,d63214d23aad827190c599e23351bd0bdd7dcadc,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
15025,d63214d23aad827190c599e23351bd0bdd7dcadc,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
15026,d63214d23aad827190c599e23351bd0bdd7dcadc,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
15027,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15028,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15029,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15030,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
15031,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15032,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
15033,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
15034,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
15035,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
15036,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
15037,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/oracle/Dockerfile,# arm64v8
15038,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/oracle/Dockerfile,# amd64
15039,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/oracle/Dockerfile,# fallback
15040,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
15041,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
15042,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
15043,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/oracle/Dockerfile,# basic smoke test
15044,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
15045,054cea7585e6c0e4e98d133378ea38061a2ae3ac,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15046,054cea7585e6c0e4e98d133378ea38061a2ae3ac,/7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
15047,054cea7585e6c0e4e98d133378ea38061a2ae3ac,/7-jdk/Dockerfile,# Default to UTF-8 file.encoding
15048,054cea7585e6c0e4e98d133378ea38061a2ae3ac,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15049,054cea7585e6c0e4e98d133378ea38061a2ae3ac,/7-jdk/Dockerfile,#!/bin/sh'; \
15050,054cea7585e6c0e4e98d133378ea38061a2ae3ac,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
15051,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/13/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
15052,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
15053,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/13/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
15054,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
15055,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
15056,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
15057,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/13/jdk/oracle/Dockerfile,# basic smoke test
15058,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
15059,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
15060,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
15061,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/slim/Dockerfile,# backwards compatibility shim
15062,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
15063,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
15064,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
15065,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
15066,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
15067,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
15068,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
15069,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/slim/Dockerfile,# basic smoke test
15070,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15071,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
15072,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15073,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
15074,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
15075,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15076,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/Dockerfile,#!/bin/sh'; \
15077,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15078,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
15079,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15080,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15081,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15082,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15083,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
15084,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15085,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
15086,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-6-jre/Dockerfile,# Default to UTF-8 file.encoding
15087,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
15088,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15089,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15090,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15091,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
15092,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15093,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15094,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15095,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
15096,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
15097,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
15098,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
15099,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
15100,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
15101,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
15102,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/Dockerfile,# backwards compatibility shim
15103,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
15104,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/Dockerfile,# https://jdk.java.net/
15105,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
15106,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
15107,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
15108,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
15109,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
15110,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/Dockerfile,# basic smoke test
15111,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15112,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15113,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15114,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15115,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
15116,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15117,1de3476e9d15e63768d7afeb672ad8a0ccb3f56f,/7/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
15118,1de3476e9d15e63768d7afeb672ad8a0ccb3f56f,/7/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
15119,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
15120,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
15121,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
15122,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
15123,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/Dockerfile,# backwards compatibility shim
15124,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
15125,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/Dockerfile,# https://jdk.java.net/
15126,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
15127,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
15128,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
15129,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
15130,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
15131,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/Dockerfile,# basic smoke test
15132,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15133,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
15134,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
15135,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/oracle/Dockerfile,# http://jdk.java.net/
15136,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
15137,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
15138,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/oracle/Dockerfile,# basic smoke test
15139,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
15140,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/windows/windowsservercore/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15141,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/windows/windowsservercore/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15142,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/windows/windowsservercore/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
15143,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/windows/windowsservercore/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15144,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15145,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-6"
15146,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
15147,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15148,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/slim/Dockerfile,#!/bin/sh'; \
15149,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15150,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15151,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15152,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15153,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15154,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15155,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jdk/windows/windowsservercore/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15156,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jdk/windows/windowsservercore/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15157,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jdk/windows/windowsservercore/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
15158,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
15159,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
15160,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,# backwards compatibility shim
15161,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
15162,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
15163,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
15164,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
15165,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,# arm64v8
15166,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,# amd64
15167,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,# fallback
15168,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
15169,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
15170,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
15171,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
15172,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
15173,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
15174,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
15175,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,# basic smoke test
15176,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15177,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
15178,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
15179,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/slim/Dockerfile,# backwards compatibility shim
15180,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
15181,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
15182,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
15183,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
15184,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
15185,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
15186,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
15187,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/slim/Dockerfile,# basic smoke test
15188,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15189,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
15190,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
15191,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
15192,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
15193,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
15194,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
15195,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
15196,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/oracle/Dockerfile,# basic smoke test
15197,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
15198,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15199,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
15200,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
15201,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15202,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/Dockerfile,#!/bin/sh'; \
15203,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15204,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15205,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15206,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15207,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15208,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15209,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15210,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15211,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15212,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
15213,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15214,30b27d0b3b16ae395859ba47610b858076324508,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15215,30b27d0b3b16ae395859ba47610b858076324508,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
15216,30b27d0b3b16ae395859ba47610b858076324508,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
15217,30b27d0b3b16ae395859ba47610b858076324508,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15218,30b27d0b3b16ae395859ba47610b858076324508,/9-jre/Dockerfile,#!/bin/sh'; \
15219,30b27d0b3b16ae395859ba47610b858076324508,/9-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
15220,30b27d0b3b16ae395859ba47610b858076324508,/9-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
15221,30b27d0b3b16ae395859ba47610b858076324508,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
15222,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15223,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15224,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15225,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-1709/Dockerfile,# https://jdk.java.net/
15226,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15227,d1890fa5206eee489ab6285afa2a52f409dcfdc4,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15228,d1890fa5206eee489ab6285afa2a52f409dcfdc4,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
15229,d1890fa5206eee489ab6285afa2a52f409dcfdc4,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
15230,d1890fa5206eee489ab6285afa2a52f409dcfdc4,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15231,d1890fa5206eee489ab6285afa2a52f409dcfdc4,/9-jdk/Dockerfile,#!/bin/sh'; \
15232,d1890fa5206eee489ab6285afa2a52f409dcfdc4,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
15233,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
15234,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/nanoserver-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
15235,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/nanoserver-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
15236,882461ade8207de7647d083009200de85eb978bc,/6-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15237,882461ade8207de7647d083009200de85eb978bc,/6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
15238,882461ade8207de7647d083009200de85eb978bc,/6-jre/Dockerfile,# Default to UTF-8 file.encoding
15239,882461ade8207de7647d083009200de85eb978bc,/6-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15240,882461ade8207de7647d083009200de85eb978bc,/6-jre/Dockerfile,#!/bin/sh'; \
15241,882461ade8207de7647d083009200de85eb978bc,/6-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15242,882461ade8207de7647d083009200de85eb978bc,/6-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15243,882461ade8207de7647d083009200de85eb978bc,/6-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15244,882461ade8207de7647d083009200de85eb978bc,/6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
15245,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15246,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15247,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
15248,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
15249,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
15250,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15251,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
15252,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
15253,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/slim/Dockerfile,# backwards compatibility shim
15254,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
15255,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
15256,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
15257,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
15258,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
15259,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
15260,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
15261,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
15262,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
15263,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
15264,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/slim/Dockerfile,# basic smoke test
15265,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15266,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15267,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15268,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-1709/Dockerfile,# https://jdk.java.net/
15269,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15270,c9b01ac2d89222ede86d8ce47becfa8ec869dd3b,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15271,c9b01ac2d89222ede86d8ce47becfa8ec869dd3b,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
15272,c9b01ac2d89222ede86d8ce47becfa8ec869dd3b,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
15273,c9b01ac2d89222ede86d8ce47becfa8ec869dd3b,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15274,c9b01ac2d89222ede86d8ce47becfa8ec869dd3b,/9-jre/Dockerfile,#!/bin/sh'; \
15275,c9b01ac2d89222ede86d8ce47becfa8ec869dd3b,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
15276,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15277,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
15278,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
15279,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15280,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/alpine/Dockerfile,#!/bin/sh'; \
15281,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15282,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
15283,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
15284,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jre/slim/Dockerfile,# backwards compatibility shim
15285,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
15286,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jre/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
15287,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
15288,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jre/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
15289,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
15290,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
15291,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
15292,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
15293,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
15294,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
15295,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jre/slim/Dockerfile,# basic smoke test
15296,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15297,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
15298,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
15299,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15300,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/slim/Dockerfile,#!/bin/sh'; \
15301,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15302,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
15303,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15304,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15305,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15306,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15307,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
15308,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15309,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
15310,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
15311,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/slim/Dockerfile,# backwards compatibility shim
15312,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
15313,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
15314,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
15315,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
15316,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
15317,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
15318,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
15319,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
15320,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
15321,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
15322,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/slim/Dockerfile,# basic smoke test
15323,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15324,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15325,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15326,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15327,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
15328,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15329,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15330,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15331,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
15332,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15333,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15334,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15335,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15336,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
15337,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15338,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/alpine/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
15339,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
15340,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
15341,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/alpine/Dockerfile,# basic smoke test
15342,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
15343,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15344,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15345,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15346,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
15347,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15348,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15349,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
15350,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
15351,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15352,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/8-jdk/Dockerfile,#!/bin/sh'; \
15353,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
15354,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
15355,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
15356,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
15357,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
15358,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/slim/Dockerfile,# backwards compatibility shim
15359,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
15360,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
15361,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
15362,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
15363,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
15364,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
15365,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
15366,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/slim/Dockerfile,# basic smoke test
15367,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15368,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
15369,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15370,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
15371,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/Dockerfile,# Default to UTF-8 file.encoding
15372,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15373,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/Dockerfile,#!/bin/sh'; \
15374,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15375,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15376,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15377,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15378,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15379,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15380,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15381,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15382,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15383,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
15384,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15385,41532fd149c05cb3bbc0c143bfcfa4589f1c3a61,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15386,41532fd149c05cb3bbc0c143bfcfa4589f1c3a61,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15387,41532fd149c05cb3bbc0c143bfcfa4589f1c3a61,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
15388,41532fd149c05cb3bbc0c143bfcfa4589f1c3a61,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15389,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
15390,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
15391,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,# Default to UTF-8 file.encoding
15392,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,# backwards compatibility shim
15393,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
15394,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
15395,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
15396,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
15397,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,# arm64v8
15398,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,# amd64
15399,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,# fallback
15400,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
15401,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
15402,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
15403,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
15404,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,#!/usr/bin/env bash'; \
15405,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
15406,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
15407,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,# basic smoke test
15408,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15409,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
15410,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
15411,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15412,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/slim/Dockerfile,#!/bin/sh'; \
15413,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15414,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15415,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15416,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15417,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15418,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15419,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
15420,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
15421,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/oracle/Dockerfile,# http://jdk.java.net/
15422,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
15423,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
15424,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/oracle/Dockerfile,# basic smoke test
15425,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
15426,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15427,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15428,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15429,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
15430,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15431,06552bdff28039988fca96ec7f810456849d420f,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15432,06552bdff28039988fca96ec7f810456849d420f,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
15433,06552bdff28039988fca96ec7f810456849d420f,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
15434,06552bdff28039988fca96ec7f810456849d420f,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15435,06552bdff28039988fca96ec7f810456849d420f,/8-jre/alpine/Dockerfile,#!/bin/sh'; \
15436,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15437,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
15438,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
15439,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15440,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/slim/Dockerfile,#!/bin/sh'; \
15441,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15442,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15443,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
15444,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15445,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15446,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15447,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15448,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15449,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15450,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
15451,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
15452,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15453,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/alpine/Dockerfile,#!/bin/sh'; \
15454,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15455,2dd0496901a9c01c78895d0e6618b36c08f78bde,/openjdk-8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15456,2dd0496901a9c01c78895d0e6618b36c08f78bde,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
15457,2dd0496901a9c01c78895d0e6618b36c08f78bde,/openjdk-8-jdk/Dockerfile,# Default to UTF-8 file.encoding
15458,2dd0496901a9c01c78895d0e6618b36c08f78bde,/openjdk-8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15459,2dd0496901a9c01c78895d0e6618b36c08f78bde,/openjdk-8-jdk/Dockerfile,#!/bin/bash'; \
15460,2dd0496901a9c01c78895d0e6618b36c08f78bde,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
15461,2dd0496901a9c01c78895d0e6618b36c08f78bde,/openjdk-8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
15462,2dd0496901a9c01c78895d0e6618b36c08f78bde,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
15463,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15464,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
15465,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
15466,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15467,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/Dockerfile,#!/bin/sh'; \
15468,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15469,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15470,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15471,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15472,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15473,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15474,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15475,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15476,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15477,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
15478,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15479,d2acc0356b5a68a4d168462a3f5f0e29444982b9,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
15480,d2acc0356b5a68a4d168462a3f5f0e29444982b9,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
15481,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15482,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15483,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15484,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
15485,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15486,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15487,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
15488,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
15489,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15490,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/slim/Dockerfile,#!/bin/sh'; \
15491,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15492,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15493,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15494,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15495,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15496,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15497,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
15498,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
15499,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/slim-buster/Dockerfile,# backwards compatibility shim
15500,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
15501,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/slim-buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
15502,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
15503,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/slim-buster/Dockerfile,# arm64v8
15504,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/slim-buster/Dockerfile,# amd64
15505,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/slim-buster/Dockerfile,# fallback
15506,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
15507,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
15508,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
15509,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
15510,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
15511,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/slim-buster/Dockerfile,# basic smoke test
15512,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15513,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
15514,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/slim/Dockerfile,# backwards compatibility shim
15515,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
15516,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
15517,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
15518,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
15519,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
15520,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
15521,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/slim/Dockerfile,# basic smoke test
15522,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15523,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15524,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15525,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15526,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
15527,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15528,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
15529,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-8-jdk/Dockerfile,# Default to UTF-8 file.encoding
15530,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
15531,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
15532,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
15533,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15534,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
15535,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
15536,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15537,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jre/Dockerfile,#!/bin/sh'; \
15538,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
15539,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
15540,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
15541,44d6908951d61d6f3fc8d08a4c0e7857f0914ee5,/13/jdk/alpine/Dockerfile,# https://jdk.java.net/
15542,44d6908951d61d6f3fc8d08a4c0e7857f0914ee5,/13/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
15543,44d6908951d61d6f3fc8d08a4c0e7857f0914ee5,/13/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
15544,44d6908951d61d6f3fc8d08a4c0e7857f0914ee5,/13/jdk/alpine/Dockerfile,# basic smoke test
15545,44d6908951d61d6f3fc8d08a4c0e7857f0914ee5,/13/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
15546,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
15547,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
15548,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
15549,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15550,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15551,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15552,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
15553,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15554,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
15555,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
15556,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/slim/Dockerfile,# backwards compatibility shim
15557,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
15558,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
15559,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
15560,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
15561,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
15562,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
15563,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
15564,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/slim/Dockerfile,# basic smoke test
15565,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15566,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
15567,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15568,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15569,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15570,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
15571,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15572,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15573,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
15574,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
15575,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15576,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
15577,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15578,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15579,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (a case of https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
15580,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15581,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15582,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15583,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15584,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15585,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15586,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15587,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15588,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
15589,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15590,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
15591,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
15592,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/slim/Dockerfile,# backwards compatibility shim
15593,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
15594,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/slim/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
15595,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
15596,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
15597,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
15598,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
15599,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
15600,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
15601,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
15602,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
15603,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/slim/Dockerfile,# basic smoke test
15604,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15605,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
15606,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/Dockerfile,# Default to UTF-8 file.encoding
15607,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15608,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/Dockerfile,#!/bin/sh'; \
15609,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15610,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15611,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
15612,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15613,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15614,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15615,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15616,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15617,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15618,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15619,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15620,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
15621,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15622,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15623,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15624,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15625,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
15626,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15627,f47afa13905074605a616adf3b9c01c396ed74a8,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
15628,f47afa13905074605a616adf3b9c01c396ed74a8,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
15629,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
15630,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
15631,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15632,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15633,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
15634,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
15635,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15636,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/slim/Dockerfile,#!/bin/sh'; \
15637,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15638,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15639,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15640,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15641,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15642,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15643,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15644,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15645,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
15646,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
15647,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15648,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jre/Dockerfile,#!/bin/sh'; \
15649,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15650,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15651,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15652,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15653,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
15654,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15655,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15656,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15657,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
15658,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15659,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15660,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
15661,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
15662,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15663,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/slim/Dockerfile,#!/bin/sh'; \
15664,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15665,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15666,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
15667,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15668,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15669,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15670,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15671,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15672,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/windows/nanoserver/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15673,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/windows/nanoserver/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15674,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/windows/nanoserver/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
15675,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/windows/nanoserver/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15676,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15677,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
15678,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
15679,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15680,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/alpine/Dockerfile,#!/bin/sh'; \
15681,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15682,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15683,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15684,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15685,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
15686,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15687,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15688,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
15689,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
15690,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15691,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/Dockerfile,#!/bin/sh'; \
15692,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15693,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15694,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15695,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15696,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15697,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15698,40a23ac72e90b05469c881a6fa9139476d3fa2a4,/10/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15699,40a23ac72e90b05469c881a6fa9139476d3fa2a4,/10/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15700,40a23ac72e90b05469c881a6fa9139476d3fa2a4,/10/jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
15701,40a23ac72e90b05469c881a6fa9139476d3fa2a4,/10/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15702,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15703,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
15704,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
15705,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15706,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/Dockerfile,#!/bin/sh'; \
15707,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15708,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
15709,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15710,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15711,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15712,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15713,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
15714,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15715,68fbc1eb8a389ffc5224b32074cca52b431eb097,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15716,68fbc1eb8a389ffc5224b32074cca52b431eb097,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
15717,68fbc1eb8a389ffc5224b32074cca52b431eb097,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
15718,68fbc1eb8a389ffc5224b32074cca52b431eb097,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15719,68fbc1eb8a389ffc5224b32074cca52b431eb097,/9-jdk/Dockerfile,#!/bin/sh'; \
15720,68fbc1eb8a389ffc5224b32074cca52b431eb097,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
15721,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
15722,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
15723,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
15724,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
15725,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,# backwards compatibility shim
15726,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
15727,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
15728,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
15729,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,# arm64v8
15730,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,# amd64
15731,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,# fallback
15732,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
15733,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
15734,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
15735,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
15736,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
15737,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,# basic smoke test
15738,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15739,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15740,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15741,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
15742,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
15743,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
15744,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
15745,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
15746,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15747,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15748,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
15749,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
15750,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15751,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/slim/Dockerfile,#!/bin/sh'; \
15752,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15753,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15754,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
15755,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15756,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15757,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15758,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15759,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15760,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
15761,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/nanoserver-1803/Dockerfile,# https://jdk.java.net/
15762,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15763,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15764,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
15765,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
15766,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15767,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/slim/Dockerfile,#!/bin/sh'; \
15768,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15769,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15770,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
15771,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15772,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15773,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15774,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15775,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15776,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
15777,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
15778,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15779,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/9-jdk/Dockerfile,#!/bin/sh'; \
15780,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
15781,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15782,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15783,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15784,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
15785,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15786,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15787,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15788,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
15789,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
15790,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
15791,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
15792,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
15793,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15794,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
15795,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
15796,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15797,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15798,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15799,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15800,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
15801,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15802,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15803,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
15804,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
15805,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15806,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/slim/Dockerfile,#!/bin/sh'; \
15807,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15808,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15809,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15810,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15811,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15812,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15813,f45f3f269d4b515201f290360b345790663e657e,/10/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15814,f45f3f269d4b515201f290360b345790663e657e,/10/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15815,f45f3f269d4b515201f290360b345790663e657e,/10/jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
15816,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
15817,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
15818,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
15819,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
15820,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
15821,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/oracle/Dockerfile,# basic smoke test
15822,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
15823,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15824,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
15825,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/Dockerfile,# Default to UTF-8 file.encoding
15826,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15827,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/Dockerfile,#!/bin/sh'; \
15828,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15829,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15830,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15831,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15832,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15833,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15834,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15835,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15836,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15837,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
15838,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
15839,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
15840,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15841,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
15842,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
15843,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
15844,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
15845,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,# backwards compatibility shim
15846,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
15847,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
15848,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
15849,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,# arm64v8
15850,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,# amd64
15851,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,# fallback
15852,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
15853,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
15854,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
15855,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
15856,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
15857,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,# basic smoke test
15858,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15859,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15860,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15861,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15862,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
15863,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15864,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15865,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
15866,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
15867,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15868,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jre/slim/Dockerfile,#!/bin/sh'; \
15869,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15870,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15871,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
15872,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15873,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15874,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15875,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15876,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15877,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15878,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15879,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
15880,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15881,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
15882,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
15883,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/slim/Dockerfile,# backwards compatibility shim
15884,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
15885,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/slim/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
15886,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
15887,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
15888,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
15889,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
15890,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
15891,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
15892,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
15893,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
15894,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/slim/Dockerfile,# basic smoke test
15895,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15896,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
15897,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
15898,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15899,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/slim/Dockerfile,#!/bin/sh'; \
15900,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15901,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15902,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
15903,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15904,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15905,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15906,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15907,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15908,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
15909,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
15910,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
15911,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/Dockerfile,# backwards compatibility shim
15912,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
15913,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
15914,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
15915,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
15916,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
15917,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
15918,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
15919,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/Dockerfile,#!/usr/bin/env bash'; \
15920,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
15921,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
15922,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/Dockerfile,# basic smoke test
15923,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/6-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15924,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
15925,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/6-jdk/Dockerfile,# Default to UTF-8 file.encoding
15926,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/6-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15927,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/6-jdk/Dockerfile,#!/bin/sh'; \
15928,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
15929,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
15930,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
15931,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15932,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15933,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
15934,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
15935,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15936,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/slim/Dockerfile,#!/bin/sh'; \
15937,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15938,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15939,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15940,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15941,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15942,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15943,2408508f3b000bf997febbdb90a861185a64a260,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
15944,2408508f3b000bf997febbdb90a861185a64a260,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
15945,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15946,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/7-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
15947,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
15948,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15949,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/7-jre/Dockerfile,#!/bin/sh'; \
15950,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/7-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15951,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/7-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15952,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/7-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15953,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/7-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15954,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/7-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15955,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15956,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
15957,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
15958,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
15959,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/Dockerfile,# backwards compatibility shim
15960,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
15961,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/Dockerfile,# https://adoptopenjdk.net/upstream.html
15962,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
15963,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
15964,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
15965,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
15966,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
15967,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/Dockerfile,#!/usr/bin/env bash'; \
15968,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
15969,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
15970,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/Dockerfile,# basic smoke test
15971,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15972,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15973,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15974,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
15975,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
15976,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
15977,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
15978,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
15979,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/slim/Dockerfile,# backwards compatibility shim
15980,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
15981,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/slim/Dockerfile,# https://jdk.java.net/
15982,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
15983,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
15984,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
15985,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
15986,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
15987,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/slim/Dockerfile,# basic smoke test
15988,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15989,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
15990,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
15991,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
15992,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/slim/Dockerfile,# backwards compatibility shim
15993,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
15994,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
15995,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
15996,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
15997,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
15998,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
15999,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
16000,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/slim/Dockerfile,# basic smoke test
16001,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16002,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
16003,89851f0abc3a83cfad5248102f379d6a0bd3951a,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16004,89851f0abc3a83cfad5248102f379d6a0bd3951a,/7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
16005,89851f0abc3a83cfad5248102f379d6a0bd3951a,/7-jdk/Dockerfile,# Default to UTF-8 file.encoding
16006,89851f0abc3a83cfad5248102f379d6a0bd3951a,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16007,89851f0abc3a83cfad5248102f379d6a0bd3951a,/7-jdk/Dockerfile,#!/bin/sh'; \
16008,89851f0abc3a83cfad5248102f379d6a0bd3951a,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
16009,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16010,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16011,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
16012,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
16013,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
16014,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
16015,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/slim/Dockerfile,# backwards compatibility shim
16016,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
16017,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
16018,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
16019,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/slim/Dockerfile,# TODO filter out arm64 for openjdk:8 (https://github.com/AdoptOpenJDK/openjdk8-upstream-binaries/releases/tag/jdk8u212-b04 vs https://github.com/AdoptOpenJDK/openjdk11-upstream-binaries/releases/tag/jdk-11.0.3%2B7)
16020,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
16021,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
16022,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/slim/Dockerfile,# basic smoke test
16023,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16024,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
16025,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
16026,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16027,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/slim/Dockerfile,#!/bin/sh'; \
16028,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16029,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16030,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16031,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16032,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16033,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16034,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16035,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
16036,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/Dockerfile,# Default to UTF-8 file.encoding
16037,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16038,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/Dockerfile,#!/bin/sh'; \
16039,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16040,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16041,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16042,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16043,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16044,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16045,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16046,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
16047,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16048,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16049,0476812eabd178c77534f3c03bd0a2673822d7b9,/7-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16050,0476812eabd178c77534f3c03bd0a2673822d7b9,/7-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
16051,0476812eabd178c77534f3c03bd0a2673822d7b9,/7-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
16052,0476812eabd178c77534f3c03bd0a2673822d7b9,/7-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16053,0476812eabd178c77534f3c03bd0a2673822d7b9,/7-jre/alpine/Dockerfile,#!/bin/sh'; \
16054,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16055,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
16056,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
16057,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16058,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/slim/Dockerfile,#!/bin/sh'; \
16059,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16060,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
16061,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16062,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16063,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16064,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16065,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
16066,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16067,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16068,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16069,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
16070,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
16071,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
16072,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16073,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16074,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16075,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
16076,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16077,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
16078,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
16079,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
16080,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
16081,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
16082,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/oracle/Dockerfile,# basic smoke test
16083,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
16084,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
16085,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
16086,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16087,0b42083d3cd9c3a57e35db84e5e9d246c9fcc129,/9-jdk/windows/nanoserver/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16088,0b42083d3cd9c3a57e35db84e5e9d246c9fcc129,/9-jdk/windows/nanoserver/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16089,0b42083d3cd9c3a57e35db84e5e9d246c9fcc129,/9-jdk/windows/nanoserver/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
16090,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
16091,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-7-jre/Dockerfile,# Default to UTF-8 file.encoding
16092,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
16093,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16094,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16095,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
16096,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16097,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
16098,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/nanoserver-1803/Dockerfile,# https://jdk.java.net/
16099,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16100,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16101,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
16102,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
16103,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16104,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/slim/Dockerfile,#!/bin/sh'; \
16105,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16106,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16107,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
16108,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16109,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16110,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16111,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16112,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16113,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16114,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
16115,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/Dockerfile,# Default to UTF-8 file.encoding
16116,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16117,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/Dockerfile,#!/bin/sh'; \
16118,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16119,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16120,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16121,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16122,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16123,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16124,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/11/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
16125,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/11/jdk/windows/nanoserver-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
16126,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/11/jdk/windows/nanoserver-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
16127,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/11/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16128,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16129,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
16130,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
16131,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16132,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jdk/Dockerfile,#!/bin/sh'; \
16133,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16134,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16135,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16136,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
16137,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
16138,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16139,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16140,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16141,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16142,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
16143,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
16144,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
16145,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16146,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16147,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16148,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16149,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16150,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16151,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16152,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16153,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16154,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# https://jdk.java.net/
16155,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16156,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16157,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16158,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
16159,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16160,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16161,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16162,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
16163,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
16164,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
16165,a344905a72f381b3084c4c1cd0b3a24bcc9b4e23,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16166,a344905a72f381b3084c4c1cd0b3a24bcc9b4e23,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
16167,a344905a72f381b3084c4c1cd0b3a24bcc9b4e23,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
16168,a344905a72f381b3084c4c1cd0b3a24bcc9b4e23,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16169,a344905a72f381b3084c4c1cd0b3a24bcc9b4e23,/9-jre/Dockerfile,#!/bin/sh'; \
16170,a344905a72f381b3084c4c1cd0b3a24bcc9b4e23,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
16171,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16172,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16173,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
16174,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16175,36a0de603602114458516929dbc4a62d12c1d4c2,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
16176,36a0de603602114458516929dbc4a62d12c1d4c2,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
16177,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
16178,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16179,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16180,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16181,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16182,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16183,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16184,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16185,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/13/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
16186,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
16187,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/13/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
16188,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
16189,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
16190,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
16191,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/13/jdk/oracle/Dockerfile,# basic smoke test
16192,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
16193,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16194,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
16195,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
16196,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16197,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/slim/Dockerfile,#!/bin/sh'; \
16198,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16199,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
16200,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16201,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16202,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16203,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16204,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
16205,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16206,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16207,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
16208,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
16209,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16210,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/slim/Dockerfile,#!/bin/sh'; \
16211,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16212,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16213,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16214,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16215,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16216,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16217,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
16218,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
16219,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/slim/Dockerfile,# backwards compatibility shim
16220,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
16221,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/slim/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
16222,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
16223,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
16224,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
16225,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
16226,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
16227,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
16228,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
16229,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
16230,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/slim/Dockerfile,# basic smoke test
16231,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16232,6f340724d3bc1f9b4385975c5de6bfe15aac8c85,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
16233,6f340724d3bc1f9b4385975c5de6bfe15aac8c85,/openjdk-8-jdk/Dockerfile,# Default to UTF-8 file.encoding
16234,6f340724d3bc1f9b4385975c5de6bfe15aac8c85,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
16235,6f340724d3bc1f9b4385975c5de6bfe15aac8c85,/openjdk-8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
16236,6f340724d3bc1f9b4385975c5de6bfe15aac8c85,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
16237,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16238,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
16239,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
16240,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16241,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/slim/Dockerfile,#!/bin/sh'; \
16242,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16243,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16244,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16245,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16246,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16247,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16248,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
16249,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
16250,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/slim/Dockerfile,# backwards compatibility shim
16251,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
16252,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16253,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
16254,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/slim/Dockerfile,# arm64v8
16255,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/slim/Dockerfile,# amd64
16256,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/slim/Dockerfile,# fallback
16257,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
16258,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
16259,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
16260,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
16261,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
16262,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/slim/Dockerfile,# basic smoke test
16263,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16264,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16265,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16266,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
16267,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16268,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16269,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16270,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
16271,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
16272,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
16273,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16274,5dba2054c6821e38a6d3fad32239369818289228,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16275,5dba2054c6821e38a6d3fad32239369818289228,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
16276,5dba2054c6821e38a6d3fad32239369818289228,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
16277,5dba2054c6821e38a6d3fad32239369818289228,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16278,5dba2054c6821e38a6d3fad32239369818289228,/8-jre/alpine/Dockerfile,#!/bin/sh'; \
16279,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16280,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16281,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
16282,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
16283,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
16284,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16285,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16286,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16287,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16288,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
16289,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16290,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16291,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16292,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16293,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
16294,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16295,89851f0abc3a83cfad5248102f379d6a0bd3951a,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16296,89851f0abc3a83cfad5248102f379d6a0bd3951a,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
16297,89851f0abc3a83cfad5248102f379d6a0bd3951a,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
16298,89851f0abc3a83cfad5248102f379d6a0bd3951a,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16299,89851f0abc3a83cfad5248102f379d6a0bd3951a,/8-jdk/Dockerfile,#!/bin/sh'; \
16300,89851f0abc3a83cfad5248102f379d6a0bd3951a,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
16301,89851f0abc3a83cfad5248102f379d6a0bd3951a,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
16302,89851f0abc3a83cfad5248102f379d6a0bd3951a,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
16303,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16304,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16305,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16306,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
16307,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16308,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16309,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
16310,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
16311,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16312,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/slim/Dockerfile,#!/bin/sh'; \
16313,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16314,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16315,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16316,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16317,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16318,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16319,2408508f3b000bf997febbdb90a861185a64a260,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
16320,2408508f3b000bf997febbdb90a861185a64a260,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
16321,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16322,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/8-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
16323,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
16324,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16325,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/8-jre/Dockerfile,#!/bin/sh'; \
16326,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/8-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16327,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
16328,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/8-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16329,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16330,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/8-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16331,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/8-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16332,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
16333,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16334,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16335,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
16336,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/Dockerfile,# Default to UTF-8 file.encoding
16337,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16338,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/Dockerfile,#!/bin/sh'; \
16339,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16340,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16341,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
16342,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16343,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16344,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16345,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16346,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16347,bbb7c0995d9ab0ffec987f02f515862925553d5e,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16348,bbb7c0995d9ab0ffec987f02f515862925553d5e,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
16349,bbb7c0995d9ab0ffec987f02f515862925553d5e,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
16350,bbb7c0995d9ab0ffec987f02f515862925553d5e,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16351,bbb7c0995d9ab0ffec987f02f515862925553d5e,/9-jdk/Dockerfile,#!/bin/sh'; \
16352,bbb7c0995d9ab0ffec987f02f515862925553d5e,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
16353,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16354,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
16355,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
16356,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16357,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/9-jdk/Dockerfile,#!/bin/sh'; \
16358,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/9-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
16359,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/9-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
16360,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
16361,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16362,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16363,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16364,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16365,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16366,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16367,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
16368,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
16369,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16370,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/Dockerfile,#!/bin/sh'; \
16371,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16372,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
16373,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16374,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16375,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16376,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16377,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
16378,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16379,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/windows/windowsservercore/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16380,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/windows/windowsservercore/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16381,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/windows/windowsservercore/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
16382,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/windows/windowsservercore/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16383,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
16384,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
16385,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/slim/Dockerfile,# backwards compatibility shim
16386,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
16387,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16388,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
16389,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
16390,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
16391,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
16392,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
16393,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/slim/Dockerfile,# basic smoke test
16394,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16395,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
16396,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16397,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16398,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
16399,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16400,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16401,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16402,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
16403,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16404,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16405,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16406,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16407,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
16408,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16409,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16410,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
16411,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
16412,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16413,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/slim/Dockerfile,#!/bin/sh'; \
16414,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16415,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16416,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16417,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16418,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16419,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16420,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16421,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16422,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16423,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16424,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16425,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16426,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
16427,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
16428,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16429,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/alpine/Dockerfile,#!/bin/sh'; \
16430,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16431,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
16432,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
16433,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
16434,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/Dockerfile,# Default to UTF-8 file.encoding
16435,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/Dockerfile,# backwards compatibility shim
16436,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
16437,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/Dockerfile,# https://jdk.java.net/
16438,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
16439,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/Dockerfile,#!/usr/bin/env bash'; \
16440,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
16441,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
16442,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
16443,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/Dockerfile,# basic smoke test
16444,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16445,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16446,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
16447,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
16448,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16449,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/slim/Dockerfile,#!/bin/sh'; \
16450,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16451,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16452,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16453,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16454,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16455,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16456,8502712f6e80904b766505805c894c2008afa700,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16457,8502712f6e80904b766505805c894c2008afa700,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16458,8502712f6e80904b766505805c894c2008afa700,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
16459,8502712f6e80904b766505805c894c2008afa700,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16460,06552bdff28039988fca96ec7f810456849d420f,/7-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16461,06552bdff28039988fca96ec7f810456849d420f,/7-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
16462,06552bdff28039988fca96ec7f810456849d420f,/7-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
16463,06552bdff28039988fca96ec7f810456849d420f,/7-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16464,06552bdff28039988fca96ec7f810456849d420f,/7-jre/alpine/Dockerfile,#!/bin/sh'; \
16465,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16466,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
16467,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
16468,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16469,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/Dockerfile,#!/bin/sh'; \
16470,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16471,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16472,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16473,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16474,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16475,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16476,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16477,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
16478,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
16479,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
16480,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16481,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
16482,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
16483,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/oracle/Dockerfile,# basic smoke test
16484,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
16485,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16486,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
16487,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/Dockerfile,# Default to UTF-8 file.encoding
16488,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16489,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/Dockerfile,#!/bin/sh'; \
16490,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16491,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16492,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
16493,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16494,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16495,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16496,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16497,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16498,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16499,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16500,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16501,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
16502,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16503,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16504,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16505,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16506,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# https://jdk.java.net/
16507,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16508,c4e82d61bdae87ac25656b1371441ccca8c059b9,/openjdk-9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
16509,c4e82d61bdae87ac25656b1371441ccca8c059b9,/openjdk-9-jre/Dockerfile,# Default to UTF-8 file.encoding
16510,c4e82d61bdae87ac25656b1371441ccca8c059b9,/openjdk-9-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
16511,c4e82d61bdae87ac25656b1371441ccca8c059b9,/openjdk-9-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
16512,c4e82d61bdae87ac25656b1371441ccca8c059b9,/openjdk-9-jre/Dockerfile,"# see https://bugs.debian.org/793210
# and https://github.com/docker-library/java/issues/46#issuecomment-119026586"
16513,c4e82d61bdae87ac25656b1371441ccca8c059b9,/openjdk-9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
16514,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16515,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16516,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16517,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
16518,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16519,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16520,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
16521,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
16522,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16523,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/Dockerfile,#!/bin/sh'; \
16524,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16525,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16526,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16527,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16528,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16529,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16530,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16531,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16532,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
16533,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jdk/Dockerfile,# Default to UTF-8 file.encoding
16534,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16535,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jdk/Dockerfile,#!/bin/sh'; \
16536,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16537,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16538,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16539,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
16540,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16541,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16542,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16543,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
16544,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16545,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16546,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
16547,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
16548,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16549,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/Dockerfile,#!/bin/sh'; \
16550,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16551,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16552,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16553,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16554,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16555,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16556,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16557,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
16558,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
16559,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16560,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/slim/Dockerfile,#!/bin/sh'; \
16561,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16562,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16563,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16564,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16565,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16566,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16567,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
16568,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-8-jre/Dockerfile,# Default to UTF-8 file.encoding
16569,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
16570,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
16571,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/793210
# and https://github.com/docker-library/java/issues/46#issuecomment-119026586"
16572,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
16573,bf06437449e8ae1782905f6c2df744805498874b,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16574,bf06437449e8ae1782905f6c2df744805498874b,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16575,bf06437449e8ae1782905f6c2df744805498874b,/11/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
16576,bf06437449e8ae1782905f6c2df744805498874b,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16577,0584b2804ed12dca7c5e264b5fc55fc07a3ac148,/8-jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16578,0584b2804ed12dca7c5e264b5fc55fc07a3ac148,/8-jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16579,0584b2804ed12dca7c5e264b5fc55fc07a3ac148,/8-jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
16580,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
16581,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
16582,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
16583,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
16584,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
16585,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
16586,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/oracle/Dockerfile,# basic smoke test
16587,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
16588,918514c9b313f8f60580b1e3638eb2ae60ef5e7f,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16589,918514c9b313f8f60580b1e3638eb2ae60ef5e7f,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16590,918514c9b313f8f60580b1e3638eb2ae60ef5e7f,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
16591,918514c9b313f8f60580b1e3638eb2ae60ef5e7f,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16592,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
16593,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
16594,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/oraclelinux7/Dockerfile,# Default to UTF-8 file.encoding
16595,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
16596,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
16597,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/oraclelinux7/Dockerfile,# arm64v8
16598,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/oraclelinux7/Dockerfile,# amd64
16599,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/oraclelinux7/Dockerfile,# fallback
16600,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/oraclelinux7/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
16601,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
16602,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
16603,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/oraclelinux7/Dockerfile,# basic smoke test
16604,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16605,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16606,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16607,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
16608,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
16609,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
16610,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
16611,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
16612,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
16613,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16614,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
16615,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
16616,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/oracle/Dockerfile,# basic smoke test
16617,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
16618,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16619,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16620,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
16621,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16622,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
16623,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
16624,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
16625,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
16626,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,# backwards compatibility shim
16627,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
16628,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
16629,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
16630,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,# arm64v8
16631,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,# amd64
16632,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,# fallback
16633,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
16634,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
16635,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
16636,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
16637,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
16638,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,# basic smoke test
16639,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16640,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16641,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16642,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16643,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
16644,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16645,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16646,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16647,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# https://jdk.java.net/
16648,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16649,9850ebc9cb840b259aebcf4de1f19cc3b7621810,/8/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16650,9850ebc9cb840b259aebcf4de1f19cc3b7621810,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16651,9850ebc9cb840b259aebcf4de1f19cc3b7621810,/8/jdk/windows/windowsservercore-1809/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
16652,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
16653,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
16654,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
16655,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16656,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16657,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
16658,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
16659,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
16660,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16661,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
16662,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/Dockerfile,# Default to UTF-8 file.encoding
16663,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16664,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/Dockerfile,#!/bin/sh'; \
16665,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16666,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16667,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16668,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16669,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16670,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16671,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16672,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
16673,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
16674,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16675,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
16676,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16677,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16678,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16679,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16680,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16681,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16682,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16683,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
16684,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
16685,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
16686,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jre/Dockerfile,# backwards compatibility shim
16687,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
16688,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jre/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
16689,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
16690,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
16691,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
16692,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
16693,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
16694,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jre/Dockerfile,#!/usr/bin/env bash'; \
16695,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
16696,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
16697,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jre/Dockerfile,# basic smoke test
16698,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
16699,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16700,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16701,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16702,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16703,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
16704,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16705,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16706,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16707,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16708,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
16709,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16710,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16711,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16712,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16713,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
16714,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16715,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16716,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16717,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
16718,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
16719,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
16720,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16721,5dba2054c6821e38a6d3fad32239369818289228,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16722,5dba2054c6821e38a6d3fad32239369818289228,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
16723,5dba2054c6821e38a6d3fad32239369818289228,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
16724,5dba2054c6821e38a6d3fad32239369818289228,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16725,5dba2054c6821e38a6d3fad32239369818289228,/9-jre/Dockerfile,#!/bin/sh'; \
16726,5dba2054c6821e38a6d3fad32239369818289228,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
16727,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16728,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16729,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16730,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16731,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16732,318ba809c9f0e3c7095b363c5a31409ee6880208,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
16733,318ba809c9f0e3c7095b363c5a31409ee6880208,/openjdk-7-jdk/Dockerfile,# Default to UTF-8 file.encoding
16734,318ba809c9f0e3c7095b363c5a31409ee6880208,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
16735,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16736,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
16737,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
16738,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16739,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/Dockerfile,#!/bin/sh'; \
16740,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16741,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16742,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16743,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16744,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16745,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16746,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16747,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16748,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
16749,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
16750,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16751,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/slim/Dockerfile,#!/bin/sh'; \
16752,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16753,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16754,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
16755,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16756,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16757,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16758,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16759,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16760,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
16761,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16762,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16763,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
16764,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
16765,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
16766,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
16767,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/Dockerfile,# backwards compatibility shim
16768,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
16769,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16770,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
16771,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
16772,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
16773,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
16774,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
16775,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/Dockerfile,# basic smoke test
16776,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16777,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16778,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16779,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16780,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
16781,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16782,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16783,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16784,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16785,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# https://jdk.java.net/
16786,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16787,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16788,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16789,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16790,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16791,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16792,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16793,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16794,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16795,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-1709/Dockerfile,# https://jdk.java.net/
16796,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16797,e3021b3a4cc9fb82962bebe688dc512d3d7a621a,/15/jdk/alpine/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16798,e3021b3a4cc9fb82962bebe688dc512d3d7a621a,/15/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
16799,e3021b3a4cc9fb82962bebe688dc512d3d7a621a,/15/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
16800,e3021b3a4cc9fb82962bebe688dc512d3d7a621a,/15/jdk/alpine/Dockerfile,"# see ""java-cacerts"" package installed above (which maintains ""/etc/ssl/certs/java/cacerts"" for us)"
16801,e3021b3a4cc9fb82962bebe688dc512d3d7a621a,/15/jdk/alpine/Dockerfile,# basic smoke test
16802,e3021b3a4cc9fb82962bebe688dc512d3d7a621a,/15/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
16803,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16804,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16805,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
16806,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16807,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
16808,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
16809,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
16810,2eedac4afe8e587cb02cb7739d70e2c33c2b1421,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16811,2eedac4afe8e587cb02cb7739d70e2c33c2b1421,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16812,2eedac4afe8e587cb02cb7739d70e2c33c2b1421,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
16813,2eedac4afe8e587cb02cb7739d70e2c33c2b1421,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16814,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16815,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
16816,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
16817,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16818,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
16819,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16820,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16821,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
16822,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)"
16823,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16824,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16825,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16826,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16827,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16828,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16829,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
16830,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
16831,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16832,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jre/Dockerfile,#!/bin/sh'; \
16833,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16834,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16835,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16836,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16837,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
16838,4ab314dc41cb31313f630ce5e11398ef0f9e9ae9,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
16839,4ab314dc41cb31313f630ce5e11398ef0f9e9ae9,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
16840,4fc0f299672be87a236d1af61a31c14f67dfcdcc,/7/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
16841,4fc0f299672be87a236d1af61a31c14f67dfcdcc,/7/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
16842,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
16843,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
16844,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/slim/Dockerfile,# backwards compatibility shim
16845,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
16846,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16847,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
16848,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
16849,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
16850,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
16851,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
16852,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/slim/Dockerfile,# basic smoke test
16853,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16854,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
16855,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
16856,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
16857,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/slim-buster/Dockerfile,# backwards compatibility shim
16858,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
16859,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/slim-buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
16860,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
16861,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/slim-buster/Dockerfile,# arm64v8
16862,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/slim-buster/Dockerfile,# amd64
16863,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/slim-buster/Dockerfile,# fallback
16864,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
16865,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
16866,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
16867,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
16868,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
16869,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/slim-buster/Dockerfile,# basic smoke test
16870,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16871,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/alpine/Dockerfile,# http://jdk.java.net/
16872,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
16873,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
16874,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/alpine/Dockerfile,# basic smoke test
16875,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
16876,01ca700a105984964865430aee1251932956925e,/9-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16877,01ca700a105984964865430aee1251932956925e,/9-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
16878,01ca700a105984964865430aee1251932956925e,/9-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
16879,01ca700a105984964865430aee1251932956925e,/9-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16880,01ca700a105984964865430aee1251932956925e,/9-jre/slim/Dockerfile,#!/bin/sh'; \
16881,01ca700a105984964865430aee1251932956925e,/9-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16882,01ca700a105984964865430aee1251932956925e,/9-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16883,01ca700a105984964865430aee1251932956925e,/9-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16884,01ca700a105984964865430aee1251932956925e,/9-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16885,01ca700a105984964865430aee1251932956925e,/9-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16886,01ca700a105984964865430aee1251932956925e,/9-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16887,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
16888,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
16889,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
16890,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16891,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
16892,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/oracle/Dockerfile,# amd64
16893,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/oracle/Dockerfile,# fallback
16894,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
16895,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
16896,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/oracle/Dockerfile,# basic smoke test
16897,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
16898,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16899,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16900,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16901,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
16902,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16903,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16904,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
16905,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
16906,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16907,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/slim/Dockerfile,#!/bin/sh'; \
16908,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16909,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16910,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16911,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16912,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16913,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16914,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
16915,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
16916,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
16917,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
16918,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/Dockerfile,# backwards compatibility shim
16919,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
16920,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16921,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
16922,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
16923,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
16924,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
16925,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
16926,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/Dockerfile,# basic smoke test
16927,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16928,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16929,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
16930,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
16931,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16932,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/slim/Dockerfile,#!/bin/sh'; \
16933,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16934,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
16935,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16936,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16937,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16938,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16939,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
16940,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16941,ac57930ee4cb62a9106dff2244e0b38220a5164b,/13/jdk/alpine/Dockerfile,# http://jdk.java.net/
16942,ac57930ee4cb62a9106dff2244e0b38220a5164b,/13/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
16943,ac57930ee4cb62a9106dff2244e0b38220a5164b,/13/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
16944,ac57930ee4cb62a9106dff2244e0b38220a5164b,/13/jdk/alpine/Dockerfile,# basic smoke test
16945,ac57930ee4cb62a9106dff2244e0b38220a5164b,/13/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
16946,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
16947,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
16948,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/slim/Dockerfile,# backwards compatibility shim
16949,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
16950,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16951,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
16952,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/slim/Dockerfile,# arm64v8
16953,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/slim/Dockerfile,# amd64
16954,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/slim/Dockerfile,# fallback
16955,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
16956,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
16957,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
16958,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
16959,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
16960,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/slim/Dockerfile,# basic smoke test
16961,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16962,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
16963,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
16964,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
16965,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/Dockerfile,# backwards compatibility shim
16966,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
16967,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
16968,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
16969,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
16970,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
16971,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
16972,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
16973,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/Dockerfile,#!/usr/bin/env bash'; \
16974,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
16975,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
16976,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/Dockerfile,# basic smoke test
16977,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16978,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
16979,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
16980,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
16981,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16982,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/15/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
16983,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/15/jdk/oracle/Dockerfile,# arm64v8
16984,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/15/jdk/oracle/Dockerfile,# amd64
16985,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/15/jdk/oracle/Dockerfile,# fallback
16986,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
16987,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
16988,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/15/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
16989,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/15/jdk/oracle/Dockerfile,# basic smoke test
16990,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
16991,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
16992,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
16993,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
16994,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/Dockerfile,# backwards compatibility shim
16995,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
16996,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/Dockerfile,# https://adoptopenjdk.net/upstream.html
16997,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
16998,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
16999,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
17000,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
17001,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
17002,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/Dockerfile,#!/usr/bin/env bash'; \
17003,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
17004,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
17005,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/Dockerfile,# basic smoke test
17006,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17007,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
17008,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17009,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17010,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17011,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-6"
17012,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/Dockerfile,# Default to UTF-8 file.encoding
17013,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17014,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/Dockerfile,#!/bin/sh'; \
17015,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17016,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17017,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17018,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17019,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17020,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17021,0476812eabd178c77534f3c03bd0a2673822d7b9,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17022,0476812eabd178c77534f3c03bd0a2673822d7b9,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
17023,0476812eabd178c77534f3c03bd0a2673822d7b9,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
17024,0476812eabd178c77534f3c03bd0a2673822d7b9,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17025,0476812eabd178c77534f3c03bd0a2673822d7b9,/8-jre/alpine/Dockerfile,#!/bin/sh'; \
17026,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17027,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
17028,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
17029,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17030,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/Dockerfile,#!/bin/sh'; \
17031,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17032,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17033,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17034,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17035,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17036,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17037,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17038,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
17039,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17040,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
17041,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17042,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
17043,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
17044,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/oraclelinux7/Dockerfile,# Default to UTF-8 file.encoding
17045,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
17046,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
17047,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/oraclelinux7/Dockerfile,# arm64v8
17048,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/oraclelinux7/Dockerfile,# amd64
17049,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/oraclelinux7/Dockerfile,# fallback
17050,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/oraclelinux7/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
17051,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
17052,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
17053,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/oraclelinux7/Dockerfile,# basic smoke test
17054,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17055,0259a649c03ace8b035432ef3ee7274ca30d3776,/7/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
17056,0259a649c03ace8b035432ef3ee7274ca30d3776,/7/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
17057,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
17058,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-7-jdk/Dockerfile,# Default to UTF-8 file.encoding
17059,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
17060,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17061,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
17062,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17063,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-1709/Dockerfile,# https://jdk.java.net/
17064,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17065,ba84c1878998602129f0d7d94d26aae5e04bc872,/15/jdk/alpine/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17066,ba84c1878998602129f0d7d94d26aae5e04bc872,/15/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
17067,ba84c1878998602129f0d7d94d26aae5e04bc872,/15/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
17068,ba84c1878998602129f0d7d94d26aae5e04bc872,/15/jdk/alpine/Dockerfile,"# see ""java-cacerts"" package installed above (which maintains ""/etc/ssl/certs/java/cacerts"" for us)"
17069,ba84c1878998602129f0d7d94d26aae5e04bc872,/15/jdk/alpine/Dockerfile,# basic smoke test
17070,ba84c1878998602129f0d7d94d26aae5e04bc872,/15/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
17071,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17072,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
17073,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
17074,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17075,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jre/Dockerfile,#!/bin/sh'; \
17076,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
17077,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17078,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
17079,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17080,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17081,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17082,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17083,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
17084,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
17085,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17086,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/slim/Dockerfile,#!/bin/sh'; \
17087,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17088,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
17089,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17090,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17091,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17092,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17093,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
17094,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17095,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
17096,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/nanoserver-1809/Dockerfile,# https://jdk.java.net/
17097,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17098,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17099,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
17100,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
17101,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17102,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/slim/Dockerfile,#!/bin/sh'; \
17103,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17104,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
17105,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17106,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17107,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17108,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17109,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
17110,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17111,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
17112,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
17113,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/slim-buster/Dockerfile,# backwards compatibility shim
17114,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
17115,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/slim-buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
17116,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
17117,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/slim-buster/Dockerfile,# arm64v8
17118,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/slim-buster/Dockerfile,# amd64
17119,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/slim-buster/Dockerfile,# fallback
17120,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
17121,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
17122,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
17123,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
17124,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
17125,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/slim-buster/Dockerfile,# basic smoke test
17126,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17127,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17128,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
17129,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17130,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17131,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17132,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
17133,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
17134,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
17135,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,# Default to UTF-8 file.encoding
17136,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,# backwards compatibility shim
17137,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
17138,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17139,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
17140,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,# arm64v8
17141,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,# amd64
17142,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,# fallback
17143,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
17144,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,#!/usr/bin/env bash'; \
17145,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
17146,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
17147,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
17148,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,# basic smoke test
17149,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17150,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17151,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
17152,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
17153,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17154,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/slim/Dockerfile,#!/bin/sh'; \
17155,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17156,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17157,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17158,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17159,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17160,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17161,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
17162,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/nanoserver-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
17163,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/nanoserver-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
17164,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17165,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17166,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
17167,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
17168,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
17169,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17170,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17171,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17172,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://adoptopenjdk.net/upstream.html
17173,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
17174,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
17175,a0a4970a343a3c021dad760f2281d20f61931e3c,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17176,a0a4970a343a3c021dad760f2281d20f61931e3c,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
17177,a0a4970a343a3c021dad760f2281d20f61931e3c,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
17178,a0a4970a343a3c021dad760f2281d20f61931e3c,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17179,a0a4970a343a3c021dad760f2281d20f61931e3c,/8-jre/Dockerfile,#!/bin/sh'; \
17180,a0a4970a343a3c021dad760f2281d20f61931e3c,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
17181,a0a4970a343a3c021dad760f2281d20f61931e3c,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
17182,a0a4970a343a3c021dad760f2281d20f61931e3c,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
17183,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
17184,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
17185,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
17186,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
17187,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,# backwards compatibility shim
17188,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
17189,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17190,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
17191,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,# arm64v8
17192,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,# amd64
17193,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,# fallback
17194,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
17195,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
17196,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
17197,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
17198,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
17199,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,# basic smoke test
17200,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17201,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
17202,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
17203,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
17204,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
17205,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/Dockerfile,# backwards compatibility shim
17206,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
17207,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17208,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
17209,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
17210,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
17211,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
17212,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
17213,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/Dockerfile,# basic smoke test
17214,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17215,02a49915095f254cbf321292ab7a021529686448,/11-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17216,02a49915095f254cbf321292ab7a021529686448,/11-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
17217,02a49915095f254cbf321292ab7a021529686448,/11-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
17218,02a49915095f254cbf321292ab7a021529686448,/11-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17219,02a49915095f254cbf321292ab7a021529686448,/11-jre/slim/Dockerfile,#!/bin/sh'; \
17220,02a49915095f254cbf321292ab7a021529686448,/11-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17221,02a49915095f254cbf321292ab7a021529686448,/11-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17222,02a49915095f254cbf321292ab7a021529686448,/11-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17223,02a49915095f254cbf321292ab7a021529686448,/11-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17224,02a49915095f254cbf321292ab7a021529686448,/11-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17225,02a49915095f254cbf321292ab7a021529686448,/11-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17226,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17227,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
17228,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17229,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17230,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17231,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
17232,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
17233,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
17234,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/Dockerfile,# backwards compatibility shim
17235,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
17236,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
17237,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
17238,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
17239,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
17240,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
17241,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
17242,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/Dockerfile,#!/usr/bin/env bash'; \
17243,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
17244,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
17245,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/Dockerfile,# basic smoke test
17246,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17247,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
17248,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17249,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17250,baaaf7714f9c66e4c5decf2c108a2738b7186c7f,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17251,baaaf7714f9c66e4c5decf2c108a2738b7186c7f,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
17252,baaaf7714f9c66e4c5decf2c108a2738b7186c7f,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
17253,baaaf7714f9c66e4c5decf2c108a2738b7186c7f,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17254,baaaf7714f9c66e4c5decf2c108a2738b7186c7f,/8-jdk/Dockerfile,#!/bin/sh'; \
17255,baaaf7714f9c66e4c5decf2c108a2738b7186c7f,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
17256,baaaf7714f9c66e4c5decf2c108a2738b7186c7f,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
17257,baaaf7714f9c66e4c5decf2c108a2738b7186c7f,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
17258,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
17259,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17260,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17261,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
17262,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
17263,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
17264,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/Dockerfile,# backwards compatibility shim
17265,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
17266,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
17267,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
17268,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
17269,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
17270,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
17271,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
17272,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/Dockerfile,#!/usr/bin/env bash'; \
17273,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
17274,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
17275,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/Dockerfile,# basic smoke test
17276,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17277,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
17278,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
17279,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17280,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/slim/Dockerfile,#!/bin/sh'; \
17281,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17282,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17283,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17284,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17285,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17286,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17287,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17288,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17289,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17290,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
17291,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
17292,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
17293,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17294,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
17295,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
17296,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
17297,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/Dockerfile,# backwards compatibility shim
17298,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
17299,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
17300,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
17301,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
17302,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
17303,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
17304,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
17305,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/Dockerfile,#!/usr/bin/env bash'; \
17306,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
17307,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
17308,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/Dockerfile,# basic smoke test
17309,eaf1c5575ab9763caf66d8d5debb7ec089411740,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17310,eaf1c5575ab9763caf66d8d5debb7ec089411740,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
17311,eaf1c5575ab9763caf66d8d5debb7ec089411740,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
17312,eaf1c5575ab9763caf66d8d5debb7ec089411740,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17313,eaf1c5575ab9763caf66d8d5debb7ec089411740,/9-jre/Dockerfile,#!/bin/bash'; \
17314,eaf1c5575ab9763caf66d8d5debb7ec089411740,/9-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
17315,eaf1c5575ab9763caf66d8d5debb7ec089411740,/9-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
17316,eaf1c5575ab9763caf66d8d5debb7ec089411740,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
17317,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17318,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
17319,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
17320,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17321,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
17322,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17323,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17324,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17325,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17326,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17327,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17328,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17329,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
17330,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
17331,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
17332,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
17333,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/Dockerfile,# backwards compatibility shim
17334,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
17335,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17336,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
17337,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
17338,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
17339,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
17340,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
17341,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/Dockerfile,# basic smoke test
17342,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17343,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17344,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/7-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
17345,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
17346,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17347,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/7-jre/Dockerfile,#!/bin/sh'; \
17348,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/7-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17349,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/7-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17350,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/7-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17351,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/7-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17352,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/7-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17353,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17354,d4ecf99e10d1f0e6239f54f1907df56e725ac4ac,/8/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17355,d4ecf99e10d1f0e6239f54f1907df56e725ac4ac,/8/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
17356,d4ecf99e10d1f0e6239f54f1907df56e725ac4ac,/8/jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
17357,d4ecf99e10d1f0e6239f54f1907df56e725ac4ac,/8/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17358,d4ecf99e10d1f0e6239f54f1907df56e725ac4ac,/8/jdk/alpine/Dockerfile,#!/bin/sh'; \
17359,d4ecf99e10d1f0e6239f54f1907df56e725ac4ac,/8/jdk/alpine/Dockerfile,# https://bugs.alpinelinux.org/issues/10126
17360,d4ecf99e10d1f0e6239f54f1907df56e725ac4ac,/8/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17361,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/alpine/Dockerfile,# https://jdk.java.net/
17362,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
17363,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
17364,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/alpine/Dockerfile,# basic smoke test
17365,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
17366,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17367,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
17368,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
17369,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17370,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jdk/Dockerfile,#!/bin/sh'; \
17371,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17372,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
17373,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17374,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17375,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17376,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
17377,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
17378,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17379,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
17380,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/Dockerfile,# Default to UTF-8 file.encoding
17381,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17382,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/Dockerfile,#!/bin/sh'; \
17383,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17384,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17385,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17386,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17387,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17388,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17389,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17390,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
17391,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
17392,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17393,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/Dockerfile,#!/bin/sh'; \
17394,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17395,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17396,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17397,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17398,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17399,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17400,1b4378dc7b57c8534fe715cfcec356ee96c87e92,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
17401,1b4378dc7b57c8534fe715cfcec356ee96c87e92,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
17402,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
17403,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
17404,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
17405,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/Dockerfile,# backwards compatibility shim
17406,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
17407,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
17408,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
17409,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
17410,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
17411,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
17412,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
17413,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/Dockerfile,#!/usr/bin/env bash'; \
17414,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
17415,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
17416,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/Dockerfile,# basic smoke test
17417,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17418,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
17419,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
17420,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17421,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/Dockerfile,#!/bin/sh'; \
17422,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17423,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17424,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17425,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17426,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17427,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17428,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17429,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
17430,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
17431,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/slim/Dockerfile,# backwards compatibility shim
17432,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
17433,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17434,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
17435,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
17436,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
17437,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
17438,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
17439,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/slim/Dockerfile,# basic smoke test
17440,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17441,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
17442,d63214d23aad827190c599e23351bd0bdd7dcadc,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
17443,d63214d23aad827190c599e23351bd0bdd7dcadc,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
17444,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
17445,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
17446,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/slim/Dockerfile,# backwards compatibility shim
17447,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
17448,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/slim/Dockerfile,# https://jdk.java.net/
17449,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
17450,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
17451,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
17452,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
17453,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
17454,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/slim/Dockerfile,# basic smoke test
17455,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17456,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
17457,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
17458,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
17459,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
17460,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
17461,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,# backwards compatibility shim
17462,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
17463,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
17464,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
17465,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,# arm64v8
17466,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,# amd64
17467,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,# fallback
17468,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
17469,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
17470,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
17471,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
17472,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
17473,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,# basic smoke test
17474,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17475,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
17476,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
17477,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
17478,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jre/Dockerfile,# backwards compatibility shim
17479,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
17480,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jre/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
17481,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
17482,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
17483,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
17484,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
17485,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
17486,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jre/Dockerfile,#!/usr/bin/env bash'; \
17487,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
17488,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
17489,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jre/Dockerfile,# basic smoke test
17490,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17491,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
17492,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17493,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
17494,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17495,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17496,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
17497,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17498,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
17499,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17500,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17501,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
17502,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17503,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
17504,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17505,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17506,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
17507,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17508,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
17509,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17510,45a43909f241296d22849489dcc58c06059660c6,/8/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
17511,45a43909f241296d22849489dcc58c06059660c6,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
17512,45a43909f241296d22849489dcc58c06059660c6,/8/jre/slim/Dockerfile,# backwards compatibility shim
17513,45a43909f241296d22849489dcc58c06059660c6,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
17514,45a43909f241296d22849489dcc58c06059660c6,/8/jre/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
17515,45a43909f241296d22849489dcc58c06059660c6,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
17516,45a43909f241296d22849489dcc58c06059660c6,/8/jre/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
17517,45a43909f241296d22849489dcc58c06059660c6,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
17518,45a43909f241296d22849489dcc58c06059660c6,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
17519,45a43909f241296d22849489dcc58c06059660c6,/8/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
17520,45a43909f241296d22849489dcc58c06059660c6,/8/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
17521,45a43909f241296d22849489dcc58c06059660c6,/8/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
17522,45a43909f241296d22849489dcc58c06059660c6,/8/jre/slim/Dockerfile,# basic smoke test
17523,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17524,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17525,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
17526,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17527,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17528,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
17529,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/Dockerfile,# Default to UTF-8 file.encoding
17530,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17531,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/Dockerfile,#!/bin/sh'; \
17532,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17533,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17534,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
17535,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17536,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17537,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17538,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17539,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17540,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
17541,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
17542,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/slim/Dockerfile,# backwards compatibility shim
17543,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
17544,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17545,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
17546,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/slim/Dockerfile,# arm64v8
17547,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/slim/Dockerfile,# amd64
17548,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/slim/Dockerfile,# fallback
17549,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
17550,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
17551,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
17552,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
17553,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
17554,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/slim/Dockerfile,# basic smoke test
17555,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17556,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17557,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
17558,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/Dockerfile,# Default to UTF-8 file.encoding
17559,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17560,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/Dockerfile,#!/bin/sh'; \
17561,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17562,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17563,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17564,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17565,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17566,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17567,17f7f8dc7e673127812e5c31b83937283beb7b12,/15/jdk/alpine/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17568,17f7f8dc7e673127812e5c31b83937283beb7b12,/15/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
17569,17f7f8dc7e673127812e5c31b83937283beb7b12,/15/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
17570,17f7f8dc7e673127812e5c31b83937283beb7b12,/15/jdk/alpine/Dockerfile,# basic smoke test
17571,17f7f8dc7e673127812e5c31b83937283beb7b12,/15/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
17572,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17573,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
17574,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
17575,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17576,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/Dockerfile,#!/bin/sh'; \
17577,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17578,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17579,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (a case of https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
17580,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17581,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17582,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17583,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17584,9745c87a15896ec558429a826e23926e721e4846,/8-jdk/windows/windowsservercore/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17585,9745c87a15896ec558429a826e23926e721e4846,/8-jdk/windows/windowsservercore/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17586,9745c87a15896ec558429a826e23926e721e4846,/8-jdk/windows/windowsservercore/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
17587,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17588,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
17589,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17590,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17591,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17592,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17593,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
17594,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17595,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
17596,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17597,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17598,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
17599,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
17600,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17601,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/slim/Dockerfile,#!/bin/sh'; \
17602,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17603,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17604,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
17605,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17606,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17607,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17608,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17609,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17610,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
17611,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
17612,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
17613,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17614,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
17615,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
17616,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/oracle/Dockerfile,# basic smoke test
17617,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
17618,faa860854c1ed83943047f669424c9c36aae4dd5,/7/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17619,faa860854c1ed83943047f669424c9c36aae4dd5,/7/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
17620,faa860854c1ed83943047f669424c9c36aae4dd5,/7/jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
17621,faa860854c1ed83943047f669424c9c36aae4dd5,/7/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17622,faa860854c1ed83943047f669424c9c36aae4dd5,/7/jre/alpine/Dockerfile,#!/bin/sh'; \
17623,faa860854c1ed83943047f669424c9c36aae4dd5,/7/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17624,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
17625,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
17626,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/oraclelinux7/Dockerfile,# Default to UTF-8 file.encoding
17627,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
17628,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
17629,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/oraclelinux7/Dockerfile,# amd64
17630,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/oraclelinux7/Dockerfile,# fallback
17631,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/oraclelinux7/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
17632,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
17633,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
17634,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/oraclelinux7/Dockerfile,# basic smoke test
17635,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17636,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17637,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
17638,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17639,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17640,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17641,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
17642,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
17643,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
17644,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17645,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
17646,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
17647,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/oracle/Dockerfile,# basic smoke test
17648,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
17649,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17650,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
17651,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17652,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17653,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17654,38cb0eb077acf2a429f32a879903cd305733d561,/8/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17655,38cb0eb077acf2a429f32a879903cd305733d561,/8/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
17656,38cb0eb077acf2a429f32a879903cd305733d561,/8/jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
17657,38cb0eb077acf2a429f32a879903cd305733d561,/8/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17658,38cb0eb077acf2a429f32a879903cd305733d561,/8/jdk/alpine/Dockerfile,#!/bin/sh'; \
17659,38cb0eb077acf2a429f32a879903cd305733d561,/8/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17660,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17661,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
17662,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17663,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17664,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17665,882461ade8207de7647d083009200de85eb978bc,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17666,882461ade8207de7647d083009200de85eb978bc,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
17667,882461ade8207de7647d083009200de85eb978bc,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
17668,882461ade8207de7647d083009200de85eb978bc,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17669,882461ade8207de7647d083009200de85eb978bc,/9-jre/Dockerfile,#!/bin/sh'; \
17670,882461ade8207de7647d083009200de85eb978bc,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17671,882461ade8207de7647d083009200de85eb978bc,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17672,882461ade8207de7647d083009200de85eb978bc,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17673,882461ade8207de7647d083009200de85eb978bc,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
17674,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
17675,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
17676,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
17677,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
17678,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/Dockerfile,# backwards compatibility shim
17679,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
17680,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17681,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
17682,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
17683,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
17684,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
17685,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
17686,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/Dockerfile,# basic smoke test
17687,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17688,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17689,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
17690,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
17691,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17692,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/slim/Dockerfile,#!/bin/sh'; \
17693,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17694,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
17695,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17696,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17697,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17698,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17699,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
17700,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17701,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17702,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
17703,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
17704,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17705,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/slim/Dockerfile,#!/bin/sh'; \
17706,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17707,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17708,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17709,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17710,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17711,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17712,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17713,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
17714,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
17715,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17716,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/Dockerfile,#!/bin/sh'; \
17717,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17718,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17719,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-reccomends:
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
17720,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17721,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17722,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17723,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17724,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17725,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
17726,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17727,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17728,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17729,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17730,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
17731,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17732,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
17733,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17734,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17735,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
17736,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
17737,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17738,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/Dockerfile,#!/bin/sh'; \
17739,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17740,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17741,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17742,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17743,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17744,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17745,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17746,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
17747,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17748,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-1709/Dockerfile,# https://jdk.java.net/
17749,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17750,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
17751,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
17752,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/11/jdk/Dockerfile,# backwards compatibility shim
17753,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
17754,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/11/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
17755,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
17756,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/11/jdk/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
17757,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
17758,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/11/jdk/Dockerfile,# basic smoke test
17759,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17760,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17761,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
17762,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17763,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
17764,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17765,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
17766,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
17767,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jre/Dockerfile,# backwards compatibility shim
17768,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
17769,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jre/Dockerfile,# https://adoptopenjdk.net/upstream.html
17770,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
17771,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jre/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
17772,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
17773,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jre/Dockerfile,# basic smoke test
17774,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17775,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
17776,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17777,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
17778,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17779,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
17780,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
17781,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/oracle/Dockerfile,# http://jdk.java.net/
17782,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
17783,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
17784,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/oracle/Dockerfile,# basic smoke test
17785,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
17786,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
17787,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
17788,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/slim/Dockerfile,# backwards compatibility shim
17789,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
17790,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17791,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
17792,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/slim/Dockerfile,# arm64v8
17793,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/slim/Dockerfile,# amd64
17794,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/slim/Dockerfile,# fallback
17795,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
17796,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
17797,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
17798,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
17799,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
17800,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/slim/Dockerfile,# basic smoke test
17801,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17802,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17803,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17804,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
17805,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17806,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
17807,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
17808,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
17809,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17810,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
17811,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/oracle/Dockerfile,# arm64v8
17812,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/oracle/Dockerfile,# amd64
17813,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/oracle/Dockerfile,# fallback
17814,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
17815,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
17816,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
17817,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/oracle/Dockerfile,# basic smoke test
17818,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
17819,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17820,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
17821,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
17822,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17823,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/Dockerfile,#!/bin/sh'; \
17824,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17825,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17826,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17827,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17828,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17829,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17830,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
17831,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
17832,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/slim/Dockerfile,# backwards compatibility shim
17833,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
17834,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/slim/Dockerfile,# https://jdk.java.net/
17835,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
17836,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
17837,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
17838,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
17839,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
17840,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/slim/Dockerfile,# basic smoke test
17841,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17842,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
17843,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
17844,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17845,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17846,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17847,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
17848,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17849,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17850,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17851,238cc35696423794b1951fc63d4cc9ffb8ca9685,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17852,238cc35696423794b1951fc63d4cc9ffb8ca9685,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
17853,238cc35696423794b1951fc63d4cc9ffb8ca9685,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
17854,238cc35696423794b1951fc63d4cc9ffb8ca9685,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17855,238cc35696423794b1951fc63d4cc9ffb8ca9685,/8-jdk/alpine/Dockerfile,#!/bin/sh'; \
17856,a2b245fc1ab64df2de145b87e631b5e89ca67388,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17857,a2b245fc1ab64df2de145b87e631b5e89ca67388,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
17858,a2b245fc1ab64df2de145b87e631b5e89ca67388,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
17859,a2b245fc1ab64df2de145b87e631b5e89ca67388,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17860,a2b245fc1ab64df2de145b87e631b5e89ca67388,/8-jdk/alpine/Dockerfile,#!/bin/sh'; \
17861,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
17862,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
17863,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/slim-buster/Dockerfile,# backwards compatibility shim
17864,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
17865,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/slim-buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
17866,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
17867,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/slim-buster/Dockerfile,# arm64v8
17868,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/slim-buster/Dockerfile,# amd64
17869,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/slim-buster/Dockerfile,# fallback
17870,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
17871,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
17872,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
17873,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
17874,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
17875,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/slim-buster/Dockerfile,# basic smoke test
17876,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17877,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17878,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17879,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
17880,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
17881,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
17882,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17883,65f4567ed9294e7404b3d2d0c806249946e06210,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
17884,65f4567ed9294e7404b3d2d0c806249946e06210,/openjdk-7-jre/Dockerfile,# Default to UTF-8 file.encoding
17885,65f4567ed9294e7404b3d2d0c806249946e06210,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
17886,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
17887,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17888,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17889,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
17890,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
17891,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/slim/Dockerfile,# backwards compatibility shim
17892,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
17893,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
17894,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
17895,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
17896,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
17897,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
17898,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
17899,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
17900,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
17901,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
17902,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/slim/Dockerfile,# basic smoke test
17903,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
17904,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
17905,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
17906,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17907,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
17908,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
17909,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/oracle/Dockerfile,# basic smoke test
17910,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
17911,4c5beb8bdb21c746bef683f18bdeddee157f61fd,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
17912,4c5beb8bdb21c746bef683f18bdeddee157f61fd,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
17913,9bf9b29f73334c172d151d9a615d7cd52b74defe,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17914,9bf9b29f73334c172d151d9a615d7cd52b74defe,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
17915,9bf9b29f73334c172d151d9a615d7cd52b74defe,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
17916,9bf9b29f73334c172d151d9a615d7cd52b74defe,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17917,9bf9b29f73334c172d151d9a615d7cd52b74defe,/9-jre/Dockerfile,#!/bin/sh'; \
17918,9bf9b29f73334c172d151d9a615d7cd52b74defe,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
17919,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
17920,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/nanoserver-1803/Dockerfile,# https://jdk.java.net/
17921,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17922,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17923,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
17924,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/Dockerfile,# Default to UTF-8 file.encoding
17925,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17926,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/Dockerfile,#!/bin/sh'; \
17927,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17928,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17929,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
17930,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17931,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17932,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17933,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17934,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17935,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
17936,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
17937,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17938,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/Dockerfile,#!/bin/sh'; \
17939,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17940,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17941,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17942,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17943,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17944,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17945,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17946,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17947,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
17948,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
17949,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17950,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/Dockerfile,#!/bin/sh'; \
17951,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17952,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17953,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17954,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17955,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17956,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17957,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17958,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
17959,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17960,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
17961,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17962,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/8/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17963,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
17964,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17965,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/8/jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
17966,02a49915095f254cbf321292ab7a021529686448,/11-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17967,02a49915095f254cbf321292ab7a021529686448,/11-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
17968,02a49915095f254cbf321292ab7a021529686448,/11-jre/Dockerfile,# Default to UTF-8 file.encoding
17969,02a49915095f254cbf321292ab7a021529686448,/11-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17970,02a49915095f254cbf321292ab7a021529686448,/11-jre/Dockerfile,#!/bin/sh'; \
17971,02a49915095f254cbf321292ab7a021529686448,/11-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17972,02a49915095f254cbf321292ab7a021529686448,/11-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17973,02a49915095f254cbf321292ab7a021529686448,/11-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17974,02a49915095f254cbf321292ab7a021529686448,/11-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17975,02a49915095f254cbf321292ab7a021529686448,/11-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17976,02a49915095f254cbf321292ab7a021529686448,/11-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17977,faa860854c1ed83943047f669424c9c36aae4dd5,/8/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17978,faa860854c1ed83943047f669424c9c36aae4dd5,/8/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
17979,faa860854c1ed83943047f669424c9c36aae4dd5,/8/jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
17980,faa860854c1ed83943047f669424c9c36aae4dd5,/8/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17981,faa860854c1ed83943047f669424c9c36aae4dd5,/8/jdk/alpine/Dockerfile,#!/bin/sh'; \
17982,faa860854c1ed83943047f669424c9c36aae4dd5,/8/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17983,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17984,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
17985,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
17986,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17987,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/9-jdk/Dockerfile,#!/bin/sh'; \
17988,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
17989,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
17990,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
17991,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
17992,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/Dockerfile,# backwards compatibility shim
17993,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
17994,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
17995,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
17996,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
17997,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
17998,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
17999,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
18000,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/Dockerfile,#!/usr/bin/env bash'; \
18001,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
18002,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
18003,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/Dockerfile,# basic smoke test
18004,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
18005,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
18006,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
18007,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18008,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18009,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18010,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
18011,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18012,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18013,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
18014,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
18015,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18016,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/Dockerfile,#!/bin/sh'; \
18017,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18018,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
18019,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (a case of https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
18020,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18021,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18022,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18023,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18024,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18025,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18026,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18027,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jdk/Dockerfile,# Default to UTF-8 file.encoding
18028,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18029,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jdk/Dockerfile,#!/bin/sh'; \
18030,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18031,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18032,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18033,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18034,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
18035,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18036,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18037,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
18038,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18039,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
18040,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
18041,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/slim-buster/Dockerfile,# backwards compatibility shim
18042,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
18043,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/slim-buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
18044,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
18045,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
18046,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/slim-buster/Dockerfile,# amd64
18047,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/slim-buster/Dockerfile,# fallback
18048,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/slim-buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
18049,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/slim-buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
18050,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/slim-buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
18051,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
18052,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
18053,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
18054,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
18055,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/slim-buster/Dockerfile,# basic smoke test
18056,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18057,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18058,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18059,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# https://jdk.java.net/
18060,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18061,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
18062,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/nanoserver-1803/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18063,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
18064,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
18065,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
18066,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
18067,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18068,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
18069,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
18070,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18071,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/slim/Dockerfile,#!/bin/sh'; \
18072,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18073,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
18074,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18075,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18076,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18077,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18078,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
18079,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
18080,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
18081,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18082,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
18083,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/oracle/Dockerfile,# amd64
18084,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/oracle/Dockerfile,# fallback
18085,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
18086,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18087,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
18088,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/oracle/Dockerfile,# basic smoke test
18089,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
18090,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18091,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
18092,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/Dockerfile,# Default to UTF-8 file.encoding
18093,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18094,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/Dockerfile,#!/bin/sh'; \
18095,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18096,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
18097,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18098,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18099,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18100,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18101,89c5b6e626b9b8e27c1d4fd021ff8fd2a786ac26,/12/jdk/alpine/Dockerfile,# http://jdk.java.net/
18102,89c5b6e626b9b8e27c1d4fd021ff8fd2a786ac26,/12/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
18103,89c5b6e626b9b8e27c1d4fd021ff8fd2a786ac26,/12/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
18104,89c5b6e626b9b8e27c1d4fd021ff8fd2a786ac26,/12/jdk/alpine/Dockerfile,# basic smoke test
18105,89c5b6e626b9b8e27c1d4fd021ff8fd2a786ac26,/12/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
18106,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
18107,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
18108,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/slim-buster/Dockerfile,# backwards compatibility shim
18109,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
18110,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/slim-buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
18111,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
18112,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
18113,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/slim-buster/Dockerfile,# amd64
18114,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/slim-buster/Dockerfile,# fallback
18115,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/slim-buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
18116,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/slim-buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
18117,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/slim-buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
18118,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
18119,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
18120,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
18121,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
18122,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/slim-buster/Dockerfile,# basic smoke test
18123,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
18124,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
18125,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
18126,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18127,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
18128,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/oracle/Dockerfile,# arm64v8
18129,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/oracle/Dockerfile,# amd64
18130,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/oracle/Dockerfile,# fallback
18131,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
18132,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18133,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
18134,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/oracle/Dockerfile,# basic smoke test
18135,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
18136,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18137,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
18138,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
18139,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18140,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/slim/Dockerfile,#!/bin/sh'; \
18141,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18142,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
18143,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
18144,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18145,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18146,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18147,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
18148,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18149,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18150,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18151,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18152,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
18153,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18154,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
18155,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
18156,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
18157,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18158,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
18159,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18160,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/oracle/Dockerfile,# basic smoke test
18161,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
18162,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
18163,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18164,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
18165,fe489e584bd248f6ed6b379beed27eda755c5ba9,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18166,fe489e584bd248f6ed6b379beed27eda755c5ba9,/openjdk-8-jre/Dockerfile,# Default to UTF-8 file.encoding
18167,fe489e584bd248f6ed6b379beed27eda755c5ba9,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
18168,fe489e584bd248f6ed6b379beed27eda755c5ba9,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
18169,fe489e584bd248f6ed6b379beed27eda755c5ba9,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
18170,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18171,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
18172,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
18173,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18174,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/slim/Dockerfile,#!/bin/sh'; \
18175,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18176,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
18177,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
18178,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18179,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18180,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18181,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18182,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
18183,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
18184,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
18185,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
18186,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
18187,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/oracle/Dockerfile,# https://jdk.java.net/
18188,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
18189,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18190,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/oracle/Dockerfile,# basic smoke test
18191,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
18192,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
18193,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
18194,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
18195,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18196,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/15/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
18197,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/15/jdk/oracle/Dockerfile,# arm64v8
18198,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/15/jdk/oracle/Dockerfile,# amd64
18199,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/15/jdk/oracle/Dockerfile,# fallback
18200,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
18201,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18202,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/15/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
18203,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/15/jdk/oracle/Dockerfile,# basic smoke test
18204,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
18205,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18206,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18207,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18208,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# https://jdk.java.net/
18209,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18210,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
18211,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
18212,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/oraclelinux7/Dockerfile,# Default to UTF-8 file.encoding
18213,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
18214,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
18215,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/oraclelinux7/Dockerfile,# arm64v8
18216,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/oraclelinux7/Dockerfile,# amd64
18217,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/oraclelinux7/Dockerfile,# fallback
18218,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/oraclelinux7/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
18219,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18220,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
18221,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/oraclelinux7/Dockerfile,# basic smoke test
18222,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
18223,0b124de91ebd32bcc8977fd2214d36b8fccb615c,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18224,0b124de91ebd32bcc8977fd2214d36b8fccb615c,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
18225,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
18226,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18227,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
18228,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18229,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
18230,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/Dockerfile,# Default to UTF-8 file.encoding
18231,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18232,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/Dockerfile,#!/bin/sh'; \
18233,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18234,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
18235,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18236,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18237,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18238,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18239,2eedac4afe8e587cb02cb7739d70e2c33c2b1421,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18240,2eedac4afe8e587cb02cb7739d70e2c33c2b1421,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18241,2eedac4afe8e587cb02cb7739d70e2c33c2b1421,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
18242,2eedac4afe8e587cb02cb7739d70e2c33c2b1421,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18243,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
18244,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18245,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
18246,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18247,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18248,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18249,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
18250,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18251,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
18252,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
18253,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/oracle/Dockerfile,# https://jdk.java.net/
18254,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
18255,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18256,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/oracle/Dockerfile,# basic smoke test
18257,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
18258,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18259,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18260,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-8-jdk/Dockerfile,# Default to UTF-8 file.encoding
18261,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18262,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-8-jdk/Dockerfile,#!/bin/bash'; \
18263,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
18264,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
18265,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
18266,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18267,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18268,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18269,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
18270,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18271,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/alpine/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18272,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
18273,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18274,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/alpine/Dockerfile,# basic smoke test
18275,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
18276,d183725a5acda253132f21011fe903f3924e7e12,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18277,d183725a5acda253132f21011fe903f3924e7e12,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18278,d183725a5acda253132f21011fe903f3924e7e12,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
18279,d183725a5acda253132f21011fe903f3924e7e12,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18280,d183725a5acda253132f21011fe903f3924e7e12,/9-jdk/Dockerfile,#!/bin/sh'; \
18281,d183725a5acda253132f21011fe903f3924e7e12,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
18282,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18283,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18284,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18285,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18286,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18287,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18288,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18289,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18290,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
18291,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18292,43b1402a2b3af1eb182c0c16fec01886c9db9c37,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18293,43b1402a2b3af1eb182c0c16fec01886c9db9c37,/openjdk-8-jdk/Dockerfile,# Default to UTF-8 file.encoding
18294,43b1402a2b3af1eb182c0c16fec01886c9db9c37,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
18295,43b1402a2b3af1eb182c0c16fec01886c9db9c37,/openjdk-8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
18296,43b1402a2b3af1eb182c0c16fec01886c9db9c37,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
18297,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18298,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18299,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18300,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
18301,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18302,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18303,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18304,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18305,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18306,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18307,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18308,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18309,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/windows/windowsservercore-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
18310,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/windows/windowsservercore-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
18311,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
18312,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18313,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18314,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/windows/windowsservercore-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
18315,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/windows/windowsservercore-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
18316,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
18317,f71d77ba3fe01cbfc625e38c1841531870f0538c,/openjdk-7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18318,f71d77ba3fe01cbfc625e38c1841531870f0538c,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18319,f71d77ba3fe01cbfc625e38c1841531870f0538c,/openjdk-7-jre/Dockerfile,# Default to UTF-8 file.encoding
18320,f71d77ba3fe01cbfc625e38c1841531870f0538c,/openjdk-7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18321,f71d77ba3fe01cbfc625e38c1841531870f0538c,/openjdk-7-jre/Dockerfile,#!/bin/bash'; \
18322,f71d77ba3fe01cbfc625e38c1841531870f0538c,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
18323,0b42083d3cd9c3a57e35db84e5e9d246c9fcc129,/9-jdk/windows/windowsservercore/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18324,0b42083d3cd9c3a57e35db84e5e9d246c9fcc129,/9-jdk/windows/windowsservercore/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18325,0b42083d3cd9c3a57e35db84e5e9d246c9fcc129,/9-jdk/windows/windowsservercore/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
18326,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18327,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18328,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18329,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
18330,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18331,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
18332,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
18333,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/oracle/Dockerfile,# http://jdk.java.net/
18334,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
18335,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
18336,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/oracle/Dockerfile,# basic smoke test
18337,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
18338,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
18339,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
18340,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/slim/Dockerfile,# backwards compatibility shim
18341,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
18342,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18343,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
18344,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
18345,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
18346,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
18347,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18348,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/slim/Dockerfile,# basic smoke test
18349,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
18350,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
18351,e2f1ab45666ee26160609c4b32517488d52d1428,/openjdk-9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18352,e2f1ab45666ee26160609c4b32517488d52d1428,/openjdk-9-jdk/Dockerfile,# Default to UTF-8 file.encoding
18353,e2f1ab45666ee26160609c4b32517488d52d1428,/openjdk-9-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
18354,e2f1ab45666ee26160609c4b32517488d52d1428,/openjdk-9-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
18355,e2f1ab45666ee26160609c4b32517488d52d1428,/openjdk-9-jdk/Dockerfile,"# see https://bugs.debian.org/793210
# and https://github.com/docker-library/java/issues/46#issuecomment-119026586"
18356,e2f1ab45666ee26160609c4b32517488d52d1428,/openjdk-9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
18357,a8d6952a882f3e56041be8d80df6276dab111f82,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18358,a8d6952a882f3e56041be8d80df6276dab111f82,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
18359,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18360,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/8-jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
18361,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
18362,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18363,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/8-jdk/alpine/Dockerfile,#!/bin/sh'; \
18364,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/8-jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18365,1c98a9032d1a19122074c4009326eade264903b7,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18366,1c98a9032d1a19122074c4009326eade264903b7,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18367,1c98a9032d1a19122074c4009326eade264903b7,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
18368,1c98a9032d1a19122074c4009326eade264903b7,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18369,1c98a9032d1a19122074c4009326eade264903b7,/9-jre/Dockerfile,#!/bin/sh'; \
18370,1c98a9032d1a19122074c4009326eade264903b7,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
18371,0467df283134a79840c25808093c00f7c94b9a88,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18372,0467df283134a79840c25808093c00f7c94b9a88,/7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18373,0467df283134a79840c25808093c00f7c94b9a88,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
18374,0467df283134a79840c25808093c00f7c94b9a88,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18375,0467df283134a79840c25808093c00f7c94b9a88,/7-jre/Dockerfile,#!/bin/sh'; \
18376,0467df283134a79840c25808093c00f7c94b9a88,/7-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18377,0467df283134a79840c25808093c00f7c94b9a88,/7-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18378,0467df283134a79840c25808093c00f7c94b9a88,/7-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18379,0467df283134a79840c25808093c00f7c94b9a88,/7-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18380,0467df283134a79840c25808093c00f7c94b9a88,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
18381,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
18382,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
18383,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
18384,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
18385,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/Dockerfile,# backwards compatibility shim
18386,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
18387,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18388,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
18389,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
18390,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
18391,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
18392,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18393,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/Dockerfile,# basic smoke test
18394,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
18395,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18396,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18397,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18398,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
18399,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18400,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
18401,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
18402,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/oracle/Dockerfile,# http://jdk.java.net/
18403,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
18404,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
18405,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/oracle/Dockerfile,# basic smoke test
18406,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
18407,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18408,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18409,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18410,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
18411,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18412,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18413,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18414,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# https://adoptopenjdk.net/upstream.html
18415,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
18416,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
18417,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
18418,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18419,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18420,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18421,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
18422,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18423,4365c863956250d758341b86035862b111269ed9,/10-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18424,4365c863956250d758341b86035862b111269ed9,/10-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
18425,4365c863956250d758341b86035862b111269ed9,/10-jdk/Dockerfile,# Default to UTF-8 file.encoding
18426,4365c863956250d758341b86035862b111269ed9,/10-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18427,4365c863956250d758341b86035862b111269ed9,/10-jdk/Dockerfile,#!/bin/sh'; \
18428,4365c863956250d758341b86035862b111269ed9,/10-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18429,4365c863956250d758341b86035862b111269ed9,/10-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
18430,4365c863956250d758341b86035862b111269ed9,/10-jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
18431,4365c863956250d758341b86035862b111269ed9,/10-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18432,4365c863956250d758341b86035862b111269ed9,/10-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18433,4365c863956250d758341b86035862b111269ed9,/10-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18434,4365c863956250d758341b86035862b111269ed9,/10-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18435,4365c863956250d758341b86035862b111269ed9,/10-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18436,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
18437,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
18438,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
18439,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
18440,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,# backwards compatibility shim
18441,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
18442,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
18443,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
18444,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,# arm64v8
18445,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,# amd64
18446,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,# fallback
18447,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
18448,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
18449,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
18450,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
18451,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18452,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,# basic smoke test
18453,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
18454,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18455,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
18456,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
18457,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18458,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/slim/Dockerfile,#!/bin/sh'; \
18459,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18460,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
18461,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
18462,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18463,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18464,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18465,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
18466,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18467,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
18468,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
18469,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/slim/Dockerfile,# backwards compatibility shim
18470,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
18471,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/slim/Dockerfile,# https://jdk.java.net/
18472,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
18473,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
18474,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
18475,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
18476,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18477,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/slim/Dockerfile,# basic smoke test
18478,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
18479,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
18480,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18481,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
18482,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
18483,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18484,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/Dockerfile,#!/bin/sh'; \
18485,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18486,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
18487,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18488,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18489,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18490,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18491,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18492,d7f632dcc518cf71752e95387d05cbb7f9156e1d,/openjdk-9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18493,d7f632dcc518cf71752e95387d05cbb7f9156e1d,/openjdk-9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18494,d7f632dcc518cf71752e95387d05cbb7f9156e1d,/openjdk-9-jre/Dockerfile,# Default to UTF-8 file.encoding
18495,d7f632dcc518cf71752e95387d05cbb7f9156e1d,/openjdk-9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18496,d7f632dcc518cf71752e95387d05cbb7f9156e1d,/openjdk-9-jre/Dockerfile,#!/bin/bash'; \
18497,d7f632dcc518cf71752e95387d05cbb7f9156e1d,/openjdk-9-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
18498,d7f632dcc518cf71752e95387d05cbb7f9156e1d,/openjdk-9-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
18499,d7f632dcc518cf71752e95387d05cbb7f9156e1d,/openjdk-9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
18500,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
18501,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
18502,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/slim/Dockerfile,# backwards compatibility shim
18503,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
18504,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18505,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
18506,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/slim/Dockerfile,# arm64v8
18507,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/slim/Dockerfile,# amd64
18508,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/slim/Dockerfile,# fallback
18509,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
18510,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
18511,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
18512,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
18513,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18514,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/slim/Dockerfile,# basic smoke test
18515,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
18516,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18517,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18518,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18519,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
18520,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18521,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18522,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
18523,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
18524,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18525,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/slim/Dockerfile,#!/bin/sh'; \
18526,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18527,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
18528,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
18529,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18530,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18531,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18532,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
18533,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18534,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18535,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18536,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18537,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
18538,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
18539,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18540,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18541,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18542,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
18543,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18544,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
18545,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
18546,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
18547,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
18548,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18549,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/oracle/Dockerfile,# basic smoke test
18550,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
18551,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18552,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18553,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://adoptopenjdk.net/upstream.html
18554,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
18555,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
18556,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
18557,58ba04f37a289057ac53b4376773b03227dceb77,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18558,58ba04f37a289057ac53b4376773b03227dceb77,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18559,58ba04f37a289057ac53b4376773b03227dceb77,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
18560,58ba04f37a289057ac53b4376773b03227dceb77,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18561,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
18562,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
18563,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
18564,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18565,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
18566,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18567,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/oracle/Dockerfile,# basic smoke test
18568,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
18569,15835397954c9ec123e42e685035ecd239e0a1db,/8/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
18570,15835397954c9ec123e42e685035ecd239e0a1db,/8/jre/windows/nanoserver-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
18571,15835397954c9ec123e42e685035ecd239e0a1db,/8/jre/windows/nanoserver-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
18572,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18573,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
18574,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
18575,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18576,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/slim/Dockerfile,#!/bin/sh'; \
18577,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18578,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
18579,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18580,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18581,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18582,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18583,f11f75767926eb1e650b448690e15cbacc2d1b9f,/11/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
18584,f11f75767926eb1e650b448690e15cbacc2d1b9f,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
18585,f11f75767926eb1e650b448690e15cbacc2d1b9f,/11/jdk/slim/Dockerfile,# backwards compatibility shim
18586,f11f75767926eb1e650b448690e15cbacc2d1b9f,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
18587,f11f75767926eb1e650b448690e15cbacc2d1b9f,/11/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
18588,f11f75767926eb1e650b448690e15cbacc2d1b9f,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
18589,f11f75767926eb1e650b448690e15cbacc2d1b9f,/11/jdk/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
18590,f11f75767926eb1e650b448690e15cbacc2d1b9f,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
18591,f11f75767926eb1e650b448690e15cbacc2d1b9f,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
18592,f11f75767926eb1e650b448690e15cbacc2d1b9f,/11/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
18593,f11f75767926eb1e650b448690e15cbacc2d1b9f,/11/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
18594,f11f75767926eb1e650b448690e15cbacc2d1b9f,/11/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
18595,f11f75767926eb1e650b448690e15cbacc2d1b9f,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
18596,f11f75767926eb1e650b448690e15cbacc2d1b9f,/11/jdk/slim/Dockerfile,# basic smoke test
18597,f11f75767926eb1e650b448690e15cbacc2d1b9f,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
18598,68069caddc7bd0edf9b2e4458ade3ace64668ac6,/16/jdk/alpine/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18599,68069caddc7bd0edf9b2e4458ade3ace64668ac6,/16/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
18600,68069caddc7bd0edf9b2e4458ade3ace64668ac6,/16/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18601,68069caddc7bd0edf9b2e4458ade3ace64668ac6,/16/jdk/alpine/Dockerfile,"# see ""java-cacerts"" package installed above (which maintains ""/etc/ssl/certs/java/cacerts"" for us)"
18602,68069caddc7bd0edf9b2e4458ade3ace64668ac6,/16/jdk/alpine/Dockerfile,# basic smoke test
18603,68069caddc7bd0edf9b2e4458ade3ace64668ac6,/16/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
18604,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
18605,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/slim/Dockerfile,# backwards compatibility shim
18606,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
18607,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
18608,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
18609,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
18610,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
18611,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
18612,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/slim/Dockerfile,# basic smoke test
18613,918514c9b313f8f60580b1e3638eb2ae60ef5e7f,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18614,918514c9b313f8f60580b1e3638eb2ae60ef5e7f,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18615,918514c9b313f8f60580b1e3638eb2ae60ef5e7f,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
18616,918514c9b313f8f60580b1e3638eb2ae60ef5e7f,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18617,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18618,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
18619,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/Dockerfile,# Default to UTF-8 file.encoding
18620,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18621,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/Dockerfile,#!/bin/sh'; \
18622,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18623,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
18624,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
18625,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18626,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18627,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18628,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18629,4e39684901490c13eaef7892c44e39043d7c4bed,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18630,4e39684901490c13eaef7892c44e39043d7c4bed,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18631,4e39684901490c13eaef7892c44e39043d7c4bed,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
18632,4e39684901490c13eaef7892c44e39043d7c4bed,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18633,4e39684901490c13eaef7892c44e39043d7c4bed,/8-jre/alpine/Dockerfile,#!/bin/sh'; \
18634,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18635,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18636,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
18637,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18638,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18639,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18640,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
18641,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18642,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
18643,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
18644,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
18645,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
18646,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/buster/Dockerfile,# backwards compatibility shim
18647,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
18648,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
18649,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
18650,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/buster/Dockerfile,# amd64
18651,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/buster/Dockerfile,# fallback
18652,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
18653,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
18654,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
18655,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
18656,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18657,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/buster/Dockerfile,# basic smoke test
18658,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
18659,5527e8e319a1451b9e302af846b9939da36d8992,/8/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18660,5527e8e319a1451b9e302af846b9939da36d8992,/8/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18661,5527e8e319a1451b9e302af846b9939da36d8992,/8/jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
18662,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18663,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18664,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-9-jdk/Dockerfile,# Default to UTF-8 file.encoding
18665,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-9-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
18666,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-9-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
18667,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
18668,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
18669,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
18670,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/slim/Dockerfile,# backwards compatibility shim
18671,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
18672,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/slim/Dockerfile,# https://jdk.java.net/
18673,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
18674,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
18675,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
18676,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
18677,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18678,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/slim/Dockerfile,# basic smoke test
18679,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
18680,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
18681,4016bc190db90b9254f01ea808a91981f50500a2,/10/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18682,4016bc190db90b9254f01ea808a91981f50500a2,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18683,4016bc190db90b9254f01ea808a91981f50500a2,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18684,4016bc190db90b9254f01ea808a91981f50500a2,/10/jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
18685,40a23ac72e90b05469c881a6fa9139476d3fa2a4,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18686,40a23ac72e90b05469c881a6fa9139476d3fa2a4,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18687,40a23ac72e90b05469c881a6fa9139476d3fa2a4,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
18688,40a23ac72e90b05469c881a6fa9139476d3fa2a4,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18689,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18690,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18691,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
18692,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18693,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
18694,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
18695,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
18696,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
18697,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18698,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/oracle/Dockerfile,# basic smoke test
18699,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
18700,1de3476e9d15e63768d7afeb672ad8a0ccb3f56f,/8/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18701,1de3476e9d15e63768d7afeb672ad8a0ccb3f56f,/8/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
18702,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-6-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18703,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18704,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-6-jre/Dockerfile,# Default to UTF-8 file.encoding
18705,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-6-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18706,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-6-jre/Dockerfile,#!/bin/bash'; \
18707,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
18708,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/7-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18709,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/7-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18710,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/7-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
18711,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/7-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18712,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/7-jdk/alpine/Dockerfile,#!/bin/sh'; \
18713,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18714,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18715,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://adoptopenjdk.net/upstream.html
18716,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
18717,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
18718,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18719,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
18720,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
18721,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18722,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/slim/Dockerfile,#!/bin/sh'; \
18723,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18724,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
18725,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
18726,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18727,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18728,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18729,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18730,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18731,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
18732,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
18733,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18734,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/Dockerfile,#!/bin/sh'; \
18735,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18736,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
18737,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18738,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18739,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18740,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18741,e1981fe71526d3c568cdad28fe7607a5d258fcd3,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18742,e1981fe71526d3c568cdad28fe7607a5d258fcd3,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18743,e1981fe71526d3c568cdad28fe7607a5d258fcd3,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
18744,e1981fe71526d3c568cdad28fe7607a5d258fcd3,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18745,e1981fe71526d3c568cdad28fe7607a5d258fcd3,/9-jre/Dockerfile,#!/bin/sh'; \
18746,e1981fe71526d3c568cdad28fe7607a5d258fcd3,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
18747,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18748,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
18749,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
18750,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18751,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
18752,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18753,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
18754,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
18755,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)"
18756,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18757,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18758,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18759,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18760,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18761,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18762,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18763,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/windows/windowsservercore-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
18764,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/windows/windowsservercore-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
18765,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
18766,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18767,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18768,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/windows/windowsservercore-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
18769,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/windows/windowsservercore-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
18770,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
18771,58866569ecc3d516467baf83375f3bd4cb0b8229,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18772,58866569ecc3d516467baf83375f3bd4cb0b8229,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
18773,58866569ecc3d516467baf83375f3bd4cb0b8229,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
18774,58866569ecc3d516467baf83375f3bd4cb0b8229,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
18775,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
18776,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
18777,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
18778,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
18779,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/Dockerfile,# backwards compatibility shim
18780,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
18781,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18782,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
18783,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
18784,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
18785,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
18786,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18787,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/Dockerfile,# basic smoke test
18788,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
18789,5552e0cd8db55b834a0d26ab200d19cee54b09f3,/openjdk-9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18790,5552e0cd8db55b834a0d26ab200d19cee54b09f3,/openjdk-9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18791,5552e0cd8db55b834a0d26ab200d19cee54b09f3,/openjdk-9-jre/Dockerfile,# Default to UTF-8 file.encoding
18792,5552e0cd8db55b834a0d26ab200d19cee54b09f3,/openjdk-9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18793,5552e0cd8db55b834a0d26ab200d19cee54b09f3,/openjdk-9-jre/Dockerfile,#!/bin/bash'; \
18794,5552e0cd8db55b834a0d26ab200d19cee54b09f3,/openjdk-9-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
18795,5552e0cd8db55b834a0d26ab200d19cee54b09f3,/openjdk-9-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
18796,5552e0cd8db55b834a0d26ab200d19cee54b09f3,/openjdk-9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
18797,62077dac7745304d836f760c12f23e8986b83bc0,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18798,62077dac7745304d836f760c12f23e8986b83bc0,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
18799,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18800,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
18801,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
18802,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18803,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
18804,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18805,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
18806,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18807,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18808,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18809,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18810,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18811,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
18812,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18813,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
18814,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/alpine3.12/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
18815,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/alpine3.12/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
18816,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/alpine3.12/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
18817,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/alpine3.12/Dockerfile,# amd64
18818,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/alpine3.12/Dockerfile,# fallback
18819,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/alpine3.12/Dockerfile,"# see ""java-cacerts"" package installed above (which maintains ""/etc/ssl/certs/java/cacerts"" for us)"
18820,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/alpine3.12/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18821,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/alpine3.12/Dockerfile,# basic smoke test
18822,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/alpine3.12/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
18823,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18824,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18825,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18826,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
18827,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18828,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18829,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18830,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18831,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
18832,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18833,8f8d04a5f77116be8ebfcaf84e4fcbd1190b95e8,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18834,8f8d04a5f77116be8ebfcaf84e4fcbd1190b95e8,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18835,8f8d04a5f77116be8ebfcaf84e4fcbd1190b95e8,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
18836,8f8d04a5f77116be8ebfcaf84e4fcbd1190b95e8,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18837,8f8d04a5f77116be8ebfcaf84e4fcbd1190b95e8,/8-jdk/alpine/Dockerfile,#!/bin/sh'; \
18838,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18839,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18840,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
18841,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
18842,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
18843,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/Dockerfile,# backwards compatibility shim
18844,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
18845,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/Dockerfile,# https://adoptopenjdk.net/upstream.html
18846,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
18847,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
18848,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
18849,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
18850,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/Dockerfile,# basic smoke test
18851,ac78a119a294925b60c8fe4e64c79abab1dd8dbf,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18852,ac78a119a294925b60c8fe4e64c79abab1dd8dbf,/7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18853,ac78a119a294925b60c8fe4e64c79abab1dd8dbf,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
18854,ac78a119a294925b60c8fe4e64c79abab1dd8dbf,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18855,ac78a119a294925b60c8fe4e64c79abab1dd8dbf,/7-jre/Dockerfile,#!/bin/sh'; \
18856,ac78a119a294925b60c8fe4e64c79abab1dd8dbf,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
18857,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
18858,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
18859,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
18860,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
18861,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/Dockerfile,# backwards compatibility shim
18862,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
18863,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18864,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
18865,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
18866,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
18867,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
18868,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18869,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/Dockerfile,# basic smoke test
18870,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
18871,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
18872,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
18873,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
18874,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18875,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
18876,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18877,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/oracle/Dockerfile,# basic smoke test
18878,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
18879,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
18880,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
18881,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jdk/Dockerfile,# backwards compatibility shim
18882,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
18883,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
18884,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
18885,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jdk/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
18886,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
18887,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jdk/Dockerfile,# basic smoke test
18888,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18889,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18890,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
18891,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18892,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18893,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
18894,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
18895,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18896,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
18897,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18898,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
18899,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18900,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18901,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18902,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18903,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18904,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18905,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18906,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
18907,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18908,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jre/Dockerfile,#!/bin/sh'; \
18909,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18910,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18911,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18912,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18913,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
18914,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18915,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
18916,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
18917,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18918,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/slim/Dockerfile,#!/bin/sh'; \
18919,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18920,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
18921,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18922,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18923,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18924,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18925,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/7-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18926,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/7-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18927,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/7-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
18928,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/7-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18929,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/7-jdk/alpine/Dockerfile,#!/bin/sh'; \
18930,ec1553cccfb87c5f53a38555771fa6d13cebfcba,/8/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18931,ec1553cccfb87c5f53a38555771fa6d13cebfcba,/8/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
18932,ec1553cccfb87c5f53a38555771fa6d13cebfcba,/8/jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
18933,ec1553cccfb87c5f53a38555771fa6d13cebfcba,/8/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18934,ec1553cccfb87c5f53a38555771fa6d13cebfcba,/8/jdk/alpine/Dockerfile,#!/bin/sh'; \
18935,ec1553cccfb87c5f53a38555771fa6d13cebfcba,/8/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18936,c6c90f5e09a5dc1a1ccd662de8210342f94c673e,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18937,c6c90f5e09a5dc1a1ccd662de8210342f94c673e,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18938,c6c90f5e09a5dc1a1ccd662de8210342f94c673e,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
18939,c6c90f5e09a5dc1a1ccd662de8210342f94c673e,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18940,c6c90f5e09a5dc1a1ccd662de8210342f94c673e,/8-jre/alpine/Dockerfile,#!/bin/sh'; \
18941,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18942,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18943,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18944,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
18945,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18946,9b3b7ed1bdd754fa61b5dd86c0bcd3e3400c6a33,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18947,9b3b7ed1bdd754fa61b5dd86c0bcd3e3400c6a33,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
18948,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18949,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18950,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18951,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18952,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18953,e3386b5a2b4004da498e145cf840561d50acd7fb,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18954,e3386b5a2b4004da498e145cf840561d50acd7fb,/7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18955,e3386b5a2b4004da498e145cf840561d50acd7fb,/7-jdk/Dockerfile,# Default to UTF-8 file.encoding
18956,e3386b5a2b4004da498e145cf840561d50acd7fb,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18957,e3386b5a2b4004da498e145cf840561d50acd7fb,/7-jdk/Dockerfile,#!/bin/sh'; \
18958,e3386b5a2b4004da498e145cf840561d50acd7fb,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
18959,41532fd149c05cb3bbc0c143bfcfa4589f1c3a61,/9-jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18960,41532fd149c05cb3bbc0c143bfcfa4589f1c3a61,/9-jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18961,41532fd149c05cb3bbc0c143bfcfa4589f1c3a61,/9-jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
18962,41532fd149c05cb3bbc0c143bfcfa4589f1c3a61,/9-jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18963,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18964,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18965,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/windowsservercore-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
18966,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/windowsservercore-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
18967,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
18968,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18969,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18970,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18971,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
18972,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
18973,9efa5c2bd28c10d07e70ceac416187a011dd6184,/16/jdk/alpine/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18974,9efa5c2bd28c10d07e70ceac416187a011dd6184,/16/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
18975,9efa5c2bd28c10d07e70ceac416187a011dd6184,/16/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18976,9efa5c2bd28c10d07e70ceac416187a011dd6184,/16/jdk/alpine/Dockerfile,"# see ""java-cacerts"" package installed above (which maintains ""/etc/ssl/certs/java/cacerts"" for us)"
18977,9efa5c2bd28c10d07e70ceac416187a011dd6184,/16/jdk/alpine/Dockerfile,# basic smoke test
18978,9efa5c2bd28c10d07e70ceac416187a011dd6184,/16/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
18979,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18980,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18981,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
18982,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
18983,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
18984,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18985,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18986,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18987,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
18988,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18989,9850ebc9cb840b259aebcf4de1f19cc3b7621810,/8/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18990,9850ebc9cb840b259aebcf4de1f19cc3b7621810,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18991,9850ebc9cb840b259aebcf4de1f19cc3b7621810,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18992,9850ebc9cb840b259aebcf4de1f19cc3b7621810,/8/jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
18993,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
18994,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jdk/slim/Dockerfile,# backwards compatibility shim
18995,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
18996,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
18997,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
18998,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jdk/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
18999,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
19000,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jdk/slim/Dockerfile,# basic smoke test
19001,0f82de10e4aaa8b78d7f79cf725fd1fad1dc85e0,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19002,0f82de10e4aaa8b78d7f79cf725fd1fad1dc85e0,/openjdk-8-jre/Dockerfile,# Default to UTF-8 file.encoding
19003,0f82de10e4aaa8b78d7f79cf725fd1fad1dc85e0,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
19004,0f82de10e4aaa8b78d7f79cf725fd1fad1dc85e0,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
19005,0f82de10e4aaa8b78d7f79cf725fd1fad1dc85e0,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/793210
# and https://github.com/docker-library/java/issues/46#issuecomment-119026586"
19006,0f82de10e4aaa8b78d7f79cf725fd1fad1dc85e0,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
19007,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-6-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19008,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19009,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-6-jdk/Dockerfile,# Default to UTF-8 file.encoding
19010,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
19011,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19012,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-6"
19013,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/Dockerfile,# Default to UTF-8 file.encoding
19014,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19015,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/Dockerfile,#!/bin/sh'; \
19016,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
19017,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
19018,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
19019,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
19020,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
19021,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19022,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
19023,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
19024,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/slim/Dockerfile,# backwards compatibility shim
19025,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
19026,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
19027,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
19028,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/slim/Dockerfile,# arm64v8
19029,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/slim/Dockerfile,# amd64
19030,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/slim/Dockerfile,# fallback
19031,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
19032,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
19033,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
19034,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
19035,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19036,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/slim/Dockerfile,# basic smoke test
19037,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19038,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19039,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19040,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-9-jre/Dockerfile,# Default to UTF-8 file.encoding
19041,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19042,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-9-jre/Dockerfile,#!/bin/bash'; \
19043,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-9-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
19044,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-9-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
19045,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
19046,fc1b362bdd68ab37654e47cc1276bf3fc212d132,/13/jdk/alpine/Dockerfile,# https://jdk.java.net/
19047,fc1b362bdd68ab37654e47cc1276bf3fc212d132,/13/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
19048,fc1b362bdd68ab37654e47cc1276bf3fc212d132,/13/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19049,fc1b362bdd68ab37654e47cc1276bf3fc212d132,/13/jdk/alpine/Dockerfile,# basic smoke test
19050,fc1b362bdd68ab37654e47cc1276bf3fc212d132,/13/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
19051,d93be18f4f2d5e8457169cac00e559d953b6028e,/13/jdk/alpine/Dockerfile,# https://jdk.java.net/
19052,d93be18f4f2d5e8457169cac00e559d953b6028e,/13/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
19053,d93be18f4f2d5e8457169cac00e559d953b6028e,/13/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19054,d93be18f4f2d5e8457169cac00e559d953b6028e,/13/jdk/alpine/Dockerfile,# basic smoke test
19055,d93be18f4f2d5e8457169cac00e559d953b6028e,/13/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
19056,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19057,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
19058,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/Dockerfile,# Default to UTF-8 file.encoding
19059,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19060,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/Dockerfile,#!/bin/sh'; \
19061,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
19062,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
19063,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
19064,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
19065,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
19066,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
19067,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19068,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19069,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
19070,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
19071,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
19072,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
19073,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
19074,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/oracle/Dockerfile,# arm64v8
19075,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/oracle/Dockerfile,# amd64
19076,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/oracle/Dockerfile,# fallback
19077,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
19078,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19079,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/oracle/Dockerfile,# basic smoke test
19080,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
19081,58866569ecc3d516467baf83375f3bd4cb0b8229,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19082,58866569ecc3d516467baf83375f3bd4cb0b8229,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
19083,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19084,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
19085,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
19086,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19087,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/slim/Dockerfile,#!/bin/sh'; \
19088,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
19089,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
19090,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
19091,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
19092,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
19093,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19094,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
19095,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
19096,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
19097,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
19098,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
19099,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19100,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/oracle/Dockerfile,# basic smoke test
19101,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
19102,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19103,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
19104,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19105,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
19106,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
19107,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
19108,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19109,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
19110,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
19111,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19112,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
19113,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
19114,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
19115,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
19116,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
19117,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
19118,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19119,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19120,62077dac7745304d836f760c12f23e8986b83bc0,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19121,62077dac7745304d836f760c12f23e8986b83bc0,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
19122,823517cdb97911ad335027244a6342e9129a91ad,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19123,823517cdb97911ad335027244a6342e9129a91ad,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19124,823517cdb97911ad335027244a6342e9129a91ad,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
19125,823517cdb97911ad335027244a6342e9129a91ad,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19126,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
19127,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
19128,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19129,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
19130,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
19131,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/slim/Dockerfile,# backwards compatibility shim
19132,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
19133,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
19134,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
19135,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
19136,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
19137,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
19138,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
19139,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
19140,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
19141,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
19142,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/slim/Dockerfile,# basic smoke test
19143,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19144,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
19145,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
19146,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19147,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19148,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
19149,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
19150,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19151,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/Dockerfile,#!/bin/sh'; \
19152,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
19153,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
19154,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
19155,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
19156,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
19157,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19158,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19159,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19160,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://adoptopenjdk.net/upstream.html
19161,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
19162,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
19163,bf06437449e8ae1782905f6c2df744805498874b,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19164,bf06437449e8ae1782905f6c2df744805498874b,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19165,bf06437449e8ae1782905f6c2df744805498874b,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
19166,bf06437449e8ae1782905f6c2df744805498874b,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19167,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19168,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
19169,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19170,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
19171,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19172,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19173,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
19174,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
19175,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19176,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/Dockerfile,#!/bin/sh'; \
19177,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
19178,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
19179,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
19180,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
19181,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
19182,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19183,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19184,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19185,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
19186,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19187,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19188,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
19189,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/Dockerfile,# Default to UTF-8 file.encoding
19190,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19191,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/Dockerfile,#!/bin/sh'; \
19192,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
19193,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
19194,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
19195,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
19196,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
19197,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
19198,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19199,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19200,6930db691f13efa925c1de3bbc8bc393783b7b2f,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19201,6930db691f13efa925c1de3bbc8bc393783b7b2f,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19202,6930db691f13efa925c1de3bbc8bc393783b7b2f,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
19203,6930db691f13efa925c1de3bbc8bc393783b7b2f,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19204,6930db691f13efa925c1de3bbc8bc393783b7b2f,/8-jdk/alpine/Dockerfile,#!/bin/sh'; \
19205,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19206,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
19207,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19208,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
19209,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19210,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
19211,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
19212,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
19213,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
19214,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/Dockerfile,# backwards compatibility shim
19215,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
19216,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
19217,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
19218,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
19219,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
19220,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
19221,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19222,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/Dockerfile,# basic smoke test
19223,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19224,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
19225,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
19226,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/slim/Dockerfile,# backwards compatibility shim
19227,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
19228,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/slim/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
19229,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
19230,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
19231,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
19232,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
19233,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
19234,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
19235,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
19236,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
19237,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/slim/Dockerfile,# basic smoke test
19238,451e66427f3c53fada288aaff950617c5864745f,/11/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
19239,451e66427f3c53fada288aaff950617c5864745f,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
19240,451e66427f3c53fada288aaff950617c5864745f,/11/jre/slim/Dockerfile,# backwards compatibility shim
19241,451e66427f3c53fada288aaff950617c5864745f,/11/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
19242,451e66427f3c53fada288aaff950617c5864745f,/11/jre/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
19243,451e66427f3c53fada288aaff950617c5864745f,/11/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
19244,451e66427f3c53fada288aaff950617c5864745f,/11/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
19245,451e66427f3c53fada288aaff950617c5864745f,/11/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
19246,451e66427f3c53fada288aaff950617c5864745f,/11/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
19247,451e66427f3c53fada288aaff950617c5864745f,/11/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
19248,451e66427f3c53fada288aaff950617c5864745f,/11/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
19249,451e66427f3c53fada288aaff950617c5864745f,/11/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
19250,451e66427f3c53fada288aaff950617c5864745f,/11/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
19251,451e66427f3c53fada288aaff950617c5864745f,/11/jre/slim/Dockerfile,# basic smoke test
19252,451e66427f3c53fada288aaff950617c5864745f,/11/jre/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19253,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19254,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
19255,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
19256,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19257,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/slim/Dockerfile,#!/bin/sh'; \
19258,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
19259,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
19260,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
19261,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
19262,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
19263,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19264,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19265,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
19266,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
19267,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
19268,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
19269,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
19270,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19271,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/oracle/Dockerfile,# basic smoke test
19272,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
19273,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19274,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
19275,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19276,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
19277,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19278,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
19279,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
19280,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/oracle/Dockerfile,# http://jdk.java.net/
19281,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
19282,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
19283,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/oracle/Dockerfile,# basic smoke test
19284,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
19285,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19286,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
19287,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
19288,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19289,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/Dockerfile,#!/bin/sh'; \
19290,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
19291,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
19292,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
19293,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)"
19294,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
19295,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
19296,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
19297,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19298,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19299,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19300,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
19301,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19302,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
19303,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
19304,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
19305,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19306,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
19307,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19308,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-1709/Dockerfile,# https://jdk.java.net/
19309,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19310,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
19311,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
19312,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/oraclelinux7/Dockerfile,# Default to UTF-8 file.encoding
19313,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
19314,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
19315,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/oraclelinux7/Dockerfile,# arm64v8
19316,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/oraclelinux7/Dockerfile,# amd64
19317,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/oraclelinux7/Dockerfile,# fallback
19318,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/oraclelinux7/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
19319,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19320,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
19321,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/oraclelinux7/Dockerfile,# basic smoke test
19322,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19323,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
19324,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/nanoserver-1803/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
19325,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19326,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
19327,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
19328,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
19329,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
19330,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
19331,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19332,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/oracle/Dockerfile,# basic smoke test
19333,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
19334,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
19335,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
19336,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
19337,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
19338,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/Dockerfile,# backwards compatibility shim
19339,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
19340,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/Dockerfile,# https://jdk.java.net/
19341,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
19342,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
19343,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
19344,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
19345,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19346,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/Dockerfile,# basic smoke test
19347,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19348,0467df283134a79840c25808093c00f7c94b9a88,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19349,0467df283134a79840c25808093c00f7c94b9a88,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19350,0467df283134a79840c25808093c00f7c94b9a88,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
19351,0467df283134a79840c25808093c00f7c94b9a88,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19352,0467df283134a79840c25808093c00f7c94b9a88,/8-jre/Dockerfile,#!/bin/sh'; \
19353,0467df283134a79840c25808093c00f7c94b9a88,/8-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
19354,0467df283134a79840c25808093c00f7c94b9a88,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
19355,0467df283134a79840c25808093c00f7c94b9a88,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
19356,0467df283134a79840c25808093c00f7c94b9a88,/8-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
19357,0467df283134a79840c25808093c00f7c94b9a88,/8-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
19358,0467df283134a79840c25808093c00f7c94b9a88,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
19359,0467df283134a79840c25808093c00f7c94b9a88,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
19360,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19361,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19362,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# https://adoptopenjdk.net/upstream.html
19363,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
19364,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
19365,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19366,a8d6952a882f3e56041be8d80df6276dab111f82,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19367,a8d6952a882f3e56041be8d80df6276dab111f82,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
19368,680a4e3cb3f9f3c69ad58958d35975ae083e91c1,/openjdk-9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19369,680a4e3cb3f9f3c69ad58958d35975ae083e91c1,/openjdk-9-jre/Dockerfile,# Default to UTF-8 file.encoding
19370,680a4e3cb3f9f3c69ad58958d35975ae083e91c1,/openjdk-9-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
19371,680a4e3cb3f9f3c69ad58958d35975ae083e91c1,/openjdk-9-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
19372,680a4e3cb3f9f3c69ad58958d35975ae083e91c1,/openjdk-9-jre/Dockerfile,"# see https://bugs.debian.org/793210
# and https://github.com/docker-library/java/issues/46#issuecomment-119026586"
19373,680a4e3cb3f9f3c69ad58958d35975ae083e91c1,/openjdk-9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
19374,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
19375,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
19376,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19377,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/8/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19378,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19379,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/8/jdk/windows/windowsservercore-1809/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
19380,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19381,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
19382,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/Dockerfile,# Default to UTF-8 file.encoding
19383,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19384,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/Dockerfile,#!/bin/sh'; \
19385,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
19386,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
19387,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
19388,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
19389,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
19390,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19391,908ea317c41a63cb4e2d000c362aa86c9bd4c876,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19392,908ea317c41a63cb4e2d000c362aa86c9bd4c876,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19393,908ea317c41a63cb4e2d000c362aa86c9bd4c876,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
19394,908ea317c41a63cb4e2d000c362aa86c9bd4c876,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19395,908ea317c41a63cb4e2d000c362aa86c9bd4c876,/9-jre/Dockerfile,#!/bin/sh'; \
19396,908ea317c41a63cb4e2d000c362aa86c9bd4c876,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
19397,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
19398,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
19399,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/slim/Dockerfile,# backwards compatibility shim
19400,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
19401,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
19402,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
19403,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/slim/Dockerfile,# arm64v8
19404,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/slim/Dockerfile,# amd64
19405,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/slim/Dockerfile,# fallback
19406,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
19407,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
19408,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
19409,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
19410,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19411,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/slim/Dockerfile,# basic smoke test
19412,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19413,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
19414,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
19415,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,# backwards compatibility shim
19416,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
19417,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
19418,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
19419,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
19420,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,# arm64v8
19421,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,# amd64
19422,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,# fallback
19423,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
19424,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
19425,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
19426,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
19427,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
19428,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
19429,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
19430,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,# basic smoke test
19431,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19432,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
19433,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19434,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
19435,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19436,0259a649c03ace8b035432ef3ee7274ca30d3776,/8/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19437,0259a649c03ace8b035432ef3ee7274ca30d3776,/8/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
19438,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
19439,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
19440,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/oracle/Dockerfile,# https://jdk.java.net/
19441,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
19442,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19443,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/oracle/Dockerfile,# basic smoke test
19444,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
19445,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19446,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
19447,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
19448,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19449,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/Dockerfile,#!/bin/sh'; \
19450,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
19451,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
19452,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
19453,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
19454,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
19455,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19456,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19457,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
19458,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
19459,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19460,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/slim/Dockerfile,#!/bin/sh'; \
19461,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
19462,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
19463,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
19464,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
19465,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
19466,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19467,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19468,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
19469,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
19470,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19471,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/alpine/Dockerfile,#!/bin/sh'; \
19472,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19473,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19474,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19475,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
19476,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
19477,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
19478,873fb56728befef8ecaf8436c3a27fd239cba301,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19479,873fb56728befef8ecaf8436c3a27fd239cba301,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19480,873fb56728befef8ecaf8436c3a27fd239cba301,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
19481,4427d56d00bbd05b6c7e0f5ce7a3a7a01b6d4177,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19482,4427d56d00bbd05b6c7e0f5ce7a3a7a01b6d4177,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19483,4427d56d00bbd05b6c7e0f5ce7a3a7a01b6d4177,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
19484,4427d56d00bbd05b6c7e0f5ce7a3a7a01b6d4177,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19485,4427d56d00bbd05b6c7e0f5ce7a3a7a01b6d4177,/9-jdk/Dockerfile,#!/bin/sh'; \
19486,4427d56d00bbd05b6c7e0f5ce7a3a7a01b6d4177,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
19487,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
19488,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/nanoserver-1809/Dockerfile,# https://jdk.java.net/
19489,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19490,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19491,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
19492,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
19493,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19494,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/Dockerfile,#!/bin/sh'; \
19495,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
19496,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
19497,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
19498,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
19499,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
19500,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19501,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19502,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
19503,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
19504,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19505,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/slim/Dockerfile,#!/bin/sh'; \
19506,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
19507,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
19508,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
19509,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
19510,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
19511,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
19512,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19513,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
19514,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
19515,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/slim/Dockerfile,# backwards compatibility shim
19516,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
19517,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
19518,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
19519,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
19520,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
19521,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
19522,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19523,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/slim/Dockerfile,# basic smoke test
19524,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19525,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
19526,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19527,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
19528,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19529,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
19530,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19531,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19532,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
19533,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
19534,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19535,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/Dockerfile,#!/bin/sh'; \
19536,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
19537,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
19538,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
19539,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
19540,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
19541,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19542,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19543,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19544,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
19545,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
19546,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
19547,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19548,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
19549,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
19550,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/slim/Dockerfile,# backwards compatibility shim
19551,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
19552,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
19553,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
19554,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
19555,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
19556,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
19557,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19558,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/slim/Dockerfile,# basic smoke test
19559,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19560,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
19561,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19562,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
19563,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19564,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
19565,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19566,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
19567,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
19568,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
19569,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
19570,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19571,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/oracle/Dockerfile,# basic smoke test
19572,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
19573,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
19574,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
19575,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
19576,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
19577,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
19578,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19579,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/oracle/Dockerfile,# basic smoke test
19580,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
19581,a7b5f34846cbad5712619ea11d686ad6be56e922,/11/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19582,a7b5f34846cbad5712619ea11d686ad6be56e922,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19583,a7b5f34846cbad5712619ea11d686ad6be56e922,/11/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
19584,a7b5f34846cbad5712619ea11d686ad6be56e922,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19585,4fc0f299672be87a236d1af61a31c14f67dfcdcc,/8/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19586,4fc0f299672be87a236d1af61a31c14f67dfcdcc,/8/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
19587,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19588,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
19589,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19590,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# https://adoptopenjdk.net/upstream.html
19591,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
19592,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
19593,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
19594,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
19595,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
19596,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
19597,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
19598,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19599,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/oracle/Dockerfile,# basic smoke test
19600,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
19601,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19602,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
19603,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
19604,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19605,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/Dockerfile,#!/bin/sh'; \
19606,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
19607,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
19608,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
19609,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
19610,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
19611,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19612,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19613,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
19614,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
19615,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19616,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/alpine/Dockerfile,#!/bin/sh'; \
19617,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19618,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19619,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
19620,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
19621,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19622,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/slim/Dockerfile,#!/bin/sh'; \
19623,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
19624,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
19625,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
19626,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
19627,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
19628,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19629,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19630,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
19631,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19632,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-1809/Dockerfile,# http://jdk.java.net/
19633,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19634,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
19635,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
19636,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
19637,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,# backwards compatibility shim
19638,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
19639,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
19640,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
19641,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
19642,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,# arm64v8
19643,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,# amd64
19644,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,# fallback
19645,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
19646,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
19647,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
19648,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
19649,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
19650,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
19651,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
19652,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,# basic smoke test
19653,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19654,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19655,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19656,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
19657,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19658,dcb22f5eecaaa99a29a3607b2c36a60632af23f9,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19659,dcb22f5eecaaa99a29a3607b2c36a60632af23f9,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19660,dcb22f5eecaaa99a29a3607b2c36a60632af23f9,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
19661,dcb22f5eecaaa99a29a3607b2c36a60632af23f9,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19662,dcb22f5eecaaa99a29a3607b2c36a60632af23f9,/9-jre/Dockerfile,#!/bin/sh'; \
19663,dcb22f5eecaaa99a29a3607b2c36a60632af23f9,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
19664,2057305e0474ebf6461daea607ff02874d690914,/7/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19665,2057305e0474ebf6461daea607ff02874d690914,/7/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
19666,2057305e0474ebf6461daea607ff02874d690914,/7/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
19667,2057305e0474ebf6461daea607ff02874d690914,/7/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19668,2057305e0474ebf6461daea607ff02874d690914,/7/jre/slim/Dockerfile,#!/bin/sh'; \
19669,2057305e0474ebf6461daea607ff02874d690914,/7/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
19670,2057305e0474ebf6461daea607ff02874d690914,/7/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
19671,2057305e0474ebf6461daea607ff02874d690914,/7/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
19672,2057305e0474ebf6461daea607ff02874d690914,/7/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
19673,2057305e0474ebf6461daea607ff02874d690914,/7/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
19674,2057305e0474ebf6461daea607ff02874d690914,/7/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19675,f25ed8b213142ebe4370cf7494ecccccecc55ecd,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19676,f25ed8b213142ebe4370cf7494ecccccecc55ecd,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
19677,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19678,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
19679,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/Dockerfile,# Default to UTF-8 file.encoding
19680,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19681,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/Dockerfile,#!/bin/sh'; \
19682,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
19683,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
19684,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
19685,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
19686,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
19687,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
19688,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19689,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19690,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19691,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
19692,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19693,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
19694,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19695,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19696,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
19697,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19698,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
19699,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19700,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
19701,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
19702,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
19703,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
19704,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/Dockerfile,# backwards compatibility shim
19705,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
19706,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/Dockerfile,# https://jdk.java.net/
19707,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
19708,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
19709,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
19710,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
19711,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19712,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/Dockerfile,# basic smoke test
19713,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19714,4735dcec5fec2833635b8f6634d24d7e22c617b2,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19715,4735dcec5fec2833635b8f6634d24d7e22c617b2,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
19716,4735dcec5fec2833635b8f6634d24d7e22c617b2,/openjdk-8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
19717,4735dcec5fec2833635b8f6634d24d7e22c617b2,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
19718,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19719,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
19720,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19721,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
19722,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19723,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19724,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19725,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
19726,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19727,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19728,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19729,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
19730,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
19731,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
19732,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19733,15835397954c9ec123e42e685035ecd239e0a1db,/11/jre/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
19734,15835397954c9ec123e42e685035ecd239e0a1db,/11/jre/windows/nanoserver-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
19735,15835397954c9ec123e42e685035ecd239e0a1db,/11/jre/windows/nanoserver-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
19736,15835397954c9ec123e42e685035ecd239e0a1db,/11/jre/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19737,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
19738,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
19739,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
19740,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
19741,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19742,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/oracle/Dockerfile,# basic smoke test
19743,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
19744,1992f5ab6b5b6b4748c9628125dbea37df405d99,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19745,1992f5ab6b5b6b4748c9628125dbea37df405d99,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
19746,1992f5ab6b5b6b4748c9628125dbea37df405d99,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
19747,1992f5ab6b5b6b4748c9628125dbea37df405d99,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
19748,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19749,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19750,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
19751,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19752,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/8-jdk/alpine/Dockerfile,#!/bin/sh'; \
19753,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19754,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
19755,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
19756,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19757,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/slim/Dockerfile,#!/bin/sh'; \
19758,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
19759,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
19760,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
19761,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
19762,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
19763,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19764,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19765,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19766,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
19767,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
19768,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
19769,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19770,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
19771,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19772,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
19773,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19774,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19775,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
19776,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
19777,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19778,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/slim/Dockerfile,#!/bin/sh'; \
19779,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
19780,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
19781,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
19782,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
19783,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
19784,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19785,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19786,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
19787,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19788,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
19789,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19790,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
19791,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
19792,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,# Default to UTF-8 file.encoding
19793,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,# backwards compatibility shim
19794,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
19795,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
19796,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
19797,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
19798,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,# amd64
19799,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,# fallback
19800,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
19801,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
19802,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
19803,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
19804,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,#!/usr/bin/env bash'; \
19805,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
19806,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
19807,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,# basic smoke test
19808,823517cdb97911ad335027244a6342e9129a91ad,/11/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19809,823517cdb97911ad335027244a6342e9129a91ad,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19810,823517cdb97911ad335027244a6342e9129a91ad,/11/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
19811,823517cdb97911ad335027244a6342e9129a91ad,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19812,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
19813,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
19814,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/slim/Dockerfile,# backwards compatibility shim
19815,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
19816,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/slim/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
19817,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
19818,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
19819,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
19820,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
19821,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
19822,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
19823,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
19824,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
19825,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/slim/Dockerfile,# basic smoke test
19826,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/8/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
19827,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/8/jdk/windows/nanoserver-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
19828,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/8/jdk/windows/nanoserver-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
19829,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19830,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19831,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-7-jdk/Dockerfile,# Default to UTF-8 file.encoding
19832,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19833,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-7-jdk/Dockerfile,#!/bin/bash'; \
19834,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
19835,906bdc14f53c6eff33c007511701ef0444705993,/9-jdk/windows/nanoserver/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19836,906bdc14f53c6eff33c007511701ef0444705993,/9-jdk/windows/nanoserver/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19837,906bdc14f53c6eff33c007511701ef0444705993,/9-jdk/windows/nanoserver/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
19838,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19839,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
19840,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
19841,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19842,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
19843,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
19844,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
19845,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
19846,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
19847,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
19848,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19849,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19850,11f3ec7d9cb5def04b7936cdf1eaa41da56341ab,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19851,11f3ec7d9cb5def04b7936cdf1eaa41da56341ab,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19852,11f3ec7d9cb5def04b7936cdf1eaa41da56341ab,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
19853,11f3ec7d9cb5def04b7936cdf1eaa41da56341ab,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19854,11f3ec7d9cb5def04b7936cdf1eaa41da56341ab,/9-jdk/Dockerfile,#!/bin/sh'; \
19855,11f3ec7d9cb5def04b7936cdf1eaa41da56341ab,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
19856,8b20818d91705361ff42b597369620680d0af98c,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19857,8b20818d91705361ff42b597369620680d0af98c,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
19858,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19859,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
19860,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
19861,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19862,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/slim/Dockerfile,#!/bin/sh'; \
19863,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
19864,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
19865,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
19866,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
19867,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
19868,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19869,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19870,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19871,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
19872,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19873,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/8-jdk/alpine/Dockerfile,#!/bin/sh'; \
19874,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19875,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
19876,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19877,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
19878,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19879,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/9-jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19880,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/9-jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19881,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/9-jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
19882,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/9-jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19883,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19884,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19885,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
19886,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
19887,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
19888,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19889,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19890,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
19891,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
19892,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
19893,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
19894,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
19895,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/oraclelinux7/Dockerfile,# Default to UTF-8 file.encoding
19896,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
19897,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
19898,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/oraclelinux7/Dockerfile,# arm64v8
19899,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/oraclelinux7/Dockerfile,# amd64
19900,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/oraclelinux7/Dockerfile,# fallback
19901,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/oraclelinux7/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
19902,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19903,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
19904,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/oraclelinux7/Dockerfile,# basic smoke test
19905,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19906,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
19907,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
19908,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
19909,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/Dockerfile,# backwards compatibility shim
19910,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
19911,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
19912,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
19913,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
19914,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
19915,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
19916,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
19917,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/Dockerfile,#!/usr/bin/env bash'; \
19918,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
19919,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
19920,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/Dockerfile,# basic smoke test
19921,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
19922,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
19923,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/oracle/Dockerfile,# http://jdk.java.net/
19924,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
19925,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
19926,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/oracle/Dockerfile,# basic smoke test
19927,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
19928,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
19929,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
19930,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
19931,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jdk/Dockerfile,# backwards compatibility shim
19932,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
19933,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jdk/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
19934,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
19935,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
19936,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
19937,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
19938,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
19939,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jdk/Dockerfile,#!/usr/bin/env bash'; \
19940,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
19941,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
19942,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jdk/Dockerfile,# basic smoke test
19943,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/7-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19944,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/7-jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
19945,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/7-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
19946,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/7-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19947,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/7-jdk/alpine/Dockerfile,#!/bin/sh'; \
19948,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/7-jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19949,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
19950,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
19951,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19952,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19953,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19954,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
19955,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
19956,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
19957,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
19958,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
19959,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
19960,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
19961,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19962,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/oracle/Dockerfile,# basic smoke test
19963,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
19964,3faf377815bd5409f91a007b092d38a36134baf5,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19965,3faf377815bd5409f91a007b092d38a36134baf5,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
19966,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19967,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19968,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
19969,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
19970,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
19971,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19972,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
19973,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
19974,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/slim/Dockerfile,# backwards compatibility shim
19975,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
19976,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
19977,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
19978,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
19979,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
19980,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
19981,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19982,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/slim/Dockerfile,# basic smoke test
19983,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19984,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
19985,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19986,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
19987,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
19988,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19989,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/Dockerfile,#!/bin/sh'; \
19990,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
19991,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
19992,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
19993,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
19994,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
19995,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
19996,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
19997,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19998,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/alpine/Dockerfile,# http://jdk.java.net/
19999,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
20000,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
20001,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/alpine/Dockerfile,# basic smoke test
20002,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
20003,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
20004,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
20005,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
20006,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
20007,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/Dockerfile,#!/bin/sh'; \
20008,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
20009,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
20010,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
20011,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
20012,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
20013,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
20014,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
20015,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
20016,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
20017,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
20018,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/slim/Dockerfile,# backwards compatibility shim
20019,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
20020,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
20021,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
20022,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
20023,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
20024,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
20025,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
20026,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
20027,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
20028,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
20029,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/slim/Dockerfile,# basic smoke test
20030,79a6e42e299701791f8730f801e0728f82c85ea4,/8/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
20031,79a6e42e299701791f8730f801e0728f82c85ea4,/8/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
20032,79a6e42e299701791f8730f801e0728f82c85ea4,/8/jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
20033,79a6e42e299701791f8730f801e0728f82c85ea4,/8/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
20034,79a6e42e299701791f8730f801e0728f82c85ea4,/8/jre/alpine/Dockerfile,#!/bin/sh'; \
20035,79a6e42e299701791f8730f801e0728f82c85ea4,/8/jre/alpine/Dockerfile,# https://bugs.alpinelinux.org/issues/10126
20036,79a6e42e299701791f8730f801e0728f82c85ea4,/8/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
20037,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
20038,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
20039,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
20040,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
20041,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
20042,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
20043,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
20044,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://adoptopenjdk.net/upstream.html
20045,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
20046,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
20047,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
20048,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
20049,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
20050,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
20051,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
20052,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/Dockerfile,#!/bin/sh'; \
20053,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
20054,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
20055,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
20056,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
20057,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
20058,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
20059,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
20060,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
20061,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/slim/Dockerfile,# backwards compatibility shim
20062,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
20063,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
20064,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
20065,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/slim/Dockerfile,# arm64v8
20066,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/slim/Dockerfile,# amd64
20067,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/slim/Dockerfile,# fallback
20068,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
20069,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
20070,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
20071,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
20072,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
20073,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/slim/Dockerfile,# basic smoke test
20074,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
20075,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
20076,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
20077,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/slim/Dockerfile,# backwards compatibility shim
20078,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
20079,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
20080,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
20081,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
20082,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
20083,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
20084,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
20085,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/slim/Dockerfile,# basic smoke test
20086,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
20087,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
20088,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
20089,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
20090,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/slim/Dockerfile,# backwards compatibility shim
20091,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
20092,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
20093,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
20094,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
20095,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
20096,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
20097,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
20098,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/slim/Dockerfile,# basic smoke test
20099,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
20100,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
20101,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
20102,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
20103,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/Dockerfile,# Default to UTF-8 file.encoding
20104,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
20105,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/Dockerfile,#!/bin/sh'; \
20106,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
20107,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
20108,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
20109,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
20110,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
20111,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
20112,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
20113,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
20114,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
20115,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
20116,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
20117,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
20118,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
20119,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
20120,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
20121,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
20122,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
20123,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
20124,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
20125,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
20126,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
20127,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
20128,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
20129,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
20130,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
20131,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
20132,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
20133,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
20134,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
20135,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
20136,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
20137,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/slim/Dockerfile,# backwards compatibility shim
20138,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
20139,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
20140,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
20141,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
20142,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
20143,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
20144,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
20145,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
20146,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
20147,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
20148,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/slim/Dockerfile,# basic smoke test
20149,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
20150,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
20151,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
20152,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
20153,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
20154,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
20155,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
20156,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
20157,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
20158,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
20159,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
20160,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
20161,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/slim/Dockerfile,#!/bin/sh'; \
20162,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
20163,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
20164,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
20165,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
20166,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
20167,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
20168,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
20169,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
20170,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
20171,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
20172,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
20173,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
20174,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
20175,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
20176,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
20177,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/Dockerfile,# backwards compatibility shim
20178,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
20179,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
20180,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
20181,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
20182,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
20183,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
20184,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
20185,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/Dockerfile,#!/usr/bin/env bash'; \
20186,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
20187,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
20188,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/Dockerfile,# basic smoke test
20189,349703e3d620e86fb46e2a4529a810c7116a9b4e,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
20190,349703e3d620e86fb46e2a4529a810c7116a9b4e,/12/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
20191,349703e3d620e86fb46e2a4529a810c7116a9b4e,/12/jdk/oracle/Dockerfile,# https://jdk.java.net/
20192,349703e3d620e86fb46e2a4529a810c7116a9b4e,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
20193,349703e3d620e86fb46e2a4529a810c7116a9b4e,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
20194,349703e3d620e86fb46e2a4529a810c7116a9b4e,/12/jdk/oracle/Dockerfile,# basic smoke test
20195,349703e3d620e86fb46e2a4529a810c7116a9b4e,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
20196,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
20197,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
20198,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
20199,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
20200,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/slim/Dockerfile,#!/bin/sh'; \
20201,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
20202,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
20203,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
20204,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
20205,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
20206,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
20207,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
20208,0584b2804ed12dca7c5e264b5fc55fc07a3ac148,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
20209,0584b2804ed12dca7c5e264b5fc55fc07a3ac148,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
20210,0584b2804ed12dca7c5e264b5fc55fc07a3ac148,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
20211,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
20212,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/nanoserver-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
20213,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/nanoserver-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
20214,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
20215,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
20216,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
20217,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/slim/Dockerfile,# backwards compatibility shim
20218,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
20219,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
20220,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
20221,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
20222,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
20223,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
20224,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
20225,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
20226,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
20227,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
20228,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/slim/Dockerfile,# basic smoke test
20229,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
20230,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
20231,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
20232,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
20233,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
20234,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jdk/Dockerfile,#!/bin/sh'; \
20235,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
20236,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
20237,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
20238,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
20239,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
